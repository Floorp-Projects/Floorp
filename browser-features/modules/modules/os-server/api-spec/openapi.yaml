openapi: 3.0.3
info:
  title: Floorp OS Local HTTP Server API
  description: |
    Floorp OS Local HTTP Server provides a minimal subset of os-apis to other local applications via HTTP/JSON.
    - Loopback-only server (127.0.0.1)
    - Optional bearer token authentication (disabled by default)
    - Exposes browser information, web scraping, and tab management capabilities
  version: 1.0.0
  contact:
    name: Floorp Projects
  license:
    name: Mozilla Public License 2.0
    url: https://mozilla.org/MPL/2.0/

servers:
  - url: http://127.0.0.1:58261
    description: Default local server

security:
  - BearerAuth: []
  - {}

paths:
  # Health Check
  /health:
    get:
      summary: Health check endpoint
      operationId: getHealth
      responses:
        "200":
          description: Server is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  # Browser Information Endpoints
  /browser/tabs:
    get:
      summary: Get recent browser tabs
      operationId: getBrowserTabs
      responses:
        "200":
          description: List of browser tabs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tab"

  /browser/history:
    get:
      summary: Get recent browser history
      operationId: getBrowserHistory
      parameters:
        - name: limit
          in: query
          description: Maximum number of history items to return
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
      responses:
        "200":
          description: List of browser history items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryItem"

  /browser/downloads:
    get:
      summary: Get recent browser downloads
      operationId: getBrowserDownloads
      parameters:
        - name: limit
          in: query
          description: Maximum number of download items to return
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
      responses:
        "200":
          description: List of browser downloads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Download"

  /browser/context:
    get:
      summary: Get combined browser context (history, tabs, downloads)
      operationId: getBrowserContext
      parameters:
        - name: historyLimit
          in: query
          description: Maximum number of history items to return
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
        - name: downloadLimit
          in: query
          description: Maximum number of download items to return
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
      responses:
        "200":
          description: Combined browser context
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BrowserContext"

  # Web Scraper Endpoints
  /scraper/instances:
    post:
      summary: Create a new scraper instance
      operationId: createScraperInstance
      responses:
        "200":
          description: Scraper instance created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInstanceResponse"

  /scraper/instances/{id}:
    delete:
      summary: Destroy a scraper instance
      operationId: destroyScraperInstance
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Instance destroyed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /scraper/instances/{id}/exists:
    get:
      summary: Check if scraper instance exists
      operationId: checkScraperInstanceExists
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Instance existence status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExistsResponse"

  /scraper/instances/{id}/navigate:
    post:
      summary: Navigate scraper instance to URL
      operationId: navigateScraperInstance
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NavigateRequest"
      responses:
        "200":
          description: Navigation completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequest"

  /scraper/instances/{id}/uri:
    get:
      summary: Get current URI of scraper instance
      operationId: getScraperInstanceUri
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Current URI
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URIResponse"

  /scraper/instances/{id}/html:
    get:
      summary: Get HTML content of scraper instance
      operationId: getScraperInstanceHtml
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: HTML content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTMLResponse"

  /scraper/instances/{id}/elementText:
    get:
      summary: Get text content of element
      operationId: getScraperElementText
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element text content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextResponse"

  /scraper/instances/{id}/click:
    post:
      summary: Click an element in scraper instance
      operationId: clickScraperElement
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelectorRequest"
      responses:
        "200":
          description: Click result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /scraper/instances/{id}/waitForElement:
    post:
      summary: Wait for element to appear
      operationId: waitForScraperElement
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaitForElementRequest"
      responses:
        "200":
          description: Wait result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FoundResponse"

  /scraper/instances/{id}/executeScript:
    post:
      summary: Execute JavaScript in scraper instance
      operationId: executeScraperScript
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteScriptRequest"
      responses:
        "200":
          description: Script executed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /scraper/instances/{id}/screenshot:
    get:
      summary: Take screenshot of scraper instance
      operationId: takeScraperScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /scraper/instances/{id}/elementScreenshot:
    get:
      summary: Take screenshot of specific element
      operationId: takeScraperElementScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /scraper/instances/{id}/fullPageScreenshot:
    get:
      summary: Take full page screenshot
      operationId: takeScraperFullPageScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Full page screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /scraper/instances/{id}/regionScreenshot:
    post:
      summary: Take screenshot of specific region
      operationId: takeScraperRegionScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionScreenshotRequest"
      responses:
        "200":
          description: Region screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /scraper/instances/{id}/fillForm:
    post:
      summary: Fill form fields in scraper instance
      operationId: fillScraperForm
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FillFormRequest"
      responses:
        "200":
          description: Form fill result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /scraper/instances/{id}/value:
    get:
      summary: Get value of form element
      operationId: getScraperElementValue
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the form element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResponse"

  /scraper/instances/{id}/submit:
    post:
      summary: Submit form in scraper instance
      operationId: submitScraperForm
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelectorRequest"
      responses:
        "200":
          description: Form submission result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  # Tab Manager Endpoints
  /tabs/list:
    get:
      summary: List all browser tabs
      operationId: listBrowserTabs
      responses:
        "200":
          description: List of browser tabs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TabEntry"

  /tabs/instances:
    post:
      summary: Create a new tab instance
      operationId: createTabInstance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTabInstanceRequest"
      responses:
        "200":
          description: Tab instance created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInstanceResponse"

  /tabs/attach:
    post:
      summary: Attach to existing browser tab
      operationId: attachToTab
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachRequest"
      responses:
        "200":
          description: Attachment result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachResponse"

  /tabs/instances/{id}:
    get:
      summary: Get tab instance information
      operationId: getTabInstance
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Tab instance information
          content:
            application/json:
              schema:
                type: object
                description: Instance information object
    delete:
      summary: Destroy tab instance
      operationId: destroyTabInstance
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Instance destroyed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /tabs/instances/{id}/exists:
    get:
      summary: Check if tab instance exists
      operationId: checkTabInstanceExists
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Instance existence status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExistsResponse"

  # Tab Management Operations (similar to scraper but for visible tabs)
  /tabs/instances/{id}/navigate:
    post:
      summary: Navigate tab instance to URL
      operationId: navigateTabInstance
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NavigateRequest"
      responses:
        "200":
          description: Navigation completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /tabs/instances/{id}/uri:
    get:
      summary: Get current URI of tab instance
      operationId: getTabInstanceUri
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Current URI
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TabURIResponse"

  # Tab element, screenshot and form operations (mirror scraper endpoints)
  /tabs/instances/{id}/html:
    get:
      summary: Get HTML content of tab instance
      operationId: getTabInstanceHtml
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: HTML content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTMLResponse"

  /tabs/instances/{id}/element:
    get:
      summary: Get element HTML for selector in tab instance
      operationId: getTabElement
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element HTML
          content:
            application/json:
              schema:
                type: object
                properties:
                  element:
                    type: string
                    nullable: true

  /tabs/instances/{id}/elementText:
    get:
      summary: Get text content of element in tab instance
      operationId: getTabElementText
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element text content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextResponse"

  /tabs/instances/{id}/click:
    post:
      summary: Click an element in tab instance
      operationId: clickTabElement
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelectorRequest"
      responses:
        "200":
          description: Click result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /tabs/instances/{id}/waitForElement:
    post:
      summary: Wait for element to appear in tab instance
      operationId: waitForTabElement
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaitForElementRequest"
      responses:
        "200":
          description: Wait result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FoundResponse"

  /tabs/instances/{id}/executeScript:
    post:
      summary: Execute JavaScript in tab instance
      operationId: executeTabScript
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteScriptRequest"
      responses:
        "200":
          description: Script executed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /tabs/instances/{id}/screenshot:
    get:
      summary: Take screenshot of tab instance
      operationId: takeTabScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /tabs/instances/{id}/elementScreenshot:
    get:
      summary: Take screenshot of a specific element in tab instance
      operationId: takeTabElementScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /tabs/instances/{id}/fullPageScreenshot:
    get:
      summary: Take full page screenshot of tab instance
      operationId: takeTabFullPageScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      responses:
        "200":
          description: Full page screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /tabs/instances/{id}/regionScreenshot:
    post:
      summary: Take screenshot of specific region in tab instance
      operationId: takeTabRegionScreenshot
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionScreenshotRequest"
      responses:
        "200":
          description: Region screenshot data (base64)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"

  /tabs/instances/{id}/fillForm:
    post:
      summary: Fill form fields in tab instance
      operationId: fillTabForm
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FillFormRequest"
      responses:
        "200":
          description: Form fill result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  /tabs/instances/{id}/value:
    get:
      summary: Get value of form element in tab instance
      operationId: getTabElementValue
      parameters:
        - $ref: "#/components/parameters/InstanceId"
        - name: selector
          in: query
          description: CSS selector for the form element
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Element value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResponse"

  /tabs/instances/{id}/submit:
    post:
      summary: Submit form in tab instance
      operationId: submitTabForm
      parameters:
        - $ref: "#/components/parameters/InstanceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelectorRequest"
      responses:
        "200":
          description: Form submission result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"

  # Additional tab operations follow the same pattern as scraper
  # (HTML, element operations, screenshots, forms, etc.)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Optional bearer token authentication

  parameters:
    InstanceId:
      name: id
      in: path
      description: Instance identifier
      required: true
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:
    # Common Types
    OkResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
      required:
        - ok

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Error message"
      required:
        - error

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "ok"
      required:
        - status

    Rect:
      type: object
      properties:
        x:
          type: integer
          description: X coordinate
        y:
          type: integer
          description: Y coordinate
        width:
          type: integer
          description: Width
        height:
          type: integer
          description: Height

    # Browser Information Types
    Tab:
      type: object
      properties:
        id:
          type: integer
          description: Tab identifier
        url:
          type: string
          description: Tab URL
        title:
          type: string
          description: Tab title
        isActive:
          type: boolean
          description: Whether the tab is currently active
        isPinned:
          type: boolean
          description: Whether the tab is pinned
      required:
        - id
        - url
        - title
        - isActive
        - isPinned

    HistoryItem:
      type: object
      properties:
        url:
          type: string
          description: Visited URL
        title:
          type: string
          description: Page title
        lastVisitDate:
          type: string
          description: Last visit timestamp (epoch milliseconds as string)
        visitCount:
          type: integer
          description: Number of visits
      required:
        - url
        - title
        - lastVisitDate
        - visitCount

    Download:
      type: object
      properties:
        id:
          type: integer
          description: Download identifier
        url:
          type: string
          description: Download URL
        filename:
          type: string
          description: Downloaded filename
        status:
          type: string
          description: Download status
        startTime:
          type: string
          description: Download start timestamp (epoch milliseconds as string)
      required:
        - id
        - url
        - filename
        - status
        - startTime

    BrowserContext:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: "#/components/schemas/HistoryItem"
        tabs:
          type: array
          items:
            $ref: "#/components/schemas/Tab"
        downloads:
          type: array
          items:
            $ref: "#/components/schemas/Download"
      required:
        - history
        - tabs
        - downloads

    # Instance Management Types
    CreateInstanceResponse:
      type: object
      properties:
        instanceId:
          type: string
          description: Created instance identifier
      required:
        - instanceId

    ExistsResponse:
      type: object
      properties:
        exists:
          type: boolean
          description: Whether the instance exists
      required:
        - exists

    # Navigation Types
    NavigateRequest:
      type: object
      properties:
        url:
          type: string
          description: URL to navigate to
      required:
        - url

    URIResponse:
      type: object
      properties:
        uri:
          type: string
          description: Current URI
          nullable: true

    TabURIResponse:
      type: object
      properties:
        uri:
          type: string
          description: Current URI
      required:
        - uri

    HTMLResponse:
      type: object
      properties:
        html:
          type: string
          description: HTML content
          nullable: true

    # Element Operations
    SelectorRequest:
      type: object
      properties:
        selector:
          type: string
          description: CSS selector
      required:
        - selector

    TextResponse:
      type: object
      properties:
        text:
          type: string
          description: Element text content
          nullable: true

    ValueResponse:
      type: object
      properties:
        value:
          type: string
          description: Element value
          nullable: true

    WaitForElementRequest:
      type: object
      properties:
        selector:
          type: string
          description: CSS selector to wait for
        timeout:
          type: integer
          description: Timeout in milliseconds
          default: 5000
      required:
        - selector

    FoundResponse:
      type: object
      properties:
        found:
          type: boolean
          description: Whether the element was found
      required:
        - found

    # Script Execution
    ExecuteScriptRequest:
      type: object
      properties:
        script:
          type: string
          description: JavaScript code to execute
      required:
        - script

    # Screenshots
    ImageResponse:
      type: object
      properties:
        image:
          type: string
          description: Base64-encoded image data
          nullable: true

    RegionScreenshotRequest:
      type: object
      properties:
        rect:
          $ref: "#/components/schemas/Rect"

    # Form Operations
    FillFormRequest:
      type: object
      properties:
        formData:
          type: object
          additionalProperties:
            type: string
          description: Map of CSS selectors to values
      required:
        - formData

    # Tab Manager Specific Types
    TabEntry:
      type: object
      properties:
        browserId:
          type: string
          description: Browser identifier
        title:
          type: string
          description: Tab title
        url:
          type: string
          description: Tab URL
        selected:
          type: boolean
          description: Whether the tab is selected
        pinned:
          type: boolean
          description: Whether the tab is pinned
      required:
        - browserId
        - title
        - url
        - selected
        - pinned

    CreateTabInstanceRequest:
      type: object
      properties:
        url:
          type: string
          description: URL to open in new tab
        inBackground:
          type: boolean
          description: Whether to create tab in background
          default: true
      required:
        - url

    AttachRequest:
      type: object
      properties:
        browserId:
          type: string
          description: Browser ID to attach to
      required:
        - browserId

    AttachResponse:
      type: object
      properties:
        instanceId:
          type: string
          description: Attached instance ID
          nullable: true
