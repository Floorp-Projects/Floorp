/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set ts=2 et sw=2 tw=80: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

webidl FrameLoader;

%{C++
#define BROWSER_ELEMENT_API_CONTRACTID "@mozilla.org/dom/browser-element-api;1"
#define BROWSER_ELEMENT_API_CID                                 \
    { 0x651db7e3, 0x1734, 0x4536,                               \
      { 0xb1, 0x5a, 0x5b, 0x3a, 0xe6, 0x44, 0x13, 0x4c } }
%}

/**
 * Interface to the BrowserElementParent implementation. All methods
 * but setFrameLoader throw when the remote process is dead.
 */
[scriptable, uuid(57758c10-6036-11e5-a837-0800200c9a66)]
interface nsIBrowserElementAPI : nsISupports
{
  /**
   * Notify frame scripts that support the API to destroy.
   */
  void destroyFrameScripts();

  void setFrameLoader(in FrameLoader frameLoader);

  void sendMouseEvent(in AString type,
                      in uint32_t x,
                      in uint32_t y,
                      in uint32_t button,
                      in uint32_t clickCount,
                      in uint32_t mifiers);
  void goBack();
  void goForward();
  void reload(in boolean hardReload);
  void stop();
  Promise getCanGoBack();
  Promise getCanGoForward();
};
