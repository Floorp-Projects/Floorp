<html xmlns="http://www.w3.org/1999/xhtml">
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=628888
-->
<head>
  <title>Test for Bug 628888 - Animations in external document sometimes don't run</title>
  <script src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
</head>
<body style="margin:0px">
<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=628888">Mozilla Bug 628888</a>
<p id="display"></p>
<div id="content" style="background: red; width: 50px; height: 50px"/>
  
<pre id="test">
<script type="application/javascript">
<![CDATA[

/* Test for Bug 628888 - Animations in external document sometimes don't run
 *
 * This bug concerns a condition where an external document is loaded after the
 * page show event is dispatched, leaving the external document paused.
 *
 * To reproduce the bug we attach an external document with animation after the
 * page show event has fired.
 *
 * However, it is difficult to test if the animation is playing or not since we
 * don't receive events from animations running in an external document.
 *
 * Our approach is to simply render the result to a canvas (which requires
 * elevated privileges and that is why we are using a MochiTest rather
 * than a reftest) and poll one of the pixels to see if it changes colour.
 *
 * This should mean the test succeeds quickly but fails slowly.
 */

const POLL_INTERVAL     = 100;   // ms
const POLL_TIMEOUT      = 10000; // ms
var accumulatedWaitTime = 0;

function pageShow()
{
  var content = document.getElementById("content");
  content.style.filter = "url(smilExtDoc_helper.svg#filter)";
  window.setTimeout(checkResult, 0);
}

function checkResult()
{
  var content = document.getElementById("content");
  var bbox = content.getBoundingClientRect();

  var canvas = SpecialPowers.snapshotRect(window, bbox);
  var ctx = canvas.getContext("2d");

  var imgd = ctx.getImageData(bbox.width/2, bbox.height/2, 1, 1);
  var isGreen = (imgd.data[0] == 0) &&
                (imgd.data[1] == 255) &&
                (imgd.data[2] == 0);
  if (isGreen) {
    ok(true, "Filter is animated as expected");
  } else if (accumulatedWaitTime >= POLL_TIMEOUT) {
    ok(false, "No animation detected after waiting " + POLL_TIMEOUT + "ms");
  } else {
    accumulatedWaitTime += POLL_INTERVAL;
    window.setTimeout(checkResult, POLL_INTERVAL);
    return;
  }
  // Hide our content since mochitests normally try to be visually "quiet"
  content.style.display = 'none';
  SimpleTest.finish();
}
window.addEventListener('pageshow', pageShow);
SimpleTest.waitForExplicitFinish();
SimpleTest.requestFlakyTimeout("untriaged");
]]>
</script>
</pre>
</body>
</html>
