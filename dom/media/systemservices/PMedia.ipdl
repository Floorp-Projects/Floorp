/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;

include PBackgroundSharedTypes;

include "mozilla/media/MediaChild.h";

namespace mozilla {
namespace media {

[ManualDealloc, ChildImpl="Child", ParentImpl=virtual]
protocol PMedia
{
  manager PContent;

parent:
  /**
   * Requests a potentially persistent unique secret key for each principal.
   * Has no expiry, but is cleared by age along with cookies.
   * This is needed by mediaDevices.enumerateDevices() to produce persistent
   * deviceIds that wont work cross-origin.
   *
   * If this OriginAttributes dictionary has the privateBrowsing flag set to
   * false, a key for this origin is returned from a primary pool of temporal
   * in-memory keys and persistent keys read from disk. If no key exists, a
   * temporal one is created.
   * If aPersist is true and key is temporal, the key is promoted to persistent.
   * Once persistent, a key cannot become temporal again.
   *
   * If the OriginAttributes dictionary has the privateBrowsing flag set to
   * true, a different key for this origin is returned from a secondary pool
   * that is never persisted to disk, and aPersist is ignored.
   */
  async GetPrincipalKey(PrincipalInfo aPrincipal, bool aPersist) returns(nsCString aKey);

  /**
   * Clear per-orgin list of persistent deviceIds stored for enumerateDevices
   * Fire and forget.
   *
   * aSinceTime - milliseconds since 1 January 1970 00:00:00 UTC. 0 = clear all
   *
   * aOnlyPrivateBrowsing - if true then only purge the separate in-memory
   *                        per-origin list used in Private Browsing.
   */
  async SanitizeOriginKeys(uint64_t aSinceWhen, bool aOnlyPrivateBrowsing);

child:
  async __delete__();
};

} // namespace media
} // namespace mozilla
