# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# For more complex and repetitive things, we can create templates
@template
def check_compiler_flag(flag):
    @depends(is_gcc)
    def check(value):
        if value:
            return [flag]

    set_config("CFLAGS", check)
    return check


check_compiler_flag("-Werror=foobar")

# Normal functions can be used in @depends functions.
def fortytwo():
    return 42


def twentyone():
    yield 21


@depends(is_gcc)
def check(value):
    if value:
        return fortytwo()


set_config("TEMPLATE_VALUE", check)


@depends(is_gcc)
def check(value):
    if value:
        for val in twentyone():
            return val


set_config("TEMPLATE_VALUE_2", check)

# Normal functions can use @imports too to import modules.
@imports("sys")
def platform():
    return sys.platform


option("--enable-imports-in-template", help="Imports in template")


@depends("--enable-imports-in-template")
def check(value):
    if value:
        return platform()


set_config("PLATFORM", check)


@template
def indirectly_define_option(*args, **kwargs):
    option(*args, **kwargs)
