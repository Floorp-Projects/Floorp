[workspace]

# These are the "root" crates, which we build and test as top-level targets.
# Their transitive dependencies and dev-dependencies are included automatically
# and do not need to be listed here. Their external dependencies are vendored
# into `third_party/rust` by `mach vendor rust`.
members = [
  "js/src/frontend/smoosh",
  "js/src/rust",
  "js/src/wasm/cranelift",
  "netwerk/test/http3server",
  "security/manager/ssl/osclientcerts",
  "testing/geckodriver",
  "toolkit/crashreporter/rust_minidump_writer_linux",
  "toolkit/crashreporter/mozwer-rust",
  "toolkit/library/gtest/rust",
  "toolkit/library/rust/",
  "toolkit/mozapps/defaultagent/rust",
]

# Excluded crates may be built as dependencies, but won't be considered members
# of the workspace and their dev-dependencies won't be included.
exclude = [
  # Excluded because it's for a toolchain task
  "build/liblowercase",

  # Exclude third-party code vendored into mozilla-central.
  "servo",
  "third_party/rust",

  # Excluded because these crates have their own Cargo workspaces so they can't
  # be included in the top-level one.
  "gfx/wr",

  # Excluded because they are used only as dependencies, not top-level targets,
  # so we don't need to vendor their dev-dependencies.
  "gfx/webrender_bindings",
  "media/mp4parse-rust/mp4parse",
  "media/mp4parse-rust/mp4parse_capi",
  "xpcom/rust/gkrust_utils",
  "tools/lint/test/files/clippy",
  "tools/fuzzing/rust",
]

# Use the new dependency resolver to reduce some of the platform-specific dependencies.
# This is required for 'third_party/rust/wgpu-hal'
resolver = "2"

# Explicitly specify what our profiles use.  The opt-level setting here is
# a total fiction; see the setup of MOZ_RUST_DEFAULT_FLAGS for what the
# opt-level setting will be as a result of various other configure flags.
[profile.dev]
opt-level = 1
rpath = false
lto = false
debug-assertions = true
panic = "abort"

[profile.release]
opt-level = 2
rpath = false
debug-assertions = false
panic = "abort"

# Optimize build dependencies, because bindgen and proc macros / style
# compilation take more to run than to build otherwise.
[profile.dev.build-override]
opt-level = 1

[profile.release.build-override]
opt-level = 1

# optimizing glsl more makes a big difference in swgl build times
[profile.dev.package.glsl]
opt-level = 2

[profile.release.package.glsl]
opt-level = 2

[patch.crates-io]
chardetng = { git = "https://github.com/hsivonen/chardetng", rev="302c995f91f44cf26e77dc4758ad56c3ff0153ad" }
chardetng_c = { git = "https://github.com/hsivonen/chardetng_c", rev="ed8a4c6f900a90d4dbc1d64b856e61490a1c3570" }
libudev-sys = { path = "dom/webauthn/libudev-sys" }
packed_simd = { git = "https://github.com/hsivonen/packed_simd", rev="8b4bd7d8229660a749dbe419a57ea01df9de5453" }
minidump_writer_linux = { git = "https://github.com/msirringhaus/minidump_writer_linux.git", rev = "029ac0d54b237f27dc7d8d4e51bc0fb076e5e852" }
# The following overrides point to dummy projects, as a temporary measure until this is resolved:
# https://github.com/rust-lang/cargo/issues/6179
js-sys = { git = "https://github.com/kvark/dummy-web" }
slotmap = { git = "https://github.com/kvark/dummy-web" }
wasm-bindgen = { git = "https://github.com/kvark/dummy-web" }
web-sys = { git = "https://github.com/kvark/dummy-web" }

[patch.crates-io.cranelift-codegen]
git = "https://github.com/bytecodealliance/wasmtime"
rev = "824fa69756523f2b6d49029fe25de94130b1f144"

[patch.crates-io.cranelift-wasm]
git = "https://github.com/bytecodealliance/wasmtime"
rev = "824fa69756523f2b6d49029fe25de94130b1f144"

# Patch autocfg to hide rustc output. Workaround for https://github.com/cuviper/autocfg/issues/30
[patch.crates-io.autocfg]
path = "third_party/rust/autocfg"

# Patch mio 0.6 to use winapi 0.3 and miow 0.3, getting rid of winapi 0.2.
# There is not going to be new version of mio 0.6, mio now being >= 0.7.11.
[patch.crates-io.mio]
path = "third_party/rust/mio-0.6.23"

[patch.crates-io.prost-derive]
path = "third_party/rust/prost-derive"

# Patched to work around https://github.com/rust-lang/rust/issues/88576
[patch.crates-io.winapi-util]
path = "third_party/rust/winapi-util"

# Pick upstream patch for GCC 11 on armhf linux.
[patch.crates-io.cc]
git = "https://github.com/alexcrichton/cc-rs/"
rev = "b2f6b146b75299c444e05bbde50d03705c7c4b6e"
