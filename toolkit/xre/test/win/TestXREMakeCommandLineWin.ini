; A typical MakeCommandLine test will contain an input and an output name value
; pair. The value for input_xx is the input command line and the value for
; output_xx is the expected output command line.
;
; A test that is known to fail can be added as follows. If the passes_xx name
; value pair doesn't exist it defaults to true.
; input_99=yabadaba
; output_99=doo
; passes_99=false
;
; If a value starts and ends with single or double quotation marks then it must
; be enclosed in single or double quotation marks due to GetPrivateProfileString
; discarding the outmost quotation marks. See GetPrivateProfileString on MSDN
; for more information.
; http://msdn.microsoft.com/en-us/library/ms724353.aspx

[MakeCommandLineTests]
input_0=a:\
output_0=a:\

input_1=""a:\""
output_1=a:\"

input_2=""a:\b c""
output_2=""a:\b c""

input_3=""a:\b c\""
output_3=""a:\b c\"""

input_4=""a:\b c\d e""
output_4=""a:\b c\d e""

input_5=""a:\b c\d e\""
output_5=""a:\b c\d e\"""

input_6=""a:\\""
output_6=a:\

input_7="a:\" "b:\c d"
output_7=a:\" "b:\c d"

input_8="a "b:\" "c:\d e""
output_8="a "b:\" c:\d" e"

input_9="abc" d e
output_9=abc d e

input_10="a b c" d e
output_10="a b c" d e

input_11=a\\\b d"e f"g h
output_11=a\\\b "de fg" h

input_12=a	b
output_12=a b

input_13=""a	b""
output_13=""a	b""

input_14=a\\\"b c d
output_14=a\\\"b c d

input_15=a\\\"b c"
output_15=a\\\"b c

input_16=""a\\\b c"
output_16=""a\\\b c""

input_17=\"a
output_17=\"a

input_18=\\"a
output_18=\a

input_19=\\"\\\\"a
output_19=\\\a

input_20=\\"\\\\\"a
output_20=\\\\\\\"a

input_21="a\\\"b c\" d e
output_21=""a\\\"b c\" d e""

input_22=a\\\\\"b c" d e"
output_22=a\\\\\"b "c d e"

input_23=a:\b c\アルファ オメガ\d
output_23=a:\b c\アルファ オメガ\d

input_24=a:\b "c\アルファ オメガ\d"
output_24=a:\b "c\アルファ オメガ\d"

input_25=アルファ オメガ
output_25=アルファ オメガ
