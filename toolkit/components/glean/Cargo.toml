[package]
name = "fog_control"
version = "0.1.0"
authors = ["Glean SDK team <glean-team@mozilla.com>"]
edition = "2018"
license = "MPL-2.0"

[dependencies]
glean = { version = "42.1.0", features = ["rkv-safe-mode"] }
# In theory we only need this for `target_os = "android"` builds.
# Cargo has the ability to do that with `[target.'cfg(target_os = "android")'.dependencies]`.
# However that seems to confuse `cbindgen` quite a lot;
# it suddenly starts generating completely unrelated code and not adhering to the cbindgen.toml configuration
# placed next to this file.
# So for now we unconditionally depend on it, but in the code we only `extern crate` it on Android builds.
# While `glean-ffi` is still built (I think it is),
# it's not linked into the final library.
glean-ffi = "42.1.0"
log = "0.4"
nserror = { path = "../../../xpcom/rust/nserror" }
nsstring = { path = "../../../xpcom/rust/nsstring" }
static_prefs = { path = "../../../modules/libpref/init/static_prefs" }
xpcom = { path = "../../../xpcom/rust/xpcom" }
once_cell = "1.2.0"
fog = { path = "./api" }
cstr = "0.2"
viaduct = { git = "https://github.com/mozilla/application-services", rev = "8a576fbe79199fa8664f64285524017f74ebcc5f" } # Copied from toolkit/library/rust/shared/Cargo.toml
url = "2.1" # Copied from viaduct's deps, see https://github.com/mozilla/application-services/issues/3062
thin-vec = { version = "0.2.1", features = ["gecko-ffi"] }

[features]
# Leave data collection enabled, but disable upload.
disable_upload = []
# Letting us know we're compiling with Gecko symbols.
with_gecko = ["fog/with_gecko"]
