// -*- mode: C++ -*-

// AUTOGENERATED BY glean_parser.  DO NOT EDIT.

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#ifndef mozilla_glean_Pings_h
#define mozilla_glean_Pings_h

#include "mozilla/glean/bindings/Ping.h"

namespace mozilla::glean_pings {

/*
 * Generated from not-baseline.
 *
 * This ping is intended to provide metrics that are managed by the library
 * itself, and not explicitly set by the application or included in the
 * application's `metrics.yaml` file. The `baseline` ping is automatically sent
 * when the application is moved to the background.
 */
constexpr glean::impl::Ping NotBaseline(1);

/*
 * Generated from not-metrics.
 *
 * The `metrics` ping is intended for all of the metrics that are explicitly set
 * by the application or are included in the application's `metrics.yaml` file
 * (except events). The reported data is tied to the ping's *measurement window*,
 * which is the time between the collection of two `metrics` ping. Ideally, this
 * window is expected to be about 24 hours, given that the collection is scheduled
 * daily at 4AM. Data in the `ping_info` section of the ping can be used to infer
 * the length of this window.
 */
constexpr glean::impl::Ping NotMetrics(2);

/*
 * Generated from not-events.
 *
 * The events ping's purpose is to transport all of the event metric information.
 * The `events` ping is automatically sent when the application is moved to the
 * background.
 */
constexpr glean::impl::Ping NotEvents(3);

/*
 * Generated from not-deletion-request.
 *
 * This ping is submitted when a user opts out of sending technical and
 * interaction data to Mozilla. This ping is intended to communicate to the Data
 * Pipeline that the user wishes to have their reported Telemetry data deleted. As
 * such it attempts to send itself at the moment the user opts out of data
 * collection.
 */
constexpr glean::impl::Ping NotDeletionRequest(4);


}  // namespace mozilla::glean_pings

#endif  // mozilla_glean_Pings_h
