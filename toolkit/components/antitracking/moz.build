# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

with Files("**"):
    BUG_COMPONENT = ("Core", "Privacy: Anti-Tracking")

XPIDL_SOURCES += [
    "nsIPartitioningExceptionListService.idl",
    "nsIPurgeTrackerService.idl",
    "nsITrackingDBService.idl",
    "nsIURLDecorationAnnotationsService.idl",
    "nsIURLQueryStrippingListService.idl",
]

XPIDL_MODULE = "toolkit_antitracking"

EXTRA_COMPONENTS += [
    "antitracking.manifest",
]

EXTRA_JS_MODULES += [
    "ContentBlockingAllowList.jsm",
    "PartitioningExceptionListService.jsm",
    "PurgeTrackerService.jsm",
    "TrackingDBService.jsm",
    "URLDecorationAnnotationsService.jsm",
    "URLQueryStrippingListProcessScript.js",
    "URLQueryStrippingListService.jsm",
]

XPCOM_MANIFESTS += [
    "components.conf",
]

EXPORTS.mozilla = [
    "AntiTrackingIPCUtils.h",
    "AntiTrackingRedirectHeuristic.h",
    "AntiTrackingUtils.h",
    "ContentBlocking.h",
    "ContentBlockingAllowList.h",
    "ContentBlockingLog.h",
    "ContentBlockingNotifier.h",
    "ContentBlockingTelemetryService.h",
    "ContentBlockingUserInteraction.h",
    "DynamicFpiRedirectHeuristic.h",
    "StorageAccess.h",
    "StoragePrincipalHelper.h",
    "URLDecorationStripper.h",
    "URLQueryStringStripper.h",
]

UNIFIED_SOURCES += [
    "AntiTrackingRedirectHeuristic.cpp",
    "AntiTrackingUtils.cpp",
    "ContentBlocking.cpp",
    "ContentBlockingAllowList.cpp",
    "ContentBlockingLog.cpp",
    "ContentBlockingNotifier.cpp",
    "ContentBlockingTelemetryService.cpp",
    "ContentBlockingUserInteraction.cpp",
    "DynamicFpiRedirectHeuristic.cpp",
    "PartitioningExceptionList.cpp",
    "RejectForeignAllowList.cpp",
    "SettingsChangeObserver.cpp",
    "StorageAccess.cpp",
    "StoragePrincipalHelper.cpp",
    "TemporaryAccessGrantObserver.cpp",
    "URLDecorationStripper.cpp",
    "URLQueryStringStripper.cpp",
]

LOCAL_INCLUDES += [
    "/netwerk/base",
    "/netwerk/protocol/http",
]

include("/ipc/chromium/chromium-config.mozbuild")

FINAL_LIBRARY = "xul"

if CONFIG["MOZ_BUILD_APP"] != "mobile/android":
    BROWSER_CHROME_MANIFESTS += [
        "test/browser/browser-blocking.ini",
        "test/browser/browser.ini",
    ]

XPCSHELL_TESTS_MANIFESTS += ["test/xpcshell/xpcshell.ini"]

TEST_DIRS += ["test/gtest"]

REQUIRES_UNIFIED_BUILD = True
