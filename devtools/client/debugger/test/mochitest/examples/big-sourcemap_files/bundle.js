/******/ (function(modules) {
  // webpackBootstrap
  /******/ function hotDisposeChunk(chunkId) {
    /******/ delete installedChunks[chunkId];
    /******/
  }
  /******/ var parentHotUpdateCallback = this["webpackHotUpdate"];
  /******/ this[
    "webpackHotUpdate"
  ] = /******/ function webpackHotUpdateCallback(chunkId, moreModules) {
    // eslint-disable-line no-unused-vars
    /******/ hotAddUpdateChunk(chunkId, moreModules);
    /******/ if (parentHotUpdateCallback)
      parentHotUpdateCallback(chunkId, moreModules);
    /******/
  };
  /******/

  /******/ function hotDownloadUpdateChunk(chunkId) {
    // eslint-disable-line no-unused-vars
    /******/ var head = document.getElementsByTagName("head")[0];
    /******/ var script = document.createElement("script");
    /******/ script.type = "text/javascript";
    /******/ script.charset = "utf-8";
    /******/ script.src =
      __webpack_require__.p +
      "" +
      chunkId +
      "." +
      hotCurrentHash +
      ".hot-update.js";
    /******/ /******/ head.appendChild(script);
    /******/
  }
  /******/

  /******/ function hotDownloadManifest(requestTimeout) {
    // eslint-disable-line no-unused-vars
    /******/ requestTimeout = requestTimeout || 10000;
    /******/ return new Promise(function(resolve, reject) {
      /******/ if (typeof XMLHttpRequest === "undefined")
        /******/ return reject(new Error("No browser support"));
      /******/ try {
        /******/ var request = new XMLHttpRequest();
        /******/ var requestPath =
          __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
        /******/ request.open("GET", requestPath, true);
        /******/ request.timeout = requestTimeout;
        /******/ request.send(null);
        /******/
      } catch (err) {
        /******/ return reject(err);
        /******/
      }
      /******/ request.onreadystatechange = function() {
        /******/ if (request.readyState !== 4) return;
        /******/ if (request.status === 0) {
          /******/ // timeout
          /******/ reject(
            new Error("Manifest request to " + requestPath + " timed out.")
          );
          /******/
        } else if (request.status === 404) {
          /******/ // no update available
          /******/ resolve();
          /******/
        } else if (request.status !== 200 && request.status !== 304) {
          /******/ // other failure
          /******/ reject(
            new Error("Manifest request to " + requestPath + " failed.")
          );
          /******/
        } else {
          /******/ // success
          /******/ try {
            /******/ var update = JSON.parse(request.responseText);
            /******/
          } catch (e) {
            /******/ reject(e);
            /******/ return;
            /******/
          }
          /******/ resolve(update);
          /******/
        }
        /******/
      };
      /******/
    });
    /******/
  }
  /******/
  /******/

  /******/

  /******/ var hotApplyOnUpdate = true;
  /******/ var hotCurrentHash = "cbd3f28b2666e547679d"; // eslint-disable-line no-unused-vars
  /******/ var hotRequestTimeout = 10000;
  /******/ var hotCurrentModuleData = {};
  /******/ var hotCurrentChildModule; // eslint-disable-line no-unused-vars
  /******/ var hotCurrentParents = []; // eslint-disable-line no-unused-vars
  /******/ var hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars
  /******/

  /******/ function hotCreateRequire(moduleId) {
    // eslint-disable-line no-unused-vars
    /******/ var me = installedModules[moduleId];
    /******/ if (!me) return __webpack_require__;
    /******/ var fn = function(request) {
      /******/ if (me.hot.active) {
        /******/ if (installedModules[request]) {
          /******/ if (installedModules[request].parents.indexOf(moduleId) < 0)
            /******/ installedModules[request].parents.push(moduleId);
          /******/
        } else {
          /******/ hotCurrentParents = [moduleId];
          /******/ hotCurrentChildModule = request;
          /******/
        }
        /******/ if (me.children.indexOf(request) < 0)
          /******/ me.children.push(request);
        /******/
      } else {
        /******/ console.warn(
          "[HMR] unexpected require(" +
            request +
            ") from disposed module " +
            moduleId
        );
        /******/ hotCurrentParents = [];
        /******/
      }
      /******/ return __webpack_require__(request);
      /******/
    };
    /******/ var ObjectFactory = function ObjectFactory(name) {
      /******/ return {
        /******/ configurable: true,
        /******/ enumerable: true,
        /******/ get: function() {
          /******/ return __webpack_require__[name];
          /******/
        },
        /******/ set: function(value) {
          /******/ __webpack_require__[name] = value;
          /******/
        }
        /******/
      };
      /******/
    };
    /******/ for (var name in __webpack_require__) {
      /******/ if (
        Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
        name !== "e"
      ) {
        /******/ Object.defineProperty(fn, name, ObjectFactory(name));
        /******/
      }
      /******/
    }
    /******/ fn.e = function(chunkId) {
      /******/ if (hotStatus === "ready") /******/ hotSetStatus("prepare");
      /******/ hotChunksLoading++;
      /******/ return __webpack_require__
        .e(chunkId)
        .then(finishChunkLoading, function(err) {
          /******/ finishChunkLoading();
          /******/ throw err;
          /******/
        });
      /******/

      /******/ function finishChunkLoading() {
        /******/ hotChunksLoading--;
        /******/ if (hotStatus === "prepare") {
          /******/ if (!hotWaitingFilesMap[chunkId]) {
            /******/ hotEnsureUpdateChunk(chunkId);
            /******/
          }
          /******/ if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
            /******/ hotUpdateDownloaded();
            /******/
          }
          /******/
        }
        /******/
      }
      /******/
    };
    /******/ return fn;
    /******/
  }
  /******/

  /******/ function hotCreateModule(moduleId) {
    // eslint-disable-line no-unused-vars
    /******/ var hot = {
      /******/ // private stuff
      /******/ _acceptedDependencies: {},
      /******/ _declinedDependencies: {},
      /******/ _selfAccepted: false,
      /******/ _selfDeclined: false,
      /******/ _disposeHandlers: [],
      /******/ _main: hotCurrentChildModule !== moduleId, // Module API
      /******/

      /******/ /******/ active: true,
      /******/ accept: function(dep, callback) {
        /******/ if (typeof dep === "undefined")
          /******/ hot._selfAccepted = true;
        else if (typeof dep === "function")
          /******/ /******/ hot._selfAccepted = dep;
        else if (typeof dep === "object")
          /******/ /******/ for (var i = 0; i < dep.length; i++)
            /******/ hot._acceptedDependencies[dep[i]] =
              callback || function() {};
        else
          /******/ /******/ hot._acceptedDependencies[dep] =
            callback || function() {};
        /******/
      },
      /******/ decline: function(dep) {
        /******/ if (typeof dep === "undefined")
          /******/ hot._selfDeclined = true;
        else if (typeof dep === "object")
          /******/ /******/ for (var i = 0; i < dep.length; i++)
            /******/ hot._declinedDependencies[dep[i]] = true;
        else /******/ /******/ hot._declinedDependencies[dep] = true;
        /******/
      },
      /******/ dispose: function(callback) {
        /******/ hot._disposeHandlers.push(callback);
        /******/
      },
      /******/ addDisposeHandler: function(callback) {
        /******/ hot._disposeHandlers.push(callback);
        /******/
      },
      /******/ removeDisposeHandler: function(callback) {
        /******/ var idx = hot._disposeHandlers.indexOf(callback);
        /******/ if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
        /******/
      }, // Management API
      /******/

      /******/ /******/ check: hotCheck,
      /******/ apply: hotApply,
      /******/ status: function(l) {
        /******/ if (!l) return hotStatus;
        /******/ hotStatusHandlers.push(l);
        /******/
      },
      /******/ addStatusHandler: function(l) {
        /******/ hotStatusHandlers.push(l);
        /******/
      },
      /******/ removeStatusHandler: function(l) {
        /******/ var idx = hotStatusHandlers.indexOf(l);
        /******/ if (idx >= 0) hotStatusHandlers.splice(idx, 1);
        /******/
      }, //inherit from previous dispose call
      /******/

      /******/ /******/ data: hotCurrentModuleData[moduleId]
      /******/
    };
    /******/ hotCurrentChildModule = undefined;
    /******/ return hot;
    /******/
  }
  /******/

  /******/ var hotStatusHandlers = [];
  /******/ var hotStatus = "idle";
  /******/

  /******/ function hotSetStatus(newStatus) {
    /******/ hotStatus = newStatus;
    /******/ for (var i = 0; i < hotStatusHandlers.length; i++)
      /******/ hotStatusHandlers[i].call(null, newStatus);
    /******/
  } // while downloading
  /******/

  /******/ /******/ var hotWaitingFiles = 0;
  /******/ var hotChunksLoading = 0;
  /******/ var hotWaitingFilesMap = {};
  /******/ var hotRequestedFilesMap = {};
  /******/ var hotAvailableFilesMap = {};
  /******/ var hotDeferred; // The update info
  /******/

  /******/ /******/ var hotUpdate, hotUpdateNewHash;
  /******/

  /******/ function toModuleId(id) {
    /******/ var isNumber = +id + "" === id;
    /******/ return isNumber ? +id : id;
    /******/
  }
  /******/

  /******/ function hotCheck(apply) {
    /******/ if (hotStatus !== "idle")
      throw new Error("check() is only allowed in idle status");
    /******/ hotApplyOnUpdate = apply;
    /******/ hotSetStatus("check");
    /******/ return hotDownloadManifest(hotRequestTimeout).then(function(
      update
    ) {
      /******/ if (!update) {
        /******/ hotSetStatus("idle");
        /******/ return null;
        /******/
      }
      /******/ hotRequestedFilesMap = {};
      /******/ hotWaitingFilesMap = {};
      /******/ hotAvailableFilesMap = update.c;
      /******/ hotUpdateNewHash = update.h;
      /******/

      /******/ hotSetStatus("prepare");
      /******/ var promise = new Promise(function(resolve, reject) {
        /******/ hotDeferred = {
          /******/ resolve: resolve,
          /******/ reject: reject
          /******/
        };
        /******/
      });
      /******/ hotUpdate = {};
      /******/ var chunkId = 0;
      /******/ {
        // eslint-disable-line no-lone-blocks
        /******/ /*globals chunkId */
        /******/ hotEnsureUpdateChunk(chunkId);
        /******/
      }
      /******/ if (
        hotStatus === "prepare" &&
        hotChunksLoading === 0 &&
        hotWaitingFiles === 0
      ) {
        /******/ hotUpdateDownloaded();
        /******/
      }
      /******/ return promise;
      /******/
    });
    /******/
  }
  /******/

  /******/ function hotAddUpdateChunk(chunkId, moreModules) {
    // eslint-disable-line no-unused-vars
    /******/ if (
      !hotAvailableFilesMap[chunkId] ||
      !hotRequestedFilesMap[chunkId]
    )
      /******/ return;
    /******/ hotRequestedFilesMap[chunkId] = false;
    /******/ for (var moduleId in moreModules) {
      /******/ if (
        Object.prototype.hasOwnProperty.call(moreModules, moduleId)
      ) {
        /******/ hotUpdate[moduleId] = moreModules[moduleId];
        /******/
      }
      /******/
    }
    /******/ if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
      /******/ hotUpdateDownloaded();
      /******/
    }
    /******/
  }
  /******/

  /******/ function hotEnsureUpdateChunk(chunkId) {
    /******/ if (!hotAvailableFilesMap[chunkId]) {
      /******/ hotWaitingFilesMap[chunkId] = true;
      /******/
    } else {
      /******/ hotRequestedFilesMap[chunkId] = true;
      /******/ hotWaitingFiles++;
      /******/ hotDownloadUpdateChunk(chunkId);
      /******/
    }
    /******/
  }
  /******/

  /******/ function hotUpdateDownloaded() {
    /******/ hotSetStatus("ready");
    /******/ var deferred = hotDeferred;
    /******/ hotDeferred = null;
    /******/ if (!deferred) return;
    /******/ if (hotApplyOnUpdate) {
      /******/ // Wrap deferred object in Promise to mark it as a well-handled Promise to
      /******/ // avoid triggering uncaught exception warning in Chrome.
      /******/ // See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
      /******/ Promise.resolve()
        .then(function() {
          /******/ return hotApply(hotApplyOnUpdate);
          /******/
        })
        .then(
          /******/ function(result) {
            /******/ deferred.resolve(result);
            /******/
          },
          /******/ function(err) {
            /******/ deferred.reject(err);
            /******/
          }
          /******/
        );
      /******/
    } else {
      /******/ var outdatedModules = [];
      /******/ for (var id in hotUpdate) {
        /******/ if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
          /******/ outdatedModules.push(toModuleId(id));
          /******/
        }
        /******/
      }
      /******/ deferred.resolve(outdatedModules);
      /******/
    }
    /******/
  }
  /******/

  /******/ function hotApply(options) {
    /******/ if (hotStatus !== "ready")
      throw new Error("apply() is only allowed in ready status");
    /******/ options = options || {};
    /******/

    /******/ var cb;
    /******/ var i;
    /******/ var j;
    /******/ var module;
    /******/ var moduleId;
    /******/

    /******/ function getAffectedStuff(updateModuleId) {
      /******/ var outdatedModules = [updateModuleId];
      /******/ var outdatedDependencies = {};
      /******/

      /******/ var queue = outdatedModules.slice().map(function(id) {
        /******/ return {
          /******/ chain: [id],
          /******/ id: id
          /******/
        };
        /******/
      });
      /******/ while (queue.length > 0) {
        /******/ var queueItem = queue.pop();
        /******/ var moduleId = queueItem.id;
        /******/ var chain = queueItem.chain;
        /******/ module = installedModules[moduleId];
        /******/ if (!module || module.hot._selfAccepted) /******/ continue;
        /******/ if (module.hot._selfDeclined) {
          /******/ return {
            /******/ type: "self-declined",
            /******/ chain: chain,
            /******/ moduleId: moduleId
            /******/
          };
          /******/
        }
        /******/ if (module.hot._main) {
          /******/ return {
            /******/ type: "unaccepted",
            /******/ chain: chain,
            /******/ moduleId: moduleId
            /******/
          };
          /******/
        }
        /******/ for (var i = 0; i < module.parents.length; i++) {
          /******/ var parentId = module.parents[i];
          /******/ var parent = installedModules[parentId];
          /******/ if (!parent) continue;
          /******/ if (parent.hot._declinedDependencies[moduleId]) {
            /******/ return {
              /******/ type: "declined",
              /******/ chain: chain.concat([parentId]),
              /******/ moduleId: moduleId,
              /******/ parentId: parentId
              /******/
            };
            /******/
          }
          /******/ if (outdatedModules.indexOf(parentId) >= 0) continue;
          /******/ if (parent.hot._acceptedDependencies[moduleId]) {
            /******/ if (!outdatedDependencies[parentId])
              /******/ outdatedDependencies[parentId] = [];
            /******/ addAllToSet(outdatedDependencies[parentId], [moduleId]);
            /******/ continue;
            /******/
          }
          /******/ delete outdatedDependencies[parentId];
          /******/ outdatedModules.push(parentId);
          /******/ queue.push({
            /******/ chain: chain.concat([parentId]),
            /******/ id: parentId
            /******/
          });
          /******/
        }
        /******/
      }
      /******/

      /******/ return {
        /******/ type: "accepted",
        /******/ moduleId: updateModuleId,
        /******/ outdatedModules: outdatedModules,
        /******/ outdatedDependencies: outdatedDependencies
        /******/
      };
      /******/
    }
    /******/

    /******/ function addAllToSet(a, b) {
      /******/ for (var i = 0; i < b.length; i++) {
        /******/ var item = b[i];
        /******/ if (a.indexOf(item) < 0) /******/ a.push(item);
        /******/
      }
      /******/
    } // at begin all updates modules are outdated // the "outdated" status can propagate to parents if they don't accept the children
    /******/

    /******/ /******/ /******/ var outdatedDependencies = {};
    /******/ var outdatedModules = [];
    /******/ var appliedUpdate = {};
    /******/

    /******/ var warnUnexpectedRequire = function warnUnexpectedRequire() {
      /******/ console.warn(
        "[HMR] unexpected require(" + result.moduleId + ") to disposed module"
      );
      /******/
    };
    /******/

    /******/ for (var id in hotUpdate) {
      /******/ if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
        /******/ moduleId = toModuleId(id);
        /******/ var result;
        /******/ if (hotUpdate[id]) {
          /******/ result = getAffectedStuff(moduleId);
          /******/
        } else {
          /******/ result = {
            /******/ type: "disposed",
            /******/ moduleId: id
            /******/
          };
          /******/
        }
        /******/ var abortError = false;
        /******/ var doApply = false;
        /******/ var doDispose = false;
        /******/ var chainInfo = "";
        /******/ if (result.chain) {
          /******/ chainInfo =
            "\nUpdate propagation: " + result.chain.join(" -> ");
          /******/
        }
        /******/ switch (result.type) {
          /******/ case "self-declined":
            /******/ if (options.onDeclined)
              /******/ options.onDeclined(result);
            /******/ if (!options.ignoreDeclined)
              /******/ abortError = new Error(
                "Aborted because of self decline: " +
                  result.moduleId +
                  chainInfo
              );
            /******/ break;
          /******/ case "declined":
            /******/ if (options.onDeclined)
              /******/ options.onDeclined(result);
            /******/ if (!options.ignoreDeclined)
              /******/ abortError = new Error(
                "Aborted because of declined dependency: " +
                  result.moduleId +
                  " in " +
                  result.parentId +
                  chainInfo
              );
            /******/ break;
          /******/ case "unaccepted":
            /******/ if (options.onUnaccepted)
              /******/ options.onUnaccepted(result);
            /******/ if (!options.ignoreUnaccepted)
              /******/ abortError = new Error(
                "Aborted because " + moduleId + " is not accepted" + chainInfo
              );
            /******/ break;
          /******/ case "accepted":
            /******/ if (options.onAccepted)
              /******/ options.onAccepted(result);
            /******/ doApply = true;
            /******/ break;
          /******/ case "disposed":
            /******/ if (options.onDisposed)
              /******/ options.onDisposed(result);
            /******/ doDispose = true;
            /******/ break;
          /******/ default:
            /******/ throw new Error("Unexception type " + result.type);
          /******/
        }
        /******/ if (abortError) {
          /******/ hotSetStatus("abort");
          /******/ return Promise.reject(abortError);
          /******/
        }
        /******/ if (doApply) {
          /******/ appliedUpdate[moduleId] = hotUpdate[moduleId];
          /******/ addAllToSet(outdatedModules, result.outdatedModules);
          /******/ for (moduleId in result.outdatedDependencies) {
            /******/ if (
              Object.prototype.hasOwnProperty.call(
                result.outdatedDependencies,
                moduleId
              )
            ) {
              /******/ if (!outdatedDependencies[moduleId])
                /******/ outdatedDependencies[moduleId] = [];
              /******/ addAllToSet(
                outdatedDependencies[moduleId],
                result.outdatedDependencies[moduleId]
              );
              /******/
            }
            /******/
          }
          /******/
        }
        /******/ if (doDispose) {
          /******/ addAllToSet(outdatedModules, [result.moduleId]);
          /******/ appliedUpdate[moduleId] = warnUnexpectedRequire;
          /******/
        }
        /******/
      }
      /******/
    } // Store self accepted outdated modules to require them later by the module system
    /******/

    /******/ /******/ var outdatedSelfAcceptedModules = [];
    /******/ for (i = 0; i < outdatedModules.length; i++) {
      /******/ moduleId = outdatedModules[i];
      /******/ if (
        installedModules[moduleId] &&
        installedModules[moduleId].hot._selfAccepted
      )
        /******/ outdatedSelfAcceptedModules.push({
          /******/ module: moduleId,
          /******/ errorHandler: installedModules[moduleId].hot._selfAccepted
          /******/
        });
      /******/
    } // Now in "dispose" phase
    /******/

    /******/ /******/ hotSetStatus("dispose");
    /******/ Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
      /******/ if (hotAvailableFilesMap[chunkId] === false) {
        /******/ hotDisposeChunk(chunkId);
        /******/
      }
      /******/
    });
    /******/

    /******/ var idx;
    /******/ var queue = outdatedModules.slice();
    /******/ while (queue.length > 0) {
      /******/ moduleId = queue.pop();
      /******/ module = installedModules[moduleId];
      /******/ if (!module) continue;
      /******/

      /******/ var data = {}; // Call dispose handlers
      /******/

      /******/ /******/ var disposeHandlers = module.hot._disposeHandlers;
      /******/ for (j = 0; j < disposeHandlers.length; j++) {
        /******/ cb = disposeHandlers[j];
        /******/ cb(data);
        /******/
      }
      /******/ hotCurrentModuleData[moduleId] = data; // disable module (this disables requires from this module)
      /******/

      /******/ /******/ module.hot.active = false; // remove module from cache
      /******/

      /******/ /******/ delete installedModules[moduleId]; // when disposing there is no need to call dispose handler
      /******/

      /******/ /******/ delete outdatedDependencies[moduleId]; // remove "parents" references from all children
      /******/

      /******/ /******/ for (j = 0; j < module.children.length; j++) {
        /******/ var child = installedModules[module.children[j]];
        /******/ if (!child) continue;
        /******/ idx = child.parents.indexOf(moduleId);
        /******/ if (idx >= 0) {
          /******/ child.parents.splice(idx, 1);
          /******/
        }
        /******/
      }
      /******/
    } // remove outdated dependency from module children
    /******/

    /******/ /******/ var dependency;
    /******/ var moduleOutdatedDependencies;
    /******/ for (moduleId in outdatedDependencies) {
      /******/ if (
        Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
      ) {
        /******/ module = installedModules[moduleId];
        /******/ if (module) {
          /******/ moduleOutdatedDependencies = outdatedDependencies[moduleId];
          /******/ for (j = 0; j < moduleOutdatedDependencies.length; j++) {
            /******/ dependency = moduleOutdatedDependencies[j];
            /******/ idx = module.children.indexOf(dependency);
            /******/ if (idx >= 0) module.children.splice(idx, 1);
            /******/
          }
          /******/
        }
        /******/
      }
      /******/
    } // Not in "apply" phase
    /******/

    /******/ /******/ hotSetStatus("apply");
    /******/

    /******/ hotCurrentHash = hotUpdateNewHash; // insert new code
    /******/

    /******/ /******/ for (moduleId in appliedUpdate) {
      /******/ if (
        Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)
      ) {
        /******/ modules[moduleId] = appliedUpdate[moduleId];
        /******/
      }
      /******/
    } // call accept handlers
    /******/

    /******/ /******/ var error = null;
    /******/ for (moduleId in outdatedDependencies) {
      /******/ if (
        Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
      ) {
        /******/ module = installedModules[moduleId];
        /******/ if (module) {
          /******/ moduleOutdatedDependencies = outdatedDependencies[moduleId];
          /******/ var callbacks = [];
          /******/ for (i = 0; i < moduleOutdatedDependencies.length; i++) {
            /******/ dependency = moduleOutdatedDependencies[i];
            /******/ cb = module.hot._acceptedDependencies[dependency];
            /******/ if (cb) {
              /******/ if (callbacks.indexOf(cb) >= 0) continue;
              /******/ callbacks.push(cb);
              /******/
            }
            /******/
          }
          /******/ for (i = 0; i < callbacks.length; i++) {
            /******/ cb = callbacks[i];
            /******/ try {
              /******/ cb(moduleOutdatedDependencies);
              /******/
            } catch (err) {
              /******/ if (options.onErrored) {
                /******/ options.onErrored({
                  /******/ type: "accept-errored",
                  /******/ moduleId: moduleId,
                  /******/ dependencyId: moduleOutdatedDependencies[i],
                  /******/ error: err
                  /******/
                });
                /******/
              }
              /******/ if (!options.ignoreErrored) {
                /******/ if (!error) /******/ error = err;
                /******/
              }
              /******/
            }
            /******/
          }
          /******/
        }
        /******/
      }
      /******/
    } // Load self accepted modules
    /******/

    /******/ /******/ for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
      /******/ var item = outdatedSelfAcceptedModules[i];
      /******/ moduleId = item.module;
      /******/ hotCurrentParents = [moduleId];
      /******/ try {
        /******/ __webpack_require__(moduleId);
        /******/
      } catch (err) {
        /******/ if (typeof item.errorHandler === "function") {
          /******/ try {
            /******/ item.errorHandler(err);
            /******/
          } catch (err2) {
            /******/ if (options.onErrored) {
              /******/ options.onErrored({
                /******/ type: "self-accept-error-handler-errored",
                /******/ moduleId: moduleId,
                /******/ error: err2,
                /******/ orginalError: err, // TODO remove in webpack 4
                /******/ originalError: err
                /******/
              });
              /******/
            }
            /******/ if (!options.ignoreErrored) {
              /******/ if (!error) /******/ error = err2;
              /******/
            }
            /******/ if (!error) /******/ error = err;
            /******/
          }
          /******/
        } else {
          /******/ if (options.onErrored) {
            /******/ options.onErrored({
              /******/ type: "self-accept-errored",
              /******/ moduleId: moduleId,
              /******/ error: err
              /******/
            });
            /******/
          }
          /******/ if (!options.ignoreErrored) {
            /******/ if (!error) /******/ error = err;
            /******/
          }
          /******/
        }
        /******/
      }
      /******/
    } // handle errors in accept handlers and self accepted module load
    /******/

    /******/ /******/ if (error) {
      /******/ hotSetStatus("fail");
      /******/ return Promise.reject(error);
      /******/
    }
    /******/

    /******/ hotSetStatus("idle");
    /******/ return new Promise(function(resolve) {
      /******/ resolve(outdatedModules);
      /******/
    });
    /******/
  } // The module cache
  /******/
  /******/ /******/ var installedModules = {}; // The require function
  /******/
  /******/ /******/ function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId]) {
      /******/ return installedModules[moduleId].exports;
      /******/
    } // Create a new module (and put it into the cache)
    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ i: moduleId,
      /******/ l: false,
      /******/ exports: {},
      /******/ hot: hotCreateModule(moduleId),
      /******/ parents: ((hotCurrentParentsTemp = hotCurrentParents),
      (hotCurrentParents = []),
      hotCurrentParentsTemp),
      /******/ children: []
      /******/
    }); // Execute the module function
    /******/
    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      hotCreateRequire(moduleId)
    ); // Flag the module as loaded
    /******/
    /******/ /******/ module.l = true; // Return the exports of the module
    /******/
    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)
  /******/
  /******/
  /******/ /******/ __webpack_require__.m = modules; // expose the module cache
  /******/
  /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
  /******/
  /******/ /******/ __webpack_require__.d = function(exports, name, getter) {
    /******/ if (!__webpack_require__.o(exports, name)) {
      /******/ Object.defineProperty(exports, name, {
        /******/ configurable: false,
        /******/ enumerable: true,
        /******/ get: getter
        /******/
      });
      /******/
    }
    /******/
  }; // getDefaultExport function for compatibility with non-harmony modules
  /******/
  /******/ /******/ __webpack_require__.n = function(module) {
    /******/ var getter =
      module && module.__esModule
        ? /******/ function getDefault() {
            return module["default"];
          }
        : /******/ function getModuleExports() {
            return module;
          };
    /******/ __webpack_require__.d(getter, "a", getter);
    /******/ return getter;
    /******/
  }; // Object.prototype.hasOwnProperty.call
  /******/
  /******/ /******/ __webpack_require__.o = function(object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  }; // __webpack_public_path__
  /******/
  /******/ /******/ __webpack_require__.p = "/"; // __webpack_hash__
  /******/
  /******/ /******/ __webpack_require__.h = function() {
    return hotCurrentHash;
  }; // Load entry module and return exports
  /******/
  /******/ /******/ return hotCreateRequire(0)((__webpack_require__.s = 0));
  /******/
})(
  /************************************************************************/
  /******/ {
    /***/ "./node_modules/ansi-regex/index.js":
      /*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        module.exports = function() {
          return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;
        };

        /***/
      },

    /***/ "./node_modules/ansi-styles/index.js":
      /*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(module) {
          function assembleStyles() {
            var styles = {
              modifiers: {
                reset: [0, 0],
                bold: [1, 22], // 21 isn't widely supported and 22 does the same thing
                dim: [2, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                hidden: [8, 28],
                strikethrough: [9, 29]
              },
              colors: {
                black: [30, 39],
                red: [31, 39],
                green: [32, 39],
                yellow: [33, 39],
                blue: [34, 39],
                magenta: [35, 39],
                cyan: [36, 39],
                white: [37, 39],
                gray: [90, 39]
              },
              bgColors: {
                bgBlack: [40, 49],
                bgRed: [41, 49],
                bgGreen: [42, 49],
                bgYellow: [43, 49],
                bgBlue: [44, 49],
                bgMagenta: [45, 49],
                bgCyan: [46, 49],
                bgWhite: [47, 49]
              }
            };

            // fix humans
            styles.colors.grey = styles.colors.gray;

            Object.keys(styles).forEach(function(groupName) {
              var group = styles[groupName];

              Object.keys(group).forEach(function(styleName) {
                var style = group[styleName];

                styles[styleName] = group[styleName] = {
                  open: "\u001b[" + style[0] + "m",
                  close: "\u001b[" + style[1] + "m"
                };
              });

              Object.defineProperty(styles, groupName, {
                value: group,
                enumerable: false
              });
            });

            return styles;
          }

          Object.defineProperty(module, "exports", {
            enumerable: true,
            get: assembleStyles
          });

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js"
          )(module)
        ));

        /***/
      },

    /***/ "./node_modules/asap/browser-raw.js":
      /*!******************************************!*\
  !*** ./node_modules/asap/browser-raw.js ***!
  \******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          // Use the fastest means possible to execute a task in its own turn, with
          // priority over other events including IO, animation, reflow, and redraw
          // events in browsers.
          //
          // An exception thrown by a task will permanently interrupt the processing of
          // subsequent tasks. The higher level `asap` function ensures that if an
          // exception is thrown by a task, that the task queue will continue flushing as
          // soon as possible, but if you use `rawAsap` directly, you are responsible to
          // either ensure that no exceptions are thrown from your task, or to manually
          // call `rawAsap.requestFlush` if an exception is thrown.
          module.exports = rawAsap;
          function rawAsap(task) {
            if (!queue.length) {
              requestFlush();
              flushing = true;
            }
            // Equivalent to push, but avoids a function call.
            queue[queue.length] = task;
          }

          var queue = [];
          // Once a flush has been requested, no further calls to `requestFlush` are
          // necessary until the next `flush` completes.
          var flushing = false;
          // `requestFlush` is an implementation-specific method that attempts to kick
          // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
          // the event queue before yielding to the browser's own event loop.
          var requestFlush;
          // The position of the next task to execute in the task queue. This is
          // preserved between calls to `flush` so that it can be resumed if
          // a task throws an exception.
          var index = 0;
          // If a task schedules additional tasks recursively, the task queue can grow
          // unbounded. To prevent memory exhaustion, the task queue will periodically
          // truncate already-completed tasks.
          var capacity = 1024;

          // The flush function processes all tasks that have been scheduled with
          // `rawAsap` unless and until one of those tasks throws an exception.
          // If a task throws an exception, `flush` ensures that its state will remain
          // consistent and will resume where it left off when called again.
          // However, `flush` does not make any arrangements to be called again if an
          // exception is thrown.
          function flush() {
            while (index < queue.length) {
              var currentIndex = index;
              // Advance the index before calling the task. This ensures that we will
              // begin flushing on the next task the task throws an error.
              index = index + 1;
              queue[currentIndex].call();
              // Prevent leaking memory for long chains of recursive calls to `asap`.
              // If we call `asap` within tasks scheduled by `asap`, the queue will
              // grow, but to avoid an O(n) walk for every task we execute, we don't
              // shift tasks off the queue after they have been executed.
              // Instead, we periodically shift 1024 tasks off the queue.
              if (index > capacity) {
                // Manually shift all values starting at the index back to the
                // beginning of the queue.
                for (
                  var scan = 0, newLength = queue.length - index;
                  scan < newLength;
                  scan++
                ) {
                  queue[scan] = queue[scan + index];
                }
                queue.length -= index;
                index = 0;
              }
            }
            queue.length = 0;
            index = 0;
            flushing = false;
          }

          // `requestFlush` is implemented using a strategy based on data collected from
          // every available SauceLabs Selenium web driver worker at time of writing.
          // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

          // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
          // have WebKitMutationObserver but not un-prefixed MutationObserver.
          // Must use `global` or `self` instead of `window` to work in both frames and web
          // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

          /* globals self */
          var scope = typeof global !== "undefined" ? global : self;
          var BrowserMutationObserver =
            scope.MutationObserver || scope.WebKitMutationObserver;

          // MutationObservers are desirable because they have high priority and work
          // reliably everywhere they are implemented.
          // They are implemented in all modern browsers.
          //
          // - Android 4-4.3
          // - Chrome 26-34
          // - Firefox 14-29
          // - Internet Explorer 11
          // - iPad Safari 6-7.1
          // - iPhone Safari 7-7.1
          // - Safari 6-7
          if (typeof BrowserMutationObserver === "function") {
            requestFlush = makeRequestCallFromMutationObserver(flush);

            // MessageChannels are desirable because they give direct access to the HTML
            // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
            // 11-12, and in web workers in many engines.
            // Although message channels yield to any queued rendering and IO tasks, they
            // would be better than imposing the 4ms delay of timers.
            // However, they do not work reliably in Internet Explorer or Safari.

            // Internet Explorer 10 is the only browser that has setImmediate but does
            // not have MutationObservers.
            // Although setImmediate yields to the browser's renderer, it would be
            // preferrable to falling back to setTimeout since it does not have
            // the minimum 4ms penalty.
            // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
            // Desktop to a lesser extent) that renders both setImmediate and
            // MessageChannel useless for the purposes of ASAP.
            // https://github.com/kriskowal/q/issues/396

            // Timers are implemented universally.
            // We fall back to timers in workers in most engines, and in foreground
            // contexts in the following browsers.
            // However, note that even this simple case requires nuances to operate in a
            // broad spectrum of browsers.
            //
            // - Firefox 3-13
            // - Internet Explorer 6-9
            // - iPad Safari 4.3
            // - Lynx 2.8.7
          } else {
            requestFlush = makeRequestCallFromTimer(flush);
          }

          // `requestFlush` requests that the high priority event queue be flushed as
          // soon as possible.
          // This is useful to prevent an error thrown in a task from stalling the event
          // queue if the exception handled by Node.js’s
          // `process.on("uncaughtException")` or by a domain.
          rawAsap.requestFlush = requestFlush;

          // To request a high priority event, we induce a mutation observer by toggling
          // the text of a text node between "1" and "-1".
          function makeRequestCallFromMutationObserver(callback) {
            var toggle = 1;
            var observer = new BrowserMutationObserver(callback);
            var node = document.createTextNode("");
            observer.observe(node, { characterData: true });
            return function requestCall() {
              toggle = -toggle;
              node.data = toggle;
            };
          }

          // The message channel technique was discovered by Malte Ubl and was the
          // original foundation for this library.
          // http://www.nonblocking.io/2011/06/windownexttick.html

          // Safari 6.0.5 (at least) intermittently fails to create message ports on a
          // page's first load. Thankfully, this version of Safari supports
          // MutationObservers, so we don't need to fall back in that case.

          // function makeRequestCallFromMessageChannel(callback) {
          //     var channel = new MessageChannel();
          //     channel.port1.onmessage = callback;
          //     return function requestCall() {
          //         channel.port2.postMessage(0);
          //     };
          // }

          // For reasons explained above, we are also unable to use `setImmediate`
          // under any circumstances.
          // Even if we were, there is another bug in Internet Explorer 10.
          // It is not sufficient to assign `setImmediate` to `requestFlush` because
          // `setImmediate` must be called *by name* and therefore must be wrapped in a
          // closure.
          // Never forget.

          // function makeRequestCallFromSetImmediate(callback) {
          //     return function requestCall() {
          //         setImmediate(callback);
          //     };
          // }

          // Safari 6.0 has a problem where timers will get lost while the user is
          // scrolling. This problem does not impact ASAP because Safari 6.0 supports
          // mutation observers, so that implementation is used instead.
          // However, if we ever elect to use timers in Safari, the prevalent work-around
          // is to add a scroll event listener that calls for a flush.

          // `setTimeout` does not call the passed callback if the delay is less than
          // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
          // even then.

          function makeRequestCallFromTimer(callback) {
            return function requestCall() {
              // We dispatch a timeout with a specified delay of 0 for engines that
              // can reliably accommodate that request. This will usually be snapped
              // to a 4 milisecond delay, but once we're flushing, there's no delay
              // between events.
              var timeoutHandle = setTimeout(handleTimer, 0);
              // However, since this timer gets frequently dropped in Firefox
              // workers, we enlist an interval handle that will try to fire
              // an event 20 times per second until it succeeds.
              var intervalHandle = setInterval(handleTimer, 50);

              function handleTimer() {
                // Whichever timer succeeds will cancel both timers and
                // execute the callback.
                clearTimeout(timeoutHandle);
                clearInterval(intervalHandle);
                callback();
              }
            };
          }

          // This is for `asap.js` only.
          // Its name will be periodically randomized to break any code that depends on
          // its existence.
          rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

          // ASAP was originally a nextTick shim included in Q. This was factored out
          // into this ASAP package. It was later adapted to RSVP which made further
          // amendments. These decisions, particularly to marginalize MessageChannel and
          // to capture the MutationObserver implementation in a closure, were integrated
          // back into ASAP proper.
          // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/escape-string-regexp/index.js":
      /*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

        module.exports = function(str) {
          if (typeof str !== "string") {
            throw new TypeError("Expected a string");
          }

          return str.replace(matchOperatorsRe, "\\$&");
        };

        /***/
      },

    /***/ "./node_modules/fbjs/lib/EventListener.js":
      /*!************************************************!*\
  !*** ./node_modules/fbjs/lib/EventListener.js ***!
  \************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var emptyFunction = __webpack_require__(
          /*! ./emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js"
        );

        /**
         * Upstream version of event listener. Does not take into account specific
         * nature of platform.
         */
        var EventListener = {
          /**
           * Listen to DOM events during the bubble phase.
           *
           * @param {DOMEventTarget} target DOM element to register listener on.
           * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
           * @param {function} callback Callback function.
           * @return {object} Object with a `remove` method.
           */
          listen: function listen(target, eventType, callback) {
            if (target.addEventListener) {
              target.addEventListener(eventType, callback, false);
              return {
                remove: function remove() {
                  target.removeEventListener(eventType, callback, false);
                }
              };
            } else if (target.attachEvent) {
              target.attachEvent("on" + eventType, callback);
              return {
                remove: function remove() {
                  target.detachEvent("on" + eventType, callback);
                }
              };
            }
          },

          /**
           * Listen to DOM events during the capture phase.
           *
           * @param {DOMEventTarget} target DOM element to register listener on.
           * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
           * @param {function} callback Callback function.
           * @return {object} Object with a `remove` method.
           */
          capture: function capture(target, eventType, callback) {
            if (target.addEventListener) {
              target.addEventListener(eventType, callback, true);
              return {
                remove: function remove() {
                  target.removeEventListener(eventType, callback, true);
                }
              };
            } else {
              if (true) {
                console.error(
                  "Attempted to listen to events during the capture phase on a " +
                    "browser that does not support the capture phase. Your application " +
                    "will not receive some events."
                );
              }
              return {
                remove: emptyFunction
              };
            }
          },

          registerDefault: function registerDefault() {}
        };

        module.exports = EventListener;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/ExecutionEnvironment.js":
      /*!*******************************************************!*\
  !*** ./node_modules/fbjs/lib/ExecutionEnvironment.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var canUseDOM = !!(
          typeof window !== "undefined" &&
          window.document &&
          window.document.createElement
        );

        /**
         * Simple, lightweight module assisting with the detection and context of
         * Worker. Helps avoid circular dependencies and allows code to reason about
         * whether or not they are in a Worker, even if they never include the main
         * `ReactWorker` dependency.
         */
        var ExecutionEnvironment = {
          canUseDOM: canUseDOM,

          canUseWorkers: typeof Worker !== "undefined",

          canUseEventListeners:
            canUseDOM && !!(window.addEventListener || window.attachEvent),

          canUseViewport: canUseDOM && !!window.screen,

          isInWorker: !canUseDOM // For now, this is true - might change in the future.
        };

        module.exports = ExecutionEnvironment;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/camelize.js":
      /*!*******************************************!*\
  !*** ./node_modules/fbjs/lib/camelize.js ***!
  \*******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var _hyphenPattern = /-(.)/g;

        /**
         * Camelcases a hyphenated string, for example:
         *
         *   > camelize('background-color')
         *   < "backgroundColor"
         *
         * @param {string} string
         * @return {string}
         */
        function camelize(string) {
          return string.replace(_hyphenPattern, function(_, character) {
            return character.toUpperCase();
          });
        }

        module.exports = camelize;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/camelizeStyleName.js":
      /*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/camelizeStyleName.js ***!
  \****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var camelize = __webpack_require__(
          /*! ./camelize */ "./node_modules/fbjs/lib/camelize.js"
        );

        var msPattern = /^-ms-/;

        /**
         * Camelcases a hyphenated CSS property name, for example:
         *
         *   > camelizeStyleName('background-color')
         *   < "backgroundColor"
         *   > camelizeStyleName('-moz-transition')
         *   < "MozTransition"
         *   > camelizeStyleName('-ms-transition')
         *   < "msTransition"
         *
         * As Andi Smith suggests
         * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
         * is converted to lowercase `ms`.
         *
         * @param {string} string
         * @return {string}
         */
        function camelizeStyleName(string) {
          return camelize(string.replace(msPattern, "ms-"));
        }

        module.exports = camelizeStyleName;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/containsNode.js":
      /*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/containsNode.js ***!
  \***********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         */

        var isTextNode = __webpack_require__(
          /*! ./isTextNode */ "./node_modules/fbjs/lib/isTextNode.js"
        );

        /*eslint-disable no-bitwise */

        /**
         * Checks if a given DOM node contains or is another DOM node.
         */
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }

        module.exports = containsNode;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/emptyFunction.js":
      /*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         */

        function makeEmptyFunction(arg) {
          return function() {
            return arg;
          };
        }

        /**
         * This function accepts and discards inputs; it has no side effects. This is
         * primarily useful idiomatically for overridable function endpoints which
         * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
         */
        var emptyFunction = function emptyFunction() {};

        emptyFunction.thatReturns = makeEmptyFunction;
        emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
        emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
        emptyFunction.thatReturnsNull = makeEmptyFunction(null);
        emptyFunction.thatReturnsThis = function() {
          return this;
        };
        emptyFunction.thatReturnsArgument = function(arg) {
          return arg;
        };

        module.exports = emptyFunction;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/emptyObject.js":
      /*!**********************************************!*\
  !*** ./node_modules/fbjs/lib/emptyObject.js ***!
  \**********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var emptyObject = {};

        if (true) {
          Object.freeze(emptyObject);
        }

        module.exports = emptyObject;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/focusNode.js":
      /*!********************************************!*\
  !*** ./node_modules/fbjs/lib/focusNode.js ***!
  \********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        /**
         * @param {DOMElement} node input/textarea to focus
         */

        function focusNode(node) {
          // IE8 can throw "Can't move focus to the control because it is invisible,
          // not enabled, or of a type that does not accept the focus." for all kinds of
          // reasons that are too expensive and fragile to test.
          try {
            node.focus();
          } catch (e) {}
        }

        module.exports = focusNode;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/getActiveElement.js":
      /*!***************************************************!*\
  !*** ./node_modules/fbjs/lib/getActiveElement.js ***!
  \***************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /* eslint-disable fb-www/typeof-undefined */

        /**
         * Same as document.activeElement but wraps in a try-catch block. In IE it is
         * not safe to call document.activeElement if there is nothing focused.
         *
         * The activeElement will be null only if the document or document body is not
         * yet defined.
         *
         * @param {?DOMDocument} doc Defaults to current document.
         * @return {?DOMElement}
         */
        function getActiveElement(doc) /*?DOMElement*/ {
          doc = doc || (typeof document !== "undefined" ? document : undefined);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }

        module.exports = getActiveElement;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/hyphenate.js":
      /*!********************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenate.js ***!
  \********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var _uppercasePattern = /([A-Z])/g;

        /**
         * Hyphenates a camelcased string, for example:
         *
         *   > hyphenate('backgroundColor')
         *   < "background-color"
         *
         * For CSS style names, use `hyphenateStyleName` instead which works properly
         * with all vendor prefixes, including `ms`.
         *
         * @param {string} string
         * @return {string}
         */
        function hyphenate(string) {
          return string.replace(_uppercasePattern, "-$1").toLowerCase();
        }

        module.exports = hyphenate;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/hyphenateStyleName.js":
      /*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenateStyleName.js ***!
  \*****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var hyphenate = __webpack_require__(
          /*! ./hyphenate */ "./node_modules/fbjs/lib/hyphenate.js"
        );

        var msPattern = /^ms-/;

        /**
         * Hyphenates a camelcased CSS property name, for example:
         *
         *   > hyphenateStyleName('backgroundColor')
         *   < "background-color"
         *   > hyphenateStyleName('MozTransition')
         *   < "-moz-transition"
         *   > hyphenateStyleName('msTransition')
         *   < "-ms-transition"
         *
         * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
         * is converted to `-ms-`.
         *
         * @param {string} string
         * @return {string}
         */
        function hyphenateStyleName(string) {
          return hyphenate(string).replace(msPattern, "-ms-");
        }

        module.exports = hyphenateStyleName;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/invariant.js":
      /*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var validateFormat = function validateFormat(format) {};

        if (true) {
          validateFormat = function validateFormat(format) {
            if (format === undefined) {
              throw new Error("invariant requires an error message argument");
            }
          };
        }

        function invariant(condition, format, a, b, c, d, e, f) {
          validateFormat(format);

          if (!condition) {
            var error;
            if (format === undefined) {
              error = new Error(
                "Minified exception occurred; use the non-minified dev environment " +
                  "for the full error message and additional helpful warnings."
              );
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                })
              );
              error.name = "Invariant Violation";
            }

            error.framesToPop = 1; // we don't care about invariant's own frame
            throw error;
          }
        }

        module.exports = invariant;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/isNode.js":
      /*!*****************************************!*\
  !*** ./node_modules/fbjs/lib/isNode.js ***!
  \*****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM node.
         */
        function isNode(object) {
          var doc = object ? object.ownerDocument || object : document;
          var defaultView = doc.defaultView || window;
          return !!(
            object &&
            (typeof defaultView.Node === "function"
              ? object instanceof defaultView.Node
              : typeof object === "object" &&
                typeof object.nodeType === "number" &&
                typeof object.nodeName === "string")
          );
        }

        module.exports = isNode;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/isTextNode.js":
      /*!*********************************************!*\
  !*** ./node_modules/fbjs/lib/isTextNode.js ***!
  \*********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var isNode = __webpack_require__(
          /*! ./isNode */ "./node_modules/fbjs/lib/isNode.js"
        );

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM text node.
         */
        function isTextNode(object) {
          return isNode(object) && object.nodeType == 3;
        }

        module.exports = isTextNode;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/shallowEqual.js":
      /*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/shallowEqual.js ***!
  \***********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         *
         */

        /*eslint-disable no-self-compare */

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        function is(x, y) {
          // SameValue algorithm
          if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            // Added the nonzero y check to make Flow happy, but it is redundant
            return x !== 0 || y !== 0 || 1 / x === 1 / y;
          } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
          }
        }

        /**
         * Performs equality by iterating through keys on an object and returning false
         * when any key has values which are not strictly equal between the arguments.
         * Returns true when the values of all keys are strictly equal.
         */
        function shallowEqual(objA, objB) {
          if (is(objA, objB)) {
            return true;
          }

          if (
            typeof objA !== "object" ||
            objA === null ||
            typeof objB !== "object" ||
            objB === null
          ) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) {
            return false;
          }

          // Test for A's keys different from B.
          for (var i = 0; i < keysA.length; i++) {
            if (
              !hasOwnProperty.call(objB, keysA[i]) ||
              !is(objA[keysA[i]], objB[keysA[i]])
            ) {
              return false;
            }
          }

          return true;
        }

        module.exports = shallowEqual;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/warning.js":
      /*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var emptyFunction = __webpack_require__(
          /*! ./emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js"
        );

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var warning = emptyFunction;

        if (true) {
          var printWarning = function printWarning(format) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            var argIndex = 0;
            var message =
              "Warning: " +
              format.replace(/%s/g, function() {
                return args[argIndex++];
              });
            if (typeof console !== "undefined") {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          warning = function warning(condition, format) {
            if (format === undefined) {
              throw new Error(
                "`warning(condition, format, ...args)` requires a warning " +
                  "message argument"
              );
            }

            if (format.indexOf("Failed Composite propType: ") === 0) {
              return; // Ignore CompositeComponent proptype check.
            }

            if (!condition) {
              for (
                var _len2 = arguments.length,
                  args = Array(_len2 > 2 ? _len2 - 2 : 0),
                  _key2 = 2;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 2] = arguments[_key2];
              }

              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }

        module.exports = warning;

        /***/
      },

    /***/ "./node_modules/has-ansi/index.js":
      /*!****************************************!*\
  !*** ./node_modules/has-ansi/index.js ***!
  \****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var ansiRegex = __webpack_require__(
          /*! ansi-regex */ "./node_modules/ansi-regex/index.js"
        );
        var re = new RegExp(ansiRegex().source); // remove the `g` flag
        module.exports = re.test.bind(re);

        /***/
      },

    /***/ "./node_modules/inherits/inherits_browser.js":
      /*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        if (typeof Object.create === "function") {
          // implementation from standard node.js 'util' module
          module.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
              constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
          };
        } else {
          // old school shim for old browsers
          module.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {};
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          };
        }

        /***/
      },

    /***/ "./node_modules/json3/lib/json3.js":
      /*!*****************************************!*\
  !*** ./node_modules/json3/lib/json3.js ***!
  \*****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(module, global) {
          var __WEBPACK_AMD_DEFINE_RESULT__; /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
          (function() {
            // Detect the `define` function exposed by asynchronous module loaders. The
            // strict `define` check is necessary for compatibility with `r.js`.
            var isLoader =
              "function" === "function" &&
              __webpack_require__(
                /*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js"
              );

            // A set of types used to distinguish objects from primitives.
            var objectTypes = {
              function: true,
              object: true
            };

            // Detect the `exports` object exposed by CommonJS implementations.
            var freeExports =
              objectTypes[typeof exports] &&
              exports &&
              !exports.nodeType &&
              exports;

            // Use the `global` object exposed by Node (including Browserify via
            // `insert-module-globals`), Narwhal, and Ringo as the default context,
            // and the `window` object in browsers. Rhino exports a `global` function
            // instead.
            var root = (objectTypes[typeof window] && window) || this,
              freeGlobal =
                freeExports &&
                objectTypes[typeof module] &&
                module &&
                !module.nodeType &&
                typeof global == "object" &&
                global;

            if (
              freeGlobal &&
              (freeGlobal["global"] === freeGlobal ||
                freeGlobal["window"] === freeGlobal ||
                freeGlobal["self"] === freeGlobal)
            ) {
              root = freeGlobal;
            }

            // Public: Initializes JSON 3 using the given `context` object, attaching the
            // `stringify` and `parse` functions to the specified `exports` object.
            function runInContext(context, exports) {
              context || (context = root["Object"]());
              exports || (exports = root["Object"]());

              // Native constructor aliases.
              var Number = context["Number"] || root["Number"],
                String = context["String"] || root["String"],
                Object = context["Object"] || root["Object"],
                Date = context["Date"] || root["Date"],
                SyntaxError = context["SyntaxError"] || root["SyntaxError"],
                TypeError = context["TypeError"] || root["TypeError"],
                Math = context["Math"] || root["Math"],
                nativeJSON = context["JSON"] || root["JSON"];

              // Delegate to the native `stringify` and `parse` implementations.
              if (typeof nativeJSON == "object" && nativeJSON) {
                exports.stringify = nativeJSON.stringify;
                exports.parse = nativeJSON.parse;
              }

              // Convenience aliases.
              var objectProto = Object.prototype,
                getClass = objectProto.toString,
                isProperty,
                forEach,
                undef;

              // Test the `Date#getUTC*` methods. Based on work by @Yaffle.
              var isExtended = new Date(-3509827334573292);
              try {
                // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
                // results for certain dates in Opera >= 10.53.
                isExtended =
                  isExtended.getUTCFullYear() == -109252 &&
                  isExtended.getUTCMonth() === 0 &&
                  isExtended.getUTCDate() === 1 &&
                  // Safari < 2.0.2 stores the internal millisecond time value correctly,
                  // but clips the values returned by the date methods to the range of
                  // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).
                  isExtended.getUTCHours() == 10 &&
                  isExtended.getUTCMinutes() == 37 &&
                  isExtended.getUTCSeconds() == 6 &&
                  isExtended.getUTCMilliseconds() == 708;
              } catch (exception) {}

              // Internal: Determines whether the native `JSON.stringify` and `parse`
              // implementations are spec-compliant. Based on work by Ken Snyder.
              function has(name) {
                if (has[name] !== undef) {
                  // Return cached feature test result.
                  return has[name];
                }
                var isSupported;
                if (name == "bug-string-char-index") {
                  // IE <= 7 doesn't support accessing string characters using square
                  // bracket notation. IE 8 only supports this for primitives.
                  isSupported = "a"[0] != "a";
                } else if (name == "json") {
                  // Indicates whether both `JSON.stringify` and `JSON.parse` are
                  // supported.
                  isSupported = has("json-stringify") && has("json-parse");
                } else {
                  var value,
                    serialized =
                      '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                  // Test `JSON.stringify`.
                  if (name == "json-stringify") {
                    var stringify = exports.stringify,
                      stringifySupported =
                        typeof stringify == "function" && isExtended;
                    if (stringifySupported) {
                      // A test function object with a custom `toJSON` method.
                      (value = function() {
                        return 1;
                      }).toJSON = value;
                      try {
                        stringifySupported =
                          // Firefox 3.1b1 and b2 serialize string, number, and boolean
                          // primitives as object literals.
                          stringify(0) === "0" &&
                          // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
                          // literals.
                          stringify(new Number()) === "0" &&
                          stringify(new String()) == '""' &&
                          // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
                          // does not define a canonical JSON representation (this applies to
                          // objects with `toJSON` properties as well, *unless* they are nested
                          // within an object or array).
                          stringify(getClass) === undef &&
                          // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
                          // FF 3.1b3 pass this test.
                          stringify(undef) === undef &&
                          // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
                          // respectively, if the value is omitted entirely.
                          stringify() === undef &&
                          // FF 3.1b1, 2 throw an error if the given value is not a number,
                          // string, array, object, Boolean, or `null` literal. This applies to
                          // objects with custom `toJSON` methods as well, unless they are nested
                          // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
                          // methods entirely.
                          stringify(value) === "1" &&
                          stringify([value]) == "[1]" &&
                          // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
                          // `"[null]"`.
                          stringify([undef]) == "[null]" &&
                          // YUI 3.0.0b1 fails to serialize `null` literals.
                          stringify(null) == "null" &&
                          // FF 3.1b1, 2 halts serialization if an array contains a function:
                          // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
                          // elides non-JSON values from objects and arrays, unless they
                          // define custom `toJSON` methods.
                          stringify([undef, getClass, null]) ==
                            "[null,null,null]" &&
                          // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
                          // where character escape codes are expected (e.g., `\b` => `\u0008`).
                          stringify({
                            a: [value, true, false, null, "\x00\b\n\f\r\t"]
                          }) == serialized &&
                          // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
                          stringify(null, value) === "1" &&
                          stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" &&
                          // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
                          // serialize extended years.
                          stringify(new Date(-8.64e15)) ==
                            '"-271821-04-20T00:00:00.000Z"' &&
                          // The milliseconds are optional in ES 5, but required in 5.1.
                          stringify(new Date(8.64e15)) ==
                            '"+275760-09-13T00:00:00.000Z"' &&
                          // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
                          // four-digit years instead of six-digit years. Credits: @Yaffle.
                          stringify(new Date(-621987552e5)) ==
                            '"-000001-01-01T00:00:00.000Z"' &&
                          // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
                          // values less than 1000. Credits: @Yaffle.
                          stringify(new Date(-1)) ==
                            '"1969-12-31T23:59:59.999Z"';
                      } catch (exception) {
                        stringifySupported = false;
                      }
                    }
                    isSupported = stringifySupported;
                  }
                  // Test `JSON.parse`.
                  if (name == "json-parse") {
                    var parse = exports.parse;
                    if (typeof parse == "function") {
                      try {
                        // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
                        // Conforming implementations should also coerce the initial argument to
                        // a string prior to parsing.
                        if (parse("0") === 0 && !parse(false)) {
                          // Simple parsing test.
                          value = parse(serialized);
                          var parseSupported =
                            value["a"].length == 5 && value["a"][0] === 1;
                          if (parseSupported) {
                            try {
                              // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
                              parseSupported = !parse('"\t"');
                            } catch (exception) {}
                            if (parseSupported) {
                              try {
                                // FF 4.0 and 4.0.1 allow leading `+` signs and leading
                                // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
                                // certain octal literals.
                                parseSupported = parse("01") !== 1;
                              } catch (exception) {}
                            }
                            if (parseSupported) {
                              try {
                                // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
                                // points. These environments, along with FF 3.1b1 and 2,
                                // also allow trailing commas in JSON objects and arrays.
                                parseSupported = parse("1.") !== 1;
                              } catch (exception) {}
                            }
                          }
                        }
                      } catch (exception) {
                        parseSupported = false;
                      }
                    }
                    isSupported = parseSupported;
                  }
                }
                return (has[name] = !!isSupported);
              }

              if (!has("json")) {
                // Common `[[Class]]` name aliases.
                var functionClass = "[object Function]",
                  dateClass = "[object Date]",
                  numberClass = "[object Number]",
                  stringClass = "[object String]",
                  arrayClass = "[object Array]",
                  booleanClass = "[object Boolean]";

                // Detect incomplete support for accessing string characters by index.
                var charIndexBuggy = has("bug-string-char-index");

                // Define additional utility methods if the `Date` methods are buggy.
                if (!isExtended) {
                  var floor = Math.floor;
                  // A mapping between the months of the year and the number of days between
                  // January 1st and the first of the respective month.
                  var Months = [
                    0,
                    31,
                    59,
                    90,
                    120,
                    151,
                    181,
                    212,
                    243,
                    273,
                    304,
                    334
                  ];
                  // Internal: Calculates the number of days between the Unix epoch and the
                  // first day of the given month.
                  var getDay = function(year, month) {
                    return (
                      Months[month] +
                      365 * (year - 1970) +
                      floor((year - 1969 + (month = +(month > 1))) / 4) -
                      floor((year - 1901 + month) / 100) +
                      floor((year - 1601 + month) / 400)
                    );
                  };
                }

                // Internal: Determines if a property is a direct property of the given
                // object. Delegates to the native `Object#hasOwnProperty` method.
                if (!(isProperty = objectProto.hasOwnProperty)) {
                  isProperty = function(property) {
                    var members = {},
                      constructor;
                    if (
                      ((members.__proto__ = null),
                      (members.__proto__ = {
                        // The *proto* property cannot be set multiple times in recent
                        // versions of Firefox and SeaMonkey.
                        toString: 1
                      }),
                      members).toString != getClass
                    ) {
                      // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but
                      // supports the mutable *proto* property.
                      isProperty = function(property) {
                        // Capture and break the object's prototype chain (see section 8.6.2
                        // of the ES 5.1 spec). The parenthesized expression prevents an
                        // unsafe transformation by the Closure Compiler.
                        var original = this.__proto__,
                          result = property in ((this.__proto__ = null), this);
                        // Restore the original prototype chain.
                        this.__proto__ = original;
                        return result;
                      };
                    } else {
                      // Capture a reference to the top-level `Object` constructor.
                      constructor = members.constructor;
                      // Use the `constructor` property to simulate `Object#hasOwnProperty` in
                      // other environments.
                      isProperty = function(property) {
                        var parent = (this.constructor || constructor)
                          .prototype;
                        return (
                          property in this &&
                          !(
                            property in parent &&
                            this[property] === parent[property]
                          )
                        );
                      };
                    }
                    members = null;
                    return isProperty.call(this, property);
                  };
                }

                // Internal: Normalizes the `for...in` iteration algorithm across
                // environments. Each enumerated key is yielded to a `callback` function.
                forEach = function(object, callback) {
                  var size = 0,
                    Properties,
                    members,
                    property;

                  // Tests for bugs in the current environment's `for...in` algorithm. The
                  // `valueOf` property inherits the non-enumerable flag from
                  // `Object.prototype` in older versions of IE, Netscape, and Mozilla.
                  (Properties = function() {
                    this.valueOf = 0;
                  }).prototype.valueOf = 0;

                  // Iterate over a new instance of the `Properties` class.
                  members = new Properties();
                  for (property in members) {
                    // Ignore all properties inherited from `Object.prototype`.
                    if (isProperty.call(members, property)) {
                      size++;
                    }
                  }
                  Properties = members = null;

                  // Normalize the iteration algorithm.
                  if (!size) {
                    // A list of non-enumerable properties inherited from `Object.prototype`.
                    members = [
                      "valueOf",
                      "toString",
                      "toLocaleString",
                      "propertyIsEnumerable",
                      "isPrototypeOf",
                      "hasOwnProperty",
                      "constructor"
                    ];
                    // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
                    // properties.
                    forEach = function(object, callback) {
                      var isFunction = getClass.call(object) == functionClass,
                        property,
                        length;
                      var hasProperty =
                        (!isFunction &&
                          typeof object.constructor != "function" &&
                          objectTypes[typeof object.hasOwnProperty] &&
                          object.hasOwnProperty) ||
                        isProperty;
                      for (property in object) {
                        // Gecko <= 1.0 enumerates the `prototype` property of functions under
                        // certain conditions; IE does not.
                        if (
                          !(isFunction && property == "prototype") &&
                          hasProperty.call(object, property)
                        ) {
                          callback(property);
                        }
                      }
                      // Manually invoke the callback for each non-enumerable property.
                      for (
                        length = members.length;
                        (property = members[--length]);
                        hasProperty.call(object, property) && callback(property)
                      );
                    };
                  } else if (size == 2) {
                    // Safari <= 2.0.4 enumerates shadowed properties twice.
                    forEach = function(object, callback) {
                      // Create a set of iterated properties.
                      var members = {},
                        isFunction = getClass.call(object) == functionClass,
                        property;
                      for (property in object) {
                        // Store each property name to prevent double enumeration. The
                        // `prototype` property of functions is not enumerated due to cross-
                        // environment inconsistencies.
                        if (
                          !(isFunction && property == "prototype") &&
                          !isProperty.call(members, property) &&
                          (members[property] = 1) &&
                          isProperty.call(object, property)
                        ) {
                          callback(property);
                        }
                      }
                    };
                  } else {
                    // No bugs detected; use the standard `for...in` algorithm.
                    forEach = function(object, callback) {
                      var isFunction = getClass.call(object) == functionClass,
                        property,
                        isConstructor;
                      for (property in object) {
                        if (
                          !(isFunction && property == "prototype") &&
                          isProperty.call(object, property) &&
                          !(isConstructor = property === "constructor")
                        ) {
                          callback(property);
                        }
                      }
                      // Manually invoke the callback for the `constructor` property due to
                      // cross-environment inconsistencies.
                      if (
                        isConstructor ||
                        isProperty.call(object, (property = "constructor"))
                      ) {
                        callback(property);
                      }
                    };
                  }
                  return forEach(object, callback);
                };

                // Public: Serializes a JavaScript `value` as a JSON string. The optional
                // `filter` argument may specify either a function that alters how object and
                // array members are serialized, or an array of strings and numbers that
                // indicates which properties should be serialized. The optional `width`
                // argument may be either a string or number that specifies the indentation
                // level of the output.
                if (!has("json-stringify")) {
                  // Internal: A map of control characters and their escaped equivalents.
                  var Escapes = {
                    92: "\\\\",
                    34: '\\"',
                    8: "\\b",
                    12: "\\f",
                    10: "\\n",
                    13: "\\r",
                    9: "\\t"
                  };

                  // Internal: Converts `value` into a zero-padded string such that its
                  // length is at least equal to `width`. The `width` must be <= 6.
                  var leadingZeroes = "000000";
                  var toPaddedString = function(width, value) {
                    // The `|| 0` expression is necessary to work around a bug in
                    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
                    return (leadingZeroes + (value || 0)).slice(-width);
                  };

                  // Internal: Double-quotes a string `value`, replacing all ASCII control
                  // characters (characters with code unit values between 0 and 31) with
                  // their escaped equivalents. This is an implementation of the
                  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
                  var unicodePrefix = "\\u00";
                  var quote = function(value) {
                    var result = '"',
                      index = 0,
                      length = value.length,
                      useCharIndex = !charIndexBuggy || length > 10;
                    var symbols =
                      useCharIndex &&
                      (charIndexBuggy ? value.split("") : value);
                    for (; index < length; index++) {
                      var charCode = value.charCodeAt(index);
                      // If the character is a control character, append its Unicode or
                      // shorthand escape sequence; otherwise, append the character as-is.
                      switch (charCode) {
                        case 8:
                        case 9:
                        case 10:
                        case 12:
                        case 13:
                        case 34:
                        case 92:
                          result += Escapes[charCode];
                          break;
                        default:
                          if (charCode < 32) {
                            result +=
                              unicodePrefix +
                              toPaddedString(2, charCode.toString(16));
                            break;
                          }
                          result += useCharIndex
                            ? symbols[index]
                            : value.charAt(index);
                      }
                    }
                    return result + '"';
                  };

                  // Internal: Recursively serializes an object. Implements the
                  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.
                  var serialize = function(
                    property,
                    object,
                    callback,
                    properties,
                    whitespace,
                    indentation,
                    stack
                  ) {
                    var value,
                      className,
                      year,
                      month,
                      date,
                      time,
                      hours,
                      minutes,
                      seconds,
                      milliseconds,
                      results,
                      element,
                      index,
                      length,
                      prefix,
                      result;
                    try {
                      // Necessary for host object support.
                      value = object[property];
                    } catch (exception) {}
                    if (typeof value == "object" && value) {
                      className = getClass.call(value);
                      if (
                        className == dateClass &&
                        !isProperty.call(value, "toJSON")
                      ) {
                        if (value > -1 / 0 && value < 1 / 0) {
                          // Dates are serialized according to the `Date#toJSON` method
                          // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
                          // for the ISO 8601 date time string format.
                          if (getDay) {
                            // Manually compute the year, month, date, hours, minutes,
                            // seconds, and milliseconds if the `getUTC*` methods are
                            // buggy. Adapted from @Yaffle's `date-shim` project.
                            date = floor(value / 864e5);
                            for (
                              year = floor(date / 365.2425) + 1970 - 1;
                              getDay(year + 1, 0) <= date;
                              year++
                            );
                            for (
                              month = floor((date - getDay(year, 0)) / 30.42);
                              getDay(year, month + 1) <= date;
                              month++
                            );
                            date = 1 + date - getDay(year, month);
                            // The `time` value specifies the time within the day (see ES
                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
                            // to compute `A modulo B`, as the `%` operator does not
                            // correspond to the `modulo` operation for negative numbers.
                            time = (value % 864e5 + 864e5) % 864e5;
                            // The hours, minutes, seconds, and milliseconds are obtained by
                            // decomposing the time within the day. See section 15.9.1.10.
                            hours = floor(time / 36e5) % 24;
                            minutes = floor(time / 6e4) % 60;
                            seconds = floor(time / 1e3) % 60;
                            milliseconds = time % 1e3;
                          } else {
                            year = value.getUTCFullYear();
                            month = value.getUTCMonth();
                            date = value.getUTCDate();
                            hours = value.getUTCHours();
                            minutes = value.getUTCMinutes();
                            seconds = value.getUTCSeconds();
                            milliseconds = value.getUTCMilliseconds();
                          }
                          // Serialize extended years correctly.
                          value =
                            (year <= 0 || year >= 1e4
                              ? (year < 0 ? "-" : "+") +
                                toPaddedString(6, year < 0 ? -year : year)
                              : toPaddedString(4, year)) +
                            "-" +
                            toPaddedString(2, month + 1) +
                            "-" +
                            toPaddedString(2, date) +
                            // Months, dates, hours, minutes, and seconds should have two
                            // digits; milliseconds should have three.
                            "T" +
                            toPaddedString(2, hours) +
                            ":" +
                            toPaddedString(2, minutes) +
                            ":" +
                            toPaddedString(2, seconds) +
                            // Milliseconds are optional in ES 5.0, but required in 5.1.
                            "." +
                            toPaddedString(3, milliseconds) +
                            "Z";
                        } else {
                          value = null;
                        }
                      } else if (
                        typeof value.toJSON == "function" &&
                        ((className != numberClass &&
                          className != stringClass &&
                          className != arrayClass) ||
                          isProperty.call(value, "toJSON"))
                      ) {
                        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the
                        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3
                        // ignores all `toJSON` methods on these objects unless they are
                        // defined directly on an instance.
                        value = value.toJSON(property);
                      }
                    }
                    if (callback) {
                      // If a replacement function was provided, call it to obtain the value
                      // for serialization.
                      value = callback.call(object, property, value);
                    }
                    if (value === null) {
                      return "null";
                    }
                    className = getClass.call(value);
                    if (className == booleanClass) {
                      // Booleans are represented literally.
                      return "" + value;
                    } else if (className == numberClass) {
                      // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
                      // `"null"`.
                      return value > -1 / 0 && value < 1 / 0
                        ? "" + value
                        : "null";
                    } else if (className == stringClass) {
                      // Strings are double-quoted and escaped.
                      return quote("" + value);
                    }
                    // Recursively serialize objects and arrays.
                    if (typeof value == "object") {
                      // Check for cyclic structures. This is a linear search; performance
                      // is inversely proportional to the number of unique nested objects.
                      for (length = stack.length; length--; ) {
                        if (stack[length] === value) {
                          // Cyclic structures cannot be serialized by `JSON.stringify`.
                          throw TypeError();
                        }
                      }
                      // Add the object to the stack of traversed objects.
                      stack.push(value);
                      results = [];
                      // Save the current indentation level and indent one additional level.
                      prefix = indentation;
                      indentation += whitespace;
                      if (className == arrayClass) {
                        // Recursively serialize array elements.
                        for (
                          index = 0, length = value.length;
                          index < length;
                          index++
                        ) {
                          element = serialize(
                            index,
                            value,
                            callback,
                            properties,
                            whitespace,
                            indentation,
                            stack
                          );
                          results.push(element === undef ? "null" : element);
                        }
                        result = results.length
                          ? whitespace
                            ? "[\n" +
                              indentation +
                              results.join(",\n" + indentation) +
                              "\n" +
                              prefix +
                              "]"
                            : "[" + results.join(",") + "]"
                          : "[]";
                      } else {
                        // Recursively serialize object members. Members are selected from
                        // either a user-specified list of property names, or the object
                        // itself.
                        forEach(properties || value, function(property) {
                          var element = serialize(
                            property,
                            value,
                            callback,
                            properties,
                            whitespace,
                            indentation,
                            stack
                          );
                          if (element !== undef) {
                            // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
                            // is not the empty string, let `member` {quote(property) + ":"}
                            // be the concatenation of `member` and the `space` character."
                            // The "`space` character" refers to the literal space
                            // character, not the `space` {width} argument provided to
                            // `JSON.stringify`.
                            results.push(
                              quote(property) +
                                ":" +
                                (whitespace ? " " : "") +
                                element
                            );
                          }
                        });
                        result = results.length
                          ? whitespace
                            ? "{\n" +
                              indentation +
                              results.join(",\n" + indentation) +
                              "\n" +
                              prefix +
                              "}"
                            : "{" + results.join(",") + "}"
                          : "{}";
                      }
                      // Remove the object from the traversed object stack.
                      stack.pop();
                      return result;
                    }
                  };

                  // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.
                  exports.stringify = function(source, filter, width) {
                    var whitespace, callback, properties, className;
                    if (objectTypes[typeof filter] && filter) {
                      if (
                        (className = getClass.call(filter)) == functionClass
                      ) {
                        callback = filter;
                      } else if (className == arrayClass) {
                        // Convert the property names array into a makeshift set.
                        properties = {};
                        for (
                          var index = 0, length = filter.length, value;
                          index < length;
                          value = filter[index++],
                            ((className = getClass.call(value)),
                            className == stringClass ||
                              className == numberClass) &&
                              (properties[value] = 1)
                        );
                      }
                    }
                    if (width) {
                      if ((className = getClass.call(width)) == numberClass) {
                        // Convert the `width` to an integer and create a string containing
                        // `width` number of space characters.
                        if ((width -= width % 1) > 0) {
                          for (
                            whitespace = "", width > 10 && (width = 10);
                            whitespace.length < width;
                            whitespace += " "
                          );
                        }
                      } else if (className == stringClass) {
                        whitespace =
                          width.length <= 10 ? width : width.slice(0, 10);
                      }
                    }
                    // Opera <= 7.54u2 discards the values associated with empty string keys
                    // (`""`) only if they are used directly within an object member list
                    // (e.g., `!("" in { "": 1})`).
                    return serialize(
                      "",
                      ((value = {}), (value[""] = source), value),
                      callback,
                      properties,
                      whitespace,
                      "",
                      []
                    );
                  };
                }

                // Public: Parses a JSON source string.
                if (!has("json-parse")) {
                  var fromCharCode = String.fromCharCode;

                  // Internal: A map of escaped control characters and their unescaped
                  // equivalents.
                  var Unescapes = {
                    92: "\\",
                    34: '"',
                    47: "/",
                    98: "\b",
                    116: "\t",
                    110: "\n",
                    102: "\f",
                    114: "\r"
                  };

                  // Internal: Stores the parser state.
                  var Index, Source;

                  // Internal: Resets the parser state and throws a `SyntaxError`.
                  var abort = function() {
                    Index = Source = null;
                    throw SyntaxError();
                  };

                  // Internal: Returns the next token, or `"$"` if the parser has reached
                  // the end of the source string. A token may be a string, number, `null`
                  // literal, or Boolean literal.
                  var lex = function() {
                    var source = Source,
                      length = source.length,
                      value,
                      begin,
                      position,
                      isSigned,
                      charCode;
                    while (Index < length) {
                      charCode = source.charCodeAt(Index);
                      switch (charCode) {
                        case 9:
                        case 10:
                        case 13:
                        case 32:
                          // Skip whitespace tokens, including tabs, carriage returns, line
                          // feeds, and space characters.
                          Index++;
                          break;
                        case 123:
                        case 125:
                        case 91:
                        case 93:
                        case 58:
                        case 44:
                          // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
                          // the current position.
                          value = charIndexBuggy
                            ? source.charAt(Index)
                            : source[Index];
                          Index++;
                          return value;
                        case 34:
                          // `"` delimits a JSON string; advance to the next character and
                          // begin parsing the string. String tokens are prefixed with the
                          // sentinel `@` character to distinguish them from punctuators and
                          // end-of-string tokens.
                          for (value = "@", Index++; Index < length; ) {
                            charCode = source.charCodeAt(Index);
                            if (charCode < 32) {
                              // Unescaped ASCII control characters (those with a code unit
                              // less than the space character) are not permitted.
                              abort();
                            } else if (charCode == 92) {
                              // A reverse solidus (`\`) marks the beginning of an escaped
                              // control character (including `"`, `\`, and `/`) or Unicode
                              // escape sequence.
                              charCode = source.charCodeAt(++Index);
                              switch (charCode) {
                                case 92:
                                case 34:
                                case 47:
                                case 98:
                                case 116:
                                case 110:
                                case 102:
                                case 114:
                                  // Revive escaped control characters.
                                  value += Unescapes[charCode];
                                  Index++;
                                  break;
                                case 117:
                                  // `\u` marks the beginning of a Unicode escape sequence.
                                  // Advance to the first character and validate the
                                  // four-digit code point.
                                  begin = ++Index;
                                  for (
                                    position = Index + 4;
                                    Index < position;
                                    Index++
                                  ) {
                                    charCode = source.charCodeAt(Index);
                                    // A valid sequence comprises four hexdigits (case-
                                    // insensitive) that form a single hexadecimal value.
                                    if (
                                      !(
                                        (charCode >= 48 && charCode <= 57) ||
                                        (charCode >= 97 && charCode <= 102) ||
                                        (charCode >= 65 && charCode <= 70)
                                      )
                                    ) {
                                      // Invalid Unicode escape sequence.
                                      abort();
                                    }
                                  }
                                  // Revive the escaped character.
                                  value += fromCharCode(
                                    "0x" + source.slice(begin, Index)
                                  );
                                  break;
                                default:
                                  // Invalid escape sequence.
                                  abort();
                              }
                            } else {
                              if (charCode == 34) {
                                // An unescaped double-quote character marks the end of the
                                // string.
                                break;
                              }
                              charCode = source.charCodeAt(Index);
                              begin = Index;
                              // Optimize for the common case where a string is valid.
                              while (
                                charCode >= 32 &&
                                charCode != 92 &&
                                charCode != 34
                              ) {
                                charCode = source.charCodeAt(++Index);
                              }
                              // Append the string as-is.
                              value += source.slice(begin, Index);
                            }
                          }
                          if (source.charCodeAt(Index) == 34) {
                            // Advance to the next character and return the revived string.
                            Index++;
                            return value;
                          }
                          // Unterminated string.
                          abort();
                        default:
                          // Parse numbers and literals.
                          begin = Index;
                          // Advance past the negative sign, if one is specified.
                          if (charCode == 45) {
                            isSigned = true;
                            charCode = source.charCodeAt(++Index);
                          }
                          // Parse an integer or floating-point value.
                          if (charCode >= 48 && charCode <= 57) {
                            // Leading zeroes are interpreted as octal literals.
                            if (
                              charCode == 48 &&
                              ((charCode = source.charCodeAt(Index + 1)),
                              charCode >= 48 && charCode <= 57)
                            ) {
                              // Illegal octal literal.
                              abort();
                            }
                            isSigned = false;
                            // Parse the integer component.
                            for (
                              ;
                              Index < length &&
                              ((charCode = source.charCodeAt(Index)),
                              charCode >= 48 && charCode <= 57);
                              Index++
                            );
                            // Floats cannot contain a leading decimal point; however, this
                            // case is already accounted for by the parser.
                            if (source.charCodeAt(Index) == 46) {
                              position = ++Index;
                              // Parse the decimal component.
                              for (
                                ;
                                position < length &&
                                ((charCode = source.charCodeAt(position)),
                                charCode >= 48 && charCode <= 57);
                                position++
                              );
                              if (position == Index) {
                                // Illegal trailing decimal.
                                abort();
                              }
                              Index = position;
                            }
                            // Parse exponents. The `e` denoting the exponent is
                            // case-insensitive.
                            charCode = source.charCodeAt(Index);
                            if (charCode == 101 || charCode == 69) {
                              charCode = source.charCodeAt(++Index);
                              // Skip past the sign following the exponent, if one is
                              // specified.
                              if (charCode == 43 || charCode == 45) {
                                Index++;
                              }
                              // Parse the exponential component.
                              for (
                                position = Index;
                                position < length &&
                                ((charCode = source.charCodeAt(position)),
                                charCode >= 48 && charCode <= 57);
                                position++
                              );
                              if (position == Index) {
                                // Illegal empty exponent.
                                abort();
                              }
                              Index = position;
                            }
                            // Coerce the parsed value to a JavaScript number.
                            return +source.slice(begin, Index);
                          }
                          // A negative sign may only precede numbers.
                          if (isSigned) {
                            abort();
                          }
                          // `true`, `false`, and `null` literals.
                          if (source.slice(Index, Index + 4) == "true") {
                            Index += 4;
                            return true;
                          } else if (
                            source.slice(Index, Index + 5) == "false"
                          ) {
                            Index += 5;
                            return false;
                          } else if (source.slice(Index, Index + 4) == "null") {
                            Index += 4;
                            return null;
                          }
                          // Unrecognized token.
                          abort();
                      }
                    }
                    // Return the sentinel `$` character if the parser has reached the end
                    // of the source string.
                    return "$";
                  };

                  // Internal: Parses a JSON `value` token.
                  var get = function(value) {
                    var results, hasMembers;
                    if (value == "$") {
                      // Unexpected end of input.
                      abort();
                    }
                    if (typeof value == "string") {
                      if (
                        (charIndexBuggy ? value.charAt(0) : value[0]) == "@"
                      ) {
                        // Remove the sentinel `@` character.
                        return value.slice(1);
                      }
                      // Parse object and array literals.
                      if (value == "[") {
                        // Parses a JSON array, returning a new JavaScript array.
                        results = [];
                        for (; ; hasMembers || (hasMembers = true)) {
                          value = lex();
                          // A closing square bracket marks the end of the array literal.
                          if (value == "]") {
                            break;
                          }
                          // If the array literal contains elements, the current token
                          // should be a comma separating the previous element from the
                          // next.
                          if (hasMembers) {
                            if (value == ",") {
                              value = lex();
                              if (value == "]") {
                                // Unexpected trailing `,` in array literal.
                                abort();
                              }
                            } else {
                              // A `,` must separate each array element.
                              abort();
                            }
                          }
                          // Elisions and leading commas are not permitted.
                          if (value == ",") {
                            abort();
                          }
                          results.push(get(value));
                        }
                        return results;
                      } else if (value == "{") {
                        // Parses a JSON object, returning a new JavaScript object.
                        results = {};
                        for (; ; hasMembers || (hasMembers = true)) {
                          value = lex();
                          // A closing curly brace marks the end of the object literal.
                          if (value == "}") {
                            break;
                          }
                          // If the object literal contains members, the current token
                          // should be a comma separator.
                          if (hasMembers) {
                            if (value == ",") {
                              value = lex();
                              if (value == "}") {
                                // Unexpected trailing `,` in object literal.
                                abort();
                              }
                            } else {
                              // A `,` must separate each object member.
                              abort();
                            }
                          }
                          // Leading commas are not permitted, object property names must be
                          // double-quoted strings, and a `:` must separate each property
                          // name and value.
                          if (
                            value == "," ||
                            typeof value != "string" ||
                            (charIndexBuggy ? value.charAt(0) : value[0]) !=
                              "@" ||
                            lex() != ":"
                          ) {
                            abort();
                          }
                          results[value.slice(1)] = get(lex());
                        }
                        return results;
                      }
                      // Unexpected token encountered.
                      abort();
                    }
                    return value;
                  };

                  // Internal: Updates a traversed object member.
                  var update = function(source, property, callback) {
                    var element = walk(source, property, callback);
                    if (element === undef) {
                      delete source[property];
                    } else {
                      source[property] = element;
                    }
                  };

                  // Internal: Recursively traverses a parsed JSON object, invoking the
                  // `callback` function for each value. This is an implementation of the
                  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.
                  var walk = function(source, property, callback) {
                    var value = source[property],
                      length;
                    if (typeof value == "object" && value) {
                      // `forEach` can't be used to traverse an array in Opera <= 8.54
                      // because its `Object#hasOwnProperty` implementation returns `false`
                      // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
                      if (getClass.call(value) == arrayClass) {
                        for (length = value.length; length--; ) {
                          update(value, length, callback);
                        }
                      } else {
                        forEach(value, function(property) {
                          update(value, property, callback);
                        });
                      }
                    }
                    return callback.call(source, property, value);
                  };

                  // Public: `JSON.parse`. See ES 5.1 section 15.12.2.
                  exports.parse = function(source, callback) {
                    var result, value;
                    Index = 0;
                    Source = "" + source;
                    result = get(lex());
                    // If a JSON string contains multiple tokens, it is invalid.
                    if (lex() != "$") {
                      abort();
                    }
                    // Reset the parser state.
                    Index = Source = null;
                    return callback && getClass.call(callback) == functionClass
                      ? walk(
                          ((value = {}), (value[""] = result), value),
                          "",
                          callback
                        )
                      : result;
                  };
                }
              }

              exports["runInContext"] = runInContext;
              return exports;
            }

            if (freeExports && !isLoader) {
              // Export for CommonJS environments.
              runInContext(root, freeExports);
            } else {
              // Export for web browsers and JavaScript engines.
              var nativeJSON = root.JSON,
                previousJSON = root["JSON3"],
                isRestored = false;

              var JSON3 = runInContext(
                root,
                (root["JSON3"] = {
                  // Public: Restores the original value of the global `JSON` object and
                  // returns a reference to the `JSON3` object.
                  noConflict: function() {
                    if (!isRestored) {
                      isRestored = true;
                      root.JSON = nativeJSON;
                      root["JSON3"] = previousJSON;
                      nativeJSON = previousJSON = null;
                    }
                    return JSON3;
                  }
                })
              );

              root.JSON = {
                parse: JSON3.parse,
                stringify: JSON3.stringify
              };
            }

            // Export for asynchronous module loaders.
            if (isLoader) {
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return JSON3;
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }
          }.call(this));

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js"
          )(module),
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/ms/index.js":
      /*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        /**
         * Helpers.
         */

        var s = 1000;
        var m = s * 60;
        var h = m * 60;
        var d = h * 24;
        var y = d * 365.25;

        /**
         * Parse or format the given `val`.
         *
         * Options:
         *
         *  - `long` verbose formatting [false]
         *
         * @param {String|Number} val
         * @param {Object} [options]
         * @throws {Error} throw an error if val is not a non-empty string or a number
         * @return {String|Number}
         * @api public
         */

        module.exports = function(val, options) {
          options = options || {};
          var type = typeof val;
          if (type === "string" && val.length > 0) {
            return parse(val);
          } else if (type === "number" && isNaN(val) === false) {
            return options.long ? fmtLong(val) : fmtShort(val);
          }
          throw new Error(
            "val is not a non-empty string or a valid number. val=" +
              JSON.stringify(val)
          );
        };

        /**
         * Parse the given `str` and return milliseconds.
         *
         * @param {String} str
         * @return {Number}
         * @api private
         */

        function parse(str) {
          str = String(str);
          if (str.length > 100) {
            return;
          }
          var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
            str
          );
          if (!match) {
            return;
          }
          var n = parseFloat(match[1]);
          var type = (match[2] || "ms").toLowerCase();
          switch (type) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return n * y;
            case "days":
            case "day":
            case "d":
              return n * d;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return n * h;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return n * m;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return n * s;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return n;
            default:
              return undefined;
          }
        }

        /**
         * Short format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function fmtShort(ms) {
          if (ms >= d) {
            return Math.round(ms / d) + "d";
          }
          if (ms >= h) {
            return Math.round(ms / h) + "h";
          }
          if (ms >= m) {
            return Math.round(ms / m) + "m";
          }
          if (ms >= s) {
            return Math.round(ms / s) + "s";
          }
          return ms + "ms";
        }

        /**
         * Long format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function fmtLong(ms) {
          return (
            plural(ms, d, "day") ||
            plural(ms, h, "hour") ||
            plural(ms, m, "minute") ||
            plural(ms, s, "second") ||
            ms + " ms"
          );
        }

        /**
         * Pluralization helper.
         */

        function plural(ms, n, name) {
          if (ms < n) {
            return;
          }
          if (ms < n * 1.5) {
            return Math.floor(ms / n) + " " + name;
          }
          return Math.ceil(ms / n) + " " + name + "s";
        }

        /***/
      },

    /***/ "./node_modules/object-assign/index.js":
      /*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /*
object-assign
(c) Sindre Sorhus
@license MIT
*/

        /* eslint-disable no-unused-vars */
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var propIsEnumerable = Object.prototype.propertyIsEnumerable;

        function toObject(val) {
          if (val === null || val === undefined) {
            throw new TypeError(
              "Object.assign cannot be called with null or undefined"
            );
          }

          return Object(val);
        }

        function shouldUseNative() {
          try {
            if (!Object.assign) {
              return false;
            }

            // Detect buggy property enumeration order in older V8 versions.

            // https://bugs.chromium.org/p/v8/issues/detail?id=4118
            var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
            test1[5] = "de";
            if (Object.getOwnPropertyNames(test1)[0] === "5") {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test2 = {};
            for (var i = 0; i < 10; i++) {
              test2["_" + String.fromCharCode(i)] = i;
            }
            var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
              return test2[n];
            });
            if (order2.join("") !== "0123456789") {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test3 = {};
            "abcdefghijklmnopqrst".split("").forEach(function(letter) {
              test3[letter] = letter;
            });
            if (
              Object.keys(Object.assign({}, test3)).join("") !==
              "abcdefghijklmnopqrst"
            ) {
              return false;
            }

            return true;
          } catch (err) {
            // We don't expect any of the above to throw, but better to be safe.
            return false;
          }
        }

        module.exports = shouldUseNative()
          ? Object.assign
          : function(target, source) {
              var from;
              var to = toObject(target);
              var symbols;

              for (var s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);

                for (var key in from) {
                  if (hasOwnProperty.call(from, key)) {
                    to[key] = from[key];
                  }
                }

                if (getOwnPropertySymbols) {
                  symbols = getOwnPropertySymbols(from);
                  for (var i = 0; i < symbols.length; i++) {
                    if (propIsEnumerable.call(from, symbols[i])) {
                      to[symbols[i]] = from[symbols[i]];
                    }
                  }
                }
              }

              return to;
            };

        /***/
      },

    /***/ "./node_modules/process/browser.js":
      /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        // shim for using process in browser
        var process = (module.exports = {});

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error("setTimeout has not been defined");
        }
        function defaultClearTimeout() {
          throw new Error("clearTimeout has not been defined");
        }
        (function() {
          try {
            if (typeof setTimeout === "function") {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === "function") {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          }
          // if setTimeout wasn't available but was latter defined
          if (
            (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          }
          // if clearTimeout wasn't available but was latter defined
          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;

          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function() {
          this.fun.apply(null, this.array);
        };
        process.title = "browser";
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ""; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
          return [];
        };

        process.binding = function(name) {
          throw new Error("process.binding is not supported");
        };

        process.cwd = function() {
          return "/";
        };
        process.chdir = function(dir) {
          throw new Error("process.chdir is not supported");
        };
        process.umask = function() {
          return 0;
        };

        /***/
      },

    /***/ "./node_modules/prop-types/checkPropTypes.js":
      /*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          var invariant = __webpack_require__(
            /*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js"
          );
          var warning = __webpack_require__(
            /*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js"
          );
          var ReactPropTypesSecret = __webpack_require__(
            /*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js"
          );
          var loggedTypeFailures = {};
        }

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?Function} getStack Returns the component stack.
         * @private
         */
        function checkPropTypes(
          typeSpecs,
          values,
          location,
          componentName,
          getStack
        ) {
          if (true) {
            for (var typeSpecName in typeSpecs) {
              if (typeSpecs.hasOwnProperty(typeSpecName)) {
                var error;
                // Prop type validation may throw. In case they do, we don't want to
                // fail the render phase where it didn't fail before. So we log it.
                // After these have been cleaned up, we'll let them throw.
                try {
                  // This is intentionally an invariant that gets caught. It's the same
                  // behavior as without this statement except with a better message.
                  invariant(
                    typeof typeSpecs[typeSpecName] === "function",
                    "%s: %s type `%s` is invalid; it must be a function, usually from " +
                      "the `prop-types` package, but received `%s`.",
                    componentName || "React class",
                    location,
                    typeSpecName,
                    typeof typeSpecs[typeSpecName]
                  );
                  error = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    ReactPropTypesSecret
                  );
                } catch (ex) {
                  error = ex;
                }
                warning(
                  !error || error instanceof Error,
                  "%s: type specification of %s `%s` is invalid; the type checker " +
                    "function must return `null` or an `Error` but returned a %s. " +
                    "You may have forgotten to pass an argument to the type checker " +
                    "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " +
                    "shape all require an argument).",
                  componentName || "React class",
                  location,
                  typeSpecName,
                  typeof error
                );
                if (
                  error instanceof Error &&
                  !(error.message in loggedTypeFailures)
                ) {
                  // Only monitor this failure once because there tends to be a lot of the
                  // same error.
                  loggedTypeFailures[error.message] = true;

                  var stack = getStack ? getStack() : "";

                  warning(
                    false,
                    "Failed %s type: %s%s",
                    location,
                    error.message,
                    stack != null ? stack : ""
                  );
                }
              }
            }
          }
        }

        module.exports = checkPropTypes;

        /***/
      },

    /***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
      /*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret =
          "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";

        module.exports = ReactPropTypesSecret;

        /***/
      },

    /***/ "./node_modules/punycode/punycode.js":
      /*!*******************************************!*\
  !*** ./node_modules/punycode/punycode.js ***!
  \*******************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(module, global) {
          var __WEBPACK_AMD_DEFINE_RESULT__; /*! https://mths.be/punycode v1.4.1 by @mathias */
          (function(root) {
            /** Detect free variables */
            var freeExports =
              typeof exports == "object" &&
              exports &&
              !exports.nodeType &&
              exports;
            var freeModule =
              typeof module == "object" && module && !module.nodeType && module;
            var freeGlobal = typeof global == "object" && global;
            if (
              freeGlobal.global === freeGlobal ||
              freeGlobal.window === freeGlobal ||
              freeGlobal.self === freeGlobal
            ) {
              root = freeGlobal;
            }

            /**
             * The `punycode` object.
             * @name punycode
             * @type Object
             */
            var punycode,
              /** Highest positive signed 32-bit float value */
              maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1
              /** Bootstring parameters */
              base = 36,
              tMin = 1,
              tMax = 26,
              skew = 38,
              damp = 700,
              initialBias = 72,
              initialN = 128, // 0x80
              delimiter = "-", // '\x2D'
              /** Regular expressions */
              regexPunycode = /^xn--/,
              regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
              regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators
              /** Error messages */
              errors = {
                overflow: "Overflow: input needs wider integers to process",
                "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                "invalid-input": "Invalid input"
              },
              /** Convenience shortcuts */
              baseMinusTMin = base - tMin,
              floor = Math.floor,
              stringFromCharCode = String.fromCharCode,
              /** Temporary variable */
              key;

            /*--------------------------------------------------------------------------*/

            /**
             * A generic error utility function.
             * @private
             * @param {String} type The error type.
             * @returns {Error} Throws a `RangeError` with the applicable error message.
             */
            function error(type) {
              throw new RangeError(errors[type]);
            }

            /**
             * A generic `Array#map` utility function.
             * @private
             * @param {Array} array The array to iterate over.
             * @param {Function} callback The function that gets called for every array
             * item.
             * @returns {Array} A new array of values returned by the callback function.
             */
            function map(array, fn) {
              var length = array.length;
              var result = [];
              while (length--) {
                result[length] = fn(array[length]);
              }
              return result;
            }

            /**
             * A simple `Array#map`-like wrapper to work with domain name strings or email
             * addresses.
             * @private
             * @param {String} domain The domain name or email address.
             * @param {Function} callback The function that gets called for every
             * character.
             * @returns {Array} A new string of characters returned by the callback
             * function.
             */
            function mapDomain(string, fn) {
              var parts = string.split("@");
              var result = "";
              if (parts.length > 1) {
                // In email addresses, only the domain name should be punycoded. Leave
                // the local part (i.e. everything up to `@`) intact.
                result = parts[0] + "@";
                string = parts[1];
              }
              // Avoid `split(regex)` for IE8 compatibility. See #17.
              string = string.replace(regexSeparators, "\x2E");
              var labels = string.split(".");
              var encoded = map(labels, fn).join(".");
              return result + encoded;
            }

            /**
             * Creates an array containing the numeric code points of each Unicode
             * character in the string. While JavaScript uses UCS-2 internally,
             * this function will convert a pair of surrogate halves (each of which
             * UCS-2 exposes as separate characters) into a single code point,
             * matching UTF-16.
             * @see `punycode.ucs2.encode`
             * @see <https://mathiasbynens.be/notes/javascript-encoding>
             * @memberOf punycode.ucs2
             * @name decode
             * @param {String} string The Unicode input string (UCS-2).
             * @returns {Array} The new array of code points.
             */
            function ucs2decode(string) {
              var output = [],
                counter = 0,
                length = string.length,
                value,
                extra;
              while (counter < length) {
                value = string.charCodeAt(counter++);
                if (value >= 0xd800 && value <= 0xdbff && counter < length) {
                  // high surrogate, and there is a next character
                  extra = string.charCodeAt(counter++);
                  if ((extra & 0xfc00) == 0xdc00) {
                    // low surrogate
                    output.push(
                      ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000
                    );
                  } else {
                    // unmatched surrogate; only append this code unit, in case the next
                    // code unit is the high surrogate of a surrogate pair
                    output.push(value);
                    counter--;
                  }
                } else {
                  output.push(value);
                }
              }
              return output;
            }

            /**
             * Creates a string based on an array of numeric code points.
             * @see `punycode.ucs2.decode`
             * @memberOf punycode.ucs2
             * @name encode
             * @param {Array} codePoints The array of numeric code points.
             * @returns {String} The new Unicode string (UCS-2).
             */
            function ucs2encode(array) {
              return map(array, function(value) {
                var output = "";
                if (value > 0xffff) {
                  value -= 0x10000;
                  output += stringFromCharCode(
                    ((value >>> 10) & 0x3ff) | 0xd800
                  );
                  value = 0xdc00 | (value & 0x3ff);
                }
                output += stringFromCharCode(value);
                return output;
              }).join("");
            }

            /**
             * Converts a basic code point into a digit/integer.
             * @see `digitToBasic()`
             * @private
             * @param {Number} codePoint The basic numeric code point value.
             * @returns {Number} The numeric value of a basic code point (for use in
             * representing integers) in the range `0` to `base - 1`, or `base` if
             * the code point does not represent a value.
             */
            function basicToDigit(codePoint) {
              if (codePoint - 48 < 10) {
                return codePoint - 22;
              }
              if (codePoint - 65 < 26) {
                return codePoint - 65;
              }
              if (codePoint - 97 < 26) {
                return codePoint - 97;
              }
              return base;
            }

            /**
             * Converts a digit/integer into a basic code point.
             * @see `basicToDigit()`
             * @private
             * @param {Number} digit The numeric value of a basic code point.
             * @returns {Number} The basic code point whose value (when used for
             * representing integers) is `digit`, which needs to be in the range
             * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
             * used; else, the lowercase form is used. The behavior is undefined
             * if `flag` is non-zero and `digit` has no uppercase form.
             */
            function digitToBasic(digit, flag) {
              //  0..25 map to ASCII a..z or A..Z
              // 26..35 map to ASCII 0..9
              return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
            }

            /**
             * Bias adaptation function as per section 3.4 of RFC 3492.
             * https://tools.ietf.org/html/rfc3492#section-3.4
             * @private
             */
            function adapt(delta, numPoints, firstTime) {
              var k = 0;
              delta = firstTime ? floor(delta / damp) : delta >> 1;
              delta += floor(delta / numPoints);
              for (
                ;
                /* no initialization */ delta > (baseMinusTMin * tMax) >> 1;
                k += base
              ) {
                delta = floor(delta / baseMinusTMin);
              }
              return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
            }

            /**
             * Converts a Punycode string of ASCII-only symbols to a string of Unicode
             * symbols.
             * @memberOf punycode
             * @param {String} input The Punycode string of ASCII-only symbols.
             * @returns {String} The resulting string of Unicode symbols.
             */
            function decode(input) {
              // Don't use UCS-2
              var output = [],
                inputLength = input.length,
                out,
                i = 0,
                n = initialN,
                bias = initialBias,
                basic,
                j,
                index,
                oldi,
                w,
                k,
                digit,
                t,
                /** Cached calculation results */
                baseMinusT;

              // Handle the basic code points: let `basic` be the number of input code
              // points before the last delimiter, or `0` if there is none, then copy
              // the first basic code points to the output.

              basic = input.lastIndexOf(delimiter);
              if (basic < 0) {
                basic = 0;
              }

              for (j = 0; j < basic; ++j) {
                // if it's not a basic code point
                if (input.charCodeAt(j) >= 0x80) {
                  error("not-basic");
                }
                output.push(input.charCodeAt(j));
              }

              // Main decoding loop: start just after the last delimiter if any basic code
              // points were copied; start at the beginning otherwise.

              for (
                index = basic > 0 ? basic + 1 : 0;
                index < inputLength /* no final expression */;

              ) {
                // `index` is the index of the next character to be consumed.
                // Decode a generalized variable-length integer into `delta`,
                // which gets added to `i`. The overflow checking is easier
                // if we increase `i` as we go, then subtract off its starting
                // value at the end to obtain `delta`.
                for (
                  oldi = i, w = 1, k = base /* no condition */;
                  ;
                  k += base
                ) {
                  if (index >= inputLength) {
                    error("invalid-input");
                  }

                  digit = basicToDigit(input.charCodeAt(index++));

                  if (digit >= base || digit > floor((maxInt - i) / w)) {
                    error("overflow");
                  }

                  i += digit * w;
                  t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

                  if (digit < t) {
                    break;
                  }

                  baseMinusT = base - t;
                  if (w > floor(maxInt / baseMinusT)) {
                    error("overflow");
                  }

                  w *= baseMinusT;
                }

                out = output.length + 1;
                bias = adapt(i - oldi, out, oldi == 0);

                // `i` was supposed to wrap around from `out` to `0`,
                // incrementing `n` each time, so we'll fix that now:
                if (floor(i / out) > maxInt - n) {
                  error("overflow");
                }

                n += floor(i / out);
                i %= out;

                // Insert `n` at position `i` of the output
                output.splice(i++, 0, n);
              }

              return ucs2encode(output);
            }

            /**
             * Converts a string of Unicode symbols (e.g. a domain name label) to a
             * Punycode string of ASCII-only symbols.
             * @memberOf punycode
             * @param {String} input The string of Unicode symbols.
             * @returns {String} The resulting Punycode string of ASCII-only symbols.
             */
            function encode(input) {
              var n,
                delta,
                handledCPCount,
                basicLength,
                bias,
                j,
                m,
                q,
                k,
                t,
                currentValue,
                output = [],
                /** `inputLength` will hold the number of code points in `input`. */
                inputLength,
                /** Cached calculation results */
                handledCPCountPlusOne,
                baseMinusT,
                qMinusT;

              // Convert the input in UCS-2 to Unicode
              input = ucs2decode(input);

              // Cache the length
              inputLength = input.length;

              // Initialize the state
              n = initialN;
              delta = 0;
              bias = initialBias;

              // Handle the basic code points
              for (j = 0; j < inputLength; ++j) {
                currentValue = input[j];
                if (currentValue < 0x80) {
                  output.push(stringFromCharCode(currentValue));
                }
              }

              handledCPCount = basicLength = output.length;

              // `handledCPCount` is the number of code points that have been handled;
              // `basicLength` is the number of basic code points.

              // Finish the basic string - if it is not empty - with a delimiter
              if (basicLength) {
                output.push(delimiter);
              }

              // Main encoding loop:
              while (handledCPCount < inputLength) {
                // All non-basic code points < n have been handled already. Find the next
                // larger one:
                for (m = maxInt, j = 0; j < inputLength; ++j) {
                  currentValue = input[j];
                  if (currentValue >= n && currentValue < m) {
                    m = currentValue;
                  }
                }

                // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
                // but guard against overflow
                handledCPCountPlusOne = handledCPCount + 1;
                if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                  error("overflow");
                }

                delta += (m - n) * handledCPCountPlusOne;
                n = m;

                for (j = 0; j < inputLength; ++j) {
                  currentValue = input[j];

                  if (currentValue < n && ++delta > maxInt) {
                    error("overflow");
                  }

                  if (currentValue == n) {
                    // Represent delta as a generalized variable-length integer
                    for (q = delta, k = base /* no condition */; ; k += base) {
                      t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                      if (q < t) {
                        break;
                      }
                      qMinusT = q - t;
                      baseMinusT = base - t;
                      output.push(
                        stringFromCharCode(
                          digitToBasic(t + qMinusT % baseMinusT, 0)
                        )
                      );
                      q = floor(qMinusT / baseMinusT);
                    }

                    output.push(stringFromCharCode(digitToBasic(q, 0)));
                    bias = adapt(
                      delta,
                      handledCPCountPlusOne,
                      handledCPCount == basicLength
                    );
                    delta = 0;
                    ++handledCPCount;
                  }
                }

                ++delta;
                ++n;
              }
              return output.join("");
            }

            /**
             * Converts a Punycode string representing a domain name or an email address
             * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
             * it doesn't matter if you call it on a string that has already been
             * converted to Unicode.
             * @memberOf punycode
             * @param {String} input The Punycoded domain name or email address to
             * convert to Unicode.
             * @returns {String} The Unicode representation of the given Punycode
             * string.
             */
            function toUnicode(input) {
              return mapDomain(input, function(string) {
                return regexPunycode.test(string)
                  ? decode(string.slice(4).toLowerCase())
                  : string;
              });
            }

            /**
             * Converts a Unicode string representing a domain name or an email address to
             * Punycode. Only the non-ASCII parts of the domain name will be converted,
             * i.e. it doesn't matter if you call it with a domain that's already in
             * ASCII.
             * @memberOf punycode
             * @param {String} input The domain name or email address to convert, as a
             * Unicode string.
             * @returns {String} The Punycode representation of the given domain name or
             * email address.
             */
            function toASCII(input) {
              return mapDomain(input, function(string) {
                return regexNonASCII.test(string)
                  ? "xn--" + encode(string)
                  : string;
              });
            }

            /*--------------------------------------------------------------------------*/

            /** Define the public API */
            punycode = {
              /**
               * A string representing the current Punycode.js version number.
               * @memberOf punycode
               * @type String
               */
              version: "1.4.1",
              /**
               * An object of methods to convert from JavaScript's internal character
               * representation (UCS-2) to Unicode code points, and back.
               * @see <https://mathiasbynens.be/notes/javascript-encoding>
               * @memberOf punycode
               * @type Object
               */
              ucs2: {
                decode: ucs2decode,
                encode: ucs2encode
              },
              decode: decode,
              encode: encode,
              toASCII: toASCII,
              toUnicode: toUnicode
            };

            /** Expose `punycode` */
            // Some AMD build optimizers, like r.js, check for specific condition patterns
            // like the following:
            if (true) {
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return punycode;
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } else if (freeExports && freeModule) {
              if (module.exports == freeExports) {
                // in Node.js, io.js, or RingoJS v0.8.0+
                freeModule.exports = punycode;
              } else {
                // in Narwhal or RingoJS v0.7.0-
                for (key in punycode) {
                  punycode.hasOwnProperty(key) &&
                    (freeExports[key] = punycode[key]);
                }
              }
            } else {
              // in Rhino or a web browser
              root.punycode = punycode;
            }
          })(this);

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js"
          )(module),
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/querystring-es3/decode.js":
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // If obj.hasOwnProperty has been overridden, then calling
        // obj.hasOwnProperty(prop) will break.
        // See: https://github.com/joyent/node/issues/1707
        function hasOwnProperty(obj, prop) {
          return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        module.exports = function(qs, sep, eq, options) {
          sep = sep || "&";
          eq = eq || "=";
          var obj = {};

          if (typeof qs !== "string" || qs.length === 0) {
            return obj;
          }

          var regexp = /\+/g;
          qs = qs.split(sep);

          var maxKeys = 1000;
          if (options && typeof options.maxKeys === "number") {
            maxKeys = options.maxKeys;
          }

          var len = qs.length;
          // maxKeys <= 0 means that we should not limit keys count
          if (maxKeys > 0 && len > maxKeys) {
            len = maxKeys;
          }

          for (var i = 0; i < len; ++i) {
            var x = qs[i].replace(regexp, "%20"),
              idx = x.indexOf(eq),
              kstr,
              vstr,
              k,
              v;

            if (idx >= 0) {
              kstr = x.substr(0, idx);
              vstr = x.substr(idx + 1);
            } else {
              kstr = x;
              vstr = "";
            }

            k = decodeURIComponent(kstr);
            v = decodeURIComponent(vstr);

            if (!hasOwnProperty(obj, k)) {
              obj[k] = v;
            } else if (isArray(obj[k])) {
              obj[k].push(v);
            } else {
              obj[k] = [obj[k], v];
            }
          }

          return obj;
        };

        var isArray =
          Array.isArray ||
          function(xs) {
            return Object.prototype.toString.call(xs) === "[object Array]";
          };

        /***/
      },

    /***/ "./node_modules/querystring-es3/encode.js":
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var stringifyPrimitive = function(v) {
          switch (typeof v) {
            case "string":
              return v;

            case "boolean":
              return v ? "true" : "false";

            case "number":
              return isFinite(v) ? v : "";

            default:
              return "";
          }
        };

        module.exports = function(obj, sep, eq, name) {
          sep = sep || "&";
          eq = eq || "=";
          if (obj === null) {
            obj = undefined;
          }

          if (typeof obj === "object") {
            return map(objectKeys(obj), function(k) {
              var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
              if (isArray(obj[k])) {
                return map(obj[k], function(v) {
                  return ks + encodeURIComponent(stringifyPrimitive(v));
                }).join(sep);
              } else {
                return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
              }
            }).join(sep);
          }

          if (!name) return "";
          return (
            encodeURIComponent(stringifyPrimitive(name)) +
            eq +
            encodeURIComponent(stringifyPrimitive(obj))
          );
        };

        var isArray =
          Array.isArray ||
          function(xs) {
            return Object.prototype.toString.call(xs) === "[object Array]";
          };

        function map(xs, f) {
          if (xs.map) return xs.map(f);
          var res = [];
          for (var i = 0; i < xs.length; i++) {
            res.push(f(xs[i], i));
          }
          return res;
        }

        var objectKeys =
          Object.keys ||
          function(obj) {
            var res = [];
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
            }
            return res;
          };

        /***/
      },

    /***/ "./node_modules/querystring-es3/index.js":
      /*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.decode = exports.parse = __webpack_require__(
          /*! ./decode */ "./node_modules/querystring-es3/decode.js"
        );
        exports.encode = exports.stringify = __webpack_require__(
          /*! ./encode */ "./node_modules/querystring-es3/encode.js"
        );

        /***/
      },

    /***/ "./node_modules/react-dev-utils/formatWebpackMessages.js":
      /*!***************************************************************!*\
  !*** ./node_modules/react-dev-utils/formatWebpackMessages.js ***!
  \***************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // WARNING: this code is untranspiled and is used in browser too.
        // Please make sure any changes are in ES5 or contribute a Babel compile step.

        // Some custom utilities to prettify Webpack output.
        // This is quite hacky and hopefully won't be needed when Webpack fixes this.
        // https://github.com/webpack/webpack/issues/2878

        var chalk = __webpack_require__(
          /*! chalk */ "./node_modules/react-dev-utils/node_modules/chalk/index.js"
        );
        var friendlySyntaxErrorLabel = "Syntax error:";

        function isLikelyASyntaxError(message) {
          return message.indexOf(friendlySyntaxErrorLabel) !== -1;
        }

        // Cleans up webpack error messages.
        // eslint-disable-next-line no-unused-vars
        function formatMessage(message, isError) {
          var lines = message.split("\n");

          if (lines.length > 2 && lines[1] === "") {
            // Remove extra newline.
            lines.splice(1, 1);
          }

          // Remove webpack-specific loader notation from filename.
          // Before:
          // ./~/css-loader!./~/postcss-loader!./src/App.css
          // After:
          // ./src/App.css
          if (lines[0].lastIndexOf("!") !== -1) {
            lines[0] = lines[0].substr(lines[0].lastIndexOf("!") + 1);
          }

          lines = lines.filter(function(line) {
            // Webpack adds a list of entry points to warning messages:
            //  @ ./src/index.js
            //  @ multi react-scripts/~/react-dev-utils/webpackHotDevClient.js ...
            // It is misleading (and unrelated to the warnings) so we clean it up.
            // It is only useful for syntax errors but we have beautiful frames for them.
            return line.indexOf(" @ ") !== 0;
          });

          // line #0 is filename
          // line #1 is the main error message
          if (!lines[0] || !lines[1]) {
            return lines.join("\n");
          }

          // Cleans up verbose "module not found" messages for files and packages.
          if (lines[1].indexOf("Module not found: ") === 0) {
            lines = [
              lines[0],
              // Clean up message because "Module not found: " is descriptive enough.
              lines[1]
                .replace("Cannot resolve 'file' or 'directory' ", "")
                .replace("Cannot resolve module ", "")
                .replace("Error: ", "")
                .replace("[CaseSensitivePathsPlugin] ", "")
            ];
          }

          // Cleans up syntax error messages.
          if (lines[1].indexOf("Module build failed: ") === 0) {
            lines[1] = lines[1].replace(
              "Module build failed: SyntaxError:",
              friendlySyntaxErrorLabel
            );
          }

          // Clean up export errors.
          // TODO: we should really send a PR to Webpack for this.
          var exportError = /\s*(.+?)\s*(")?export '(.+?)' was not found in '(.+?)'/;
          if (lines[1].match(exportError)) {
            lines[1] = lines[1].replace(
              exportError,
              "$1 '$4' does not contain an export named '$3'."
            );
          }

          lines[0] = chalk.inverse(lines[0]);

          // Reassemble the message.
          message = lines.join("\n");
          // Internal stacks are generally useless so we strip them... with the
          // exception of stacks containing `webpack:` because they're normally
          // from user code generated by WebPack. For more information see
          // https://github.com/facebookincubator/create-react-app/pull/1050
          message = message.replace(
            /^\s*at\s((?!webpack:).)*:\d+:\d+[\s)]*(\n|$)/gm,
            ""
          ); // at ... ...:x:y

          return message.trim();
        }

        function formatWebpackMessages(json) {
          var formattedErrors = json.errors.map(function(message) {
            return formatMessage(message, true);
          });
          var formattedWarnings = json.warnings.map(function(message) {
            return formatMessage(message, false);
          });
          var result = {
            errors: formattedErrors,
            warnings: formattedWarnings
          };
          if (result.errors.some(isLikelyASyntaxError)) {
            // If there are any syntax errors, show just them.
            // This prevents a confusing ESLint parsing error
            // preceding a much more useful Babel syntax error.
            result.errors = result.errors.filter(isLikelyASyntaxError);
          }
          return result;
        }

        module.exports = formatWebpackMessages;

        /***/
      },

    /***/ "./node_modules/react-dev-utils/launchEditorEndpoint.js":
      /*!**************************************************************!*\
  !*** ./node_modules/react-dev-utils/launchEditorEndpoint.js ***!
  \**************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // TODO: we might want to make this injectable to support DEV-time non-root URLs.
        module.exports = "/__open-stack-frame-in-editor";

        /***/
      },

    /***/ "./node_modules/react-dev-utils/node_modules/chalk/index.js":
      /*!******************************************************************!*\
  !*** ./node_modules/react-dev-utils/node_modules/chalk/index.js ***!
  \******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(process) {
          var escapeStringRegexp = __webpack_require__(
            /*! escape-string-regexp */ "./node_modules/escape-string-regexp/index.js"
          );
          var ansiStyles = __webpack_require__(
            /*! ansi-styles */ "./node_modules/ansi-styles/index.js"
          );
          var stripAnsi = __webpack_require__(
            /*! strip-ansi */ "./node_modules/react-dev-utils/node_modules/strip-ansi/index.js"
          );
          var hasAnsi = __webpack_require__(
            /*! has-ansi */ "./node_modules/has-ansi/index.js"
          );
          var supportsColor = __webpack_require__(
            /*! supports-color */ "./node_modules/supports-color/index.js"
          );
          var defineProps = Object.defineProperties;
          var isSimpleWindowsTerm =
            process.platform === "win32" &&
            !/^xterm/i.test(
              Object({ NODE_ENV: "development", PUBLIC_URL: "" }).TERM
            );

          function Chalk(options) {
            // detect mode if not set manually
            this.enabled =
              !options || options.enabled === undefined
                ? supportsColor
                : options.enabled;
          }

          // use bright blue on Windows as the normal blue color is illegible
          if (isSimpleWindowsTerm) {
            ansiStyles.blue.open = "\u001b[94m";
          }

          var styles = (function() {
            var ret = {};

            Object.keys(ansiStyles).forEach(function(key) {
              ansiStyles[key].closeRe = new RegExp(
                escapeStringRegexp(ansiStyles[key].close),
                "g"
              );

              ret[key] = {
                get: function() {
                  return build.call(this, this._styles.concat(key));
                }
              };
            });

            return ret;
          })();

          var proto = defineProps(function chalk() {}, styles);

          function build(_styles) {
            var builder = function() {
              return applyStyle.apply(builder, arguments);
            };

            builder._styles = _styles;
            builder.enabled = this.enabled;
            // __proto__ is used because we must return a function, but there is
            // no way to create a function with a different prototype.
            /* eslint-disable no-proto */
            builder.__proto__ = proto;

            return builder;
          }

          function applyStyle() {
            // support varags, but simply cast to string in case there's only one arg
            var args = arguments;
            var argsLen = args.length;
            var str = argsLen !== 0 && String(arguments[0]);

            if (argsLen > 1) {
              // don't slice `arguments`, it prevents v8 optimizations
              for (var a = 1; a < argsLen; a++) {
                str += " " + args[a];
              }
            }

            if (!this.enabled || !str) {
              return str;
            }

            var nestedStyles = this._styles;
            var i = nestedStyles.length;

            // Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
            // see https://github.com/chalk/chalk/issues/58
            // If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
            var originalDim = ansiStyles.dim.open;
            if (
              isSimpleWindowsTerm &&
              (nestedStyles.indexOf("gray") !== -1 ||
                nestedStyles.indexOf("grey") !== -1)
            ) {
              ansiStyles.dim.open = "";
            }

            while (i--) {
              var code = ansiStyles[nestedStyles[i]];

              // Replace any instances already present with a re-opening code
              // otherwise only the part of the string until said closing code
              // will be colored, and the rest will simply be 'plain'.
              str =
                code.open + str.replace(code.closeRe, code.open) + code.close;
            }

            // Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.
            ansiStyles.dim.open = originalDim;

            return str;
          }

          function init() {
            var ret = {};

            Object.keys(styles).forEach(function(name) {
              ret[name] = {
                get: function() {
                  return build.call(this, [name]);
                }
              };
            });

            return ret;
          }

          defineProps(Chalk.prototype, init());

          module.exports = new Chalk();
          module.exports.styles = ansiStyles;
          module.exports.hasColor = hasAnsi;
          module.exports.stripColor = stripAnsi;
          module.exports.supportsColor = supportsColor;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../process/browser.js */ "./node_modules/process/browser.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/react-dev-utils/node_modules/strip-ansi/index.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/react-dev-utils/node_modules/strip-ansi/index.js ***!
  \***********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var ansiRegex = __webpack_require__(
          /*! ansi-regex */ "./node_modules/ansi-regex/index.js"
        )();

        module.exports = function(str) {
          return typeof str === "string" ? str.replace(ansiRegex, "") : str;
        };

        /***/
      },

    /***/ "./node_modules/react-dev-utils/webpackHotDevClient.js":
      /*!*************************************************************!*\
  !*** ./node_modules/react-dev-utils/webpackHotDevClient.js ***!
  \*************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // This alternative WebpackDevServer combines the functionality of:
        // https://github.com/webpack/webpack-dev-server/blob/webpack-1/client/index.js
        // https://github.com/webpack/webpack/blob/webpack-1/hot/dev-server.js

        // It only supports their simplest configuration (hot updates on same server).
        // It makes some opinionated choices on top, like adding a syntax error overlay
        // that looks similar to our console output. The error overlay is inspired by:
        // https://github.com/glenjamin/webpack-hot-middleware

        var SockJS = __webpack_require__(
          /*! sockjs-client */ "./node_modules/sockjs-client/lib/entry.js"
        );
        var stripAnsi = __webpack_require__(
          /*! strip-ansi */ "./node_modules/react-dev-utils/node_modules/strip-ansi/index.js"
        );
        var url = __webpack_require__(/*! url */ "./node_modules/url/url.js");
        var launchEditorEndpoint = __webpack_require__(
          /*! ./launchEditorEndpoint */ "./node_modules/react-dev-utils/launchEditorEndpoint.js"
        );
        var formatWebpackMessages = __webpack_require__(
          /*! ./formatWebpackMessages */ "./node_modules/react-dev-utils/formatWebpackMessages.js"
        );
        var ErrorOverlay = __webpack_require__(
          /*! react-error-overlay */ "./node_modules/react-error-overlay/lib/index.js"
        );

        ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {
          // Keep this sync with errorOverlayMiddleware.js
          fetch(
            launchEditorEndpoint +
              "?fileName=" +
              window.encodeURIComponent(errorLocation.fileName) +
              "&lineNumber=" +
              window.encodeURIComponent(errorLocation.lineNumber || 1)
          );
        });

        // We need to keep track of if there has been a runtime error.
        // Essentially, we cannot guarantee application state was not corrupted by the
        // runtime error. To prevent confusing behavior, we forcibly reload the entire
        // application. This is handled below when we are notified of a compile (code
        // change).
        // See https://github.com/facebookincubator/create-react-app/issues/3096
        var hadRuntimeError = false;
        ErrorOverlay.startReportingRuntimeErrors({
          onError: function() {
            hadRuntimeError = true;
          },
          filename: "/static/js/bundle.js"
        });

        if (module.hot && typeof module.hot.dispose === "function") {
          module.hot.dispose(function() {
            // TODO: why do we need this?
            ErrorOverlay.stopReportingRuntimeErrors();
          });
        }

        // Connect to WebpackDevServer via a socket.
        var connection = new SockJS(
          url.format({
            protocol: window.location.protocol,
            hostname: window.location.hostname,
            port: window.location.port,
            // Hardcoded in WebpackDevServer
            pathname: "/sockjs-node"
          })
        );

        // Unlike WebpackDevServer client, we won't try to reconnect
        // to avoid spamming the console. Disconnect usually happens
        // when developer stops the server.
        connection.onclose = function() {
          if (
            typeof console !== "undefined" &&
            typeof console.info === "function"
          ) {
            console.info(
              "The development server has disconnected.\nRefresh the page if necessary."
            );
          }
        };

        // Remember some state related to hot module replacement.
        var isFirstCompilation = true;
        var mostRecentCompilationHash = null;
        var hasCompileErrors = false;

        function clearOutdatedErrors() {
          // Clean up outdated compile errors, if any.
          if (
            typeof console !== "undefined" &&
            typeof console.clear === "function"
          ) {
            if (hasCompileErrors) {
              console.clear();
            }
          }
        }

        // Successful compilation.
        function handleSuccess() {
          clearOutdatedErrors();

          var isHotUpdate = !isFirstCompilation;
          isFirstCompilation = false;
          hasCompileErrors = false;

          // Attempt to apply hot updates or reload.
          if (isHotUpdate) {
            tryApplyUpdates(function onHotUpdateSuccess() {
              // Only dismiss it when we're sure it's a hot update.
              // Otherwise it would flicker right before the reload.
              ErrorOverlay.dismissBuildError();
            });
          }
        }

        // Compilation with warnings (e.g. ESLint).
        function handleWarnings(warnings) {
          clearOutdatedErrors();

          var isHotUpdate = !isFirstCompilation;
          isFirstCompilation = false;
          hasCompileErrors = false;

          function printWarnings() {
            // Print warnings to the console.
            var formatted = formatWebpackMessages({
              warnings: warnings,
              errors: []
            });

            if (
              typeof console !== "undefined" &&
              typeof console.warn === "function"
            ) {
              for (var i = 0; i < formatted.warnings.length; i++) {
                if (i === 5) {
                  console.warn(
                    "There were more warnings in other files.\n" +
                      "You can find a complete log in the terminal."
                  );
                  break;
                }
                console.warn(stripAnsi(formatted.warnings[i]));
              }
            }
          }

          // Attempt to apply hot updates or reload.
          if (isHotUpdate) {
            tryApplyUpdates(function onSuccessfulHotUpdate() {
              // Only print warnings if we aren't refreshing the page.
              // Otherwise they'll disappear right away anyway.
              printWarnings();
              // Only dismiss it when we're sure it's a hot update.
              // Otherwise it would flicker right before the reload.
              ErrorOverlay.dismissBuildError();
            });
          } else {
            // Print initial warnings immediately.
            printWarnings();
          }
        }

        // Compilation with errors (e.g. syntax error or missing modules).
        function handleErrors(errors) {
          clearOutdatedErrors();

          isFirstCompilation = false;
          hasCompileErrors = true;

          // "Massage" webpack messages.
          var formatted = formatWebpackMessages({
            errors: errors,
            warnings: []
          });

          // Only show the first error.
          ErrorOverlay.reportBuildError(formatted.errors[0]);

          // Also log them to the console.
          if (
            typeof console !== "undefined" &&
            typeof console.error === "function"
          ) {
            for (var i = 0; i < formatted.errors.length; i++) {
              console.error(stripAnsi(formatted.errors[i]));
            }
          }

          // Do not attempt to reload now.
          // We will reload on next success instead.
        }

        // There is a newer version of the code available.
        function handleAvailableHash(hash) {
          // Update last known compilation hash.
          mostRecentCompilationHash = hash;
        }

        // Handle messages from the server.
        connection.onmessage = function(e) {
          var message = JSON.parse(e.data);
          switch (message.type) {
            case "hash":
              handleAvailableHash(message.data);
              break;
            case "still-ok":
            case "ok":
              handleSuccess();
              break;
            case "content-changed":
              // Triggered when a file from `contentBase` changed.
              window.location.reload();
              break;
            case "warnings":
              handleWarnings(message.data);
              break;
            case "errors":
              handleErrors(message.data);
              break;
            default:
            // Do nothing.
          }
        };

        // Is there a newer version of this code available?
        function isUpdateAvailable() {
          /* globals __webpack_hash__ */
          // __webpack_hash__ is the hash of the current compilation.
          // It's a global variable injected by Webpack.
          return mostRecentCompilationHash !== __webpack_require__.h();
        }

        // Webpack disallows updates in other states.
        function canApplyUpdates() {
          return module.hot.status() === "idle";
        }

        // Attempt to update code on the fly, fall back to a hard reload.
        function tryApplyUpdates(onHotUpdateSuccess) {
          if (false) {
            // HotModuleReplacementPlugin is not in Webpack configuration.
            window.location.reload();
            return;
          }

          if (!isUpdateAvailable() || !canApplyUpdates()) {
            return;
          }

          function handleApplyUpdates(err, updatedModules) {
            if (err || !updatedModules || hadRuntimeError) {
              window.location.reload();
              return;
            }

            if (typeof onHotUpdateSuccess === "function") {
              // Maybe we want to do something.
              onHotUpdateSuccess();
            }

            if (isUpdateAvailable()) {
              // While we were updating, there was a new update! Do it again.
              tryApplyUpdates();
            }
          }

          // https://webpack.github.io/docs/hot-module-replacement.html#check
          var result = module.hot.check(
            /* autoApply */ true,
            handleApplyUpdates
          );

          // // Webpack 2 returns a Promise instead of invoking a callback
          if (result && result.then) {
            result.then(
              function(updatedModules) {
                handleApplyUpdates(null, updatedModules);
              },
              function(err) {
                handleApplyUpdates(err, null);
              }
            );
          }
        }

        /***/
      },

    /***/ "./node_modules/react-dom/cjs/react-dom.development.js":
      /*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.2.0
         * react-dom.development.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          (function() {
            "use strict";

            var React = __webpack_require__(
              /*! react */ "./node_modules/react/index.js"
            );
            var invariant = __webpack_require__(
              /*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js"
            );
            var warning = __webpack_require__(
              /*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js"
            );
            var ExecutionEnvironment = __webpack_require__(
              /*! fbjs/lib/ExecutionEnvironment */ "./node_modules/fbjs/lib/ExecutionEnvironment.js"
            );
            var _assign = __webpack_require__(
              /*! object-assign */ "./node_modules/object-assign/index.js"
            );
            var emptyFunction = __webpack_require__(
              /*! fbjs/lib/emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js"
            );
            var EventListener = __webpack_require__(
              /*! fbjs/lib/EventListener */ "./node_modules/fbjs/lib/EventListener.js"
            );
            var getActiveElement = __webpack_require__(
              /*! fbjs/lib/getActiveElement */ "./node_modules/fbjs/lib/getActiveElement.js"
            );
            var shallowEqual = __webpack_require__(
              /*! fbjs/lib/shallowEqual */ "./node_modules/fbjs/lib/shallowEqual.js"
            );
            var containsNode = __webpack_require__(
              /*! fbjs/lib/containsNode */ "./node_modules/fbjs/lib/containsNode.js"
            );
            var focusNode = __webpack_require__(
              /*! fbjs/lib/focusNode */ "./node_modules/fbjs/lib/focusNode.js"
            );
            var emptyObject = __webpack_require__(
              /*! fbjs/lib/emptyObject */ "./node_modules/fbjs/lib/emptyObject.js"
            );
            var checkPropTypes = __webpack_require__(
              /*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js"
            );
            var hyphenateStyleName = __webpack_require__(
              /*! fbjs/lib/hyphenateStyleName */ "./node_modules/fbjs/lib/hyphenateStyleName.js"
            );
            var camelizeStyleName = __webpack_require__(
              /*! fbjs/lib/camelizeStyleName */ "./node_modules/fbjs/lib/camelizeStyleName.js"
            );

            /**
             * WARNING: DO NOT manually require this module.
             * This is a replacement for `invariant(...)` used by the error code system
             * and will _only_ be required by the corresponding babel pass.
             * It always throws.
             */

            !React
              ? invariant(
                  false,
                  "ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM."
                )
              : void 0;

            // These attributes should be all lowercase to allow for
            // case insensitive checks
            var RESERVED_PROPS = {
              children: true,
              dangerouslySetInnerHTML: true,
              defaultValue: true,
              defaultChecked: true,
              innerHTML: true,
              suppressContentEditableWarning: true,
              suppressHydrationWarning: true,
              style: true
            };

            function checkMask(value, bitmask) {
              return (value & bitmask) === bitmask;
            }

            var DOMPropertyInjection = {
              /**
               * Mapping from normalized, camelcased property names to a configuration that
               * specifies how the associated DOM property should be accessed or rendered.
               */
              MUST_USE_PROPERTY: 0x1,
              HAS_BOOLEAN_VALUE: 0x4,
              HAS_NUMERIC_VALUE: 0x8,
              HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
              HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
              HAS_STRING_BOOLEAN_VALUE: 0x40,

              /**
               * Inject some specialized knowledge about the DOM. This takes a config object
               * with the following properties:
               *
               * Properties: object mapping DOM property name to one of the
               * DOMPropertyInjection constants or null. If your attribute isn't in here,
               * it won't get written to the DOM.
               *
               * DOMAttributeNames: object mapping React attribute name to the DOM
               * attribute name. Attribute names not specified use the **lowercase**
               * normalized name.
               *
               * DOMAttributeNamespaces: object mapping React attribute name to the DOM
               * attribute namespace URL. (Attribute names not specified use no namespace.)
               *
               * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
               * Property names not specified use the normalized name.
               *
               * DOMMutationMethods: Properties that require special mutation methods. If
               * `value` is undefined, the mutation method should unset the property.
               *
               * @param {object} domPropertyConfig the config as described above.
               */
              injectDOMPropertyConfig: function(domPropertyConfig) {
                var Injection = DOMPropertyInjection;
                var Properties = domPropertyConfig.Properties || {};
                var DOMAttributeNamespaces =
                  domPropertyConfig.DOMAttributeNamespaces || {};
                var DOMAttributeNames =
                  domPropertyConfig.DOMAttributeNames || {};
                var DOMMutationMethods =
                  domPropertyConfig.DOMMutationMethods || {};

                for (var propName in Properties) {
                  !!properties.hasOwnProperty(propName)
                    ? invariant(
                        false,
                        "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",
                        propName
                      )
                    : void 0;

                  var lowerCased = propName.toLowerCase();
                  var propConfig = Properties[propName];

                  var propertyInfo = {
                    attributeName: lowerCased,
                    attributeNamespace: null,
                    propertyName: propName,
                    mutationMethod: null,

                    mustUseProperty: checkMask(
                      propConfig,
                      Injection.MUST_USE_PROPERTY
                    ),
                    hasBooleanValue: checkMask(
                      propConfig,
                      Injection.HAS_BOOLEAN_VALUE
                    ),
                    hasNumericValue: checkMask(
                      propConfig,
                      Injection.HAS_NUMERIC_VALUE
                    ),
                    hasPositiveNumericValue: checkMask(
                      propConfig,
                      Injection.HAS_POSITIVE_NUMERIC_VALUE
                    ),
                    hasOverloadedBooleanValue: checkMask(
                      propConfig,
                      Injection.HAS_OVERLOADED_BOOLEAN_VALUE
                    ),
                    hasStringBooleanValue: checkMask(
                      propConfig,
                      Injection.HAS_STRING_BOOLEAN_VALUE
                    )
                  };
                  !(
                    propertyInfo.hasBooleanValue +
                      propertyInfo.hasNumericValue +
                      propertyInfo.hasOverloadedBooleanValue <=
                    1
                  )
                    ? invariant(
                        false,
                        "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s",
                        propName
                      )
                    : void 0;

                  if (DOMAttributeNames.hasOwnProperty(propName)) {
                    var attributeName = DOMAttributeNames[propName];

                    propertyInfo.attributeName = attributeName;
                  }

                  if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
                    propertyInfo.attributeNamespace =
                      DOMAttributeNamespaces[propName];
                  }

                  if (DOMMutationMethods.hasOwnProperty(propName)) {
                    propertyInfo.mutationMethod = DOMMutationMethods[propName];
                  }

                  // Downcase references to whitelist properties to check for membership
                  // without case-sensitivity. This allows the whitelist to pick up
                  // `allowfullscreen`, which should be written using the property configuration
                  // for `allowFullscreen`
                  properties[propName] = propertyInfo;
                }
              }
            };

            /* eslint-disable max-len */
            var ATTRIBUTE_NAME_START_CHAR =
              ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
            /* eslint-enable max-len */
            var ATTRIBUTE_NAME_CHAR =
              ATTRIBUTE_NAME_START_CHAR +
              "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";

            var ROOT_ATTRIBUTE_NAME = "data-reactroot";

            /**
             * Map from property "standard name" to an object with info about how to set
             * the property in the DOM. Each object contains:
             *
             * attributeName:
             *   Used when rendering markup or with `*Attribute()`.
             * attributeNamespace
             * propertyName:
             *   Used on DOM node instances. (This includes properties that mutate due to
             *   external factors.)
             * mutationMethod:
             *   If non-null, used instead of the property or `setAttribute()` after
             *   initial render.
             * mustUseProperty:
             *   Whether the property must be accessed and mutated as an object property.
             * hasBooleanValue:
             *   Whether the property should be removed when set to a falsey value.
             * hasNumericValue:
             *   Whether the property must be numeric or parse as a numeric and should be
             *   removed when set to a falsey value.
             * hasPositiveNumericValue:
             *   Whether the property must be positive numeric or parse as a positive
             *   numeric and should be removed when set to a falsey value.
             * hasOverloadedBooleanValue:
             *   Whether the property can be used as a flag as well as with a value.
             *   Removed when strictly equal to false; present without a value when
             *   strictly equal to true; present with a value otherwise.
             */
            var properties = {};

            /**
             * Checks whether a property name is a writeable attribute.
             * @method
             */
            function shouldSetAttribute(name, value) {
              if (isReservedProp(name)) {
                return false;
              }
              if (
                name.length > 2 &&
                (name[0] === "o" || name[0] === "O") &&
                (name[1] === "n" || name[1] === "N")
              ) {
                return false;
              }
              if (value === null) {
                return true;
              }
              switch (typeof value) {
                case "boolean":
                  return shouldAttributeAcceptBooleanValue(name);
                case "undefined":
                case "number":
                case "string":
                case "object":
                  return true;
                default:
                  // function, symbol
                  return false;
              }
            }

            function getPropertyInfo(name) {
              return properties.hasOwnProperty(name) ? properties[name] : null;
            }

            function shouldAttributeAcceptBooleanValue(name) {
              if (isReservedProp(name)) {
                return true;
              }
              var propertyInfo = getPropertyInfo(name);
              if (propertyInfo) {
                return (
                  propertyInfo.hasBooleanValue ||
                  propertyInfo.hasStringBooleanValue ||
                  propertyInfo.hasOverloadedBooleanValue
                );
              }
              var prefix = name.toLowerCase().slice(0, 5);
              return prefix === "data-" || prefix === "aria-";
            }

            /**
             * Checks to see if a property name is within the list of properties
             * reserved for internal React operations. These properties should
             * not be set on an HTML element.
             *
             * @private
             * @param {string} name
             * @return {boolean} If the name is within reserved props
             */
            function isReservedProp(name) {
              return RESERVED_PROPS.hasOwnProperty(name);
            }

            var injection = DOMPropertyInjection;

            var MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;
            var HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;
            var HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;
            var HAS_POSITIVE_NUMERIC_VALUE =
              injection.HAS_POSITIVE_NUMERIC_VALUE;
            var HAS_OVERLOADED_BOOLEAN_VALUE =
              injection.HAS_OVERLOADED_BOOLEAN_VALUE;
            var HAS_STRING_BOOLEAN_VALUE = injection.HAS_STRING_BOOLEAN_VALUE;

            var HTMLDOMPropertyConfig = {
              // When adding attributes to this list, be sure to also add them to
              // the `possibleStandardNames` module to ensure casing and incorrect
              // name warnings.
              Properties: {
                allowFullScreen: HAS_BOOLEAN_VALUE,
                // specifies target context for links with `preload` type
                async: HAS_BOOLEAN_VALUE,
                // Note: there is a special case that prevents it from being written to the DOM
                // on the client side because the browsers are inconsistent. Instead we call focus().
                autoFocus: HAS_BOOLEAN_VALUE,
                autoPlay: HAS_BOOLEAN_VALUE,
                capture: HAS_OVERLOADED_BOOLEAN_VALUE,
                checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                cols: HAS_POSITIVE_NUMERIC_VALUE,
                contentEditable: HAS_STRING_BOOLEAN_VALUE,
                controls: HAS_BOOLEAN_VALUE,
                default: HAS_BOOLEAN_VALUE,
                defer: HAS_BOOLEAN_VALUE,
                disabled: HAS_BOOLEAN_VALUE,
                download: HAS_OVERLOADED_BOOLEAN_VALUE,
                draggable: HAS_STRING_BOOLEAN_VALUE,
                formNoValidate: HAS_BOOLEAN_VALUE,
                hidden: HAS_BOOLEAN_VALUE,
                loop: HAS_BOOLEAN_VALUE,
                // Caution; `option.selected` is not updated if `select.multiple` is
                // disabled with `removeAttribute`.
                multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                noValidate: HAS_BOOLEAN_VALUE,
                open: HAS_BOOLEAN_VALUE,
                playsInline: HAS_BOOLEAN_VALUE,
                readOnly: HAS_BOOLEAN_VALUE,
                required: HAS_BOOLEAN_VALUE,
                reversed: HAS_BOOLEAN_VALUE,
                rows: HAS_POSITIVE_NUMERIC_VALUE,
                rowSpan: HAS_NUMERIC_VALUE,
                scoped: HAS_BOOLEAN_VALUE,
                seamless: HAS_BOOLEAN_VALUE,
                selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                size: HAS_POSITIVE_NUMERIC_VALUE,
                start: HAS_NUMERIC_VALUE,
                // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
                span: HAS_POSITIVE_NUMERIC_VALUE,
                spellCheck: HAS_STRING_BOOLEAN_VALUE,
                // Style must be explicitly set in the attribute list. React components
                // expect a style object
                style: 0,
                // Keep it in the whitelist because it is case-sensitive for SVG.
                tabIndex: 0,
                // itemScope is for for Microdata support.
                // See http://schema.org/docs/gs.html
                itemScope: HAS_BOOLEAN_VALUE,
                // These attributes must stay in the white-list because they have
                // different attribute names (see DOMAttributeNames below)
                acceptCharset: 0,
                className: 0,
                htmlFor: 0,
                httpEquiv: 0,
                // Attributes with mutation methods must be specified in the whitelist
                // Set the string boolean flag to allow the behavior
                value: HAS_STRING_BOOLEAN_VALUE
              },
              DOMAttributeNames: {
                acceptCharset: "accept-charset",
                className: "class",
                htmlFor: "for",
                httpEquiv: "http-equiv"
              },
              DOMMutationMethods: {
                value: function(node, value) {
                  if (value == null) {
                    return node.removeAttribute("value");
                  }

                  // Number inputs get special treatment due to some edge cases in
                  // Chrome. Let everything else assign the value attribute as normal.
                  // https://github.com/facebook/react/issues/7253#issuecomment-236074326
                  if (
                    node.type !== "number" ||
                    node.hasAttribute("value") === false
                  ) {
                    node.setAttribute("value", "" + value);
                  } else if (
                    node.validity &&
                    !node.validity.badInput &&
                    node.ownerDocument.activeElement !== node
                  ) {
                    // Don't assign an attribute if validation reports bad
                    // input. Chrome will clear the value. Additionally, don't
                    // operate on inputs that have focus, otherwise Chrome might
                    // strip off trailing decimal places and cause the user's
                    // cursor position to jump to the beginning of the input.
                    //
                    // In ReactDOMInput, we have an onBlur event that will trigger
                    // this function again when focus is lost.
                    node.setAttribute("value", "" + value);
                  }
                }
              }
            };

            var HAS_STRING_BOOLEAN_VALUE$1 = injection.HAS_STRING_BOOLEAN_VALUE;

            var NS = {
              xlink: "http://www.w3.org/1999/xlink",
              xml: "http://www.w3.org/XML/1998/namespace"
            };

            /**
             * This is a list of all SVG attributes that need special casing,
             * namespacing, or boolean value assignment.
             *
             * When adding attributes to this list, be sure to also add them to
             * the `possibleStandardNames` module to ensure casing and incorrect
             * name warnings.
             *
             * SVG Attributes List:
             * https://www.w3.org/TR/SVG/attindex.html
             * SMIL Spec:
             * https://www.w3.org/TR/smil
             */
            var ATTRS = [
              "accent-height",
              "alignment-baseline",
              "arabic-form",
              "baseline-shift",
              "cap-height",
              "clip-path",
              "clip-rule",
              "color-interpolation",
              "color-interpolation-filters",
              "color-profile",
              "color-rendering",
              "dominant-baseline",
              "enable-background",
              "fill-opacity",
              "fill-rule",
              "flood-color",
              "flood-opacity",
              "font-family",
              "font-size",
              "font-size-adjust",
              "font-stretch",
              "font-style",
              "font-variant",
              "font-weight",
              "glyph-name",
              "glyph-orientation-horizontal",
              "glyph-orientation-vertical",
              "horiz-adv-x",
              "horiz-origin-x",
              "image-rendering",
              "letter-spacing",
              "lighting-color",
              "marker-end",
              "marker-mid",
              "marker-start",
              "overline-position",
              "overline-thickness",
              "paint-order",
              "panose-1",
              "pointer-events",
              "rendering-intent",
              "shape-rendering",
              "stop-color",
              "stop-opacity",
              "strikethrough-position",
              "strikethrough-thickness",
              "stroke-dasharray",
              "stroke-dashoffset",
              "stroke-linecap",
              "stroke-linejoin",
              "stroke-miterlimit",
              "stroke-opacity",
              "stroke-width",
              "text-anchor",
              "text-decoration",
              "text-rendering",
              "underline-position",
              "underline-thickness",
              "unicode-bidi",
              "unicode-range",
              "units-per-em",
              "v-alphabetic",
              "v-hanging",
              "v-ideographic",
              "v-mathematical",
              "vector-effect",
              "vert-adv-y",
              "vert-origin-x",
              "vert-origin-y",
              "word-spacing",
              "writing-mode",
              "x-height",
              "xlink:actuate",
              "xlink:arcrole",
              "xlink:href",
              "xlink:role",
              "xlink:show",
              "xlink:title",
              "xlink:type",
              "xml:base",
              "xmlns:xlink",
              "xml:lang",
              "xml:space"
            ];

            var SVGDOMPropertyConfig = {
              Properties: {
                autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
                externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
                preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
              },
              DOMAttributeNames: {
                autoReverse: "autoReverse",
                externalResourcesRequired: "externalResourcesRequired",
                preserveAlpha: "preserveAlpha"
              },
              DOMAttributeNamespaces: {
                xlinkActuate: NS.xlink,
                xlinkArcrole: NS.xlink,
                xlinkHref: NS.xlink,
                xlinkRole: NS.xlink,
                xlinkShow: NS.xlink,
                xlinkTitle: NS.xlink,
                xlinkType: NS.xlink,
                xmlBase: NS.xml,
                xmlLang: NS.xml,
                xmlSpace: NS.xml
              }
            };

            var CAMELIZE = /[\-\:]([a-z])/g;
            var capitalize = function(token) {
              return token[1].toUpperCase();
            };

            ATTRS.forEach(function(original) {
              var reactName = original.replace(CAMELIZE, capitalize);

              SVGDOMPropertyConfig.Properties[reactName] = 0;
              SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
            });

            injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
            injection.injectDOMPropertyConfig(SVGDOMPropertyConfig);

            var ReactErrorUtils = {
              // Used by Fiber to simulate a try-catch.
              _caughtError: null,
              _hasCaughtError: false,

              // Used by event system to capture/rethrow the first error.
              _rethrowError: null,
              _hasRethrowError: false,

              injection: {
                injectErrorUtils: function(injectedErrorUtils) {
                  !(
                    typeof injectedErrorUtils.invokeGuardedCallback ===
                    "function"
                  )
                    ? invariant(
                        false,
                        "Injected invokeGuardedCallback() must be a function."
                      )
                    : void 0;
                  invokeGuardedCallback =
                    injectedErrorUtils.invokeGuardedCallback;
                }
              },

              /**
               * Call a function while guarding against errors that happens within it.
               * Returns an error if it throws, otherwise null.
               *
               * In production, this is implemented using a try-catch. The reason we don't
               * use a try-catch directly is so that we can swap out a different
               * implementation in DEV mode.
               *
               * @param {String} name of the guard to use for logging or debugging
               * @param {Function} func The function to invoke
               * @param {*} context The context to use when calling the function
               * @param {...*} args Arguments for function
               */
              invokeGuardedCallback: function(
                name,
                func,
                context,
                a,
                b,
                c,
                d,
                e,
                f
              ) {
                invokeGuardedCallback.apply(ReactErrorUtils, arguments);
              },

              /**
               * Same as invokeGuardedCallback, but instead of returning an error, it stores
               * it in a global so it can be rethrown by `rethrowCaughtError` later.
               * TODO: See if _caughtError and _rethrowError can be unified.
               *
               * @param {String} name of the guard to use for logging or debugging
               * @param {Function} func The function to invoke
               * @param {*} context The context to use when calling the function
               * @param {...*} args Arguments for function
               */
              invokeGuardedCallbackAndCatchFirstError: function(
                name,
                func,
                context,
                a,
                b,
                c,
                d,
                e,
                f
              ) {
                ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
                if (ReactErrorUtils.hasCaughtError()) {
                  var error = ReactErrorUtils.clearCaughtError();
                  if (!ReactErrorUtils._hasRethrowError) {
                    ReactErrorUtils._hasRethrowError = true;
                    ReactErrorUtils._rethrowError = error;
                  }
                }
              },

              /**
               * During execution of guarded functions we will capture the first error which
               * we will rethrow to be handled by the top level error handler.
               */
              rethrowCaughtError: function() {
                return rethrowCaughtError.apply(ReactErrorUtils, arguments);
              },

              hasCaughtError: function() {
                return ReactErrorUtils._hasCaughtError;
              },

              clearCaughtError: function() {
                if (ReactErrorUtils._hasCaughtError) {
                  var error = ReactErrorUtils._caughtError;
                  ReactErrorUtils._caughtError = null;
                  ReactErrorUtils._hasCaughtError = false;
                  return error;
                } else {
                  invariant(
                    false,
                    "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."
                  );
                }
              }
            };

            var invokeGuardedCallback = function(
              name,
              func,
              context,
              a,
              b,
              c,
              d,
              e,
              f
            ) {
              ReactErrorUtils._hasCaughtError = false;
              ReactErrorUtils._caughtError = null;
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              try {
                func.apply(context, funcArgs);
              } catch (error) {
                ReactErrorUtils._caughtError = error;
                ReactErrorUtils._hasCaughtError = true;
              }
            };

            {
              // In DEV mode, we swap out invokeGuardedCallback for a special version
              // that plays more nicely with the browser's DevTools. The idea is to preserve
              // "Pause on exceptions" behavior. Because React wraps all user-provided
              // functions in invokeGuardedCallback, and the production version of
              // invokeGuardedCallback uses a try-catch, all user exceptions are treated
              // like caught exceptions, and the DevTools won't pause unless the developer
              // takes the extra step of enabling pause on caught exceptions. This is
              // untintuitive, though, because even though React has caught the error, from
              // the developer's perspective, the error is uncaught.
              //
              // To preserve the expected "Pause on exceptions" behavior, we don't use a
              // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
              // DOM node, and call the user-provided callback from inside an event handler
              // for that fake event. If the callback throws, the error is "captured" using
              // a global event handler. But because the error happens in a different
              // event loop context, it does not interrupt the normal program flow.
              // Effectively, this gives us try-catch behavior without actually using
              // try-catch. Neat!

              // Check that the browser supports the APIs we need to implement our special
              // DEV version of invokeGuardedCallback
              if (
                typeof window !== "undefined" &&
                typeof window.dispatchEvent === "function" &&
                typeof document !== "undefined" &&
                typeof document.createEvent === "function"
              ) {
                var fakeNode = document.createElement("react");

                var invokeGuardedCallbackDev = function(
                  name,
                  func,
                  context,
                  a,
                  b,
                  c,
                  d,
                  e,
                  f
                ) {
                  // Keeps track of whether the user-provided callback threw an error. We
                  // set this to true at the beginning, then set it to false right after
                  // calling the function. If the function errors, `didError` will never be
                  // set to false. This strategy works even if the browser is flaky and
                  // fails to call our global error handler, because it doesn't rely on
                  // the error event at all.
                  var didError = true;

                  // Create an event handler for our fake event. We will synchronously
                  // dispatch our fake event using `dispatchEvent`. Inside the handler, we
                  // call the user-provided callback.
                  var funcArgs = Array.prototype.slice.call(arguments, 3);
                  function callCallback() {
                    // We immediately remove the callback from event listeners so that
                    // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                    // nested call would trigger the fake event handlers of any call higher
                    // in the stack.
                    fakeNode.removeEventListener(evtType, callCallback, false);
                    func.apply(context, funcArgs);
                    didError = false;
                  }

                  // Create a global error event handler. We use this to capture the value
                  // that was thrown. It's possible that this error handler will fire more
                  // than once; for example, if non-React code also calls `dispatchEvent`
                  // and a handler for that event throws. We should be resilient to most of
                  // those cases. Even if our error event handler fires more than once, the
                  // last error event is always used. If the callback actually does error,
                  // we know that the last error event is the correct one, because it's not
                  // possible for anything else to have happened in between our callback
                  // erroring and the code that follows the `dispatchEvent` call below. If
                  // the callback doesn't error, but the error event was fired, we know to
                  // ignore it because `didError` will be false, as described above.
                  var error = void 0;
                  // Use this to track whether the error event is ever called.
                  var didSetError = false;
                  var isCrossOriginError = false;

                  function onError(event) {
                    error = event.error;
                    didSetError = true;
                    if (
                      error === null &&
                      event.colno === 0 &&
                      event.lineno === 0
                    ) {
                      isCrossOriginError = true;
                    }
                  }

                  // Create a fake event type.
                  var evtType =
                    "react-" + (name ? name : "invokeguardedcallback");

                  // Attach our event handlers
                  window.addEventListener("error", onError);
                  fakeNode.addEventListener(evtType, callCallback, false);

                  // Synchronously dispatch our fake event. If the user-provided function
                  // errors, it will trigger our global error handler.
                  var evt = document.createEvent("Event");
                  evt.initEvent(evtType, false, false);
                  fakeNode.dispatchEvent(evt);

                  if (didError) {
                    if (!didSetError) {
                      // The callback errored, but the error event never fired.
                      error = new Error(
                        "An error was thrown inside one of your components, but React " +
                          "doesn't know what it was. This is likely due to browser " +
                          'flakiness. React does its best to preserve the "Pause on ' +
                          'exceptions" behavior of the DevTools, which requires some ' +
                          "DEV-mode only tricks. It's possible that these don't work in " +
                          "your browser. Try triggering the error in production mode, " +
                          "or switching to a modern browser. If you suspect that this is " +
                          "actually an issue with React, please file an issue."
                      );
                    } else if (isCrossOriginError) {
                      error = new Error(
                        "A cross-origin error was thrown. React doesn't have access to " +
                          "the actual error object in development. " +
                          "See https://fb.me/react-crossorigin-error for more information."
                      );
                    }
                    ReactErrorUtils._hasCaughtError = true;
                    ReactErrorUtils._caughtError = error;
                  } else {
                    ReactErrorUtils._hasCaughtError = false;
                    ReactErrorUtils._caughtError = null;
                  }

                  // Remove our event listeners
                  window.removeEventListener("error", onError);
                };

                invokeGuardedCallback = invokeGuardedCallbackDev;
              }
            }

            var rethrowCaughtError = function() {
              if (ReactErrorUtils._hasRethrowError) {
                var error = ReactErrorUtils._rethrowError;
                ReactErrorUtils._rethrowError = null;
                ReactErrorUtils._hasRethrowError = false;
                throw error;
              }
            };

            /**
             * Injectable ordering of event plugins.
             */
            var eventPluginOrder = null;

            /**
             * Injectable mapping from names to event plugin modules.
             */
            var namesToPlugins = {};

            /**
             * Recomputes the plugin list using the injected plugins and plugin ordering.
             *
             * @private
             */
            function recomputePluginOrdering() {
              if (!eventPluginOrder) {
                // Wait until an `eventPluginOrder` is injected.
                return;
              }
              for (var pluginName in namesToPlugins) {
                var pluginModule = namesToPlugins[pluginName];
                var pluginIndex = eventPluginOrder.indexOf(pluginName);
                !(pluginIndex > -1)
                  ? invariant(
                      false,
                      "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.",
                      pluginName
                    )
                  : void 0;
                if (plugins[pluginIndex]) {
                  continue;
                }
                !pluginModule.extractEvents
                  ? invariant(
                      false,
                      "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.",
                      pluginName
                    )
                  : void 0;
                plugins[pluginIndex] = pluginModule;
                var publishedEvents = pluginModule.eventTypes;
                for (var eventName in publishedEvents) {
                  !publishEventForPlugin(
                    publishedEvents[eventName],
                    pluginModule,
                    eventName
                  )
                    ? invariant(
                        false,
                        "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.",
                        eventName,
                        pluginName
                      )
                    : void 0;
                }
              }
            }

            /**
             * Publishes an event so that it can be dispatched by the supplied plugin.
             *
             * @param {object} dispatchConfig Dispatch configuration for the event.
             * @param {object} PluginModule Plugin publishing the event.
             * @return {boolean} True if the event was successfully published.
             * @private
             */
            function publishEventForPlugin(
              dispatchConfig,
              pluginModule,
              eventName
            ) {
              !!eventNameDispatchConfigs.hasOwnProperty(eventName)
                ? invariant(
                    false,
                    "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.",
                    eventName
                  )
                : void 0;
              eventNameDispatchConfigs[eventName] = dispatchConfig;

              var phasedRegistrationNames =
                dispatchConfig.phasedRegistrationNames;
              if (phasedRegistrationNames) {
                for (var phaseName in phasedRegistrationNames) {
                  if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                    var phasedRegistrationName =
                      phasedRegistrationNames[phaseName];
                    publishRegistrationName(
                      phasedRegistrationName,
                      pluginModule,
                      eventName
                    );
                  }
                }
                return true;
              } else if (dispatchConfig.registrationName) {
                publishRegistrationName(
                  dispatchConfig.registrationName,
                  pluginModule,
                  eventName
                );
                return true;
              }
              return false;
            }

            /**
             * Publishes a registration name that is used to identify dispatched events.
             *
             * @param {string} registrationName Registration name to add.
             * @param {object} PluginModule Plugin publishing the event.
             * @private
             */
            function publishRegistrationName(
              registrationName,
              pluginModule,
              eventName
            ) {
              !!registrationNameModules[registrationName]
                ? invariant(
                    false,
                    "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.",
                    registrationName
                  )
                : void 0;
              registrationNameModules[registrationName] = pluginModule;
              registrationNameDependencies[registrationName] =
                pluginModule.eventTypes[eventName].dependencies;

              {
                var lowerCasedName = registrationName.toLowerCase();
                possibleRegistrationNames[lowerCasedName] = registrationName;

                if (registrationName === "onDoubleClick") {
                  possibleRegistrationNames.ondblclick = registrationName;
                }
              }
            }

            /**
             * Registers plugins so that they can extract and dispatch events.
             *
             * @see {EventPluginHub}
             */

            /**
             * Ordered list of injected plugins.
             */
            var plugins = [];

            /**
             * Mapping from event name to dispatch config
             */
            var eventNameDispatchConfigs = {};

            /**
             * Mapping from registration name to plugin module
             */
            var registrationNameModules = {};

            /**
             * Mapping from registration name to event name
             */
            var registrationNameDependencies = {};

            /**
             * Mapping from lowercase registration names to the properly cased version,
             * used to warn in the case of missing event handlers. Available
             * only in true.
             * @type {Object}
             */
            var possibleRegistrationNames = {};
            // Trust the developer to only use possibleRegistrationNames in true

            /**
             * Injects an ordering of plugins (by plugin name). This allows the ordering
             * to be decoupled from injection of the actual plugins so that ordering is
             * always deterministic regardless of packaging, on-the-fly injection, etc.
             *
             * @param {array} InjectedEventPluginOrder
             * @internal
             * @see {EventPluginHub.injection.injectEventPluginOrder}
             */
            function injectEventPluginOrder(injectedEventPluginOrder) {
              !!eventPluginOrder
                ? invariant(
                    false,
                    "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."
                  )
                : void 0;
              // Clone the ordering so it cannot be dynamically mutated.
              eventPluginOrder = Array.prototype.slice.call(
                injectedEventPluginOrder
              );
              recomputePluginOrdering();
            }

            /**
             * Injects plugins to be used by `EventPluginHub`. The plugin names must be
             * in the ordering injected by `injectEventPluginOrder`.
             *
             * Plugins can be injected as part of page initialization or on-the-fly.
             *
             * @param {object} injectedNamesToPlugins Map from names to plugin modules.
             * @internal
             * @see {EventPluginHub.injection.injectEventPluginsByName}
             */
            function injectEventPluginsByName(injectedNamesToPlugins) {
              var isOrderingDirty = false;
              for (var pluginName in injectedNamesToPlugins) {
                if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                  continue;
                }
                var pluginModule = injectedNamesToPlugins[pluginName];
                if (
                  !namesToPlugins.hasOwnProperty(pluginName) ||
                  namesToPlugins[pluginName] !== pluginModule
                ) {
                  !!namesToPlugins[pluginName]
                    ? invariant(
                        false,
                        "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.",
                        pluginName
                      )
                    : void 0;
                  namesToPlugins[pluginName] = pluginModule;
                  isOrderingDirty = true;
                }
              }
              if (isOrderingDirty) {
                recomputePluginOrdering();
              }
            }

            var EventPluginRegistry = Object.freeze({
              plugins: plugins,
              eventNameDispatchConfigs: eventNameDispatchConfigs,
              registrationNameModules: registrationNameModules,
              registrationNameDependencies: registrationNameDependencies,
              possibleRegistrationNames: possibleRegistrationNames,
              injectEventPluginOrder: injectEventPluginOrder,
              injectEventPluginsByName: injectEventPluginsByName
            });

            var getFiberCurrentPropsFromNode = null;
            var getInstanceFromNode = null;
            var getNodeFromInstance = null;

            var injection$2 = {
              injectComponentTree: function(Injected) {
                getFiberCurrentPropsFromNode =
                  Injected.getFiberCurrentPropsFromNode;
                getInstanceFromNode = Injected.getInstanceFromNode;
                getNodeFromInstance = Injected.getNodeFromInstance;

                {
                  warning(
                    getNodeFromInstance && getInstanceFromNode,
                    "EventPluginUtils.injection.injectComponentTree(...): Injected " +
                      "module is missing getNodeFromInstance or getInstanceFromNode."
                  );
                }
              }
            };

            var validateEventDispatches;
            {
              validateEventDispatches = function(event) {
                var dispatchListeners = event._dispatchListeners;
                var dispatchInstances = event._dispatchInstances;

                var listenersIsArr = Array.isArray(dispatchListeners);
                var listenersLen = listenersIsArr
                  ? dispatchListeners.length
                  : dispatchListeners ? 1 : 0;

                var instancesIsArr = Array.isArray(dispatchInstances);
                var instancesLen = instancesIsArr
                  ? dispatchInstances.length
                  : dispatchInstances ? 1 : 0;

                warning(
                  instancesIsArr === listenersIsArr &&
                    instancesLen === listenersLen,
                  "EventPluginUtils: Invalid `event`."
                );
              };
            }

            /**
             * Dispatch the event to the listener.
             * @param {SyntheticEvent} event SyntheticEvent to handle
             * @param {boolean} simulated If the event is simulated (changes exn behavior)
             * @param {function} listener Application-level callback
             * @param {*} inst Internal component instance
             */
            function executeDispatch(event, simulated, listener, inst) {
              var type = event.type || "unknown-event";
              event.currentTarget = getNodeFromInstance(inst);
              ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(
                type,
                listener,
                undefined,
                event
              );
              event.currentTarget = null;
            }

            /**
             * Standard/simple iteration through an event's collected dispatches.
             */
            function executeDispatchesInOrder(event, simulated) {
              var dispatchListeners = event._dispatchListeners;
              var dispatchInstances = event._dispatchInstances;
              {
                validateEventDispatches(event);
              }
              if (Array.isArray(dispatchListeners)) {
                for (var i = 0; i < dispatchListeners.length; i++) {
                  if (event.isPropagationStopped()) {
                    break;
                  }
                  // Listeners and Instances are two parallel arrays that are always in sync.
                  executeDispatch(
                    event,
                    simulated,
                    dispatchListeners[i],
                    dispatchInstances[i]
                  );
                }
              } else if (dispatchListeners) {
                executeDispatch(
                  event,
                  simulated,
                  dispatchListeners,
                  dispatchInstances
                );
              }
              event._dispatchListeners = null;
              event._dispatchInstances = null;
            }

            /**
             * @see executeDispatchesInOrderStopAtTrueImpl
             */

            /**
             * Execution of a "direct" dispatch - there must be at most one dispatch
             * accumulated on the event or it is considered an error. It doesn't really make
             * sense for an event with multiple dispatches (bubbled) to keep track of the
             * return values at each dispatch execution, but it does tend to make sense when
             * dealing with "direct" dispatches.
             *
             * @return {*} The return value of executing the single dispatch.
             */

            /**
             * @param {SyntheticEvent} event
             * @return {boolean} True iff number of dispatches accumulated is greater than 0.
             */

            /**
             * Accumulates items that must not be null or undefined into the first one. This
             * is used to conserve memory by avoiding array allocations, and thus sacrifices
             * API cleanness. Since `current` can be null before being passed in and not
             * null after this function, make sure to assign it back to `current`:
             *
             * `a = accumulateInto(a, b);`
             *
             * This API should be sparingly used. Try `accumulate` for something cleaner.
             *
             * @return {*|array<*>} An accumulation of items.
             */

            function accumulateInto(current, next) {
              !(next != null)
                ? invariant(
                    false,
                    "accumulateInto(...): Accumulated items must not be null or undefined."
                  )
                : void 0;

              if (current == null) {
                return next;
              }

              // Both are not empty. Warning: Never call x.concat(y) when you are not
              // certain that x is an Array (x could be a string with concat method).
              if (Array.isArray(current)) {
                if (Array.isArray(next)) {
                  current.push.apply(current, next);
                  return current;
                }
                current.push(next);
                return current;
              }

              if (Array.isArray(next)) {
                // A bit too dangerous to mutate `next`.
                return [current].concat(next);
              }

              return [current, next];
            }

            /**
             * @param {array} arr an "accumulation" of items which is either an Array or
             * a single item. Useful when paired with the `accumulate` module. This is a
             * simple utility that allows us to reason about a collection of items, but
             * handling the case when there is exactly one item (and we do not need to
             * allocate an array).
             * @param {function} cb Callback invoked with each element or a collection.
             * @param {?} [scope] Scope used as `this` in a callback.
             */
            function forEachAccumulated(arr, cb, scope) {
              if (Array.isArray(arr)) {
                arr.forEach(cb, scope);
              } else if (arr) {
                cb.call(scope, arr);
              }
            }

            /**
             * Internal queue of events that have accumulated their dispatches and are
             * waiting to have their dispatches executed.
             */
            var eventQueue = null;

            /**
             * Dispatches an event and releases it back into the pool, unless persistent.
             *
             * @param {?object} event Synthetic event to be dispatched.
             * @param {boolean} simulated If the event is simulated (changes exn behavior)
             * @private
             */
            var executeDispatchesAndRelease = function(event, simulated) {
              if (event) {
                executeDispatchesInOrder(event, simulated);

                if (!event.isPersistent()) {
                  event.constructor.release(event);
                }
              }
            };
            var executeDispatchesAndReleaseSimulated = function(e) {
              return executeDispatchesAndRelease(e, true);
            };
            var executeDispatchesAndReleaseTopLevel = function(e) {
              return executeDispatchesAndRelease(e, false);
            };

            function isInteractive(tag) {
              return (
                tag === "button" ||
                tag === "input" ||
                tag === "select" ||
                tag === "textarea"
              );
            }

            function shouldPreventMouseEvent(name, type, props) {
              switch (name) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                  return !!(props.disabled && isInteractive(type));
                default:
                  return false;
              }
            }

            /**
             * This is a unified interface for event plugins to be installed and configured.
             *
             * Event plugins can implement the following properties:
             *
             *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
             *     Required. When a top-level event is fired, this method is expected to
             *     extract synthetic events that will in turn be queued and dispatched.
             *
             *   `eventTypes` {object}
             *     Optional, plugins that fire events must publish a mapping of registration
             *     names that are used to register listeners. Values of this mapping must
             *     be objects that contain `registrationName` or `phasedRegistrationNames`.
             *
             *   `executeDispatch` {function(object, function, string)}
             *     Optional, allows plugins to override how an event gets dispatched. By
             *     default, the listener is simply invoked.
             *
             * Each plugin that is injected into `EventsPluginHub` is immediately operable.
             *
             * @public
             */

            /**
             * Methods for injecting dependencies.
             */
            var injection$1 = {
              /**
               * @param {array} InjectedEventPluginOrder
               * @public
               */
              injectEventPluginOrder: injectEventPluginOrder,

              /**
               * @param {object} injectedNamesToPlugins Map from names to plugin modules.
               */
              injectEventPluginsByName: injectEventPluginsByName
            };

            /**
             * @param {object} inst The instance, which is the source of events.
             * @param {string} registrationName Name of listener (e.g. `onClick`).
             * @return {?function} The stored callback.
             */
            function getListener(inst, registrationName) {
              var listener;

              // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
              // live here; needs to be moved to a better place soon
              var stateNode = inst.stateNode;
              if (!stateNode) {
                // Work in progress (ex: onload events in incremental mode).
                return null;
              }
              var props = getFiberCurrentPropsFromNode(stateNode);
              if (!props) {
                // Work in progress.
                return null;
              }
              listener = props[registrationName];
              if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
                return null;
              }
              !(!listener || typeof listener === "function")
                ? invariant(
                    false,
                    "Expected `%s` listener to be a function, instead got a value of `%s` type.",
                    registrationName,
                    typeof listener
                  )
                : void 0;
              return listener;
            }

            /**
             * Allows registered plugins an opportunity to extract events from top-level
             * native browser events.
             *
             * @return {*} An accumulation of synthetic events.
             * @internal
             */
            function extractEvents(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var events;
              for (var i = 0; i < plugins.length; i++) {
                // Not every plugin in the ordering may be loaded at runtime.
                var possiblePlugin = plugins[i];
                if (possiblePlugin) {
                  var extractedEvents = possiblePlugin.extractEvents(
                    topLevelType,
                    targetInst,
                    nativeEvent,
                    nativeEventTarget
                  );
                  if (extractedEvents) {
                    events = accumulateInto(events, extractedEvents);
                  }
                }
              }
              return events;
            }

            /**
             * Enqueues a synthetic event that should be dispatched when
             * `processEventQueue` is invoked.
             *
             * @param {*} events An accumulation of synthetic events.
             * @internal
             */
            function enqueueEvents(events) {
              if (events) {
                eventQueue = accumulateInto(eventQueue, events);
              }
            }

            /**
             * Dispatches all synthetic events on the event queue.
             *
             * @internal
             */
            function processEventQueue(simulated) {
              // Set `eventQueue` to null before processing it so that we can tell if more
              // events get enqueued while processing.
              var processingEventQueue = eventQueue;
              eventQueue = null;

              if (!processingEventQueue) {
                return;
              }

              if (simulated) {
                forEachAccumulated(
                  processingEventQueue,
                  executeDispatchesAndReleaseSimulated
                );
              } else {
                forEachAccumulated(
                  processingEventQueue,
                  executeDispatchesAndReleaseTopLevel
                );
              }
              !!eventQueue
                ? invariant(
                    false,
                    "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."
                  )
                : void 0;
              // This would be a good time to rethrow if any of the event handlers threw.
              ReactErrorUtils.rethrowCaughtError();
            }

            var EventPluginHub = Object.freeze({
              injection: injection$1,
              getListener: getListener,
              extractEvents: extractEvents,
              enqueueEvents: enqueueEvents,
              processEventQueue: processEventQueue
            });

            var IndeterminateComponent = 0; // Before we know whether it is functional or class
            var FunctionalComponent = 1;
            var ClassComponent = 2;
            var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
            var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
            var HostComponent = 5;
            var HostText = 6;
            var CallComponent = 7;
            var CallHandlerPhase = 8;
            var ReturnComponent = 9;
            var Fragment = 10;

            var randomKey = Math.random()
              .toString(36)
              .slice(2);
            var internalInstanceKey = "__reactInternalInstance$" + randomKey;
            var internalEventHandlersKey = "__reactEventHandlers$" + randomKey;

            function precacheFiberNode$1(hostInst, node) {
              node[internalInstanceKey] = hostInst;
            }

            /**
             * Given a DOM node, return the closest ReactDOMComponent or
             * ReactDOMTextComponent instance ancestor.
             */
            function getClosestInstanceFromNode(node) {
              if (node[internalInstanceKey]) {
                return node[internalInstanceKey];
              }

              // Walk up the tree until we find an ancestor whose instance we have cached.
              var parents = [];
              while (!node[internalInstanceKey]) {
                parents.push(node);
                if (node.parentNode) {
                  node = node.parentNode;
                } else {
                  // Top of the tree. This node must not be part of a React tree (or is
                  // unmounted, potentially).
                  return null;
                }
              }

              var closest = void 0;
              var inst = node[internalInstanceKey];
              if (inst.tag === HostComponent || inst.tag === HostText) {
                // In Fiber, this will always be the deepest root.
                return inst;
              }
              for (
                ;
                node && (inst = node[internalInstanceKey]);
                node = parents.pop()
              ) {
                closest = inst;
              }

              return closest;
            }

            /**
             * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
             * instance, or null if the node was not rendered by this React.
             */
            function getInstanceFromNode$1(node) {
              var inst = node[internalInstanceKey];
              if (inst) {
                if (inst.tag === HostComponent || inst.tag === HostText) {
                  return inst;
                } else {
                  return null;
                }
              }
              return null;
            }

            /**
             * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
             * DOM node.
             */
            function getNodeFromInstance$1(inst) {
              if (inst.tag === HostComponent || inst.tag === HostText) {
                // In Fiber this, is just the state node right now. We assume it will be
                // a host component or host text.
                return inst.stateNode;
              }

              // Without this first invariant, passing a non-DOM-component triggers the next
              // invariant for a missing parent, which is super confusing.
              invariant(false, "getNodeFromInstance: Invalid argument.");
            }

            function getFiberCurrentPropsFromNode$1(node) {
              return node[internalEventHandlersKey] || null;
            }

            function updateFiberProps$1(node, props) {
              node[internalEventHandlersKey] = props;
            }

            var ReactDOMComponentTree = Object.freeze({
              precacheFiberNode: precacheFiberNode$1,
              getClosestInstanceFromNode: getClosestInstanceFromNode,
              getInstanceFromNode: getInstanceFromNode$1,
              getNodeFromInstance: getNodeFromInstance$1,
              getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
              updateFiberProps: updateFiberProps$1
            });

            function getParent(inst) {
              do {
                inst = inst["return"];
                // TODO: If this is a HostRoot we might want to bail out.
                // That is depending on if we want nested subtrees (layers) to bubble
                // events to their parent. We could also go through parentNode on the
                // host node but that wouldn't work for React Native and doesn't let us
                // do the portal feature.
              } while (inst && inst.tag !== HostComponent);
              if (inst) {
                return inst;
              }
              return null;
            }

            /**
             * Return the lowest common ancestor of A and B, or null if they are in
             * different trees.
             */
            function getLowestCommonAncestor(instA, instB) {
              var depthA = 0;
              for (var tempA = instA; tempA; tempA = getParent(tempA)) {
                depthA++;
              }
              var depthB = 0;
              for (var tempB = instB; tempB; tempB = getParent(tempB)) {
                depthB++;
              }

              // If A is deeper, crawl up.
              while (depthA - depthB > 0) {
                instA = getParent(instA);
                depthA--;
              }

              // If B is deeper, crawl up.
              while (depthB - depthA > 0) {
                instB = getParent(instB);
                depthB--;
              }

              // Walk in lockstep until we find a match.
              var depth = depthA;
              while (depth--) {
                if (instA === instB || instA === instB.alternate) {
                  return instA;
                }
                instA = getParent(instA);
                instB = getParent(instB);
              }
              return null;
            }

            /**
             * Return if A is an ancestor of B.
             */

            /**
             * Return the parent instance of the passed-in instance.
             */
            function getParentInstance(inst) {
              return getParent(inst);
            }

            /**
             * Simulates the traversal of a two-phase, capture/bubble event dispatch.
             */
            function traverseTwoPhase(inst, fn, arg) {
              var path = [];
              while (inst) {
                path.push(inst);
                inst = getParent(inst);
              }
              var i;
              for (i = path.length; i-- > 0; ) {
                fn(path[i], "captured", arg);
              }
              for (i = 0; i < path.length; i++) {
                fn(path[i], "bubbled", arg);
              }
            }

            /**
             * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
             * should would receive a `mouseEnter` or `mouseLeave` event.
             *
             * Does not invoke the callback on the nearest common ancestor because nothing
             * "entered" or "left" that element.
             */
            function traverseEnterLeave(from, to, fn, argFrom, argTo) {
              var common =
                from && to ? getLowestCommonAncestor(from, to) : null;
              var pathFrom = [];
              while (true) {
                if (!from) {
                  break;
                }
                if (from === common) {
                  break;
                }
                var alternate = from.alternate;
                if (alternate !== null && alternate === common) {
                  break;
                }
                pathFrom.push(from);
                from = getParent(from);
              }
              var pathTo = [];
              while (true) {
                if (!to) {
                  break;
                }
                if (to === common) {
                  break;
                }
                var _alternate = to.alternate;
                if (_alternate !== null && _alternate === common) {
                  break;
                }
                pathTo.push(to);
                to = getParent(to);
              }
              for (var i = 0; i < pathFrom.length; i++) {
                fn(pathFrom[i], "bubbled", argFrom);
              }
              for (var _i = pathTo.length; _i-- > 0; ) {
                fn(pathTo[_i], "captured", argTo);
              }
            }

            /**
             * Some event types have a notion of different registration names for different
             * "phases" of propagation. This finds listeners by a given phase.
             */
            function listenerAtPhase(inst, event, propagationPhase) {
              var registrationName =
                event.dispatchConfig.phasedRegistrationNames[propagationPhase];
              return getListener(inst, registrationName);
            }

            /**
             * A small set of propagation patterns, each of which will accept a small amount
             * of information, and generate a set of "dispatch ready event objects" - which
             * are sets of events that have already been annotated with a set of dispatched
             * listener functions/ids. The API is designed this way to discourage these
             * propagation strategies from actually executing the dispatches, since we
             * always want to collect the entire set of dispatches before executing even a
             * single one.
             */

            /**
             * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
             * here, allows us to not have to bind or create functions for each event.
             * Mutating the event's members allows us to not have to create a wrapping
             * "dispatch" object that pairs the event with the listener.
             */
            function accumulateDirectionalDispatches(inst, phase, event) {
              {
                warning(inst, "Dispatching inst must not be null");
              }
              var listener = listenerAtPhase(inst, event, phase);
              if (listener) {
                event._dispatchListeners = accumulateInto(
                  event._dispatchListeners,
                  listener
                );
                event._dispatchInstances = accumulateInto(
                  event._dispatchInstances,
                  inst
                );
              }
            }

            /**
             * Collect dispatches (must be entirely collected before dispatching - see unit
             * tests). Lazily allocate the array to conserve memory.  We must loop through
             * each event and perform the traversal for each one. We cannot perform a
             * single traversal for the entire collection of events because each event may
             * have a different target.
             */
            function accumulateTwoPhaseDispatchesSingle(event) {
              if (event && event.dispatchConfig.phasedRegistrationNames) {
                traverseTwoPhase(
                  event._targetInst,
                  accumulateDirectionalDispatches,
                  event
                );
              }
            }

            /**
             * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
             */
            function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
              if (event && event.dispatchConfig.phasedRegistrationNames) {
                var targetInst = event._targetInst;
                var parentInst = targetInst
                  ? getParentInstance(targetInst)
                  : null;
                traverseTwoPhase(
                  parentInst,
                  accumulateDirectionalDispatches,
                  event
                );
              }
            }

            /**
             * Accumulates without regard to direction, does not look for phased
             * registration names. Same as `accumulateDirectDispatchesSingle` but without
             * requiring that the `dispatchMarker` be the same as the dispatched ID.
             */
            function accumulateDispatches(inst, ignoredDirection, event) {
              if (inst && event && event.dispatchConfig.registrationName) {
                var registrationName = event.dispatchConfig.registrationName;
                var listener = getListener(inst, registrationName);
                if (listener) {
                  event._dispatchListeners = accumulateInto(
                    event._dispatchListeners,
                    listener
                  );
                  event._dispatchInstances = accumulateInto(
                    event._dispatchInstances,
                    inst
                  );
                }
              }
            }

            /**
             * Accumulates dispatches on an `SyntheticEvent`, but only for the
             * `dispatchMarker`.
             * @param {SyntheticEvent} event
             */
            function accumulateDirectDispatchesSingle(event) {
              if (event && event.dispatchConfig.registrationName) {
                accumulateDispatches(event._targetInst, null, event);
              }
            }

            function accumulateTwoPhaseDispatches(events) {
              forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
            }

            function accumulateTwoPhaseDispatchesSkipTarget(events) {
              forEachAccumulated(
                events,
                accumulateTwoPhaseDispatchesSingleSkipTarget
              );
            }

            function accumulateEnterLeaveDispatches(leave, enter, from, to) {
              traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
            }

            function accumulateDirectDispatches(events) {
              forEachAccumulated(events, accumulateDirectDispatchesSingle);
            }

            var EventPropagators = Object.freeze({
              accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
              accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
              accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
              accumulateDirectDispatches: accumulateDirectDispatches
            });

            var contentKey = null;

            /**
             * Gets the key used to access text content on a DOM node.
             *
             * @return {?string} Key used to access text content.
             * @internal
             */
            function getTextContentAccessor() {
              if (!contentKey && ExecutionEnvironment.canUseDOM) {
                // Prefer textContent to innerText because many browsers support both but
                // SVG <text> elements don't support innerText even when <div> does.
                contentKey =
                  "textContent" in document.documentElement
                    ? "textContent"
                    : "innerText";
              }
              return contentKey;
            }

            /**
             * This helper object stores information about text content of a target node,
             * allowing comparison of content before and after a given event.
             *
             * Identify the node where selection currently begins, then observe
             * both its text content and its current position in the DOM. Since the
             * browser may natively replace the target node during composition, we can
             * use its position to find its replacement.
             *
             *
             */
            var compositionState = {
              _root: null,
              _startText: null,
              _fallbackText: null
            };

            function initialize(nativeEventTarget) {
              compositionState._root = nativeEventTarget;
              compositionState._startText = getText();
              return true;
            }

            function reset() {
              compositionState._root = null;
              compositionState._startText = null;
              compositionState._fallbackText = null;
            }

            function getData() {
              if (compositionState._fallbackText) {
                return compositionState._fallbackText;
              }

              var start;
              var startValue = compositionState._startText;
              var startLength = startValue.length;
              var end;
              var endValue = getText();
              var endLength = endValue.length;

              for (start = 0; start < startLength; start++) {
                if (startValue[start] !== endValue[start]) {
                  break;
                }
              }

              var minEnd = startLength - start;
              for (end = 1; end <= minEnd; end++) {
                if (
                  startValue[startLength - end] !== endValue[endLength - end]
                ) {
                  break;
                }
              }

              var sliceTail = end > 1 ? 1 - end : undefined;
              compositionState._fallbackText = endValue.slice(start, sliceTail);
              return compositionState._fallbackText;
            }

            function getText() {
              if ("value" in compositionState._root) {
                return compositionState._root.value;
              }
              return compositionState._root[getTextContentAccessor()];
            }

            /* eslint valid-typeof: 0 */

            var didWarnForAddedNewProperty = false;
            var isProxySupported = typeof Proxy === "function";
            var EVENT_POOL_SIZE = 10;

            var shouldBeReleasedProperties = [
              "dispatchConfig",
              "_targetInst",
              "nativeEvent",
              "isDefaultPrevented",
              "isPropagationStopped",
              "_dispatchListeners",
              "_dispatchInstances"
            ];

            /**
             * @interface Event
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var EventInterface = {
              type: null,
              target: null,
              // currentTarget is set when dispatching; no use in copying it here
              currentTarget: emptyFunction.thatReturnsNull,
              eventPhase: null,
              bubbles: null,
              cancelable: null,
              timeStamp: function(event) {
                return event.timeStamp || Date.now();
              },
              defaultPrevented: null,
              isTrusted: null
            };

            /**
             * Synthetic events are dispatched by event plugins, typically in response to a
             * top-level event delegation handler.
             *
             * These systems should generally use pooling to reduce the frequency of garbage
             * collection. The system should check `isPersistent` to determine whether the
             * event should be released into the pool after being dispatched. Users that
             * need a persisted event should invoke `persist`.
             *
             * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
             * normalizing browser quirks. Subclasses do not necessarily have to implement a
             * DOM interface; custom application-specific events can also subclass this.
             *
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {*} targetInst Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @param {DOMEventTarget} nativeEventTarget Target node.
             */
            function SyntheticEvent(
              dispatchConfig,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              {
                // these have a getter/setter for warnings
                delete this.nativeEvent;
                delete this.preventDefault;
                delete this.stopPropagation;
              }

              this.dispatchConfig = dispatchConfig;
              this._targetInst = targetInst;
              this.nativeEvent = nativeEvent;

              var Interface = this.constructor.Interface;
              for (var propName in Interface) {
                if (!Interface.hasOwnProperty(propName)) {
                  continue;
                }
                {
                  delete this[propName]; // this has a getter/setter for warnings
                }
                var normalize = Interface[propName];
                if (normalize) {
                  this[propName] = normalize(nativeEvent);
                } else {
                  if (propName === "target") {
                    this.target = nativeEventTarget;
                  } else {
                    this[propName] = nativeEvent[propName];
                  }
                }
              }

              var defaultPrevented =
                nativeEvent.defaultPrevented != null
                  ? nativeEvent.defaultPrevented
                  : nativeEvent.returnValue === false;
              if (defaultPrevented) {
                this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
              } else {
                this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
              }
              this.isPropagationStopped = emptyFunction.thatReturnsFalse;
              return this;
            }

            _assign(SyntheticEvent.prototype, {
              preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }

                if (event.preventDefault) {
                  event.preventDefault();
                } else if (typeof event.returnValue !== "unknown") {
                  event.returnValue = false;
                }
                this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
              },

              stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }

                if (event.stopPropagation) {
                  event.stopPropagation();
                } else if (typeof event.cancelBubble !== "unknown") {
                  // The ChangeEventPlugin registers a "propertychange" event for
                  // IE. This event does not support bubbling or cancelling, and
                  // any references to cancelBubble throw "Member not found".  A
                  // typeof check of "unknown" circumvents this issue (and is also
                  // IE specific).
                  event.cancelBubble = true;
                }

                this.isPropagationStopped = emptyFunction.thatReturnsTrue;
              },

              /**
               * We release all dispatched `SyntheticEvent`s after each event loop, adding
               * them back into the pool. This allows a way to hold onto a reference that
               * won't be added back into the pool.
               */
              persist: function() {
                this.isPersistent = emptyFunction.thatReturnsTrue;
              },

              /**
               * Checks if this event should be released back into the pool.
               *
               * @return {boolean} True if this should not be released, false otherwise.
               */
              isPersistent: emptyFunction.thatReturnsFalse,

              /**
               * `PooledClass` looks for `destructor` on each instance it releases.
               */
              destructor: function() {
                var Interface = this.constructor.Interface;
                for (var propName in Interface) {
                  {
                    Object.defineProperty(
                      this,
                      propName,
                      getPooledWarningPropertyDefinition(
                        propName,
                        Interface[propName]
                      )
                    );
                  }
                }
                for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
                  this[shouldBeReleasedProperties[i]] = null;
                }
                {
                  Object.defineProperty(
                    this,
                    "nativeEvent",
                    getPooledWarningPropertyDefinition("nativeEvent", null)
                  );
                  Object.defineProperty(
                    this,
                    "preventDefault",
                    getPooledWarningPropertyDefinition(
                      "preventDefault",
                      emptyFunction
                    )
                  );
                  Object.defineProperty(
                    this,
                    "stopPropagation",
                    getPooledWarningPropertyDefinition(
                      "stopPropagation",
                      emptyFunction
                    )
                  );
                }
              }
            });

            SyntheticEvent.Interface = EventInterface;

            /**
             * Helper to reduce boilerplate when creating subclasses.
             *
             * @param {function} Class
             * @param {?object} Interface
             */
            SyntheticEvent.augmentClass = function(Class, Interface) {
              var Super = this;

              var E = function() {};
              E.prototype = Super.prototype;
              var prototype = new E();

              _assign(prototype, Class.prototype);
              Class.prototype = prototype;
              Class.prototype.constructor = Class;

              Class.Interface = _assign({}, Super.Interface, Interface);
              Class.augmentClass = Super.augmentClass;
              addEventPoolingTo(Class);
            };

            /** Proxying after everything set on SyntheticEvent
             * to resolve Proxy issue on some WebKit browsers
             * in which some Event properties are set to undefined (GH#10010)
             */
            {
              if (isProxySupported) {
                /*eslint-disable no-func-assign */
                SyntheticEvent = new Proxy(SyntheticEvent, {
                  construct: function(target, args) {
                    return this.apply(
                      target,
                      Object.create(target.prototype),
                      args
                    );
                  },
                  apply: function(constructor, that, args) {
                    return new Proxy(constructor.apply(that, args), {
                      set: function(target, prop, value) {
                        if (
                          prop !== "isPersistent" &&
                          !target.constructor.Interface.hasOwnProperty(prop) &&
                          shouldBeReleasedProperties.indexOf(prop) === -1
                        ) {
                          warning(
                            didWarnForAddedNewProperty || target.isPersistent(),
                            "This synthetic event is reused for performance reasons. If you're " +
                              "seeing this, you're adding a new property in the synthetic event object. " +
                              "The property is never released. See " +
                              "https://fb.me/react-event-pooling for more information."
                          );
                          didWarnForAddedNewProperty = true;
                        }
                        target[prop] = value;
                        return true;
                      }
                    });
                  }
                });
                /*eslint-enable no-func-assign */
              }
            }

            addEventPoolingTo(SyntheticEvent);

            /**
             * Helper to nullify syntheticEvent instance properties when destructing
             *
             * @param {String} propName
             * @param {?object} getVal
             * @return {object} defineProperty object
             */
            function getPooledWarningPropertyDefinition(propName, getVal) {
              var isFunction = typeof getVal === "function";
              return {
                configurable: true,
                set: set,
                get: get
              };

              function set(val) {
                var action = isFunction
                  ? "setting the method"
                  : "setting the property";
                warn(action, "This is effectively a no-op");
                return val;
              }

              function get() {
                var action = isFunction
                  ? "accessing the method"
                  : "accessing the property";
                var result = isFunction
                  ? "This is a no-op function"
                  : "This is set to null";
                warn(action, result);
                return getVal;
              }

              function warn(action, result) {
                var warningCondition = false;
                warning(
                  warningCondition,
                  "This synthetic event is reused for performance reasons. If you're seeing this, " +
                    "you're %s `%s` on a released/nullified synthetic event. %s. " +
                    "If you must keep the original synthetic event around, use event.persist(). " +
                    "See https://fb.me/react-event-pooling for more information.",
                  action,
                  propName,
                  result
                );
              }
            }

            function getPooledEvent(
              dispatchConfig,
              targetInst,
              nativeEvent,
              nativeInst
            ) {
              var EventConstructor = this;
              if (EventConstructor.eventPool.length) {
                var instance = EventConstructor.eventPool.pop();
                EventConstructor.call(
                  instance,
                  dispatchConfig,
                  targetInst,
                  nativeEvent,
                  nativeInst
                );
                return instance;
              }
              return new EventConstructor(
                dispatchConfig,
                targetInst,
                nativeEvent,
                nativeInst
              );
            }

            function releasePooledEvent(event) {
              var EventConstructor = this;
              !(event instanceof EventConstructor)
                ? invariant(
                    false,
                    "Trying to release an event instance  into a pool of a different type."
                  )
                : void 0;
              event.destructor();
              if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
                EventConstructor.eventPool.push(event);
              }
            }

            function addEventPoolingTo(EventConstructor) {
              EventConstructor.eventPool = [];
              EventConstructor.getPooled = getPooledEvent;
              EventConstructor.release = releasePooledEvent;
            }

            var SyntheticEvent$1 = SyntheticEvent;

            /**
             * @interface Event
             * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
             */
            var CompositionEventInterface = {
              data: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticCompositionEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(
              SyntheticCompositionEvent,
              CompositionEventInterface
            );

            /**
             * @interface Event
             * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
             *      /#events-inputevents
             */
            var InputEventInterface = {
              data: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticInputEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(
              SyntheticInputEvent,
              InputEventInterface
            );

            var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
            var START_KEYCODE = 229;

            var canUseCompositionEvent =
              ExecutionEnvironment.canUseDOM && "CompositionEvent" in window;

            var documentMode = null;
            if (ExecutionEnvironment.canUseDOM && "documentMode" in document) {
              documentMode = document.documentMode;
            }

            // Webkit offers a very useful `textInput` event that can be used to
            // directly represent `beforeInput`. The IE `textinput` event is not as
            // useful, so we don't use it.
            var canUseTextInputEvent =
              ExecutionEnvironment.canUseDOM &&
              "TextEvent" in window &&
              !documentMode &&
              !isPresto();

            // In IE9+, we have access to composition events, but the data supplied
            // by the native compositionend event may be incorrect. Japanese ideographic
            // spaces, for instance (\u3000) are not recorded correctly.
            var useFallbackCompositionData =
              ExecutionEnvironment.canUseDOM &&
              (!canUseCompositionEvent ||
                (documentMode && documentMode > 8 && documentMode <= 11));

            /**
             * Opera <= 12 includes TextEvent in window, but does not fire
             * text input events. Rely on keypress instead.
             */
            function isPresto() {
              var opera = window.opera;
              return (
                typeof opera === "object" &&
                typeof opera.version === "function" &&
                parseInt(opera.version(), 10) <= 12
              );
            }

            var SPACEBAR_CODE = 32;
            var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

            // Events and their corresponding property names.
            var eventTypes = {
              beforeInput: {
                phasedRegistrationNames: {
                  bubbled: "onBeforeInput",
                  captured: "onBeforeInputCapture"
                },
                dependencies: [
                  "topCompositionEnd",
                  "topKeyPress",
                  "topTextInput",
                  "topPaste"
                ]
              },
              compositionEnd: {
                phasedRegistrationNames: {
                  bubbled: "onCompositionEnd",
                  captured: "onCompositionEndCapture"
                },
                dependencies: [
                  "topBlur",
                  "topCompositionEnd",
                  "topKeyDown",
                  "topKeyPress",
                  "topKeyUp",
                  "topMouseDown"
                ]
              },
              compositionStart: {
                phasedRegistrationNames: {
                  bubbled: "onCompositionStart",
                  captured: "onCompositionStartCapture"
                },
                dependencies: [
                  "topBlur",
                  "topCompositionStart",
                  "topKeyDown",
                  "topKeyPress",
                  "topKeyUp",
                  "topMouseDown"
                ]
              },
              compositionUpdate: {
                phasedRegistrationNames: {
                  bubbled: "onCompositionUpdate",
                  captured: "onCompositionUpdateCapture"
                },
                dependencies: [
                  "topBlur",
                  "topCompositionUpdate",
                  "topKeyDown",
                  "topKeyPress",
                  "topKeyUp",
                  "topMouseDown"
                ]
              }
            };

            // Track whether we've ever handled a keypress on the space key.
            var hasSpaceKeypress = false;

            /**
             * Return whether a native keypress event is assumed to be a command.
             * This is required because Firefox fires `keypress` events for key commands
             * (cut, copy, select-all, etc.) even though no character is inserted.
             */
            function isKeypressCommand(nativeEvent) {
              return (
                (nativeEvent.ctrlKey ||
                  nativeEvent.altKey ||
                  nativeEvent.metaKey) &&
                // ctrlKey && altKey is equivalent to AltGr, and is not a command.
                !(nativeEvent.ctrlKey && nativeEvent.altKey)
              );
            }

            /**
             * Translate native top level events into event types.
             *
             * @param {string} topLevelType
             * @return {object}
             */
            function getCompositionEventType(topLevelType) {
              switch (topLevelType) {
                case "topCompositionStart":
                  return eventTypes.compositionStart;
                case "topCompositionEnd":
                  return eventTypes.compositionEnd;
                case "topCompositionUpdate":
                  return eventTypes.compositionUpdate;
              }
            }

            /**
             * Does our fallback best-guess model think this event signifies that
             * composition has begun?
             *
             * @param {string} topLevelType
             * @param {object} nativeEvent
             * @return {boolean}
             */
            function isFallbackCompositionStart(topLevelType, nativeEvent) {
              return (
                topLevelType === "topKeyDown" &&
                nativeEvent.keyCode === START_KEYCODE
              );
            }

            /**
             * Does our fallback mode think that this event is the end of composition?
             *
             * @param {string} topLevelType
             * @param {object} nativeEvent
             * @return {boolean}
             */
            function isFallbackCompositionEnd(topLevelType, nativeEvent) {
              switch (topLevelType) {
                case "topKeyUp":
                  // Command keys insert or clear IME input.
                  return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
                case "topKeyDown":
                  // Expect IME keyCode on each keydown. If we get any other
                  // code we must have exited earlier.
                  return nativeEvent.keyCode !== START_KEYCODE;
                case "topKeyPress":
                case "topMouseDown":
                case "topBlur":
                  // Events are not possible without cancelling IME.
                  return true;
                default:
                  return false;
              }
            }

            /**
             * Google Input Tools provides composition data via a CustomEvent,
             * with the `data` property populated in the `detail` object. If this
             * is available on the event object, use it. If not, this is a plain
             * composition event and we have nothing special to extract.
             *
             * @param {object} nativeEvent
             * @return {?string}
             */
            function getDataFromCustomEvent(nativeEvent) {
              var detail = nativeEvent.detail;
              if (typeof detail === "object" && "data" in detail) {
                return detail.data;
              }
              return null;
            }

            // Track the current IME composition status, if any.
            var isComposing = false;

            /**
             * @return {?object} A SyntheticCompositionEvent.
             */
            function extractCompositionEvent(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var eventType;
              var fallbackData;

              if (canUseCompositionEvent) {
                eventType = getCompositionEventType(topLevelType);
              } else if (!isComposing) {
                if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
                  eventType = eventTypes.compositionStart;
                }
              } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
                eventType = eventTypes.compositionEnd;
              }

              if (!eventType) {
                return null;
              }

              if (useFallbackCompositionData) {
                // The current composition is stored statically and must not be
                // overwritten while composition continues.
                if (!isComposing && eventType === eventTypes.compositionStart) {
                  isComposing = initialize(nativeEventTarget);
                } else if (eventType === eventTypes.compositionEnd) {
                  if (isComposing) {
                    fallbackData = getData();
                  }
                }
              }

              var event = SyntheticCompositionEvent.getPooled(
                eventType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );

              if (fallbackData) {
                // Inject data generated from fallback path into the synthetic event.
                // This matches the property of native CompositionEventInterface.
                event.data = fallbackData;
              } else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) {
                  event.data = customData;
                }
              }

              accumulateTwoPhaseDispatches(event);
              return event;
            }

            /**
             * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
             * @param {object} nativeEvent Native browser event.
             * @return {?string} The string corresponding to this `beforeInput` event.
             */
            function getNativeBeforeInputChars(topLevelType, nativeEvent) {
              switch (topLevelType) {
                case "topCompositionEnd":
                  return getDataFromCustomEvent(nativeEvent);
                case "topKeyPress":
                  /**
                   * If native `textInput` events are available, our goal is to make
                   * use of them. However, there is a special case: the spacebar key.
                   * In Webkit, preventing default on a spacebar `textInput` event
                   * cancels character insertion, but it *also* causes the browser
                   * to fall back to its default spacebar behavior of scrolling the
                   * page.
                   *
                   * Tracking at:
                   * https://code.google.com/p/chromium/issues/detail?id=355103
                   *
                   * To avoid this issue, use the keypress event as if no `textInput`
                   * event is available.
                   */
                  var which = nativeEvent.which;
                  if (which !== SPACEBAR_CODE) {
                    return null;
                  }

                  hasSpaceKeypress = true;
                  return SPACEBAR_CHAR;

                case "topTextInput":
                  // Record the characters to be added to the DOM.
                  var chars = nativeEvent.data;

                  // If it's a spacebar character, assume that we have already handled
                  // it at the keypress level and bail immediately. Android Chrome
                  // doesn't give us keycodes, so we need to blacklist it.
                  if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                    return null;
                  }

                  return chars;

                default:
                  // For other native event types, do nothing.
                  return null;
              }
            }

            /**
             * For browsers that do not provide the `textInput` event, extract the
             * appropriate string to use for SyntheticInputEvent.
             *
             * @param {string} topLevelType Record from `BrowserEventConstants`.
             * @param {object} nativeEvent Native browser event.
             * @return {?string} The fallback string for this `beforeInput` event.
             */
            function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
              // If we are currently composing (IME) and using a fallback to do so,
              // try to extract the composed characters from the fallback object.
              // If composition event is available, we extract a string only at
              // compositionevent, otherwise extract it at fallback events.
              if (isComposing) {
                if (
                  topLevelType === "topCompositionEnd" ||
                  (!canUseCompositionEvent &&
                    isFallbackCompositionEnd(topLevelType, nativeEvent))
                ) {
                  var chars = getData();
                  reset();
                  isComposing = false;
                  return chars;
                }
                return null;
              }

              switch (topLevelType) {
                case "topPaste":
                  // If a paste event occurs after a keypress, throw out the input
                  // chars. Paste events should not lead to BeforeInput events.
                  return null;
                case "topKeyPress":
                  /**
                   * As of v27, Firefox may fire keypress events even when no character
                   * will be inserted. A few possibilities:
                   *
                   * - `which` is `0`. Arrow keys, Esc key, etc.
                   *
                   * - `which` is the pressed key code, but no char is available.
                   *   Ex: 'AltGr + d` in Polish. There is no modified character for
                   *   this key combination and no character is inserted into the
                   *   document, but FF fires the keypress for char code `100` anyway.
                   *   No `input` event will occur.
                   *
                   * - `which` is the pressed key code, but a command combination is
                   *   being used. Ex: `Cmd+C`. No character is inserted, and no
                   *   `input` event will occur.
                   */
                  if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) {
                      return nativeEvent.char;
                    } else if (nativeEvent.which) {
                      return String.fromCharCode(nativeEvent.which);
                    }
                  }
                  return null;
                case "topCompositionEnd":
                  return useFallbackCompositionData ? null : nativeEvent.data;
                default:
                  return null;
              }
            }

            /**
             * Extract a SyntheticInputEvent for `beforeInput`, based on either native
             * `textInput` or fallback behavior.
             *
             * @return {?object} A SyntheticInputEvent.
             */
            function extractBeforeInputEvent(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var chars;

              if (canUseTextInputEvent) {
                chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
              } else {
                chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
              }

              // If no characters are being inserted, no BeforeInput event should
              // be fired.
              if (!chars) {
                return null;
              }

              var event = SyntheticInputEvent.getPooled(
                eventTypes.beforeInput,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );

              event.data = chars;
              accumulateTwoPhaseDispatches(event);
              return event;
            }

            /**
             * Create an `onBeforeInput` event to match
             * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
             *
             * This event plugin is based on the native `textInput` event
             * available in Chrome, Safari, Opera, and IE. This event fires after
             * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
             *
             * `beforeInput` is spec'd but not implemented in any browsers, and
             * the `input` event does not provide any useful information about what has
             * actually been added, contrary to the spec. Thus, `textInput` is the best
             * available event to identify the characters that have actually been inserted
             * into the target node.
             *
             * This plugin is also responsible for emitting `composition` events, thus
             * allowing us to share composition fallback code for both `beforeInput` and
             * `composition` event types.
             */
            var BeforeInputEventPlugin = {
              eventTypes: eventTypes,

              extractEvents: function(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              ) {
                return [
                  extractCompositionEvent(
                    topLevelType,
                    targetInst,
                    nativeEvent,
                    nativeEventTarget
                  ),
                  extractBeforeInputEvent(
                    topLevelType,
                    targetInst,
                    nativeEvent,
                    nativeEventTarget
                  )
                ];
              }
            };

            // Use to restore controlled state after a change event has fired.

            var fiberHostComponent = null;

            var ReactControlledComponentInjection = {
              injectFiberControlledHostComponent: function(hostComponentImpl) {
                // The fiber implementation doesn't use dynamic dispatch so we need to
                // inject the implementation.
                fiberHostComponent = hostComponentImpl;
              }
            };

            var restoreTarget = null;
            var restoreQueue = null;

            function restoreStateOfTarget(target) {
              // We perform this translation at the end of the event loop so that we
              // always receive the correct fiber here
              var internalInstance = getInstanceFromNode(target);
              if (!internalInstance) {
                // Unmounted
                return;
              }
              !(
                fiberHostComponent &&
                typeof fiberHostComponent.restoreControlledState === "function"
              )
                ? invariant(
                    false,
                    "Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              var props = getFiberCurrentPropsFromNode(
                internalInstance.stateNode
              );
              fiberHostComponent.restoreControlledState(
                internalInstance.stateNode,
                internalInstance.type,
                props
              );
            }

            var injection$3 = ReactControlledComponentInjection;

            function enqueueStateRestore(target) {
              if (restoreTarget) {
                if (restoreQueue) {
                  restoreQueue.push(target);
                } else {
                  restoreQueue = [target];
                }
              } else {
                restoreTarget = target;
              }
            }

            function restoreStateIfNeeded() {
              if (!restoreTarget) {
                return;
              }
              var target = restoreTarget;
              var queuedTargets = restoreQueue;
              restoreTarget = null;
              restoreQueue = null;

              restoreStateOfTarget(target);
              if (queuedTargets) {
                for (var i = 0; i < queuedTargets.length; i++) {
                  restoreStateOfTarget(queuedTargets[i]);
                }
              }
            }

            var ReactControlledComponent = Object.freeze({
              injection: injection$3,
              enqueueStateRestore: enqueueStateRestore,
              restoreStateIfNeeded: restoreStateIfNeeded
            });

            // Used as a way to call batchedUpdates when we don't have a reference to
            // the renderer. Such as when we're dispatching events or if third party
            // libraries need to call batchedUpdates. Eventually, this API will go away when
            // everything is batched by default. We'll then have a similar API to opt-out of
            // scheduled work and instead do synchronous work.

            // Defaults
            var fiberBatchedUpdates = function(fn, bookkeeping) {
              return fn(bookkeeping);
            };

            var isNestingBatched = false;
            function batchedUpdates(fn, bookkeeping) {
              if (isNestingBatched) {
                // If we are currently inside another batch, we need to wait until it
                // fully completes before restoring state. Therefore, we add the target to
                // a queue of work.
                return fiberBatchedUpdates(fn, bookkeeping);
              }
              isNestingBatched = true;
              try {
                return fiberBatchedUpdates(fn, bookkeeping);
              } finally {
                // Here we wait until all updates have propagated, which is important
                // when using controlled components within layers:
                // https://github.com/facebook/react/issues/1698
                // Then we restore state of any controlled component.
                isNestingBatched = false;
                restoreStateIfNeeded();
              }
            }

            var ReactGenericBatchingInjection = {
              injectFiberBatchedUpdates: function(_batchedUpdates) {
                fiberBatchedUpdates = _batchedUpdates;
              }
            };

            var injection$4 = ReactGenericBatchingInjection;

            /**
             * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
             */
            var supportedInputTypes = {
              color: true,
              date: true,
              datetime: true,
              "datetime-local": true,
              email: true,
              month: true,
              number: true,
              password: true,
              range: true,
              search: true,
              tel: true,
              text: true,
              time: true,
              url: true,
              week: true
            };

            function isTextInputElement(elem) {
              var nodeName =
                elem && elem.nodeName && elem.nodeName.toLowerCase();

              if (nodeName === "input") {
                return !!supportedInputTypes[elem.type];
              }

              if (nodeName === "textarea") {
                return true;
              }

              return false;
            }

            /**
             * HTML nodeType values that represent the type of the node
             */

            var ELEMENT_NODE = 1;
            var TEXT_NODE = 3;
            var COMMENT_NODE = 8;
            var DOCUMENT_NODE = 9;
            var DOCUMENT_FRAGMENT_NODE = 11;

            /**
             * Gets the target node from a native browser event by accounting for
             * inconsistencies in browser DOM APIs.
             *
             * @param {object} nativeEvent Native browser event.
             * @return {DOMEventTarget} Target node.
             */
            function getEventTarget(nativeEvent) {
              var target =
                nativeEvent.target || nativeEvent.srcElement || window;

              // Normalize SVG <use> element events #4963
              if (target.correspondingUseElement) {
                target = target.correspondingUseElement;
              }

              // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
              // @see http://www.quirksmode.org/js/events_properties.html
              return target.nodeType === TEXT_NODE ? target.parentNode : target;
            }

            var useHasFeature;
            if (ExecutionEnvironment.canUseDOM) {
              useHasFeature =
                document.implementation &&
                document.implementation.hasFeature &&
                // always returns true in newer browsers as per the standard.
                // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
                document.implementation.hasFeature("", "") !== true;
            }

            /**
             * Checks if an event is supported in the current execution environment.
             *
             * NOTE: This will not work correctly for non-generic events such as `change`,
             * `reset`, `load`, `error`, and `select`.
             *
             * Borrows from Modernizr.
             *
             * @param {string} eventNameSuffix Event name, e.g. "click".
             * @param {?boolean} capture Check if the capture phase is supported.
             * @return {boolean} True if the event is supported.
             * @internal
             * @license Modernizr 3.0.0pre (Custom Build) | MIT
             */
            function isEventSupported(eventNameSuffix, capture) {
              if (
                !ExecutionEnvironment.canUseDOM ||
                (capture && !("addEventListener" in document))
              ) {
                return false;
              }

              var eventName = "on" + eventNameSuffix;
              var isSupported = eventName in document;

              if (!isSupported) {
                var element = document.createElement("div");
                element.setAttribute(eventName, "return;");
                isSupported = typeof element[eventName] === "function";
              }

              if (
                !isSupported &&
                useHasFeature &&
                eventNameSuffix === "wheel"
              ) {
                // This is the only way to test support for the `wheel` event in IE9+.
                isSupported = document.implementation.hasFeature(
                  "Events.wheel",
                  "3.0"
                );
              }

              return isSupported;
            }

            function isCheckable(elem) {
              var type = elem.type;
              var nodeName = elem.nodeName;
              return (
                nodeName &&
                nodeName.toLowerCase() === "input" &&
                (type === "checkbox" || type === "radio")
              );
            }

            function getTracker(node) {
              return node._valueTracker;
            }

            function detachTracker(node) {
              node._valueTracker = null;
            }

            function getValueFromNode(node) {
              var value = "";
              if (!node) {
                return value;
              }

              if (isCheckable(node)) {
                value = node.checked ? "true" : "false";
              } else {
                value = node.value;
              }

              return value;
            }

            function trackValueOnNode(node) {
              var valueField = isCheckable(node) ? "checked" : "value";
              var descriptor = Object.getOwnPropertyDescriptor(
                node.constructor.prototype,
                valueField
              );

              var currentValue = "" + node[valueField];

              // if someone has already defined a value or Safari, then bail
              // and don't track value will cause over reporting of changes,
              // but it's better then a hard failure
              // (needed for certain tests that spyOn input values and Safari)
              if (
                node.hasOwnProperty(valueField) ||
                typeof descriptor.get !== "function" ||
                typeof descriptor.set !== "function"
              ) {
                return;
              }

              Object.defineProperty(node, valueField, {
                enumerable: descriptor.enumerable,
                configurable: true,
                get: function() {
                  return descriptor.get.call(this);
                },
                set: function(value) {
                  currentValue = "" + value;
                  descriptor.set.call(this, value);
                }
              });

              var tracker = {
                getValue: function() {
                  return currentValue;
                },
                setValue: function(value) {
                  currentValue = "" + value;
                },
                stopTracking: function() {
                  detachTracker(node);
                  delete node[valueField];
                }
              };
              return tracker;
            }

            function track(node) {
              if (getTracker(node)) {
                return;
              }

              // TODO: Once it's just Fiber we can move this to node._wrapperState
              node._valueTracker = trackValueOnNode(node);
            }

            function updateValueIfChanged(node) {
              if (!node) {
                return false;
              }

              var tracker = getTracker(node);
              // if there is no tracker at this point it's unlikely
              // that trying again will succeed
              if (!tracker) {
                return true;
              }

              var lastValue = tracker.getValue();
              var nextValue = getValueFromNode(node);
              if (nextValue !== lastValue) {
                tracker.setValue(nextValue);
                return true;
              }
              return false;
            }

            var eventTypes$1 = {
              change: {
                phasedRegistrationNames: {
                  bubbled: "onChange",
                  captured: "onChangeCapture"
                },
                dependencies: [
                  "topBlur",
                  "topChange",
                  "topClick",
                  "topFocus",
                  "topInput",
                  "topKeyDown",
                  "topKeyUp",
                  "topSelectionChange"
                ]
              }
            };

            function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
              var event = SyntheticEvent$1.getPooled(
                eventTypes$1.change,
                inst,
                nativeEvent,
                target
              );
              event.type = "change";
              // Flag this event loop as needing state restore.
              enqueueStateRestore(target);
              accumulateTwoPhaseDispatches(event);
              return event;
            }
            /**
             * For IE shims
             */
            var activeElement = null;
            var activeElementInst = null;

            /**
             * SECTION: handle `change` event
             */
            function shouldUseChangeEvent(elem) {
              var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
              return (
                nodeName === "select" ||
                (nodeName === "input" && elem.type === "file")
              );
            }

            function manualDispatchChangeEvent(nativeEvent) {
              var event = createAndAccumulateChangeEvent(
                activeElementInst,
                nativeEvent,
                getEventTarget(nativeEvent)
              );

              // If change and propertychange bubbled, we'd just bind to it like all the
              // other events and have it go through ReactBrowserEventEmitter. Since it
              // doesn't, we manually listen for the events and so we have to enqueue and
              // process the abstract event manually.
              //
              // Batching is necessary here in order to ensure that all event handlers run
              // before the next rerender (including event handlers attached to ancestor
              // elements instead of directly on the input). Without this, controlled
              // components don't work properly in conjunction with event bubbling because
              // the component is rerendered and the value reverted before all the event
              // handlers can run. See https://github.com/facebook/react/issues/708.
              batchedUpdates(runEventInBatch, event);
            }

            function runEventInBatch(event) {
              enqueueEvents(event);
              processEventQueue(false);
            }

            function getInstIfValueChanged(targetInst) {
              var targetNode = getNodeFromInstance$1(targetInst);
              if (updateValueIfChanged(targetNode)) {
                return targetInst;
              }
            }

            function getTargetInstForChangeEvent(topLevelType, targetInst) {
              if (topLevelType === "topChange") {
                return targetInst;
              }
            }

            /**
             * SECTION: handle `input` event
             */
            var isInputEventSupported = false;
            if (ExecutionEnvironment.canUseDOM) {
              // IE9 claims to support the input event but fails to trigger it when
              // deleting text, so we ignore its input events.
              isInputEventSupported =
                isEventSupported("input") &&
                (!document.documentMode || document.documentMode > 9);
            }

            /**
             * (For IE <=9) Starts tracking propertychange events on the passed-in element
             * and override the value property so that we can distinguish user events from
             * value changes in JS.
             */
            function startWatchingForValueChange(target, targetInst) {
              activeElement = target;
              activeElementInst = targetInst;
              activeElement.attachEvent(
                "onpropertychange",
                handlePropertyChange
              );
            }

            /**
             * (For IE <=9) Removes the event listeners from the currently-tracked element,
             * if any exists.
             */
            function stopWatchingForValueChange() {
              if (!activeElement) {
                return;
              }
              activeElement.detachEvent(
                "onpropertychange",
                handlePropertyChange
              );
              activeElement = null;
              activeElementInst = null;
            }

            /**
             * (For IE <=9) Handles a propertychange event, sending a `change` event if
             * the value of the active element has changed.
             */
            function handlePropertyChange(nativeEvent) {
              if (nativeEvent.propertyName !== "value") {
                return;
              }
              if (getInstIfValueChanged(activeElementInst)) {
                manualDispatchChangeEvent(nativeEvent);
              }
            }

            function handleEventsForInputEventPolyfill(
              topLevelType,
              target,
              targetInst
            ) {
              if (topLevelType === "topFocus") {
                // In IE9, propertychange fires for most input events but is buggy and
                // doesn't fire when text is deleted, but conveniently, selectionchange
                // appears to fire in all of the remaining cases so we catch those and
                // forward the event if the value has changed
                // In either case, we don't want to call the event handler if the value
                // is changed from JS so we redefine a setter for `.value` that updates
                // our activeElementValue variable, allowing us to ignore those changes
                //
                // stopWatching() should be a noop here but we call it just in case we
                // missed a blur event somehow.
                stopWatchingForValueChange();
                startWatchingForValueChange(target, targetInst);
              } else if (topLevelType === "topBlur") {
                stopWatchingForValueChange();
              }
            }

            // For IE8 and IE9.
            function getTargetInstForInputEventPolyfill(
              topLevelType,
              targetInst
            ) {
              if (
                topLevelType === "topSelectionChange" ||
                topLevelType === "topKeyUp" ||
                topLevelType === "topKeyDown"
              ) {
                // On the selectionchange event, the target is just document which isn't
                // helpful for us so just check activeElement instead.
                //
                // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
                // propertychange on the first input event after setting `value` from a
                // script and fires only keydown, keypress, keyup. Catching keyup usually
                // gets it and catching keydown lets us fire an event for the first
                // keystroke if user does a key repeat (it'll be a little delayed: right
                // before the second keystroke). Other input methods (e.g., paste) seem to
                // fire selectionchange normally.
                return getInstIfValueChanged(activeElementInst);
              }
            }

            /**
             * SECTION: handle `click` event
             */
            function shouldUseClickEvent(elem) {
              // Use the `click` event to detect changes to checkbox and radio inputs.
              // This approach works across all browsers, whereas `change` does not fire
              // until `blur` in IE8.
              var nodeName = elem.nodeName;
              return (
                nodeName &&
                nodeName.toLowerCase() === "input" &&
                (elem.type === "checkbox" || elem.type === "radio")
              );
            }

            function getTargetInstForClickEvent(topLevelType, targetInst) {
              if (topLevelType === "topClick") {
                return getInstIfValueChanged(targetInst);
              }
            }

            function getTargetInstForInputOrChangeEvent(
              topLevelType,
              targetInst
            ) {
              if (topLevelType === "topInput" || topLevelType === "topChange") {
                return getInstIfValueChanged(targetInst);
              }
            }

            function handleControlledInputBlur(inst, node) {
              // TODO: In IE, inst is occasionally null. Why?
              if (inst == null) {
                return;
              }

              // Fiber and ReactDOM keep wrapper state in separate places
              var state = inst._wrapperState || node._wrapperState;

              if (!state || !state.controlled || node.type !== "number") {
                return;
              }

              // If controlled, assign the value attribute to the current value on blur
              var value = "" + node.value;
              if (node.getAttribute("value") !== value) {
                node.setAttribute("value", value);
              }
            }

            /**
             * This plugin creates an `onChange` event that normalizes change events
             * across form elements. This event fires at a time when it's possible to
             * change the element's value without seeing a flicker.
             *
             * Supported elements are:
             * - input (see `isTextInputElement`)
             * - textarea
             * - select
             */
            var ChangeEventPlugin = {
              eventTypes: eventTypes$1,

              _isInputEventSupported: isInputEventSupported,

              extractEvents: function(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              ) {
                var targetNode = targetInst
                  ? getNodeFromInstance$1(targetInst)
                  : window;

                var getTargetInstFunc, handleEventFunc;
                if (shouldUseChangeEvent(targetNode)) {
                  getTargetInstFunc = getTargetInstForChangeEvent;
                } else if (isTextInputElement(targetNode)) {
                  if (isInputEventSupported) {
                    getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                  } else {
                    getTargetInstFunc = getTargetInstForInputEventPolyfill;
                    handleEventFunc = handleEventsForInputEventPolyfill;
                  }
                } else if (shouldUseClickEvent(targetNode)) {
                  getTargetInstFunc = getTargetInstForClickEvent;
                }

                if (getTargetInstFunc) {
                  var inst = getTargetInstFunc(topLevelType, targetInst);
                  if (inst) {
                    var event = createAndAccumulateChangeEvent(
                      inst,
                      nativeEvent,
                      nativeEventTarget
                    );
                    return event;
                  }
                }

                if (handleEventFunc) {
                  handleEventFunc(topLevelType, targetNode, targetInst);
                }

                // When blurring, set the value attribute for number inputs
                if (topLevelType === "topBlur") {
                  handleControlledInputBlur(targetInst, targetNode);
                }
              }
            };

            /**
             * Module that is injectable into `EventPluginHub`, that specifies a
             * deterministic ordering of `EventPlugin`s. A convenient way to reason about
             * plugins, without having to package every one of them. This is better than
             * having plugins be ordered in the same order that they are injected because
             * that ordering would be influenced by the packaging order.
             * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
             * preventing default on events is convenient in `SimpleEventPlugin` handlers.
             */
            var DOMEventPluginOrder = [
              "ResponderEventPlugin",
              "SimpleEventPlugin",
              "TapEventPlugin",
              "EnterLeaveEventPlugin",
              "ChangeEventPlugin",
              "SelectEventPlugin",
              "BeforeInputEventPlugin"
            ];

            /**
             * @interface UIEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var UIEventInterface = {
              view: null,
              detail: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticUIEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(SyntheticUIEvent, UIEventInterface);

            /**
             * Translation from modifier key to the associated property in the event.
             * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
             */

            var modifierKeyToProp = {
              Alt: "altKey",
              Control: "ctrlKey",
              Meta: "metaKey",
              Shift: "shiftKey"
            };

            // IE8 does not implement getModifierState so we simply map it to the only
            // modifier keys exposed by the event itself, does not support Lock-keys.
            // Currently, all major browsers except Chrome seems to support Lock-keys.
            function modifierStateGetter(keyArg) {
              var syntheticEvent = this;
              var nativeEvent = syntheticEvent.nativeEvent;
              if (nativeEvent.getModifierState) {
                return nativeEvent.getModifierState(keyArg);
              }
              var keyProp = modifierKeyToProp[keyArg];
              return keyProp ? !!nativeEvent[keyProp] : false;
            }

            function getEventModifierState(nativeEvent) {
              return modifierStateGetter;
            }

            /**
             * @interface MouseEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var MouseEventInterface = {
              screenX: null,
              screenY: null,
              clientX: null,
              clientY: null,
              pageX: null,
              pageY: null,
              ctrlKey: null,
              shiftKey: null,
              altKey: null,
              metaKey: null,
              getModifierState: getEventModifierState,
              button: null,
              buttons: null,
              relatedTarget: function(event) {
                return (
                  event.relatedTarget ||
                  (event.fromElement === event.srcElement
                    ? event.toElement
                    : event.fromElement)
                );
              }
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticUIEvent}
             */
            function SyntheticMouseEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticUIEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticUIEvent.augmentClass(
              SyntheticMouseEvent,
              MouseEventInterface
            );

            var eventTypes$2 = {
              mouseEnter: {
                registrationName: "onMouseEnter",
                dependencies: ["topMouseOut", "topMouseOver"]
              },
              mouseLeave: {
                registrationName: "onMouseLeave",
                dependencies: ["topMouseOut", "topMouseOver"]
              }
            };

            var EnterLeaveEventPlugin = {
              eventTypes: eventTypes$2,

              /**
               * For almost every interaction we care about, there will be both a top-level
               * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
               * we do not extract duplicate events. However, moving the mouse into the
               * browser from outside will not fire a `mouseout` event. In this case, we use
               * the `mouseover` top-level event.
               */
              extractEvents: function(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              ) {
                if (
                  topLevelType === "topMouseOver" &&
                  (nativeEvent.relatedTarget || nativeEvent.fromElement)
                ) {
                  return null;
                }
                if (
                  topLevelType !== "topMouseOut" &&
                  topLevelType !== "topMouseOver"
                ) {
                  // Must not be a mouse in or mouse out - ignoring.
                  return null;
                }

                var win;
                if (nativeEventTarget.window === nativeEventTarget) {
                  // `nativeEventTarget` is probably a window object.
                  win = nativeEventTarget;
                } else {
                  // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                  var doc = nativeEventTarget.ownerDocument;
                  if (doc) {
                    win = doc.defaultView || doc.parentWindow;
                  } else {
                    win = window;
                  }
                }

                var from;
                var to;
                if (topLevelType === "topMouseOut") {
                  from = targetInst;
                  var related =
                    nativeEvent.relatedTarget || nativeEvent.toElement;
                  to = related ? getClosestInstanceFromNode(related) : null;
                } else {
                  // Moving to a node from outside the window.
                  from = null;
                  to = targetInst;
                }

                if (from === to) {
                  // Nothing pertains to our managed components.
                  return null;
                }

                var fromNode = from == null ? win : getNodeFromInstance$1(from);
                var toNode = to == null ? win : getNodeFromInstance$1(to);

                var leave = SyntheticMouseEvent.getPooled(
                  eventTypes$2.mouseLeave,
                  from,
                  nativeEvent,
                  nativeEventTarget
                );
                leave.type = "mouseleave";
                leave.target = fromNode;
                leave.relatedTarget = toNode;

                var enter = SyntheticMouseEvent.getPooled(
                  eventTypes$2.mouseEnter,
                  to,
                  nativeEvent,
                  nativeEventTarget
                );
                enter.type = "mouseenter";
                enter.target = toNode;
                enter.relatedTarget = fromNode;

                accumulateEnterLeaveDispatches(leave, enter, from, to);

                return [leave, enter];
              }
            };

            /**
             * `ReactInstanceMap` maintains a mapping from a public facing stateful
             * instance (key) and the internal representation (value). This allows public
             * methods to accept the user facing instance as an argument and map them back
             * to internal methods.
             *
             * Note that this module is currently shared and assumed to be stateless.
             * If this becomes an actual Map, that will break.
             */

            /**
             * This API should be called `delete` but we'd have to make sure to always
             * transform these to strings for IE support. When this transform is fully
             * supported we can rename it.
             */

            function get(key) {
              return key._reactInternalFiber;
            }

            function has(key) {
              return key._reactInternalFiber !== undefined;
            }

            function set(key, value) {
              key._reactInternalFiber = value;
            }

            var ReactInternals =
              React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

            var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
            var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

            function getComponentName(fiber) {
              var type = fiber.type;

              if (typeof type === "string") {
                return type;
              }
              if (typeof type === "function") {
                return type.displayName || type.name;
              }
              return null;
            }

            // Don't change these two values:
            var NoEffect = 0; //           0b00000000
            var PerformedWork = 1; //      0b00000001

            // You can change the rest (and add more).
            var Placement = 2; //          0b00000010
            var Update = 4; //             0b00000100
            var PlacementAndUpdate = 6; // 0b00000110
            var Deletion = 8; //           0b00001000
            var ContentReset = 16; //      0b00010000
            var Callback = 32; //          0b00100000
            var Err = 64; //               0b01000000
            var Ref = 128; //              0b10000000

            var MOUNTING = 1;
            var MOUNTED = 2;
            var UNMOUNTED = 3;

            function isFiberMountedImpl(fiber) {
              var node = fiber;
              if (!fiber.alternate) {
                // If there is no alternate, this might be a new tree that isn't inserted
                // yet. If it is, then it will have a pending insertion effect on it.
                if ((node.effectTag & Placement) !== NoEffect) {
                  return MOUNTING;
                }
                while (node["return"]) {
                  node = node["return"];
                  if ((node.effectTag & Placement) !== NoEffect) {
                    return MOUNTING;
                  }
                }
              } else {
                while (node["return"]) {
                  node = node["return"];
                }
              }
              if (node.tag === HostRoot) {
                // TODO: Check if this was a nested HostRoot when used with
                // renderContainerIntoSubtree.
                return MOUNTED;
              }
              // If we didn't hit the root, that means that we're in an disconnected tree
              // that has been unmounted.
              return UNMOUNTED;
            }

            function isFiberMounted(fiber) {
              return isFiberMountedImpl(fiber) === MOUNTED;
            }

            function isMounted(component) {
              {
                var owner = ReactCurrentOwner.current;
                if (owner !== null && owner.tag === ClassComponent) {
                  var ownerFiber = owner;
                  var instance = ownerFiber.stateNode;
                  warning(
                    instance._warnedAboutRefsInRender,
                    "%s is accessing isMounted inside its render() function. " +
                      "render() should be a pure function of props and state. It should " +
                      "never access something that requires stale data from the previous " +
                      "render, such as refs. Move this logic to componentDidMount and " +
                      "componentDidUpdate instead.",
                    getComponentName(ownerFiber) || "A component"
                  );
                  instance._warnedAboutRefsInRender = true;
                }
              }

              var fiber = get(component);
              if (!fiber) {
                return false;
              }
              return isFiberMountedImpl(fiber) === MOUNTED;
            }

            function assertIsMounted(fiber) {
              !(isFiberMountedImpl(fiber) === MOUNTED)
                ? invariant(
                    false,
                    "Unable to find node on an unmounted component."
                  )
                : void 0;
            }

            function findCurrentFiberUsingSlowPath(fiber) {
              var alternate = fiber.alternate;
              if (!alternate) {
                // If there is no alternate, then we only need to check if it is mounted.
                var state = isFiberMountedImpl(fiber);
                !(state !== UNMOUNTED)
                  ? invariant(
                      false,
                      "Unable to find node on an unmounted component."
                    )
                  : void 0;
                if (state === MOUNTING) {
                  return null;
                }
                return fiber;
              }
              // If we have two possible branches, we'll walk backwards up to the root
              // to see what path the root points to. On the way we may hit one of the
              // special cases and we'll deal with them.
              var a = fiber;
              var b = alternate;
              while (true) {
                var parentA = a["return"];
                var parentB = parentA ? parentA.alternate : null;
                if (!parentA || !parentB) {
                  // We're at the root.
                  break;
                }

                // If both copies of the parent fiber point to the same child, we can
                // assume that the child is current. This happens when we bailout on low
                // priority: the bailed out fiber's child reuses the current child.
                if (parentA.child === parentB.child) {
                  var child = parentA.child;
                  while (child) {
                    if (child === a) {
                      // We've determined that A is the current branch.
                      assertIsMounted(parentA);
                      return fiber;
                    }
                    if (child === b) {
                      // We've determined that B is the current branch.
                      assertIsMounted(parentA);
                      return alternate;
                    }
                    child = child.sibling;
                  }
                  // We should never have an alternate for any mounting node. So the only
                  // way this could possibly happen is if this was unmounted, if at all.
                  invariant(
                    false,
                    "Unable to find node on an unmounted component."
                  );
                }

                if (a["return"] !== b["return"]) {
                  // The return pointer of A and the return pointer of B point to different
                  // fibers. We assume that return pointers never criss-cross, so A must
                  // belong to the child set of A.return, and B must belong to the child
                  // set of B.return.
                  a = parentA;
                  b = parentB;
                } else {
                  // The return pointers point to the same fiber. We'll have to use the
                  // default, slow path: scan the child sets of each parent alternate to see
                  // which child belongs to which set.
                  //
                  // Search parent A's child set
                  var didFindChild = false;
                  var _child = parentA.child;
                  while (_child) {
                    if (_child === a) {
                      didFindChild = true;
                      a = parentA;
                      b = parentB;
                      break;
                    }
                    if (_child === b) {
                      didFindChild = true;
                      b = parentA;
                      a = parentB;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while (_child) {
                      if (_child === a) {
                        didFindChild = true;
                        a = parentB;
                        b = parentA;
                        break;
                      }
                      if (_child === b) {
                        didFindChild = true;
                        b = parentB;
                        a = parentA;
                        break;
                      }
                      _child = _child.sibling;
                    }
                    !didFindChild
                      ? invariant(
                          false,
                          "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."
                        )
                      : void 0;
                  }
                }

                !(a.alternate === b)
                  ? invariant(
                      false,
                      "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
              }
              // If the root is not a host container, we're in a disconnected tree. I.e.
              // unmounted.
              !(a.tag === HostRoot)
                ? invariant(
                    false,
                    "Unable to find node on an unmounted component."
                  )
                : void 0;
              if (a.stateNode.current === a) {
                // We've determined that A is the current branch.
                return fiber;
              }
              // Otherwise B has to be current branch.
              return alternate;
            }

            function findCurrentHostFiber(parent) {
              var currentParent = findCurrentFiberUsingSlowPath(parent);
              if (!currentParent) {
                return null;
              }

              // Next we'll drill down this component to find the first HostComponent/Text.
              var node = currentParent;
              while (true) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  return node;
                } else if (node.child) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                if (node === currentParent) {
                  return null;
                }
                while (!node.sibling) {
                  if (!node["return"] || node["return"] === currentParent) {
                    return null;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
              // Flow needs the return null here, but ESLint complains about it.
              // eslint-disable-next-line no-unreachable
              return null;
            }

            function findCurrentHostFiberWithNoPortals(parent) {
              var currentParent = findCurrentFiberUsingSlowPath(parent);
              if (!currentParent) {
                return null;
              }

              // Next we'll drill down this component to find the first HostComponent/Text.
              var node = currentParent;
              while (true) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  return node;
                } else if (node.child && node.tag !== HostPortal) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                if (node === currentParent) {
                  return null;
                }
                while (!node.sibling) {
                  if (!node["return"] || node["return"] === currentParent) {
                    return null;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
              // Flow needs the return null here, but ESLint complains about it.
              // eslint-disable-next-line no-unreachable
              return null;
            }

            var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
            var callbackBookkeepingPool = [];

            /**
             * Find the deepest React component completely containing the root of the
             * passed-in instance (for use when entire React trees are nested within each
             * other). If React trees are not nested, returns null.
             */
            function findRootContainerNode(inst) {
              // TODO: It may be a good idea to cache this to prevent unnecessary DOM
              // traversal, but caching is difficult to do correctly without using a
              // mutation observer to listen for all DOM changes.
              while (inst["return"]) {
                inst = inst["return"];
              }
              if (inst.tag !== HostRoot) {
                // This can happen if we're in a detached tree.
                return null;
              }
              return inst.stateNode.containerInfo;
            }

            // Used to store ancestor hierarchy in top level callback
            function getTopLevelCallbackBookKeeping(
              topLevelType,
              nativeEvent,
              targetInst
            ) {
              if (callbackBookkeepingPool.length) {
                var instance = callbackBookkeepingPool.pop();
                instance.topLevelType = topLevelType;
                instance.nativeEvent = nativeEvent;
                instance.targetInst = targetInst;
                return instance;
              }
              return {
                topLevelType: topLevelType,
                nativeEvent: nativeEvent,
                targetInst: targetInst,
                ancestors: []
              };
            }

            function releaseTopLevelCallbackBookKeeping(instance) {
              instance.topLevelType = null;
              instance.nativeEvent = null;
              instance.targetInst = null;
              instance.ancestors.length = 0;
              if (
                callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE
              ) {
                callbackBookkeepingPool.push(instance);
              }
            }

            function handleTopLevelImpl(bookKeeping) {
              var targetInst = bookKeeping.targetInst;

              // Loop through the hierarchy, in case there's any nested components.
              // It's important that we build the array of ancestors before calling any
              // event handlers, because event handlers can modify the DOM, leading to
              // inconsistencies with ReactMount's node cache. See #1105.
              var ancestor = targetInst;
              do {
                if (!ancestor) {
                  bookKeeping.ancestors.push(ancestor);
                  break;
                }
                var root = findRootContainerNode(ancestor);
                if (!root) {
                  break;
                }
                bookKeeping.ancestors.push(ancestor);
                ancestor = getClosestInstanceFromNode(root);
              } while (ancestor);

              for (var i = 0; i < bookKeeping.ancestors.length; i++) {
                targetInst = bookKeeping.ancestors[i];
                _handleTopLevel(
                  bookKeeping.topLevelType,
                  targetInst,
                  bookKeeping.nativeEvent,
                  getEventTarget(bookKeeping.nativeEvent)
                );
              }
            }

            // TODO: can we stop exporting these?
            var _enabled = true;
            var _handleTopLevel = void 0;

            function setHandleTopLevel(handleTopLevel) {
              _handleTopLevel = handleTopLevel;
            }

            function setEnabled(enabled) {
              _enabled = !!enabled;
            }

            function isEnabled() {
              return _enabled;
            }

            /**
             * Traps top-level events by using event bubbling.
             *
             * @param {string} topLevelType Record from `BrowserEventConstants`.
             * @param {string} handlerBaseName Event name (e.g. "click").
             * @param {object} element Element on which to attach listener.
             * @return {?object} An object with a remove function which will forcefully
             *                  remove the listener.
             * @internal
             */
            function trapBubbledEvent(topLevelType, handlerBaseName, element) {
              if (!element) {
                return null;
              }
              return EventListener.listen(
                element,
                handlerBaseName,
                dispatchEvent.bind(null, topLevelType)
              );
            }

            /**
             * Traps a top-level event by using event capturing.
             *
             * @param {string} topLevelType Record from `BrowserEventConstants`.
             * @param {string} handlerBaseName Event name (e.g. "click").
             * @param {object} element Element on which to attach listener.
             * @return {?object} An object with a remove function which will forcefully
             *                  remove the listener.
             * @internal
             */
            function trapCapturedEvent(topLevelType, handlerBaseName, element) {
              if (!element) {
                return null;
              }
              return EventListener.capture(
                element,
                handlerBaseName,
                dispatchEvent.bind(null, topLevelType)
              );
            }

            function dispatchEvent(topLevelType, nativeEvent) {
              if (!_enabled) {
                return;
              }

              var nativeEventTarget = getEventTarget(nativeEvent);
              var targetInst = getClosestInstanceFromNode(nativeEventTarget);
              if (
                targetInst !== null &&
                typeof targetInst.tag === "number" &&
                !isFiberMounted(targetInst)
              ) {
                // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
              }

              var bookKeeping = getTopLevelCallbackBookKeeping(
                topLevelType,
                nativeEvent,
                targetInst
              );

              try {
                // Event queue being processed in the same cycle allows
                // `preventDefault`.
                batchedUpdates(handleTopLevelImpl, bookKeeping);
              } finally {
                releaseTopLevelCallbackBookKeeping(bookKeeping);
              }
            }

            var ReactDOMEventListener = Object.freeze({
              get _enabled() {
                return _enabled;
              },
              get _handleTopLevel() {
                return _handleTopLevel;
              },
              setHandleTopLevel: setHandleTopLevel,
              setEnabled: setEnabled,
              isEnabled: isEnabled,
              trapBubbledEvent: trapBubbledEvent,
              trapCapturedEvent: trapCapturedEvent,
              dispatchEvent: dispatchEvent
            });

            /**
             * Generate a mapping of standard vendor prefixes using the defined style property and event name.
             *
             * @param {string} styleProp
             * @param {string} eventName
             * @returns {object}
             */
            function makePrefixMap(styleProp, eventName) {
              var prefixes = {};

              prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
              prefixes["Webkit" + styleProp] = "webkit" + eventName;
              prefixes["Moz" + styleProp] = "moz" + eventName;
              prefixes["ms" + styleProp] = "MS" + eventName;
              prefixes["O" + styleProp] = "o" + eventName.toLowerCase();

              return prefixes;
            }

            /**
             * A list of event names to a configurable list of vendor prefixes.
             */
            var vendorPrefixes = {
              animationend: makePrefixMap("Animation", "AnimationEnd"),
              animationiteration: makePrefixMap(
                "Animation",
                "AnimationIteration"
              ),
              animationstart: makePrefixMap("Animation", "AnimationStart"),
              transitionend: makePrefixMap("Transition", "TransitionEnd")
            };

            /**
             * Event names that have already been detected and prefixed (if applicable).
             */
            var prefixedEventNames = {};

            /**
             * Element to check for prefixes on.
             */
            var style = {};

            /**
             * Bootstrap if a DOM exists.
             */
            if (ExecutionEnvironment.canUseDOM) {
              style = document.createElement("div").style;

              // On some platforms, in particular some releases of Android 4.x,
              // the un-prefixed "animation" and "transition" properties are defined on the
              // style object but the events that fire will still be prefixed, so we need
              // to check if the un-prefixed events are usable, and if not remove them from the map.
              if (!("AnimationEvent" in window)) {
                delete vendorPrefixes.animationend.animation;
                delete vendorPrefixes.animationiteration.animation;
                delete vendorPrefixes.animationstart.animation;
              }

              // Same as above
              if (!("TransitionEvent" in window)) {
                delete vendorPrefixes.transitionend.transition;
              }
            }

            /**
             * Attempts to determine the correct vendor prefixed event name.
             *
             * @param {string} eventName
             * @returns {string}
             */
            function getVendorPrefixedEventName(eventName) {
              if (prefixedEventNames[eventName]) {
                return prefixedEventNames[eventName];
              } else if (!vendorPrefixes[eventName]) {
                return eventName;
              }

              var prefixMap = vendorPrefixes[eventName];

              for (var styleProp in prefixMap) {
                if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                  return (prefixedEventNames[eventName] = prefixMap[styleProp]);
                }
              }

              return "";
            }

            /**
             * Types of raw signals from the browser caught at the top level.
             *
             * For events like 'submit' which don't consistently bubble (which we
             * trap at a lower node than `document`), binding at `document` would
             * cause duplicate events so we don't include them here.
             */
            var topLevelTypes$1 = {
              topAbort: "abort",
              topAnimationEnd:
                getVendorPrefixedEventName("animationend") || "animationend",
              topAnimationIteration:
                getVendorPrefixedEventName("animationiteration") ||
                "animationiteration",
              topAnimationStart:
                getVendorPrefixedEventName("animationstart") ||
                "animationstart",
              topBlur: "blur",
              topCancel: "cancel",
              topCanPlay: "canplay",
              topCanPlayThrough: "canplaythrough",
              topChange: "change",
              topClick: "click",
              topClose: "close",
              topCompositionEnd: "compositionend",
              topCompositionStart: "compositionstart",
              topCompositionUpdate: "compositionupdate",
              topContextMenu: "contextmenu",
              topCopy: "copy",
              topCut: "cut",
              topDoubleClick: "dblclick",
              topDrag: "drag",
              topDragEnd: "dragend",
              topDragEnter: "dragenter",
              topDragExit: "dragexit",
              topDragLeave: "dragleave",
              topDragOver: "dragover",
              topDragStart: "dragstart",
              topDrop: "drop",
              topDurationChange: "durationchange",
              topEmptied: "emptied",
              topEncrypted: "encrypted",
              topEnded: "ended",
              topError: "error",
              topFocus: "focus",
              topInput: "input",
              topKeyDown: "keydown",
              topKeyPress: "keypress",
              topKeyUp: "keyup",
              topLoadedData: "loadeddata",
              topLoad: "load",
              topLoadedMetadata: "loadedmetadata",
              topLoadStart: "loadstart",
              topMouseDown: "mousedown",
              topMouseMove: "mousemove",
              topMouseOut: "mouseout",
              topMouseOver: "mouseover",
              topMouseUp: "mouseup",
              topPaste: "paste",
              topPause: "pause",
              topPlay: "play",
              topPlaying: "playing",
              topProgress: "progress",
              topRateChange: "ratechange",
              topScroll: "scroll",
              topSeeked: "seeked",
              topSeeking: "seeking",
              topSelectionChange: "selectionchange",
              topStalled: "stalled",
              topSuspend: "suspend",
              topTextInput: "textInput",
              topTimeUpdate: "timeupdate",
              topToggle: "toggle",
              topTouchCancel: "touchcancel",
              topTouchEnd: "touchend",
              topTouchMove: "touchmove",
              topTouchStart: "touchstart",
              topTransitionEnd:
                getVendorPrefixedEventName("transitionend") || "transitionend",
              topVolumeChange: "volumechange",
              topWaiting: "waiting",
              topWheel: "wheel"
            };

            var BrowserEventConstants = {
              topLevelTypes: topLevelTypes$1
            };

            function runEventQueueInBatch(events) {
              enqueueEvents(events);
              processEventQueue(false);
            }

            /**
             * Streams a fired top-level event to `EventPluginHub` where plugins have the
             * opportunity to create `ReactEvent`s to be dispatched.
             */
            function handleTopLevel(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var events = extractEvents(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );
              runEventQueueInBatch(events);
            }

            var topLevelTypes = BrowserEventConstants.topLevelTypes;

            /**
             * Summary of `ReactBrowserEventEmitter` event handling:
             *
             *  - Top-level delegation is used to trap most native browser events. This
             *    may only occur in the main thread and is the responsibility of
             *    ReactDOMEventListener, which is injected and can therefore support
             *    pluggable event sources. This is the only work that occurs in the main
             *    thread.
             *
             *  - We normalize and de-duplicate events to account for browser quirks. This
             *    may be done in the worker thread.
             *
             *  - Forward these native events (with the associated top-level type used to
             *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
             *    to extract any synthetic events.
             *
             *  - The `EventPluginHub` will then process each event by annotating them with
             *    "dispatches", a sequence of listeners and IDs that care about that event.
             *
             *  - The `EventPluginHub` then dispatches the events.
             *
             * Overview of React and the event system:
             *
             * +------------+    .
             * |    DOM     |    .
             * +------------+    .
             *       |           .
             *       v           .
             * +------------+    .
             * | ReactEvent |    .
             * |  Listener  |    .
             * +------------+    .                         +-----------+
             *       |           .               +--------+|SimpleEvent|
             *       |           .               |         |Plugin     |
             * +-----|------+    .               v         +-----------+
             * |     |      |    .    +--------------+                    +------------+
             * |     +-----------.--->|EventPluginHub|                    |    Event   |
             * |            |    .    |              |     +-----------+  | Propagators|
             * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
             * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
             * |            |    .    |              |     +-----------+  |  utilities |
             * |     +-----------.--->|              |                    +------------+
             * |     |      |    .    +--------------+
             * +-----|------+    .                ^        +-----------+
             *       |           .                |        |Enter/Leave|
             *       +           .                +-------+|Plugin     |
             * +-------------+   .                         +-----------+
             * | application |   .
             * |-------------|   .
             * |             |   .
             * |             |   .
             * +-------------+   .
             *                   .
             *    React Core     .  General Purpose Event Plugin System
             */

            var alreadyListeningTo = {};
            var reactTopListenersCounter = 0;

            /**
             * To ensure no conflicts with other potential React instances on the page
             */
            var topListenersIDKey =
              "_reactListenersID" + ("" + Math.random()).slice(2);

            function getListeningForDocument(mountAt) {
              // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
              // directly.
              if (
                !Object.prototype.hasOwnProperty.call(
                  mountAt,
                  topListenersIDKey
                )
              ) {
                mountAt[topListenersIDKey] = reactTopListenersCounter++;
                alreadyListeningTo[mountAt[topListenersIDKey]] = {};
              }
              return alreadyListeningTo[mountAt[topListenersIDKey]];
            }

            /**
             * We listen for bubbled touch events on the document object.
             *
             * Firefox v8.01 (and possibly others) exhibited strange behavior when
             * mounting `onmousemove` events at some node that was not the document
             * element. The symptoms were that if your mouse is not moving over something
             * contained within that mount point (for example on the background) the
             * top-level listeners for `onmousemove` won't be called. However, if you
             * register the `mousemove` on the document object, then it will of course
             * catch all `mousemove`s. This along with iOS quirks, justifies restricting
             * top-level listeners to the document object only, at least for these
             * movement types of events and possibly all events.
             *
             * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
             *
             * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
             * they bubble to document.
             *
             * @param {string} registrationName Name of listener (e.g. `onClick`).
             * @param {object} contentDocumentHandle Document which owns the container
             */
            function listenTo(registrationName, contentDocumentHandle) {
              var mountAt = contentDocumentHandle;
              var isListening = getListeningForDocument(mountAt);
              var dependencies = registrationNameDependencies[registrationName];

              for (var i = 0; i < dependencies.length; i++) {
                var dependency = dependencies[i];
                if (
                  !(
                    isListening.hasOwnProperty(dependency) &&
                    isListening[dependency]
                  )
                ) {
                  if (dependency === "topScroll") {
                    trapCapturedEvent("topScroll", "scroll", mountAt);
                  } else if (
                    dependency === "topFocus" ||
                    dependency === "topBlur"
                  ) {
                    trapCapturedEvent("topFocus", "focus", mountAt);
                    trapCapturedEvent("topBlur", "blur", mountAt);

                    // to make sure blur and focus event listeners are only attached once
                    isListening.topBlur = true;
                    isListening.topFocus = true;
                  } else if (dependency === "topCancel") {
                    if (isEventSupported("cancel", true)) {
                      trapCapturedEvent("topCancel", "cancel", mountAt);
                    }
                    isListening.topCancel = true;
                  } else if (dependency === "topClose") {
                    if (isEventSupported("close", true)) {
                      trapCapturedEvent("topClose", "close", mountAt);
                    }
                    isListening.topClose = true;
                  } else if (topLevelTypes.hasOwnProperty(dependency)) {
                    trapBubbledEvent(
                      dependency,
                      topLevelTypes[dependency],
                      mountAt
                    );
                  }

                  isListening[dependency] = true;
                }
              }
            }

            function isListeningToAllDependencies(registrationName, mountAt) {
              var isListening = getListeningForDocument(mountAt);
              var dependencies = registrationNameDependencies[registrationName];
              for (var i = 0; i < dependencies.length; i++) {
                var dependency = dependencies[i];
                if (
                  !(
                    isListening.hasOwnProperty(dependency) &&
                    isListening[dependency]
                  )
                ) {
                  return false;
                }
              }
              return true;
            }

            /**
             * Given any node return the first leaf node without children.
             *
             * @param {DOMElement|DOMTextNode} node
             * @return {DOMElement|DOMTextNode}
             */
            function getLeafNode(node) {
              while (node && node.firstChild) {
                node = node.firstChild;
              }
              return node;
            }

            /**
             * Get the next sibling within a container. This will walk up the
             * DOM if a node's siblings have been exhausted.
             *
             * @param {DOMElement|DOMTextNode} node
             * @return {?DOMElement|DOMTextNode}
             */
            function getSiblingNode(node) {
              while (node) {
                if (node.nextSibling) {
                  return node.nextSibling;
                }
                node = node.parentNode;
              }
            }

            /**
             * Get object describing the nodes which contain characters at offset.
             *
             * @param {DOMElement|DOMTextNode} root
             * @param {number} offset
             * @return {?object}
             */
            function getNodeForCharacterOffset(root, offset) {
              var node = getLeafNode(root);
              var nodeStart = 0;
              var nodeEnd = 0;

              while (node) {
                if (node.nodeType === TEXT_NODE) {
                  nodeEnd = nodeStart + node.textContent.length;

                  if (nodeStart <= offset && nodeEnd >= offset) {
                    return {
                      node: node,
                      offset: offset - nodeStart
                    };
                  }

                  nodeStart = nodeEnd;
                }

                node = getLeafNode(getSiblingNode(node));
              }
            }

            /**
             * @param {DOMElement} outerNode
             * @return {?object}
             */
            function getOffsets(outerNode) {
              var selection = window.getSelection && window.getSelection();

              if (!selection || selection.rangeCount === 0) {
                return null;
              }

              var anchorNode = selection.anchorNode,
                anchorOffset = selection.anchorOffset,
                focusNode$$1 = selection.focusNode,
                focusOffset = selection.focusOffset;

              // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
              // up/down buttons on an <input type="number">. Anonymous divs do not seem to
              // expose properties, triggering a "Permission denied error" if any of its
              // properties are accessed. The only seemingly possible way to avoid erroring
              // is to access a property that typically works for non-anonymous divs and
              // catch any error that may otherwise arise. See
              // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

              try {
                /* eslint-disable no-unused-expressions */
                anchorNode.nodeType;
                focusNode$$1.nodeType;
                /* eslint-enable no-unused-expressions */
              } catch (e) {
                return null;
              }

              return getModernOffsetsFromPoints(
                outerNode,
                anchorNode,
                anchorOffset,
                focusNode$$1,
                focusOffset
              );
            }

            /**
             * Returns {start, end} where `start` is the character/codepoint index of
             * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
             * `end` is the index of (focusNode, focusOffset).
             *
             * Returns null if you pass in garbage input but we should probably just crash.
             *
             * Exported only for testing.
             */
            function getModernOffsetsFromPoints(
              outerNode,
              anchorNode,
              anchorOffset,
              focusNode$$1,
              focusOffset
            ) {
              var length = 0;
              var start = -1;
              var end = -1;
              var indexWithinAnchor = 0;
              var indexWithinFocus = 0;
              var node = outerNode;
              var parentNode = null;

              outer: while (true) {
                var next = null;

                while (true) {
                  if (
                    node === anchorNode &&
                    (anchorOffset === 0 || node.nodeType === TEXT_NODE)
                  ) {
                    start = length + anchorOffset;
                  }
                  if (
                    node === focusNode$$1 &&
                    (focusOffset === 0 || node.nodeType === TEXT_NODE)
                  ) {
                    end = length + focusOffset;
                  }

                  if (node.nodeType === TEXT_NODE) {
                    length += node.nodeValue.length;
                  }

                  if ((next = node.firstChild) === null) {
                    break;
                  }
                  // Moving from `node` to its first child `next`.
                  parentNode = node;
                  node = next;
                }

                while (true) {
                  if (node === outerNode) {
                    // If `outerNode` has children, this is always the second time visiting
                    // it. If it has no children, this is still the first loop, and the only
                    // valid selection is anchorNode and focusNode both equal to this node
                    // and both offsets 0, in which case we will have handled above.
                    break outer;
                  }
                  if (
                    parentNode === anchorNode &&
                    ++indexWithinAnchor === anchorOffset
                  ) {
                    start = length;
                  }
                  if (
                    parentNode === focusNode$$1 &&
                    ++indexWithinFocus === focusOffset
                  ) {
                    end = length;
                  }
                  if ((next = node.nextSibling) !== null) {
                    break;
                  }
                  node = parentNode;
                  parentNode = node.parentNode;
                }

                // Moving from `node` to its next sibling `next`.
                node = next;
              }

              if (start === -1 || end === -1) {
                // This should never happen. (Would happen if the anchor/focus nodes aren't
                // actually inside the passed-in node.)
                return null;
              }

              return {
                start: start,
                end: end
              };
            }

            /**
             * In modern non-IE browsers, we can support both forward and backward
             * selections.
             *
             * Note: IE10+ supports the Selection object, but it does not support
             * the `extend` method, which means that even in modern IE, it's not possible
             * to programmatically create a backward selection. Thus, for all IE
             * versions, we use the old IE API to create our selections.
             *
             * @param {DOMElement|DOMTextNode} node
             * @param {object} offsets
             */
            function setOffsets(node, offsets) {
              if (!window.getSelection) {
                return;
              }

              var selection = window.getSelection();
              var length = node[getTextContentAccessor()].length;
              var start = Math.min(offsets.start, length);
              var end =
                offsets.end === undefined
                  ? start
                  : Math.min(offsets.end, length);

              // IE 11 uses modern selection, but doesn't support the extend method.
              // Flip backward selections, so we can set with a single range.
              if (!selection.extend && start > end) {
                var temp = end;
                end = start;
                start = temp;
              }

              var startMarker = getNodeForCharacterOffset(node, start);
              var endMarker = getNodeForCharacterOffset(node, end);

              if (startMarker && endMarker) {
                if (
                  selection.rangeCount === 1 &&
                  selection.anchorNode === startMarker.node &&
                  selection.anchorOffset === startMarker.offset &&
                  selection.focusNode === endMarker.node &&
                  selection.focusOffset === endMarker.offset
                ) {
                  return;
                }
                var range = document.createRange();
                range.setStart(startMarker.node, startMarker.offset);
                selection.removeAllRanges();

                if (start > end) {
                  selection.addRange(range);
                  selection.extend(endMarker.node, endMarker.offset);
                } else {
                  range.setEnd(endMarker.node, endMarker.offset);
                  selection.addRange(range);
                }
              }
            }

            function isInDocument(node) {
              return containsNode(document.documentElement, node);
            }

            /**
             * @ReactInputSelection: React input selection module. Based on Selection.js,
             * but modified to be suitable for react and has a couple of bug fixes (doesn't
             * assume buttons have range selections allowed).
             * Input selection module for React.
             */

            function hasSelectionCapabilities(elem) {
              var nodeName =
                elem && elem.nodeName && elem.nodeName.toLowerCase();
              return (
                nodeName &&
                ((nodeName === "input" && elem.type === "text") ||
                  nodeName === "textarea" ||
                  elem.contentEditable === "true")
              );
            }

            function getSelectionInformation() {
              var focusedElem = getActiveElement();
              return {
                focusedElem: focusedElem,
                selectionRange: hasSelectionCapabilities(focusedElem)
                  ? getSelection$1(focusedElem)
                  : null
              };
            }

            /**
             * @restoreSelection: If any selection information was potentially lost,
             * restore it. This is useful when performing operations that could remove dom
             * nodes and place them back in, resulting in focus being lost.
             */
            function restoreSelection(priorSelectionInformation) {
              var curFocusedElem = getActiveElement();
              var priorFocusedElem = priorSelectionInformation.focusedElem;
              var priorSelectionRange =
                priorSelectionInformation.selectionRange;
              if (
                curFocusedElem !== priorFocusedElem &&
                isInDocument(priorFocusedElem)
              ) {
                if (hasSelectionCapabilities(priorFocusedElem)) {
                  setSelection(priorFocusedElem, priorSelectionRange);
                }

                // Focusing a node can change the scroll position, which is undesirable
                var ancestors = [];
                var ancestor = priorFocusedElem;
                while ((ancestor = ancestor.parentNode)) {
                  if (ancestor.nodeType === ELEMENT_NODE) {
                    ancestors.push({
                      element: ancestor,
                      left: ancestor.scrollLeft,
                      top: ancestor.scrollTop
                    });
                  }
                }

                focusNode(priorFocusedElem);

                for (var i = 0; i < ancestors.length; i++) {
                  var info = ancestors[i];
                  info.element.scrollLeft = info.left;
                  info.element.scrollTop = info.top;
                }
              }
            }

            /**
             * @getSelection: Gets the selection bounds of a focused textarea, input or
             * contentEditable node.
             * -@input: Look up selection bounds of this input
             * -@return {start: selectionStart, end: selectionEnd}
             */
            function getSelection$1(input) {
              var selection = void 0;

              if ("selectionStart" in input) {
                // Modern browser with input or textarea.
                selection = {
                  start: input.selectionStart,
                  end: input.selectionEnd
                };
              } else {
                // Content editable or old IE textarea.
                selection = getOffsets(input);
              }

              return selection || { start: 0, end: 0 };
            }

            /**
             * @setSelection: Sets the selection bounds of a textarea or input and focuses
             * the input.
             * -@input     Set selection bounds of this input or textarea
             * -@offsets   Object of same form that is returned from get*
             */
            function setSelection(input, offsets) {
              var start = offsets.start,
                end = offsets.end;

              if (end === undefined) {
                end = start;
              }

              if ("selectionStart" in input) {
                input.selectionStart = start;
                input.selectionEnd = Math.min(end, input.value.length);
              } else {
                setOffsets(input, offsets);
              }
            }

            var skipSelectionChangeEvent =
              ExecutionEnvironment.canUseDOM &&
              "documentMode" in document &&
              document.documentMode <= 11;

            var eventTypes$3 = {
              select: {
                phasedRegistrationNames: {
                  bubbled: "onSelect",
                  captured: "onSelectCapture"
                },
                dependencies: [
                  "topBlur",
                  "topContextMenu",
                  "topFocus",
                  "topKeyDown",
                  "topKeyUp",
                  "topMouseDown",
                  "topMouseUp",
                  "topSelectionChange"
                ]
              }
            };

            var activeElement$1 = null;
            var activeElementInst$1 = null;
            var lastSelection = null;
            var mouseDown = false;

            /**
             * Get an object which is a unique representation of the current selection.
             *
             * The return value will not be consistent across nodes or browsers, but
             * two identical selections on the same node will return identical objects.
             *
             * @param {DOMElement} node
             * @return {object}
             */
            function getSelection(node) {
              if ("selectionStart" in node && hasSelectionCapabilities(node)) {
                return {
                  start: node.selectionStart,
                  end: node.selectionEnd
                };
              } else if (window.getSelection) {
                var selection = window.getSelection();
                return {
                  anchorNode: selection.anchorNode,
                  anchorOffset: selection.anchorOffset,
                  focusNode: selection.focusNode,
                  focusOffset: selection.focusOffset
                };
              }
            }

            /**
             * Poll selection to see whether it's changed.
             *
             * @param {object} nativeEvent
             * @return {?SyntheticEvent}
             */
            function constructSelectEvent(nativeEvent, nativeEventTarget) {
              // Ensure we have the right element, and that the user is not dragging a
              // selection (this matches native `select` event behavior). In HTML5, select
              // fires only on input and textarea thus if there's no focused element we
              // won't dispatch.
              if (
                mouseDown ||
                activeElement$1 == null ||
                activeElement$1 !== getActiveElement()
              ) {
                return null;
              }

              // Only fire when selection has actually changed.
              var currentSelection = getSelection(activeElement$1);
              if (
                !lastSelection ||
                !shallowEqual(lastSelection, currentSelection)
              ) {
                lastSelection = currentSelection;

                var syntheticEvent = SyntheticEvent$1.getPooled(
                  eventTypes$3.select,
                  activeElementInst$1,
                  nativeEvent,
                  nativeEventTarget
                );

                syntheticEvent.type = "select";
                syntheticEvent.target = activeElement$1;

                accumulateTwoPhaseDispatches(syntheticEvent);

                return syntheticEvent;
              }

              return null;
            }

            /**
             * This plugin creates an `onSelect` event that normalizes select events
             * across form elements.
             *
             * Supported elements are:
             * - input (see `isTextInputElement`)
             * - textarea
             * - contentEditable
             *
             * This differs from native browser implementations in the following ways:
             * - Fires on contentEditable fields as well as inputs.
             * - Fires for collapsed selection.
             * - Fires after user input.
             */
            var SelectEventPlugin = {
              eventTypes: eventTypes$3,

              extractEvents: function(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              ) {
                var doc =
                  nativeEventTarget.window === nativeEventTarget
                    ? nativeEventTarget.document
                    : nativeEventTarget.nodeType === DOCUMENT_NODE
                      ? nativeEventTarget
                      : nativeEventTarget.ownerDocument;
                // Track whether all listeners exists for this plugin. If none exist, we do
                // not extract events. See #3639.
                if (!doc || !isListeningToAllDependencies("onSelect", doc)) {
                  return null;
                }

                var targetNode = targetInst
                  ? getNodeFromInstance$1(targetInst)
                  : window;

                switch (topLevelType) {
                  // Track the input node that has focus.
                  case "topFocus":
                    if (
                      isTextInputElement(targetNode) ||
                      targetNode.contentEditable === "true"
                    ) {
                      activeElement$1 = targetNode;
                      activeElementInst$1 = targetInst;
                      lastSelection = null;
                    }
                    break;
                  case "topBlur":
                    activeElement$1 = null;
                    activeElementInst$1 = null;
                    lastSelection = null;
                    break;
                  // Don't fire the event while the user is dragging. This matches the
                  // semantics of the native select event.
                  case "topMouseDown":
                    mouseDown = true;
                    break;
                  case "topContextMenu":
                  case "topMouseUp":
                    mouseDown = false;
                    return constructSelectEvent(nativeEvent, nativeEventTarget);
                  // Chrome and IE fire non-standard event when selection is changed (and
                  // sometimes when it hasn't). IE's event fires out of order with respect
                  // to key and input events on deletion, so we discard it.
                  //
                  // Firefox doesn't support selectionchange, so check selection status
                  // after each key entry. The selection changes after keydown and before
                  // keyup, but we check on keydown as well in the case of holding down a
                  // key, when multiple keydown events are fired but only one keyup is.
                  // This is also our approach for IE handling, for the reason above.
                  case "topSelectionChange":
                    if (skipSelectionChangeEvent) {
                      break;
                    }
                  // falls through
                  case "topKeyDown":
                  case "topKeyUp":
                    return constructSelectEvent(nativeEvent, nativeEventTarget);
                }

                return null;
              }
            };

            /**
             * @interface Event
             * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
             * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
             */
            var AnimationEventInterface = {
              animationName: null,
              elapsedTime: null,
              pseudoElement: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticAnimationEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(
              SyntheticAnimationEvent,
              AnimationEventInterface
            );

            /**
             * @interface Event
             * @see http://www.w3.org/TR/clipboard-apis/
             */
            var ClipboardEventInterface = {
              clipboardData: function(event) {
                return "clipboardData" in event
                  ? event.clipboardData
                  : window.clipboardData;
              }
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticClipboardEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(
              SyntheticClipboardEvent,
              ClipboardEventInterface
            );

            /**
             * @interface FocusEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var FocusEventInterface = {
              relatedTarget: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticUIEvent}
             */
            function SyntheticFocusEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticUIEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticUIEvent.augmentClass(
              SyntheticFocusEvent,
              FocusEventInterface
            );

            /**
             * `charCode` represents the actual "character code" and is safe to use with
             * `String.fromCharCode`. As such, only keys that correspond to printable
             * characters produce a valid `charCode`, the only exception to this is Enter.
             * The Tab-key is considered non-printable and does not have a `charCode`,
             * presumably because it does not produce a tab-character in browsers.
             *
             * @param {object} nativeEvent Native browser event.
             * @return {number} Normalized `charCode` property.
             */
            function getEventCharCode(nativeEvent) {
              var charCode;
              var keyCode = nativeEvent.keyCode;

              if ("charCode" in nativeEvent) {
                charCode = nativeEvent.charCode;

                // FF does not set `charCode` for the Enter-key, check against `keyCode`.
                if (charCode === 0 && keyCode === 13) {
                  charCode = 13;
                }
              } else {
                // IE8 does not implement `charCode`, but `keyCode` has the correct value.
                charCode = keyCode;
              }

              // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
              // Must not discard the (non-)printable Enter-key.
              if (charCode >= 32 || charCode === 13) {
                return charCode;
              }

              return 0;
            }

            /**
             * Normalization of deprecated HTML5 `key` values
             * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
             */
            var normalizeKey = {
              Esc: "Escape",
              Spacebar: " ",
              Left: "ArrowLeft",
              Up: "ArrowUp",
              Right: "ArrowRight",
              Down: "ArrowDown",
              Del: "Delete",
              Win: "OS",
              Menu: "ContextMenu",
              Apps: "ContextMenu",
              Scroll: "ScrollLock",
              MozPrintableKey: "Unidentified"
            };

            /**
             * Translation from legacy `keyCode` to HTML5 `key`
             * Only special keys supported, all others depend on keyboard layout or browser
             * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
             */
            var translateToKey = {
              "8": "Backspace",
              "9": "Tab",
              "12": "Clear",
              "13": "Enter",
              "16": "Shift",
              "17": "Control",
              "18": "Alt",
              "19": "Pause",
              "20": "CapsLock",
              "27": "Escape",
              "32": " ",
              "33": "PageUp",
              "34": "PageDown",
              "35": "End",
              "36": "Home",
              "37": "ArrowLeft",
              "38": "ArrowUp",
              "39": "ArrowRight",
              "40": "ArrowDown",
              "45": "Insert",
              "46": "Delete",
              "112": "F1",
              "113": "F2",
              "114": "F3",
              "115": "F4",
              "116": "F5",
              "117": "F6",
              "118": "F7",
              "119": "F8",
              "120": "F9",
              "121": "F10",
              "122": "F11",
              "123": "F12",
              "144": "NumLock",
              "145": "ScrollLock",
              "224": "Meta"
            };

            /**
             * @param {object} nativeEvent Native browser event.
             * @return {string} Normalized `key` property.
             */
            function getEventKey(nativeEvent) {
              if (nativeEvent.key) {
                // Normalize inconsistent values reported by browsers due to
                // implementations of a working draft specification.

                // FireFox implements `key` but returns `MozPrintableKey` for all
                // printable characters (normalized to `Unidentified`), ignore it.
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if (key !== "Unidentified") {
                  return key;
                }
              }

              // Browser does not implement `key`, polyfill as much of it as we can.
              if (nativeEvent.type === "keypress") {
                var charCode = getEventCharCode(nativeEvent);

                // The enter-key is technically both printable and non-printable and can
                // thus be captured by `keypress`, no other non-printable key should.
                return charCode === 13
                  ? "Enter"
                  : String.fromCharCode(charCode);
              }
              if (
                nativeEvent.type === "keydown" ||
                nativeEvent.type === "keyup"
              ) {
                // While user keyboard layout determines the actual meaning of each
                // `keyCode` value, almost all function keys have a universal value.
                return translateToKey[nativeEvent.keyCode] || "Unidentified";
              }
              return "";
            }

            /**
             * @interface KeyboardEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var KeyboardEventInterface = {
              key: getEventKey,
              location: null,
              ctrlKey: null,
              shiftKey: null,
              altKey: null,
              metaKey: null,
              repeat: null,
              locale: null,
              getModifierState: getEventModifierState,
              // Legacy Interface
              charCode: function(event) {
                // `charCode` is the result of a KeyPress event and represents the value of
                // the actual printable character.

                // KeyPress is deprecated, but its replacement is not yet final and not
                // implemented in any major browser. Only KeyPress has charCode.
                if (event.type === "keypress") {
                  return getEventCharCode(event);
                }
                return 0;
              },
              keyCode: function(event) {
                // `keyCode` is the result of a KeyDown/Up event and represents the value of
                // physical keyboard key.

                // The actual meaning of the value depends on the users' keyboard layout
                // which cannot be detected. Assuming that it is a US keyboard layout
                // provides a surprisingly accurate mapping for US and European users.
                // Due to this, it is left to the user to implement at this time.
                if (event.type === "keydown" || event.type === "keyup") {
                  return event.keyCode;
                }
                return 0;
              },
              which: function(event) {
                // `which` is an alias for either `keyCode` or `charCode` depending on the
                // type of the event.
                if (event.type === "keypress") {
                  return getEventCharCode(event);
                }
                if (event.type === "keydown" || event.type === "keyup") {
                  return event.keyCode;
                }
                return 0;
              }
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticUIEvent}
             */
            function SyntheticKeyboardEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticUIEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticUIEvent.augmentClass(
              SyntheticKeyboardEvent,
              KeyboardEventInterface
            );

            /**
             * @interface DragEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var DragEventInterface = {
              dataTransfer: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticMouseEvent}
             */
            function SyntheticDragEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticMouseEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticMouseEvent.augmentClass(
              SyntheticDragEvent,
              DragEventInterface
            );

            /**
             * @interface TouchEvent
             * @see http://www.w3.org/TR/touch-events/
             */
            var TouchEventInterface = {
              touches: null,
              targetTouches: null,
              changedTouches: null,
              altKey: null,
              metaKey: null,
              ctrlKey: null,
              shiftKey: null,
              getModifierState: getEventModifierState
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticUIEvent}
             */
            function SyntheticTouchEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticUIEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticUIEvent.augmentClass(
              SyntheticTouchEvent,
              TouchEventInterface
            );

            /**
             * @interface Event
             * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
             * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
             */
            var TransitionEventInterface = {
              propertyName: null,
              elapsedTime: null,
              pseudoElement: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticEvent}
             */
            function SyntheticTransitionEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticEvent$1.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticEvent$1.augmentClass(
              SyntheticTransitionEvent,
              TransitionEventInterface
            );

            /**
             * @interface WheelEvent
             * @see http://www.w3.org/TR/DOM-Level-3-Events/
             */
            var WheelEventInterface = {
              deltaX: function(event) {
                return "deltaX" in event
                  ? event.deltaX // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
                  : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
              },
              deltaY: function(event) {
                return "deltaY" in event
                  ? event.deltaY // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
                  : "wheelDeltaY" in event
                    ? -event.wheelDeltaY // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                    : "wheelDelta" in event ? -event.wheelDelta : 0;
              },
              deltaZ: null,

              // Browsers without "deltaMode" is reporting in raw wheel delta where one
              // notch on the scroll is always +/- 120, roughly equivalent to pixels.
              // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
              // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
              deltaMode: null
            };

            /**
             * @param {object} dispatchConfig Configuration used to dispatch this event.
             * @param {string} dispatchMarker Marker identifying the event target.
             * @param {object} nativeEvent Native browser event.
             * @extends {SyntheticMouseEvent}
             */
            function SyntheticWheelEvent(
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            ) {
              return SyntheticMouseEvent.call(
                this,
                dispatchConfig,
                dispatchMarker,
                nativeEvent,
                nativeEventTarget
              );
            }

            SyntheticMouseEvent.augmentClass(
              SyntheticWheelEvent,
              WheelEventInterface
            );

            /**
             * Turns
             * ['abort', ...]
             * into
             * eventTypes = {
             *   'abort': {
             *     phasedRegistrationNames: {
             *       bubbled: 'onAbort',
             *       captured: 'onAbortCapture',
             *     },
             *     dependencies: ['topAbort'],
             *   },
             *   ...
             * };
             * topLevelEventsToDispatchConfig = {
             *   'topAbort': { sameConfig }
             * };
             */
            var eventTypes$4 = {};
            var topLevelEventsToDispatchConfig = {};
            [
              "abort",
              "animationEnd",
              "animationIteration",
              "animationStart",
              "blur",
              "cancel",
              "canPlay",
              "canPlayThrough",
              "click",
              "close",
              "contextMenu",
              "copy",
              "cut",
              "doubleClick",
              "drag",
              "dragEnd",
              "dragEnter",
              "dragExit",
              "dragLeave",
              "dragOver",
              "dragStart",
              "drop",
              "durationChange",
              "emptied",
              "encrypted",
              "ended",
              "error",
              "focus",
              "input",
              "invalid",
              "keyDown",
              "keyPress",
              "keyUp",
              "load",
              "loadedData",
              "loadedMetadata",
              "loadStart",
              "mouseDown",
              "mouseMove",
              "mouseOut",
              "mouseOver",
              "mouseUp",
              "paste",
              "pause",
              "play",
              "playing",
              "progress",
              "rateChange",
              "reset",
              "scroll",
              "seeked",
              "seeking",
              "stalled",
              "submit",
              "suspend",
              "timeUpdate",
              "toggle",
              "touchCancel",
              "touchEnd",
              "touchMove",
              "touchStart",
              "transitionEnd",
              "volumeChange",
              "waiting",
              "wheel"
            ].forEach(function(event) {
              var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
              var onEvent = "on" + capitalizedEvent;
              var topEvent = "top" + capitalizedEvent;

              var type = {
                phasedRegistrationNames: {
                  bubbled: onEvent,
                  captured: onEvent + "Capture"
                },
                dependencies: [topEvent]
              };
              eventTypes$4[event] = type;
              topLevelEventsToDispatchConfig[topEvent] = type;
            });

            // Only used in DEV for exhaustiveness validation.
            var knownHTMLTopLevelTypes = [
              "topAbort",
              "topCancel",
              "topCanPlay",
              "topCanPlayThrough",
              "topClose",
              "topDurationChange",
              "topEmptied",
              "topEncrypted",
              "topEnded",
              "topError",
              "topInput",
              "topInvalid",
              "topLoad",
              "topLoadedData",
              "topLoadedMetadata",
              "topLoadStart",
              "topPause",
              "topPlay",
              "topPlaying",
              "topProgress",
              "topRateChange",
              "topReset",
              "topSeeked",
              "topSeeking",
              "topStalled",
              "topSubmit",
              "topSuspend",
              "topTimeUpdate",
              "topToggle",
              "topVolumeChange",
              "topWaiting"
            ];

            var SimpleEventPlugin = {
              eventTypes: eventTypes$4,

              extractEvents: function(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              ) {
                var dispatchConfig =
                  topLevelEventsToDispatchConfig[topLevelType];
                if (!dispatchConfig) {
                  return null;
                }
                var EventConstructor;
                switch (topLevelType) {
                  case "topKeyPress":
                    // Firefox creates a keypress event for function keys too. This removes
                    // the unwanted keypress events. Enter is however both printable and
                    // non-printable. One would expect Tab to be as well (but it isn't).
                    if (getEventCharCode(nativeEvent) === 0) {
                      return null;
                    }
                  /* falls through */
                  case "topKeyDown":
                  case "topKeyUp":
                    EventConstructor = SyntheticKeyboardEvent;
                    break;
                  case "topBlur":
                  case "topFocus":
                    EventConstructor = SyntheticFocusEvent;
                    break;
                  case "topClick":
                    // Firefox creates a click event on right mouse clicks. This removes the
                    // unwanted click events.
                    if (nativeEvent.button === 2) {
                      return null;
                    }
                  /* falls through */
                  case "topDoubleClick":
                  case "topMouseDown":
                  case "topMouseMove":
                  case "topMouseUp":
                  // TODO: Disabled elements should not respond to mouse events
                  /* falls through */
                  case "topMouseOut":
                  case "topMouseOver":
                  case "topContextMenu":
                    EventConstructor = SyntheticMouseEvent;
                    break;
                  case "topDrag":
                  case "topDragEnd":
                  case "topDragEnter":
                  case "topDragExit":
                  case "topDragLeave":
                  case "topDragOver":
                  case "topDragStart":
                  case "topDrop":
                    EventConstructor = SyntheticDragEvent;
                    break;
                  case "topTouchCancel":
                  case "topTouchEnd":
                  case "topTouchMove":
                  case "topTouchStart":
                    EventConstructor = SyntheticTouchEvent;
                    break;
                  case "topAnimationEnd":
                  case "topAnimationIteration":
                  case "topAnimationStart":
                    EventConstructor = SyntheticAnimationEvent;
                    break;
                  case "topTransitionEnd":
                    EventConstructor = SyntheticTransitionEvent;
                    break;
                  case "topScroll":
                    EventConstructor = SyntheticUIEvent;
                    break;
                  case "topWheel":
                    EventConstructor = SyntheticWheelEvent;
                    break;
                  case "topCopy":
                  case "topCut":
                  case "topPaste":
                    EventConstructor = SyntheticClipboardEvent;
                    break;
                  default:
                    {
                      if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                        warning(
                          false,
                          "SimpleEventPlugin: Unhandled event type, `%s`. This warning " +
                            "is likely caused by a bug in React. Please file an issue.",
                          topLevelType
                        );
                      }
                    }
                    // HTML Events
                    // @see http://www.w3.org/TR/html5/index.html#events-0
                    EventConstructor = SyntheticEvent$1;
                    break;
                }
                var event = EventConstructor.getPooled(
                  dispatchConfig,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                );
                accumulateTwoPhaseDispatches(event);
                return event;
              }
            };

            setHandleTopLevel(handleTopLevel);

            /**
             * Inject modules for resolving DOM hierarchy and plugin ordering.
             */
            injection$1.injectEventPluginOrder(DOMEventPluginOrder);
            injection$2.injectComponentTree(ReactDOMComponentTree);

            /**
             * Some important event plugins included by default (without having to require
             * them).
             */
            injection$1.injectEventPluginsByName({
              SimpleEventPlugin: SimpleEventPlugin,
              EnterLeaveEventPlugin: EnterLeaveEventPlugin,
              ChangeEventPlugin: ChangeEventPlugin,
              SelectEventPlugin: SelectEventPlugin,
              BeforeInputEventPlugin: BeforeInputEventPlugin
            });

            var enableAsyncSubtreeAPI = true;
            var enableAsyncSchedulingByDefaultInReactDOM = false;
            // Exports ReactDOM.createRoot
            var enableCreateRoot = false;
            var enableUserTimingAPI = true;

            // Mutating mode (React DOM, React ART, React Native):
            var enableMutatingReconciler = true;
            // Experimental noop mode (currently unused):
            var enableNoopReconciler = false;
            // Experimental persistent mode (CS):
            var enablePersistentReconciler = false;

            // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
            var debugRenderPhaseSideEffects = false;

            // Only used in www builds.

            var valueStack = [];

            {
              var fiberStack = [];
            }

            var index = -1;

            function createCursor(defaultValue) {
              return {
                current: defaultValue
              };
            }

            function pop(cursor, fiber) {
              if (index < 0) {
                {
                  warning(false, "Unexpected pop.");
                }
                return;
              }

              {
                if (fiber !== fiberStack[index]) {
                  warning(false, "Unexpected Fiber popped.");
                }
              }

              cursor.current = valueStack[index];

              valueStack[index] = null;

              {
                fiberStack[index] = null;
              }

              index--;
            }

            function push(cursor, value, fiber) {
              index++;

              valueStack[index] = cursor.current;

              {
                fiberStack[index] = fiber;
              }

              cursor.current = value;
            }

            function reset$1() {
              while (index > -1) {
                valueStack[index] = null;

                {
                  fiberStack[index] = null;
                }

                index--;
              }
            }

            var describeComponentFrame = function(name, source, ownerName) {
              return (
                "\n    in " +
                (name || "Unknown") +
                (source
                  ? " (at " +
                    source.fileName.replace(/^.*[\\\/]/, "") +
                    ":" +
                    source.lineNumber +
                    ")"
                  : ownerName ? " (created by " + ownerName + ")" : "")
              );
            };

            function describeFiber(fiber) {
              switch (fiber.tag) {
                case IndeterminateComponent:
                case FunctionalComponent:
                case ClassComponent:
                case HostComponent:
                  var owner = fiber._debugOwner;
                  var source = fiber._debugSource;
                  var name = getComponentName(fiber);
                  var ownerName = null;
                  if (owner) {
                    ownerName = getComponentName(owner);
                  }
                  return describeComponentFrame(name, source, ownerName);
                default:
                  return "";
              }
            }

            // This function can only be called with a work-in-progress fiber and
            // only during begin or complete phase. Do not call it under any other
            // circumstances.
            function getStackAddendumByWorkInProgressFiber(workInProgress) {
              var info = "";
              var node = workInProgress;
              do {
                info += describeFiber(node);
                // Otherwise this return pointer might point to the wrong tree:
                node = node["return"];
              } while (node);
              return info;
            }

            function getCurrentFiberOwnerName() {
              {
                var fiber = ReactDebugCurrentFiber.current;
                if (fiber === null) {
                  return null;
                }
                var owner = fiber._debugOwner;
                if (owner !== null && typeof owner !== "undefined") {
                  return getComponentName(owner);
                }
              }
              return null;
            }

            function getCurrentFiberStackAddendum() {
              {
                var fiber = ReactDebugCurrentFiber.current;
                if (fiber === null) {
                  return null;
                }
                // Safe because if current fiber exists, we are reconciling,
                // and it is guaranteed to be the work-in-progress version.
                return getStackAddendumByWorkInProgressFiber(fiber);
              }
              return null;
            }

            function resetCurrentFiber() {
              ReactDebugCurrentFrame.getCurrentStack = null;
              ReactDebugCurrentFiber.current = null;
              ReactDebugCurrentFiber.phase = null;
            }

            function setCurrentFiber(fiber) {
              ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum;
              ReactDebugCurrentFiber.current = fiber;
              ReactDebugCurrentFiber.phase = null;
            }

            function setCurrentPhase(phase) {
              ReactDebugCurrentFiber.phase = phase;
            }

            var ReactDebugCurrentFiber = {
              current: null,
              phase: null,
              resetCurrentFiber: resetCurrentFiber,
              setCurrentFiber: setCurrentFiber,
              setCurrentPhase: setCurrentPhase,
              getCurrentFiberOwnerName: getCurrentFiberOwnerName,
              getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
            };

            // Prefix measurements so that it's possible to filter them.
            // Longer prefixes are hard to read in DevTools.
            var reactEmoji = "\u269B";
            var warningEmoji = "\u26D4";
            var supportsUserTiming =
              typeof performance !== "undefined" &&
              typeof performance.mark === "function" &&
              typeof performance.clearMarks === "function" &&
              typeof performance.measure === "function" &&
              typeof performance.clearMeasures === "function";

            // Keep track of current fiber so that we know the path to unwind on pause.
            // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
            var currentFiber = null;
            // If we're in the middle of user code, which fiber and method is it?
            // Reusing `currentFiber` would be confusing for this because user code fiber
            // can change during commit phase too, but we don't need to unwind it (since
            // lifecycles in the commit phase don't resemble a tree).
            var currentPhase = null;
            var currentPhaseFiber = null;
            // Did lifecycle hook schedule an update? This is often a performance problem,
            // so we will keep track of it, and include it in the report.
            // Track commits caused by cascading updates.
            var isCommitting = false;
            var hasScheduledUpdateInCurrentCommit = false;
            var hasScheduledUpdateInCurrentPhase = false;
            var commitCountInCurrentWorkLoop = 0;
            var effectCountInCurrentCommit = 0;
            var isWaitingForCallback = false;
            // During commits, we only show a measurement once per method name
            // to avoid stretch the commit phase with measurement overhead.
            var labelsInCurrentCommit = new Set();

            var formatMarkName = function(markName) {
              return reactEmoji + " " + markName;
            };

            var formatLabel = function(label, warning$$1) {
              var prefix = warning$$1 ? warningEmoji + " " : reactEmoji + " ";
              var suffix = warning$$1 ? " Warning: " + warning$$1 : "";
              return "" + prefix + label + suffix;
            };

            var beginMark = function(markName) {
              performance.mark(formatMarkName(markName));
            };

            var clearMark = function(markName) {
              performance.clearMarks(formatMarkName(markName));
            };

            var endMark = function(label, markName, warning$$1) {
              var formattedMarkName = formatMarkName(markName);
              var formattedLabel = formatLabel(label, warning$$1);
              try {
                performance.measure(formattedLabel, formattedMarkName);
              } catch (err) {}
              // If previous mark was missing for some reason, this will throw.
              // This could only happen if React crashed in an unexpected place earlier.
              // Don't pile on with more errors.

              // Clear marks immediately to avoid growing buffer.
              performance.clearMarks(formattedMarkName);
              performance.clearMeasures(formattedLabel);
            };

            var getFiberMarkName = function(label, debugID) {
              return label + " (#" + debugID + ")";
            };

            var getFiberLabel = function(componentName, isMounted, phase) {
              if (phase === null) {
                // These are composite component total time measurements.
                return (
                  componentName + " [" + (isMounted ? "update" : "mount") + "]"
                );
              } else {
                // Composite component methods.
                return componentName + "." + phase;
              }
            };

            var beginFiberMark = function(fiber, phase) {
              var componentName = getComponentName(fiber) || "Unknown";
              var debugID = fiber._debugID;
              var isMounted = fiber.alternate !== null;
              var label = getFiberLabel(componentName, isMounted, phase);

              if (isCommitting && labelsInCurrentCommit.has(label)) {
                // During the commit phase, we don't show duplicate labels because
                // there is a fixed overhead for every measurement, and we don't
                // want to stretch the commit phase beyond necessary.
                return false;
              }
              labelsInCurrentCommit.add(label);

              var markName = getFiberMarkName(label, debugID);
              beginMark(markName);
              return true;
            };

            var clearFiberMark = function(fiber, phase) {
              var componentName = getComponentName(fiber) || "Unknown";
              var debugID = fiber._debugID;
              var isMounted = fiber.alternate !== null;
              var label = getFiberLabel(componentName, isMounted, phase);
              var markName = getFiberMarkName(label, debugID);
              clearMark(markName);
            };

            var endFiberMark = function(fiber, phase, warning$$1) {
              var componentName = getComponentName(fiber) || "Unknown";
              var debugID = fiber._debugID;
              var isMounted = fiber.alternate !== null;
              var label = getFiberLabel(componentName, isMounted, phase);
              var markName = getFiberMarkName(label, debugID);
              endMark(label, markName, warning$$1);
            };

            var shouldIgnoreFiber = function(fiber) {
              // Host components should be skipped in the timeline.
              // We could check typeof fiber.type, but does this work with RN?
              switch (fiber.tag) {
                case HostRoot:
                case HostComponent:
                case HostText:
                case HostPortal:
                case ReturnComponent:
                case Fragment:
                  return true;
                default:
                  return false;
              }
            };

            var clearPendingPhaseMeasurement = function() {
              if (currentPhase !== null && currentPhaseFiber !== null) {
                clearFiberMark(currentPhaseFiber, currentPhase);
              }
              currentPhaseFiber = null;
              currentPhase = null;
              hasScheduledUpdateInCurrentPhase = false;
            };

            var pauseTimers = function() {
              // Stops all currently active measurements so that they can be resumed
              // if we continue in a later deferred loop from the same unit of work.
              var fiber = currentFiber;
              while (fiber) {
                if (fiber._debugIsCurrentlyTiming) {
                  endFiberMark(fiber, null, null);
                }
                fiber = fiber["return"];
              }
            };

            var resumeTimersRecursively = function(fiber) {
              if (fiber["return"] !== null) {
                resumeTimersRecursively(fiber["return"]);
              }
              if (fiber._debugIsCurrentlyTiming) {
                beginFiberMark(fiber, null);
              }
            };

            var resumeTimers = function() {
              // Resumes all measurements that were active during the last deferred loop.
              if (currentFiber !== null) {
                resumeTimersRecursively(currentFiber);
              }
            };

            function recordEffect() {
              if (enableUserTimingAPI) {
                effectCountInCurrentCommit++;
              }
            }

            function recordScheduleUpdate() {
              if (enableUserTimingAPI) {
                if (isCommitting) {
                  hasScheduledUpdateInCurrentCommit = true;
                }
                if (
                  currentPhase !== null &&
                  currentPhase !== "componentWillMount" &&
                  currentPhase !== "componentWillReceiveProps"
                ) {
                  hasScheduledUpdateInCurrentPhase = true;
                }
              }
            }

            function startRequestCallbackTimer() {
              if (enableUserTimingAPI) {
                if (supportsUserTiming && !isWaitingForCallback) {
                  isWaitingForCallback = true;
                  beginMark("(Waiting for async callback...)");
                }
              }
            }

            function stopRequestCallbackTimer(didExpire) {
              if (enableUserTimingAPI) {
                if (supportsUserTiming) {
                  isWaitingForCallback = false;
                  var warning$$1 = didExpire
                    ? "React was blocked by main thread"
                    : null;
                  endMark(
                    "(Waiting for async callback...)",
                    "(Waiting for async callback...)",
                    warning$$1
                  );
                }
              }
            }

            function startWorkTimer(fiber) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                  return;
                }
                // If we pause, this is the fiber to unwind from.
                currentFiber = fiber;
                if (!beginFiberMark(fiber, null)) {
                  return;
                }
                fiber._debugIsCurrentlyTiming = true;
              }
            }

            function cancelWorkTimer(fiber) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                  return;
                }
                // Remember we shouldn't complete measurement for this fiber.
                // Otherwise flamechart will be deep even for small updates.
                fiber._debugIsCurrentlyTiming = false;
                clearFiberMark(fiber, null);
              }
            }

            function stopWorkTimer(fiber) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                  return;
                }
                // If we pause, its parent is the fiber to unwind from.
                currentFiber = fiber["return"];
                if (!fiber._debugIsCurrentlyTiming) {
                  return;
                }
                fiber._debugIsCurrentlyTiming = false;
                endFiberMark(fiber, null, null);
              }
            }

            function stopFailedWorkTimer(fiber) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                  return;
                }
                // If we pause, its parent is the fiber to unwind from.
                currentFiber = fiber["return"];
                if (!fiber._debugIsCurrentlyTiming) {
                  return;
                }
                fiber._debugIsCurrentlyTiming = false;
                var warning$$1 =
                  "An error was thrown inside this error boundary";
                endFiberMark(fiber, null, warning$$1);
              }
            }

            function startPhaseTimer(fiber, phase) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                clearPendingPhaseMeasurement();
                if (!beginFiberMark(fiber, phase)) {
                  return;
                }
                currentPhaseFiber = fiber;
                currentPhase = phase;
              }
            }

            function stopPhaseTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                if (currentPhase !== null && currentPhaseFiber !== null) {
                  var warning$$1 = hasScheduledUpdateInCurrentPhase
                    ? "Scheduled a cascading update"
                    : null;
                  endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
                }
                currentPhase = null;
                currentPhaseFiber = null;
              }
            }

            function startWorkLoopTimer(nextUnitOfWork) {
              if (enableUserTimingAPI) {
                currentFiber = nextUnitOfWork;
                if (!supportsUserTiming) {
                  return;
                }
                commitCountInCurrentWorkLoop = 0;
                // This is top level call.
                // Any other measurements are performed within.
                beginMark("(React Tree Reconciliation)");
                // Resume any measurements that were in progress during the last loop.
                resumeTimers();
              }
            }

            function stopWorkLoopTimer(interruptedBy) {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                var warning$$1 = null;
                if (interruptedBy !== null) {
                  if (interruptedBy.tag === HostRoot) {
                    warning$$1 =
                      "A top-level update interrupted the previous render";
                  } else {
                    var componentName =
                      getComponentName(interruptedBy) || "Unknown";
                    warning$$1 =
                      "An update to " +
                      componentName +
                      " interrupted the previous render";
                  }
                } else if (commitCountInCurrentWorkLoop > 1) {
                  warning$$1 = "There were cascading updates";
                }
                commitCountInCurrentWorkLoop = 0;
                // Pause any measurements until the next loop.
                pauseTimers();
                endMark(
                  "(React Tree Reconciliation)",
                  "(React Tree Reconciliation)",
                  warning$$1
                );
              }
            }

            function startCommitTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                isCommitting = true;
                hasScheduledUpdateInCurrentCommit = false;
                labelsInCurrentCommit.clear();
                beginMark("(Committing Changes)");
              }
            }

            function stopCommitTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }

                var warning$$1 = null;
                if (hasScheduledUpdateInCurrentCommit) {
                  warning$$1 = "Lifecycle hook scheduled a cascading update";
                } else if (commitCountInCurrentWorkLoop > 0) {
                  warning$$1 = "Caused by a cascading update in earlier commit";
                }
                hasScheduledUpdateInCurrentCommit = false;
                commitCountInCurrentWorkLoop++;
                isCommitting = false;
                labelsInCurrentCommit.clear();

                endMark(
                  "(Committing Changes)",
                  "(Committing Changes)",
                  warning$$1
                );
              }
            }

            function startCommitHostEffectsTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                effectCountInCurrentCommit = 0;
                beginMark("(Committing Host Effects)");
              }
            }

            function stopCommitHostEffectsTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0;
                endMark(
                  "(Committing Host Effects: " + count + " Total)",
                  "(Committing Host Effects)",
                  null
                );
              }
            }

            function startCommitLifeCyclesTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                effectCountInCurrentCommit = 0;
                beginMark("(Calling Lifecycle Methods)");
              }
            }

            function stopCommitLifeCyclesTimer() {
              if (enableUserTimingAPI) {
                if (!supportsUserTiming) {
                  return;
                }
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0;
                endMark(
                  "(Calling Lifecycle Methods: " + count + " Total)",
                  "(Calling Lifecycle Methods)",
                  null
                );
              }
            }

            {
              var warnedAboutMissingGetChildContext = {};
            }

            // A cursor to the current merged context object on the stack.
            var contextStackCursor = createCursor(emptyObject);
            // A cursor to a boolean indicating whether the context has changed.
            var didPerformWorkStackCursor = createCursor(false);
            // Keep track of the previous context object that was on the stack.
            // We use this to get access to the parent context after we have already
            // pushed the next context provider, and now need to merge their contexts.
            var previousContext = emptyObject;

            function getUnmaskedContext(workInProgress) {
              var hasOwnContext = isContextProvider(workInProgress);
              if (hasOwnContext) {
                // If the fiber is a context provider itself, when we read its context
                // we have already pushed its own child context on the stack. A context
                // provider should not "see" its own child context. Therefore we read the
                // previous (parent) context instead for a context provider.
                return previousContext;
              }
              return contextStackCursor.current;
            }

            function cacheContext(
              workInProgress,
              unmaskedContext,
              maskedContext
            ) {
              var instance = workInProgress.stateNode;
              instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
              instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
            }

            function getMaskedContext(workInProgress, unmaskedContext) {
              var type = workInProgress.type;
              var contextTypes = type.contextTypes;
              if (!contextTypes) {
                return emptyObject;
              }

              // Avoid recreating masked context unless unmasked context has changed.
              // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
              // This may trigger infinite loops if componentWillReceiveProps calls setState.
              var instance = workInProgress.stateNode;
              if (
                instance &&
                instance.__reactInternalMemoizedUnmaskedChildContext ===
                  unmaskedContext
              ) {
                return instance.__reactInternalMemoizedMaskedChildContext;
              }

              var context = {};
              for (var key in contextTypes) {
                context[key] = unmaskedContext[key];
              }

              {
                var name = getComponentName(workInProgress) || "Unknown";
                checkPropTypes(
                  contextTypes,
                  context,
                  "context",
                  name,
                  ReactDebugCurrentFiber.getCurrentFiberStackAddendum
                );
              }

              // Cache unmasked context so we can avoid recreating masked context unless necessary.
              // Context is created before the class component is instantiated so check for instance.
              if (instance) {
                cacheContext(workInProgress, unmaskedContext, context);
              }

              return context;
            }

            function hasContextChanged() {
              return didPerformWorkStackCursor.current;
            }

            function isContextConsumer(fiber) {
              return (
                fiber.tag === ClassComponent && fiber.type.contextTypes != null
              );
            }

            function isContextProvider(fiber) {
              return (
                fiber.tag === ClassComponent &&
                fiber.type.childContextTypes != null
              );
            }

            function popContextProvider(fiber) {
              if (!isContextProvider(fiber)) {
                return;
              }

              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }

            function popTopLevelContextObject(fiber) {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }

            function pushTopLevelContextObject(fiber, context, didChange) {
              !(contextStackCursor.cursor == null)
                ? invariant(
                    false,
                    "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              push(contextStackCursor, context, fiber);
              push(didPerformWorkStackCursor, didChange, fiber);
            }

            function processChildContext(fiber, parentContext) {
              var instance = fiber.stateNode;
              var childContextTypes = fiber.type.childContextTypes;

              // TODO (bvaughn) Replace this behavior with an invariant() in the future.
              // It has only been added in Fiber to match the (unintentional) behavior in Stack.
              if (typeof instance.getChildContext !== "function") {
                {
                  var componentName = getComponentName(fiber) || "Unknown";

                  if (!warnedAboutMissingGetChildContext[componentName]) {
                    warnedAboutMissingGetChildContext[componentName] = true;
                    warning(
                      false,
                      "%s.childContextTypes is specified but there is no getChildContext() method " +
                        "on the instance. You can either define getChildContext() on %s or remove " +
                        "childContextTypes from it.",
                      componentName,
                      componentName
                    );
                  }
                }
                return parentContext;
              }

              var childContext = void 0;
              {
                ReactDebugCurrentFiber.setCurrentPhase("getChildContext");
              }
              startPhaseTimer(fiber, "getChildContext");
              childContext = instance.getChildContext();
              stopPhaseTimer();
              {
                ReactDebugCurrentFiber.setCurrentPhase(null);
              }
              for (var contextKey in childContext) {
                !(contextKey in childContextTypes)
                  ? invariant(
                      false,
                      '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                      getComponentName(fiber) || "Unknown",
                      contextKey
                    )
                  : void 0;
              }
              {
                var name = getComponentName(fiber) || "Unknown";
                checkPropTypes(
                  childContextTypes,
                  childContext,
                  "child context",
                  name,
                  // In practice, there is one case in which we won't get a stack. It's when
                  // somebody calls unstable_renderSubtreeIntoContainer() and we process
                  // context from the parent component instance. The stack will be missing
                  // because it's outside of the reconciliation, and so the pointer has not
                  // been set. This is rare and doesn't matter. We'll also remove that API.
                  ReactDebugCurrentFiber.getCurrentFiberStackAddendum
                );
              }

              return _assign({}, parentContext, childContext);
            }

            function pushContextProvider(workInProgress) {
              if (!isContextProvider(workInProgress)) {
                return false;
              }

              var instance = workInProgress.stateNode;
              // We push the context as early as possible to ensure stack integrity.
              // If the instance does not exist yet, we will push null at first,
              // and replace it on the stack later when invalidating the context.
              var memoizedMergedChildContext =
                (instance &&
                  instance.__reactInternalMemoizedMergedChildContext) ||
                emptyObject;

              // Remember the parent context so we can merge with it later.
              // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
              previousContext = contextStackCursor.current;
              push(
                contextStackCursor,
                memoizedMergedChildContext,
                workInProgress
              );
              push(
                didPerformWorkStackCursor,
                didPerformWorkStackCursor.current,
                workInProgress
              );

              return true;
            }

            function invalidateContextProvider(workInProgress, didChange) {
              var instance = workInProgress.stateNode;
              !instance
                ? invariant(
                    false,
                    "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              if (didChange) {
                // Merge parent and own context.
                // Skip this if we're not updating due to sCU.
                // This avoids unnecessarily recomputing memoized values.
                var mergedContext = processChildContext(
                  workInProgress,
                  previousContext
                );
                instance.__reactInternalMemoizedMergedChildContext = mergedContext;

                // Replace the old (or empty) context with the new one.
                // It is important to unwind the context in the reverse order.
                pop(didPerformWorkStackCursor, workInProgress);
                pop(contextStackCursor, workInProgress);
                // Now push the new context and mark that it has changed.
                push(contextStackCursor, mergedContext, workInProgress);
                push(didPerformWorkStackCursor, didChange, workInProgress);
              } else {
                pop(didPerformWorkStackCursor, workInProgress);
                push(didPerformWorkStackCursor, didChange, workInProgress);
              }
            }

            function resetContext() {
              previousContext = emptyObject;
              contextStackCursor.current = emptyObject;
              didPerformWorkStackCursor.current = false;
            }

            function findCurrentUnmaskedContext(fiber) {
              // Currently this is only used with renderSubtreeIntoContainer; not sure if it
              // makes sense elsewhere
              !(isFiberMounted(fiber) && fiber.tag === ClassComponent)
                ? invariant(
                    false,
                    "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              var node = fiber;
              while (node.tag !== HostRoot) {
                if (isContextProvider(node)) {
                  return node.stateNode
                    .__reactInternalMemoizedMergedChildContext;
                }
                var parent = node["return"];
                !parent
                  ? invariant(
                      false,
                      "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                node = parent;
              }
              return node.stateNode.context;
            }

            var NoWork = 0; // TODO: Use an opaque type once ESLint et al support the syntax

            var Sync = 1;
            var Never = 2147483647; // Max int32: Math.pow(2, 31) - 1

            var UNIT_SIZE = 10;
            var MAGIC_NUMBER_OFFSET = 2;

            // 1 unit of expiration time represents 10ms.
            function msToExpirationTime(ms) {
              // Always add an offset so that we don't clash with the magic number for NoWork.
              return ((ms / UNIT_SIZE) | 0) + MAGIC_NUMBER_OFFSET;
            }

            function expirationTimeToMs(expirationTime) {
              return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
            }

            function ceiling(num, precision) {
              return (((num / precision) | 0) + 1) * precision;
            }

            function computeExpirationBucket(
              currentTime,
              expirationInMs,
              bucketSizeMs
            ) {
              return ceiling(
                currentTime + expirationInMs / UNIT_SIZE,
                bucketSizeMs / UNIT_SIZE
              );
            }

            var NoContext = 0;
            var AsyncUpdates = 1;

            {
              var hasBadMapPolyfill = false;
              try {
                var nonExtensibleObject = Object.preventExtensions({});
                /* eslint-disable no-new */

                /* eslint-enable no-new */
              } catch (e) {
                // TODO: Consider warning about bad polyfills
                hasBadMapPolyfill = true;
              }
            }

            // A Fiber is work on a Component that needs to be done or was done. There can
            // be more than one per component.

            {
              var debugCounter = 1;
            }

            function FiberNode(tag, key, internalContextTag) {
              // Instance
              this.tag = tag;
              this.key = key;
              this.type = null;
              this.stateNode = null;

              // Fiber
              this["return"] = null;
              this.child = null;
              this.sibling = null;
              this.index = 0;

              this.ref = null;

              this.pendingProps = null;
              this.memoizedProps = null;
              this.updateQueue = null;
              this.memoizedState = null;

              this.internalContextTag = internalContextTag;

              // Effects
              this.effectTag = NoEffect;
              this.nextEffect = null;

              this.firstEffect = null;
              this.lastEffect = null;

              this.expirationTime = NoWork;

              this.alternate = null;

              {
                this._debugID = debugCounter++;
                this._debugSource = null;
                this._debugOwner = null;
                this._debugIsCurrentlyTiming = false;
                if (
                  !hasBadMapPolyfill &&
                  typeof Object.preventExtensions === "function"
                ) {
                  Object.preventExtensions(this);
                }
              }
            }

            // This is a constructor function, rather than a POJO constructor, still
            // please ensure we do the following:
            // 1) Nobody should add any instance methods on this. Instance methods can be
            //    more difficult to predict when they get optimized and they are almost
            //    never inlined properly in static compilers.
            // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
            //    always know when it is a fiber.
            // 3) We might want to experiment with using numeric keys since they are easier
            //    to optimize in a non-JIT environment.
            // 4) We can easily go from a constructor to a createFiber object literal if that
            //    is faster.
            // 5) It should be easy to port this to a C struct and keep a C implementation
            //    compatible.
            var createFiber = function(tag, key, internalContextTag) {
              // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
              return new FiberNode(tag, key, internalContextTag);
            };

            function shouldConstruct(Component) {
              return !!(
                Component.prototype && Component.prototype.isReactComponent
              );
            }

            // This is used to create an alternate fiber to do work on.
            function createWorkInProgress(
              current,
              pendingProps,
              expirationTime
            ) {
              var workInProgress = current.alternate;
              if (workInProgress === null) {
                // We use a double buffering pooling technique because we know that we'll
                // only ever need at most two versions of a tree. We pool the "other" unused
                // node that we're free to reuse. This is lazily created to avoid allocating
                // extra objects for things that are never updated. It also allow us to
                // reclaim the extra memory if needed.
                workInProgress = createFiber(
                  current.tag,
                  current.key,
                  current.internalContextTag
                );
                workInProgress.type = current.type;
                workInProgress.stateNode = current.stateNode;

                {
                  // DEV-only fields
                  workInProgress._debugID = current._debugID;
                  workInProgress._debugSource = current._debugSource;
                  workInProgress._debugOwner = current._debugOwner;
                }

                workInProgress.alternate = current;
                current.alternate = workInProgress;
              } else {
                // We already have an alternate.
                // Reset the effect tag.
                workInProgress.effectTag = NoEffect;

                // The effect list is no longer valid.
                workInProgress.nextEffect = null;
                workInProgress.firstEffect = null;
                workInProgress.lastEffect = null;
              }

              workInProgress.expirationTime = expirationTime;
              workInProgress.pendingProps = pendingProps;

              workInProgress.child = current.child;
              workInProgress.memoizedProps = current.memoizedProps;
              workInProgress.memoizedState = current.memoizedState;
              workInProgress.updateQueue = current.updateQueue;

              // These will be overridden during the parent's reconciliation
              workInProgress.sibling = current.sibling;
              workInProgress.index = current.index;
              workInProgress.ref = current.ref;

              return workInProgress;
            }

            function createHostRootFiber() {
              var fiber = createFiber(HostRoot, null, NoContext);
              return fiber;
            }

            function createFiberFromElement(
              element,
              internalContextTag,
              expirationTime
            ) {
              var owner = null;
              {
                owner = element._owner;
              }

              var fiber = void 0;
              var type = element.type,
                key = element.key;

              if (typeof type === "function") {
                fiber = shouldConstruct(type)
                  ? createFiber(ClassComponent, key, internalContextTag)
                  : createFiber(
                      IndeterminateComponent,
                      key,
                      internalContextTag
                    );
                fiber.type = type;
                fiber.pendingProps = element.props;
              } else if (typeof type === "string") {
                fiber = createFiber(HostComponent, key, internalContextTag);
                fiber.type = type;
                fiber.pendingProps = element.props;
              } else if (
                typeof type === "object" &&
                type !== null &&
                typeof type.tag === "number"
              ) {
                // Currently assumed to be a continuation and therefore is a fiber already.
                // TODO: The yield system is currently broken for updates in some cases.
                // The reified yield stores a fiber, but we don't know which fiber that is;
                // the current or a workInProgress? When the continuation gets rendered here
                // we don't know if we can reuse that fiber or if we need to clone it.
                // There is probably a clever way to restructure this.
                fiber = type;
                fiber.pendingProps = element.props;
              } else {
                var info = "";
                {
                  if (
                    type === undefined ||
                    (typeof type === "object" &&
                      type !== null &&
                      Object.keys(type).length === 0)
                  ) {
                    info +=
                      " You likely forgot to export your component from the file " +
                      "it's defined in, or you might have mixed up default and named imports.";
                  }
                  var ownerName = owner ? getComponentName(owner) : null;
                  if (ownerName) {
                    info +=
                      "\n\nCheck the render method of `" + ownerName + "`.";
                  }
                }
                invariant(
                  false,
                  "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
                  type == null ? type : typeof type,
                  info
                );
              }

              {
                fiber._debugSource = element._source;
                fiber._debugOwner = element._owner;
              }

              fiber.expirationTime = expirationTime;

              return fiber;
            }

            function createFiberFromFragment(
              elements,
              internalContextTag,
              expirationTime,
              key
            ) {
              var fiber = createFiber(Fragment, key, internalContextTag);
              fiber.pendingProps = elements;
              fiber.expirationTime = expirationTime;
              return fiber;
            }

            function createFiberFromText(
              content,
              internalContextTag,
              expirationTime
            ) {
              var fiber = createFiber(HostText, null, internalContextTag);
              fiber.pendingProps = content;
              fiber.expirationTime = expirationTime;
              return fiber;
            }

            function createFiberFromHostInstanceForDeletion() {
              var fiber = createFiber(HostComponent, null, NoContext);
              fiber.type = "DELETED";
              return fiber;
            }

            function createFiberFromCall(
              call,
              internalContextTag,
              expirationTime
            ) {
              var fiber = createFiber(
                CallComponent,
                call.key,
                internalContextTag
              );
              fiber.type = call.handler;
              fiber.pendingProps = call;
              fiber.expirationTime = expirationTime;
              return fiber;
            }

            function createFiberFromReturn(
              returnNode,
              internalContextTag,
              expirationTime
            ) {
              var fiber = createFiber(
                ReturnComponent,
                null,
                internalContextTag
              );
              fiber.expirationTime = expirationTime;
              return fiber;
            }

            function createFiberFromPortal(
              portal,
              internalContextTag,
              expirationTime
            ) {
              var fiber = createFiber(
                HostPortal,
                portal.key,
                internalContextTag
              );
              fiber.pendingProps = portal.children || [];
              fiber.expirationTime = expirationTime;
              fiber.stateNode = {
                containerInfo: portal.containerInfo,
                pendingChildren: null, // Used by persistent updates
                implementation: portal.implementation
              };
              return fiber;
            }

            function createFiberRoot(containerInfo, hydrate) {
              // Cyclic construction. This cheats the type system right now because
              // stateNode is any.
              var uninitializedFiber = createHostRootFiber();
              var root = {
                current: uninitializedFiber,
                containerInfo: containerInfo,
                pendingChildren: null,
                remainingExpirationTime: NoWork,
                isReadyForCommit: false,
                finishedWork: null,
                context: null,
                pendingContext: null,
                hydrate: hydrate,
                nextScheduledRoot: null
              };
              uninitializedFiber.stateNode = root;
              return root;
            }

            var onCommitFiberRoot = null;
            var onCommitFiberUnmount = null;
            var hasLoggedError = false;

            function catchErrors(fn) {
              return function(arg) {
                try {
                  return fn(arg);
                } catch (err) {
                  if (true && !hasLoggedError) {
                    hasLoggedError = true;
                    warning(
                      false,
                      "React DevTools encountered an error: %s",
                      err
                    );
                  }
                }
              };
            }

            function injectInternals(internals) {
              if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
                // No DevTools
                return false;
              }
              var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
              if (hook.isDisabled) {
                // This isn't a real property on the hook, but it can be set to opt out
                // of DevTools integration and associated warnings and logs.
                // https://github.com/facebook/react/issues/3877
                return true;
              }
              if (!hook.supportsFiber) {
                {
                  warning(
                    false,
                    "The installed version of React DevTools is too old and will not work " +
                      "with the current version of React. Please update React DevTools. " +
                      "https://fb.me/react-devtools"
                  );
                }
                // DevTools exists, even though it doesn't support Fiber.
                return true;
              }
              try {
                var rendererID = hook.inject(internals);
                // We have successfully injected, so now it is safe to set up hooks.
                onCommitFiberRoot = catchErrors(function(root) {
                  return hook.onCommitFiberRoot(rendererID, root);
                });
                onCommitFiberUnmount = catchErrors(function(fiber) {
                  return hook.onCommitFiberUnmount(rendererID, fiber);
                });
              } catch (err) {
                // Catch all errors because it is unsafe to throw during initialization.
                {
                  warning(
                    false,
                    "React DevTools encountered an error: %s.",
                    err
                  );
                }
              }
              // DevTools exists
              return true;
            }

            function onCommitRoot(root) {
              if (typeof onCommitFiberRoot === "function") {
                onCommitFiberRoot(root);
              }
            }

            function onCommitUnmount(fiber) {
              if (typeof onCommitFiberUnmount === "function") {
                onCommitFiberUnmount(fiber);
              }
            }

            {
              var didWarnUpdateInsideUpdate = false;
            }

            // Callbacks are not validated until invocation

            // Singly linked-list of updates. When an update is scheduled, it is added to
            // the queue of the current fiber and the work-in-progress fiber. The two queues
            // are separate but they share a persistent structure.
            //
            // During reconciliation, updates are removed from the work-in-progress fiber,
            // but they remain on the current fiber. That ensures that if a work-in-progress
            // is aborted, the aborted updates are recovered by cloning from current.
            //
            // The work-in-progress queue is always a subset of the current queue.
            //
            // When the tree is committed, the work-in-progress becomes the current.

            function createUpdateQueue(baseState) {
              var queue = {
                baseState: baseState,
                expirationTime: NoWork,
                first: null,
                last: null,
                callbackList: null,
                hasForceUpdate: false,
                isInitialized: false
              };
              {
                queue.isProcessing = false;
              }
              return queue;
            }

            function insertUpdateIntoQueue(queue, update) {
              // Append the update to the end of the list.
              if (queue.last === null) {
                // Queue is empty
                queue.first = queue.last = update;
              } else {
                queue.last.next = update;
                queue.last = update;
              }
              if (
                queue.expirationTime === NoWork ||
                queue.expirationTime > update.expirationTime
              ) {
                queue.expirationTime = update.expirationTime;
              }
            }

            function insertUpdateIntoFiber(fiber, update) {
              // We'll have at least one and at most two distinct update queues.
              var alternateFiber = fiber.alternate;
              var queue1 = fiber.updateQueue;
              if (queue1 === null) {
                // TODO: We don't know what the base state will be until we begin work.
                // It depends on which fiber is the next current. Initialize with an empty
                // base state, then set to the memoizedState when rendering. Not super
                // happy with this approach.
                queue1 = fiber.updateQueue = createUpdateQueue(null);
              }

              var queue2 = void 0;
              if (alternateFiber !== null) {
                queue2 = alternateFiber.updateQueue;
                if (queue2 === null) {
                  queue2 = alternateFiber.updateQueue = createUpdateQueue(null);
                }
              } else {
                queue2 = null;
              }
              queue2 = queue2 !== queue1 ? queue2 : null;

              // Warn if an update is scheduled from inside an updater function.
              {
                if (
                  (queue1.isProcessing ||
                    (queue2 !== null && queue2.isProcessing)) &&
                  !didWarnUpdateInsideUpdate
                ) {
                  warning(
                    false,
                    "An update (setState, replaceState, or forceUpdate) was scheduled " +
                      "from inside an update function. Update functions should be pure, " +
                      "with zero side-effects. Consider using componentDidUpdate or a " +
                      "callback."
                  );
                  didWarnUpdateInsideUpdate = true;
                }
              }

              // If there's only one queue, add the update to that queue and exit.
              if (queue2 === null) {
                insertUpdateIntoQueue(queue1, update);
                return;
              }

              // If either queue is empty, we need to add to both queues.
              if (queue1.last === null || queue2.last === null) {
                insertUpdateIntoQueue(queue1, update);
                insertUpdateIntoQueue(queue2, update);
                return;
              }

              // If both lists are not empty, the last update is the same for both lists
              // because of structural sharing. So, we should only append to one of
              // the lists.
              insertUpdateIntoQueue(queue1, update);
              // But we still need to update the `last` pointer of queue2.
              queue2.last = update;
            }

            function getUpdateExpirationTime(fiber) {
              if (fiber.tag !== ClassComponent && fiber.tag !== HostRoot) {
                return NoWork;
              }
              var updateQueue = fiber.updateQueue;
              if (updateQueue === null) {
                return NoWork;
              }
              return updateQueue.expirationTime;
            }

            function getStateFromUpdate(update, instance, prevState, props) {
              var partialState = update.partialState;
              if (typeof partialState === "function") {
                var updateFn = partialState;

                // Invoke setState callback an extra time to help detect side-effects.
                if (debugRenderPhaseSideEffects) {
                  updateFn.call(instance, prevState, props);
                }

                return updateFn.call(instance, prevState, props);
              } else {
                return partialState;
              }
            }

            function processUpdateQueue(
              current,
              workInProgress,
              queue,
              instance,
              props,
              renderExpirationTime
            ) {
              if (current !== null && current.updateQueue === queue) {
                // We need to create a work-in-progress queue, by cloning the current queue.
                var currentQueue = queue;
                queue = workInProgress.updateQueue = {
                  baseState: currentQueue.baseState,
                  expirationTime: currentQueue.expirationTime,
                  first: currentQueue.first,
                  last: currentQueue.last,
                  isInitialized: currentQueue.isInitialized,
                  // These fields are no longer valid because they were already committed.
                  // Reset them.
                  callbackList: null,
                  hasForceUpdate: false
                };
              }

              {
                // Set this flag so we can warn if setState is called inside the update
                // function of another setState.
                queue.isProcessing = true;
              }

              // Reset the remaining expiration time. If we skip over any updates, we'll
              // increase this accordingly.
              queue.expirationTime = NoWork;

              // TODO: We don't know what the base state will be until we begin work.
              // It depends on which fiber is the next current. Initialize with an empty
              // base state, then set to the memoizedState when rendering. Not super
              // happy with this approach.
              var state = void 0;
              if (queue.isInitialized) {
                state = queue.baseState;
              } else {
                state = queue.baseState = workInProgress.memoizedState;
                queue.isInitialized = true;
              }
              var dontMutatePrevState = true;
              var update = queue.first;
              var didSkip = false;
              while (update !== null) {
                var updateExpirationTime = update.expirationTime;
                if (updateExpirationTime > renderExpirationTime) {
                  // This update does not have sufficient priority. Skip it.
                  var remainingExpirationTime = queue.expirationTime;
                  if (
                    remainingExpirationTime === NoWork ||
                    remainingExpirationTime > updateExpirationTime
                  ) {
                    // Update the remaining expiration time.
                    queue.expirationTime = updateExpirationTime;
                  }
                  if (!didSkip) {
                    didSkip = true;
                    queue.baseState = state;
                  }
                  // Continue to the next update.
                  update = update.next;
                  continue;
                }

                // This update does have sufficient priority.

                // If no previous updates were skipped, drop this update from the queue by
                // advancing the head of the list.
                if (!didSkip) {
                  queue.first = update.next;
                  if (queue.first === null) {
                    queue.last = null;
                  }
                }

                // Process the update
                var _partialState = void 0;
                if (update.isReplace) {
                  state = getStateFromUpdate(update, instance, state, props);
                  dontMutatePrevState = true;
                } else {
                  _partialState = getStateFromUpdate(
                    update,
                    instance,
                    state,
                    props
                  );
                  if (_partialState) {
                    if (dontMutatePrevState) {
                      // $FlowFixMe: Idk how to type this properly.
                      state = _assign({}, state, _partialState);
                    } else {
                      state = _assign(state, _partialState);
                    }
                    dontMutatePrevState = false;
                  }
                }
                if (update.isForced) {
                  queue.hasForceUpdate = true;
                }
                if (update.callback !== null) {
                  // Append to list of callbacks.
                  var _callbackList = queue.callbackList;
                  if (_callbackList === null) {
                    _callbackList = queue.callbackList = [];
                  }
                  _callbackList.push(update);
                }
                update = update.next;
              }

              if (queue.callbackList !== null) {
                workInProgress.effectTag |= Callback;
              } else if (queue.first === null && !queue.hasForceUpdate) {
                // The queue is empty. We can reset it.
                workInProgress.updateQueue = null;
              }

              if (!didSkip) {
                didSkip = true;
                queue.baseState = state;
              }

              {
                // No longer processing.
                queue.isProcessing = false;
              }

              return state;
            }

            function commitCallbacks(queue, context) {
              var callbackList = queue.callbackList;
              if (callbackList === null) {
                return;
              }
              // Set the list to null to make sure they don't get called more than once.
              queue.callbackList = null;
              for (var i = 0; i < callbackList.length; i++) {
                var update = callbackList[i];
                var _callback = update.callback;
                // This update might be processed again. Clear the callback so it's only
                // called once.
                update.callback = null;
                !(typeof _callback === "function")
                  ? invariant(
                      false,
                      "Invalid argument passed as callback. Expected a function. Instead received: %s",
                      _callback
                    )
                  : void 0;
                _callback.call(context);
              }
            }

            var fakeInternalInstance = {};
            var isArray = Array.isArray;

            {
              var didWarnAboutStateAssignmentForComponent = {};

              var warnOnInvalidCallback = function(callback, callerName) {
                warning(
                  callback === null || typeof callback === "function",
                  "%s(...): Expected the last optional `callback` argument to be a " +
                    "function. Instead received: %s.",
                  callerName,
                  callback
                );
              };

              // This is so gross but it's at least non-critical and can be removed if
              // it causes problems. This is meant to give a nicer error message for
              // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
              // ...)) which otherwise throws a "_processChildContext is not a function"
              // exception.
              Object.defineProperty(
                fakeInternalInstance,
                "_processChildContext",
                {
                  enumerable: false,
                  value: function() {
                    invariant(
                      false,
                      "_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)."
                    );
                  }
                }
              );
              Object.freeze(fakeInternalInstance);
            }

            var ReactFiberClassComponent = function(
              scheduleWork,
              computeExpirationForFiber,
              memoizeProps,
              memoizeState
            ) {
              // Class component state updater
              var updater = {
                isMounted: isMounted,
                enqueueSetState: function(instance, partialState, callback) {
                  var fiber = get(instance);
                  callback = callback === undefined ? null : callback;
                  {
                    warnOnInvalidCallback(callback, "setState");
                  }
                  var expirationTime = computeExpirationForFiber(fiber);
                  var update = {
                    expirationTime: expirationTime,
                    partialState: partialState,
                    callback: callback,
                    isReplace: false,
                    isForced: false,
                    nextCallback: null,
                    next: null
                  };
                  insertUpdateIntoFiber(fiber, update);
                  scheduleWork(fiber, expirationTime);
                },
                enqueueReplaceState: function(instance, state, callback) {
                  var fiber = get(instance);
                  callback = callback === undefined ? null : callback;
                  {
                    warnOnInvalidCallback(callback, "replaceState");
                  }
                  var expirationTime = computeExpirationForFiber(fiber);
                  var update = {
                    expirationTime: expirationTime,
                    partialState: state,
                    callback: callback,
                    isReplace: true,
                    isForced: false,
                    nextCallback: null,
                    next: null
                  };
                  insertUpdateIntoFiber(fiber, update);
                  scheduleWork(fiber, expirationTime);
                },
                enqueueForceUpdate: function(instance, callback) {
                  var fiber = get(instance);
                  callback = callback === undefined ? null : callback;
                  {
                    warnOnInvalidCallback(callback, "forceUpdate");
                  }
                  var expirationTime = computeExpirationForFiber(fiber);
                  var update = {
                    expirationTime: expirationTime,
                    partialState: null,
                    callback: callback,
                    isReplace: false,
                    isForced: true,
                    nextCallback: null,
                    next: null
                  };
                  insertUpdateIntoFiber(fiber, update);
                  scheduleWork(fiber, expirationTime);
                }
              };

              function checkShouldComponentUpdate(
                workInProgress,
                oldProps,
                newProps,
                oldState,
                newState,
                newContext
              ) {
                if (
                  oldProps === null ||
                  (workInProgress.updateQueue !== null &&
                    workInProgress.updateQueue.hasForceUpdate)
                ) {
                  // If the workInProgress already has an Update effect, return true
                  return true;
                }

                var instance = workInProgress.stateNode;
                var type = workInProgress.type;
                if (typeof instance.shouldComponentUpdate === "function") {
                  startPhaseTimer(workInProgress, "shouldComponentUpdate");
                  var shouldUpdate = instance.shouldComponentUpdate(
                    newProps,
                    newState,
                    newContext
                  );
                  stopPhaseTimer();

                  // Simulate an async bailout/interruption by invoking lifecycle twice.
                  if (debugRenderPhaseSideEffects) {
                    instance.shouldComponentUpdate(
                      newProps,
                      newState,
                      newContext
                    );
                  }

                  {
                    warning(
                      shouldUpdate !== undefined,
                      "%s.shouldComponentUpdate(): Returned undefined instead of a " +
                        "boolean value. Make sure to return true or false.",
                      getComponentName(workInProgress) || "Unknown"
                    );
                  }

                  return shouldUpdate;
                }

                if (type.prototype && type.prototype.isPureReactComponent) {
                  return (
                    !shallowEqual(oldProps, newProps) ||
                    !shallowEqual(oldState, newState)
                  );
                }

                return true;
              }

              function checkClassInstance(workInProgress) {
                var instance = workInProgress.stateNode;
                var type = workInProgress.type;
                {
                  var name = getComponentName(workInProgress);
                  var renderPresent = instance.render;

                  if (!renderPresent) {
                    if (
                      type.prototype &&
                      typeof type.prototype.render === "function"
                    ) {
                      warning(
                        false,
                        "%s(...): No `render` method found on the returned component " +
                          "instance: did you accidentally return an object from the constructor?",
                        name
                      );
                    } else {
                      warning(
                        false,
                        "%s(...): No `render` method found on the returned component " +
                          "instance: you may have forgotten to define `render`.",
                        name
                      );
                    }
                  }

                  var noGetInitialStateOnES6 =
                    !instance.getInitialState ||
                    instance.getInitialState.isReactClassApproved ||
                    instance.state;
                  warning(
                    noGetInitialStateOnES6,
                    "getInitialState was defined on %s, a plain JavaScript class. " +
                      "This is only supported for classes created using React.createClass. " +
                      "Did you mean to define a state property instead?",
                    name
                  );
                  var noGetDefaultPropsOnES6 =
                    !instance.getDefaultProps ||
                    instance.getDefaultProps.isReactClassApproved;
                  warning(
                    noGetDefaultPropsOnES6,
                    "getDefaultProps was defined on %s, a plain JavaScript class. " +
                      "This is only supported for classes created using React.createClass. " +
                      "Use a static property to define defaultProps instead.",
                    name
                  );
                  var noInstancePropTypes = !instance.propTypes;
                  warning(
                    noInstancePropTypes,
                    "propTypes was defined as an instance property on %s. Use a static " +
                      "property to define propTypes instead.",
                    name
                  );
                  var noInstanceContextTypes = !instance.contextTypes;
                  warning(
                    noInstanceContextTypes,
                    "contextTypes was defined as an instance property on %s. Use a static " +
                      "property to define contextTypes instead.",
                    name
                  );
                  var noComponentShouldUpdate =
                    typeof instance.componentShouldUpdate !== "function";
                  warning(
                    noComponentShouldUpdate,
                    "%s has a method called " +
                      "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
                      "The name is phrased as a question because the function is " +
                      "expected to return a value.",
                    name
                  );
                  if (
                    type.prototype &&
                    type.prototype.isPureReactComponent &&
                    typeof instance.shouldComponentUpdate !== "undefined"
                  ) {
                    warning(
                      false,
                      "%s has a method called shouldComponentUpdate(). " +
                        "shouldComponentUpdate should not be used when extending React.PureComponent. " +
                        "Please extend React.Component if shouldComponentUpdate is used.",
                      getComponentName(workInProgress) || "A pure component"
                    );
                  }
                  var noComponentDidUnmount =
                    typeof instance.componentDidUnmount !== "function";
                  warning(
                    noComponentDidUnmount,
                    "%s has a method called " +
                      "componentDidUnmount(). But there is no such lifecycle method. " +
                      "Did you mean componentWillUnmount()?",
                    name
                  );
                  var noComponentDidReceiveProps =
                    typeof instance.componentDidReceiveProps !== "function";
                  warning(
                    noComponentDidReceiveProps,
                    "%s has a method called " +
                      "componentDidReceiveProps(). But there is no such lifecycle method. " +
                      "If you meant to update the state in response to changing props, " +
                      "use componentWillReceiveProps(). If you meant to fetch data or " +
                      "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
                    name
                  );
                  var noComponentWillRecieveProps =
                    typeof instance.componentWillRecieveProps !== "function";
                  warning(
                    noComponentWillRecieveProps,
                    "%s has a method called " +
                      "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
                    name
                  );
                  var hasMutatedProps =
                    instance.props !== workInProgress.pendingProps;
                  warning(
                    instance.props === undefined || !hasMutatedProps,
                    "%s(...): When calling super() in `%s`, make sure to pass " +
                      "up the same props that your component's constructor was passed.",
                    name,
                    name
                  );
                  var noInstanceDefaultProps = !instance.defaultProps;
                  warning(
                    noInstanceDefaultProps,
                    "Setting defaultProps as an instance property on %s is not supported and will be ignored." +
                      " Instead, define defaultProps as a static property on %s.",
                    name,
                    name
                  );
                }

                var state = instance.state;
                if (state && (typeof state !== "object" || isArray(state))) {
                  warning(
                    false,
                    "%s.state: must be set to an object or null",
                    getComponentName(workInProgress)
                  );
                }
                if (typeof instance.getChildContext === "function") {
                  warning(
                    typeof workInProgress.type.childContextTypes === "object",
                    "%s.getChildContext(): childContextTypes must be defined in order to " +
                      "use getChildContext().",
                    getComponentName(workInProgress)
                  );
                }
              }

              function resetInputPointers(workInProgress, instance) {
                instance.props = workInProgress.memoizedProps;
                instance.state = workInProgress.memoizedState;
              }

              function adoptClassInstance(workInProgress, instance) {
                instance.updater = updater;
                workInProgress.stateNode = instance;
                // The instance needs access to the fiber so that it can schedule updates
                set(instance, workInProgress);
                {
                  instance._reactInternalInstance = fakeInternalInstance;
                }
              }

              function constructClassInstance(workInProgress, props) {
                var ctor = workInProgress.type;
                var unmaskedContext = getUnmaskedContext(workInProgress);
                var needsContext = isContextConsumer(workInProgress);
                var context = needsContext
                  ? getMaskedContext(workInProgress, unmaskedContext)
                  : emptyObject;
                var instance = new ctor(props, context);
                adoptClassInstance(workInProgress, instance);

                // Cache unmasked context so we can avoid recreating masked context unless necessary.
                // ReactFiberContext usually updates this cache but can't for newly-created instances.
                if (needsContext) {
                  cacheContext(workInProgress, unmaskedContext, context);
                }

                return instance;
              }

              function callComponentWillMount(workInProgress, instance) {
                startPhaseTimer(workInProgress, "componentWillMount");
                var oldState = instance.state;
                instance.componentWillMount();
                stopPhaseTimer();

                // Simulate an async bailout/interruption by invoking lifecycle twice.
                if (debugRenderPhaseSideEffects) {
                  instance.componentWillMount();
                }

                if (oldState !== instance.state) {
                  {
                    warning(
                      false,
                      "%s.componentWillMount(): Assigning directly to this.state is " +
                        "deprecated (except inside a component's " +
                        "constructor). Use setState instead.",
                      getComponentName(workInProgress)
                    );
                  }
                  updater.enqueueReplaceState(instance, instance.state, null);
                }
              }

              function callComponentWillReceiveProps(
                workInProgress,
                instance,
                newProps,
                newContext
              ) {
                startPhaseTimer(workInProgress, "componentWillReceiveProps");
                var oldState = instance.state;
                instance.componentWillReceiveProps(newProps, newContext);
                stopPhaseTimer();

                // Simulate an async bailout/interruption by invoking lifecycle twice.
                if (debugRenderPhaseSideEffects) {
                  instance.componentWillReceiveProps(newProps, newContext);
                }

                if (instance.state !== oldState) {
                  {
                    var componentName =
                      getComponentName(workInProgress) || "Component";
                    if (
                      !didWarnAboutStateAssignmentForComponent[componentName]
                    ) {
                      warning(
                        false,
                        "%s.componentWillReceiveProps(): Assigning directly to " +
                          "this.state is deprecated (except inside a component's " +
                          "constructor). Use setState instead.",
                        componentName
                      );
                      didWarnAboutStateAssignmentForComponent[
                        componentName
                      ] = true;
                    }
                  }
                  updater.enqueueReplaceState(instance, instance.state, null);
                }
              }

              // Invokes the mount life-cycles on a previously never rendered instance.
              function mountClassInstance(
                workInProgress,
                renderExpirationTime
              ) {
                var current = workInProgress.alternate;

                {
                  checkClassInstance(workInProgress);
                }

                var instance = workInProgress.stateNode;
                var state = instance.state || null;

                var props = workInProgress.pendingProps;
                !props
                  ? invariant(
                      false,
                      "There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                var unmaskedContext = getUnmaskedContext(workInProgress);

                instance.props = props;
                instance.state = workInProgress.memoizedState = state;
                instance.refs = emptyObject;
                instance.context = getMaskedContext(
                  workInProgress,
                  unmaskedContext
                );

                if (
                  enableAsyncSubtreeAPI &&
                  workInProgress.type != null &&
                  workInProgress.type.prototype != null &&
                  workInProgress.type.prototype
                    .unstable_isAsyncReactComponent === true
                ) {
                  workInProgress.internalContextTag |= AsyncUpdates;
                }

                if (typeof instance.componentWillMount === "function") {
                  callComponentWillMount(workInProgress, instance);
                  // If we had additional state updates during this life-cycle, let's
                  // process them now.
                  var updateQueue = workInProgress.updateQueue;
                  if (updateQueue !== null) {
                    instance.state = processUpdateQueue(
                      current,
                      workInProgress,
                      updateQueue,
                      instance,
                      props,
                      renderExpirationTime
                    );
                  }
                }
                if (typeof instance.componentDidMount === "function") {
                  workInProgress.effectTag |= Update;
                }
              }

              // Called on a preexisting class instance. Returns false if a resumed render
              // could be reused.
              // function resumeMountClassInstance(
              //   workInProgress: Fiber,
              //   priorityLevel: PriorityLevel,
              // ): boolean {
              //   const instance = workInProgress.stateNode;
              //   resetInputPointers(workInProgress, instance);

              //   let newState = workInProgress.memoizedState;
              //   let newProps = workInProgress.pendingProps;
              //   if (!newProps) {
              //     // If there isn't any new props, then we'll reuse the memoized props.
              //     // This could be from already completed work.
              //     newProps = workInProgress.memoizedProps;
              //     invariant(
              //       newProps != null,
              //       'There should always be pending or memoized props. This error is ' +
              //         'likely caused by a bug in React. Please file an issue.',
              //     );
              //   }
              //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
              //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

              //   const oldContext = instance.context;
              //   const oldProps = workInProgress.memoizedProps;

              //   if (
              //     typeof instance.componentWillReceiveProps === 'function' &&
              //     (oldProps !== newProps || oldContext !== newContext)
              //   ) {
              //     callComponentWillReceiveProps(
              //       workInProgress,
              //       instance,
              //       newProps,
              //       newContext,
              //     );
              //   }

              //   // Process the update queue before calling shouldComponentUpdate
              //   const updateQueue = workInProgress.updateQueue;
              //   if (updateQueue !== null) {
              //     newState = processUpdateQueue(
              //       workInProgress,
              //       updateQueue,
              //       instance,
              //       newState,
              //       newProps,
              //       priorityLevel,
              //     );
              //   }

              //   // TODO: Should we deal with a setState that happened after the last
              //   // componentWillMount and before this componentWillMount? Probably
              //   // unsupported anyway.

              //   if (
              //     !checkShouldComponentUpdate(
              //       workInProgress,
              //       workInProgress.memoizedProps,
              //       newProps,
              //       workInProgress.memoizedState,
              //       newState,
              //       newContext,
              //     )
              //   ) {
              //     // Update the existing instance's state, props, and context pointers even
              //     // though we're bailing out.
              //     instance.props = newProps;
              //     instance.state = newState;
              //     instance.context = newContext;
              //     return false;
              //   }

              //   // Update the input pointers now so that they are correct when we call
              //   // componentWillMount
              //   instance.props = newProps;
              //   instance.state = newState;
              //   instance.context = newContext;

              //   if (typeof instance.componentWillMount === 'function') {
              //     callComponentWillMount(workInProgress, instance);
              //     // componentWillMount may have called setState. Process the update queue.
              //     const newUpdateQueue = workInProgress.updateQueue;
              //     if (newUpdateQueue !== null) {
              //       newState = processUpdateQueue(
              //         workInProgress,
              //         newUpdateQueue,
              //         instance,
              //         newState,
              //         newProps,
              //         priorityLevel,
              //       );
              //     }
              //   }

              //   if (typeof instance.componentDidMount === 'function') {
              //     workInProgress.effectTag |= Update;
              //   }

              //   instance.state = newState;

              //   return true;
              // }

              // Invokes the update life-cycles and returns false if it shouldn't rerender.
              function updateClassInstance(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                var instance = workInProgress.stateNode;
                resetInputPointers(workInProgress, instance);

                var oldProps = workInProgress.memoizedProps;
                var newProps = workInProgress.pendingProps;
                if (!newProps) {
                  // If there aren't any new props, then we'll reuse the memoized props.
                  // This could be from already completed work.
                  newProps = oldProps;
                  !(newProps != null)
                    ? invariant(
                        false,
                        "There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                }
                var oldContext = instance.context;
                var newUnmaskedContext = getUnmaskedContext(workInProgress);
                var newContext = getMaskedContext(
                  workInProgress,
                  newUnmaskedContext
                );

                // Note: During these life-cycles, instance.props/instance.state are what
                // ever the previously attempted to render - not the "current". However,
                // during componentDidUpdate we pass the "current" props.

                if (
                  typeof instance.componentWillReceiveProps === "function" &&
                  (oldProps !== newProps || oldContext !== newContext)
                ) {
                  callComponentWillReceiveProps(
                    workInProgress,
                    instance,
                    newProps,
                    newContext
                  );
                }

                // Compute the next state using the memoized state and the update queue.
                var oldState = workInProgress.memoizedState;
                // TODO: Previous state can be null.
                var newState = void 0;
                if (workInProgress.updateQueue !== null) {
                  newState = processUpdateQueue(
                    current,
                    workInProgress,
                    workInProgress.updateQueue,
                    instance,
                    newProps,
                    renderExpirationTime
                  );
                } else {
                  newState = oldState;
                }

                if (
                  oldProps === newProps &&
                  oldState === newState &&
                  !hasContextChanged() &&
                  !(
                    workInProgress.updateQueue !== null &&
                    workInProgress.updateQueue.hasForceUpdate
                  )
                ) {
                  // If an update was already in progress, we should schedule an Update
                  // effect even though we're bailing out, so that cWU/cDU are called.
                  if (typeof instance.componentDidUpdate === "function") {
                    if (
                      oldProps !== current.memoizedProps ||
                      oldState !== current.memoizedState
                    ) {
                      workInProgress.effectTag |= Update;
                    }
                  }
                  return false;
                }

                var shouldUpdate = checkShouldComponentUpdate(
                  workInProgress,
                  oldProps,
                  newProps,
                  oldState,
                  newState,
                  newContext
                );

                if (shouldUpdate) {
                  if (typeof instance.componentWillUpdate === "function") {
                    startPhaseTimer(workInProgress, "componentWillUpdate");
                    instance.componentWillUpdate(
                      newProps,
                      newState,
                      newContext
                    );
                    stopPhaseTimer();

                    // Simulate an async bailout/interruption by invoking lifecycle twice.
                    if (debugRenderPhaseSideEffects) {
                      instance.componentWillUpdate(
                        newProps,
                        newState,
                        newContext
                      );
                    }
                  }
                  if (typeof instance.componentDidUpdate === "function") {
                    workInProgress.effectTag |= Update;
                  }
                } else {
                  // If an update was already in progress, we should schedule an Update
                  // effect even though we're bailing out, so that cWU/cDU are called.
                  if (typeof instance.componentDidUpdate === "function") {
                    if (
                      oldProps !== current.memoizedProps ||
                      oldState !== current.memoizedState
                    ) {
                      workInProgress.effectTag |= Update;
                    }
                  }

                  // If shouldComponentUpdate returned false, we should still update the
                  // memoized props/state to indicate that this work can be reused.
                  memoizeProps(workInProgress, newProps);
                  memoizeState(workInProgress, newState);
                }

                // Update the existing instance's state, props, and context pointers even
                // if shouldComponentUpdate returns false.
                instance.props = newProps;
                instance.state = newState;
                instance.context = newContext;

                return shouldUpdate;
              }

              return {
                adoptClassInstance: adoptClassInstance,
                constructClassInstance: constructClassInstance,
                mountClassInstance: mountClassInstance,
                // resumeMountClassInstance,
                updateClassInstance: updateClassInstance
              };
            };

            // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
            // nor polyfill, then a plain number is used for performance.
            var hasSymbol = typeof Symbol === "function" && Symbol["for"];

            var REACT_ELEMENT_TYPE = hasSymbol
              ? Symbol["for"]("react.element")
              : 0xeac7;
            var REACT_CALL_TYPE = hasSymbol
              ? Symbol["for"]("react.call")
              : 0xeac8;
            var REACT_RETURN_TYPE = hasSymbol
              ? Symbol["for"]("react.return")
              : 0xeac9;
            var REACT_PORTAL_TYPE = hasSymbol
              ? Symbol["for"]("react.portal")
              : 0xeaca;
            var REACT_FRAGMENT_TYPE = hasSymbol
              ? Symbol["for"]("react.fragment")
              : 0xeacb;

            var MAYBE_ITERATOR_SYMBOL =
              typeof Symbol === "function" && Symbol.iterator;
            var FAUX_ITERATOR_SYMBOL = "@@iterator";

            function getIteratorFn(maybeIterable) {
              if (
                maybeIterable === null ||
                typeof maybeIterable === "undefined"
              ) {
                return null;
              }
              var maybeIterator =
                (MAYBE_ITERATOR_SYMBOL &&
                  maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL];
              if (typeof maybeIterator === "function") {
                return maybeIterator;
              }
              return null;
            }

            var getCurrentFiberStackAddendum$1 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            {
              var didWarnAboutMaps = false;
              /**
               * Warn if there's no key explicitly set on dynamic arrays of children or
               * object keys are not valid. This allows us to keep track of children between
               * updates.
               */
              var ownerHasKeyUseWarning = {};
              var ownerHasFunctionTypeWarning = {};

              var warnForMissingKey = function(child) {
                if (child === null || typeof child !== "object") {
                  return;
                }
                if (
                  !child._store ||
                  child._store.validated ||
                  child.key != null
                ) {
                  return;
                }
                !(typeof child._store === "object")
                  ? invariant(
                      false,
                      "React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                child._store.validated = true;

                var currentComponentErrorInfo =
                  "Each child in an array or iterator should have a unique " +
                  '"key" prop. See https://fb.me/react-warning-keys for ' +
                  "more information." +
                  (getCurrentFiberStackAddendum$1() || "");
                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                  return;
                }
                ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

                warning(
                  false,
                  "Each child in an array or iterator should have a unique " +
                    '"key" prop. See https://fb.me/react-warning-keys for ' +
                    "more information.%s",
                  getCurrentFiberStackAddendum$1()
                );
              };
            }

            var isArray$1 = Array.isArray;

            function coerceRef(current, element) {
              var mixedRef = element.ref;
              if (mixedRef !== null && typeof mixedRef !== "function") {
                if (element._owner) {
                  var owner = element._owner;
                  var inst = void 0;
                  if (owner) {
                    var ownerFiber = owner;
                    !(ownerFiber.tag === ClassComponent)
                      ? invariant(
                          false,
                          "Stateless function components cannot have refs."
                        )
                      : void 0;
                    inst = ownerFiber.stateNode;
                  }
                  !inst
                    ? invariant(
                        false,
                        "Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.",
                        mixedRef
                      )
                    : void 0;
                  var stringRef = "" + mixedRef;
                  // Check if previous string ref matches new string ref
                  if (
                    current !== null &&
                    current.ref !== null &&
                    current.ref._stringRef === stringRef
                  ) {
                    return current.ref;
                  }
                  var ref = function(value) {
                    var refs =
                      inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
                    if (value === null) {
                      delete refs[stringRef];
                    } else {
                      refs[stringRef] = value;
                    }
                  };
                  ref._stringRef = stringRef;
                  return ref;
                } else {
                  !(typeof mixedRef === "string")
                    ? invariant(
                        false,
                        "Expected ref to be a function or a string."
                      )
                    : void 0;
                  !element._owner
                    ? invariant(
                        false,
                        "Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).",
                        mixedRef
                      )
                    : void 0;
                }
              }
              return mixedRef;
            }

            function throwOnInvalidObjectType(returnFiber, newChild) {
              if (returnFiber.type !== "textarea") {
                var addendum = "";
                {
                  addendum =
                    " If you meant to render a collection of children, use an array " +
                    "instead." +
                    (getCurrentFiberStackAddendum$1() || "");
                }
                invariant(
                  false,
                  "Objects are not valid as a React child (found: %s).%s",
                  Object.prototype.toString.call(newChild) === "[object Object]"
                    ? "object with keys {" +
                      Object.keys(newChild).join(", ") +
                      "}"
                    : newChild,
                  addendum
                );
              }
            }

            function warnOnFunctionType() {
              var currentComponentErrorInfo =
                "Functions are not valid as a React child. This may happen if " +
                "you return a Component instead of <Component /> from render. " +
                "Or maybe you meant to call this function rather than return it." +
                (getCurrentFiberStackAddendum$1() || "");

              if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

              warning(
                false,
                "Functions are not valid as a React child. This may happen if " +
                  "you return a Component instead of <Component /> from render. " +
                  "Or maybe you meant to call this function rather than return it.%s",
                getCurrentFiberStackAddendum$1() || ""
              );
            }

            // This wrapper function exists because I expect to clone the code in each path
            // to be able to optimize each path individually by branching early. This needs
            // a compiler or we can do it manually. Helpers that don't need this branching
            // live outside of this function.
            function ChildReconciler(shouldTrackSideEffects) {
              function deleteChild(returnFiber, childToDelete) {
                if (!shouldTrackSideEffects) {
                  // Noop.
                  return;
                }
                // Deletions are added in reversed order so we add it to the front.
                // At this point, the return fiber's effect list is empty except for
                // deletions, so we can just append the deletion to the list. The remaining
                // effects aren't added until the complete phase. Once we implement
                // resuming, this may not be true.
                var last = returnFiber.lastEffect;
                if (last !== null) {
                  last.nextEffect = childToDelete;
                  returnFiber.lastEffect = childToDelete;
                } else {
                  returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
                }
                childToDelete.nextEffect = null;
                childToDelete.effectTag = Deletion;
              }

              function deleteRemainingChildren(returnFiber, currentFirstChild) {
                if (!shouldTrackSideEffects) {
                  // Noop.
                  return null;
                }

                // TODO: For the shouldClone case, this could be micro-optimized a bit by
                // assuming that after the first child we've already added everything.
                var childToDelete = currentFirstChild;
                while (childToDelete !== null) {
                  deleteChild(returnFiber, childToDelete);
                  childToDelete = childToDelete.sibling;
                }
                return null;
              }

              function mapRemainingChildren(returnFiber, currentFirstChild) {
                // Add the remaining children to a temporary map so that we can find them by
                // keys quickly. Implicit (null) keys get added to this set with their index
                var existingChildren = new Map();

                var existingChild = currentFirstChild;
                while (existingChild !== null) {
                  if (existingChild.key !== null) {
                    existingChildren.set(existingChild.key, existingChild);
                  } else {
                    existingChildren.set(existingChild.index, existingChild);
                  }
                  existingChild = existingChild.sibling;
                }
                return existingChildren;
              }

              function useFiber(fiber, pendingProps, expirationTime) {
                // We currently set sibling to null and index to 0 here because it is easy
                // to forget to do before returning it. E.g. for the single child case.
                var clone = createWorkInProgress(
                  fiber,
                  pendingProps,
                  expirationTime
                );
                clone.index = 0;
                clone.sibling = null;
                return clone;
              }

              function placeChild(newFiber, lastPlacedIndex, newIndex) {
                newFiber.index = newIndex;
                if (!shouldTrackSideEffects) {
                  // Noop.
                  return lastPlacedIndex;
                }
                var current = newFiber.alternate;
                if (current !== null) {
                  var oldIndex = current.index;
                  if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.effectTag = Placement;
                    return lastPlacedIndex;
                  } else {
                    // This item can stay in place.
                    return oldIndex;
                  }
                } else {
                  // This is an insertion.
                  newFiber.effectTag = Placement;
                  return lastPlacedIndex;
                }
              }

              function placeSingleChild(newFiber) {
                // This is simpler for the single child case. We only need to do a
                // placement for inserting new children.
                if (shouldTrackSideEffects && newFiber.alternate === null) {
                  newFiber.effectTag = Placement;
                }
                return newFiber;
              }

              function updateTextNode(
                returnFiber,
                current,
                textContent,
                expirationTime
              ) {
                if (current === null || current.tag !== HostText) {
                  // Insert
                  var created = createFiberFromText(
                    textContent,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created["return"] = returnFiber;
                  return created;
                } else {
                  // Update
                  var existing = useFiber(current, textContent, expirationTime);
                  existing["return"] = returnFiber;
                  return existing;
                }
              }

              function updateElement(
                returnFiber,
                current,
                element,
                expirationTime
              ) {
                if (current !== null && current.type === element.type) {
                  // Move based on index
                  var existing = useFiber(
                    current,
                    element.props,
                    expirationTime
                  );
                  existing.ref = coerceRef(current, element);
                  existing["return"] = returnFiber;
                  {
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                  }
                  return existing;
                } else {
                  // Insert
                  var created = createFiberFromElement(
                    element,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created.ref = coerceRef(current, element);
                  created["return"] = returnFiber;
                  return created;
                }
              }

              function updateCall(returnFiber, current, call, expirationTime) {
                // TODO: Should this also compare handler to determine whether to reuse?
                if (current === null || current.tag !== CallComponent) {
                  // Insert
                  var created = createFiberFromCall(
                    call,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created["return"] = returnFiber;
                  return created;
                } else {
                  // Move based on index
                  var existing = useFiber(current, call, expirationTime);
                  existing["return"] = returnFiber;
                  return existing;
                }
              }

              function updateReturn(
                returnFiber,
                current,
                returnNode,
                expirationTime
              ) {
                if (current === null || current.tag !== ReturnComponent) {
                  // Insert
                  var created = createFiberFromReturn(
                    returnNode,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created.type = returnNode.value;
                  created["return"] = returnFiber;
                  return created;
                } else {
                  // Move based on index
                  var existing = useFiber(current, null, expirationTime);
                  existing.type = returnNode.value;
                  existing["return"] = returnFiber;
                  return existing;
                }
              }

              function updatePortal(
                returnFiber,
                current,
                portal,
                expirationTime
              ) {
                if (
                  current === null ||
                  current.tag !== HostPortal ||
                  current.stateNode.containerInfo !== portal.containerInfo ||
                  current.stateNode.implementation !== portal.implementation
                ) {
                  // Insert
                  var created = createFiberFromPortal(
                    portal,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created["return"] = returnFiber;
                  return created;
                } else {
                  // Update
                  var existing = useFiber(
                    current,
                    portal.children || [],
                    expirationTime
                  );
                  existing["return"] = returnFiber;
                  return existing;
                }
              }

              function updateFragment(
                returnFiber,
                current,
                fragment,
                expirationTime,
                key
              ) {
                if (current === null || current.tag !== Fragment) {
                  // Insert
                  var created = createFiberFromFragment(
                    fragment,
                    returnFiber.internalContextTag,
                    expirationTime,
                    key
                  );
                  created["return"] = returnFiber;
                  return created;
                } else {
                  // Update
                  var existing = useFiber(current, fragment, expirationTime);
                  existing["return"] = returnFiber;
                  return existing;
                }
              }

              function createChild(returnFiber, newChild, expirationTime) {
                if (
                  typeof newChild === "string" ||
                  typeof newChild === "number"
                ) {
                  // Text nodes don't have keys. If the previous node is implicitly keyed
                  // we can continue to replace it without aborting even if it is not a text
                  // node.
                  var created = createFiberFromText(
                    "" + newChild,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  created["return"] = returnFiber;
                  return created;
                }

                if (typeof newChild === "object" && newChild !== null) {
                  switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE: {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        var _created = createFiberFromFragment(
                          newChild.props.children,
                          returnFiber.internalContextTag,
                          expirationTime,
                          newChild.key
                        );
                        _created["return"] = returnFiber;
                        return _created;
                      } else {
                        var _created2 = createFiberFromElement(
                          newChild,
                          returnFiber.internalContextTag,
                          expirationTime
                        );
                        _created2.ref = coerceRef(null, newChild);
                        _created2["return"] = returnFiber;
                        return _created2;
                      }
                    }

                    case REACT_CALL_TYPE: {
                      var _created3 = createFiberFromCall(
                        newChild,
                        returnFiber.internalContextTag,
                        expirationTime
                      );
                      _created3["return"] = returnFiber;
                      return _created3;
                    }

                    case REACT_RETURN_TYPE: {
                      var _created4 = createFiberFromReturn(
                        newChild,
                        returnFiber.internalContextTag,
                        expirationTime
                      );
                      _created4.type = newChild.value;
                      _created4["return"] = returnFiber;
                      return _created4;
                    }

                    case REACT_PORTAL_TYPE: {
                      var _created5 = createFiberFromPortal(
                        newChild,
                        returnFiber.internalContextTag,
                        expirationTime
                      );
                      _created5["return"] = returnFiber;
                      return _created5;
                    }
                  }

                  if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _created6 = createFiberFromFragment(
                      newChild,
                      returnFiber.internalContextTag,
                      expirationTime,
                      null
                    );
                    _created6["return"] = returnFiber;
                    return _created6;
                  }

                  throwOnInvalidObjectType(returnFiber, newChild);
                }

                {
                  if (typeof newChild === "function") {
                    warnOnFunctionType();
                  }
                }

                return null;
              }

              function updateSlot(
                returnFiber,
                oldFiber,
                newChild,
                expirationTime
              ) {
                // Update the fiber if the keys match, otherwise return null.

                var key = oldFiber !== null ? oldFiber.key : null;

                if (
                  typeof newChild === "string" ||
                  typeof newChild === "number"
                ) {
                  // Text nodes don't have keys. If the previous node is implicitly keyed
                  // we can continue to replace it without aborting even if it is not a text
                  // node.
                  if (key !== null) {
                    return null;
                  }
                  return updateTextNode(
                    returnFiber,
                    oldFiber,
                    "" + newChild,
                    expirationTime
                  );
                }

                if (typeof newChild === "object" && newChild !== null) {
                  switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE: {
                      if (newChild.key === key) {
                        if (newChild.type === REACT_FRAGMENT_TYPE) {
                          return updateFragment(
                            returnFiber,
                            oldFiber,
                            newChild.props.children,
                            expirationTime,
                            key
                          );
                        }
                        return updateElement(
                          returnFiber,
                          oldFiber,
                          newChild,
                          expirationTime
                        );
                      } else {
                        return null;
                      }
                    }

                    case REACT_CALL_TYPE: {
                      if (newChild.key === key) {
                        return updateCall(
                          returnFiber,
                          oldFiber,
                          newChild,
                          expirationTime
                        );
                      } else {
                        return null;
                      }
                    }

                    case REACT_RETURN_TYPE: {
                      // Returns don't have keys. If the previous node is implicitly keyed
                      // we can continue to replace it without aborting even if it is not a
                      // yield.
                      if (key === null) {
                        return updateReturn(
                          returnFiber,
                          oldFiber,
                          newChild,
                          expirationTime
                        );
                      } else {
                        return null;
                      }
                    }

                    case REACT_PORTAL_TYPE: {
                      if (newChild.key === key) {
                        return updatePortal(
                          returnFiber,
                          oldFiber,
                          newChild,
                          expirationTime
                        );
                      } else {
                        return null;
                      }
                    }
                  }

                  if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) {
                      return null;
                    }

                    return updateFragment(
                      returnFiber,
                      oldFiber,
                      newChild,
                      expirationTime,
                      null
                    );
                  }

                  throwOnInvalidObjectType(returnFiber, newChild);
                }

                {
                  if (typeof newChild === "function") {
                    warnOnFunctionType();
                  }
                }

                return null;
              }

              function updateFromMap(
                existingChildren,
                returnFiber,
                newIdx,
                newChild,
                expirationTime
              ) {
                if (
                  typeof newChild === "string" ||
                  typeof newChild === "number"
                ) {
                  // Text nodes don't have keys, so we neither have to check the old nor
                  // new node for the key. If both are text nodes, they match.
                  var matchedFiber = existingChildren.get(newIdx) || null;
                  return updateTextNode(
                    returnFiber,
                    matchedFiber,
                    "" + newChild,
                    expirationTime
                  );
                }

                if (typeof newChild === "object" && newChild !== null) {
                  switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE: {
                      var _matchedFiber =
                        existingChildren.get(
                          newChild.key === null ? newIdx : newChild.key
                        ) || null;
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment(
                          returnFiber,
                          _matchedFiber,
                          newChild.props.children,
                          expirationTime,
                          newChild.key
                        );
                      }
                      return updateElement(
                        returnFiber,
                        _matchedFiber,
                        newChild,
                        expirationTime
                      );
                    }

                    case REACT_CALL_TYPE: {
                      var _matchedFiber2 =
                        existingChildren.get(
                          newChild.key === null ? newIdx : newChild.key
                        ) || null;
                      return updateCall(
                        returnFiber,
                        _matchedFiber2,
                        newChild,
                        expirationTime
                      );
                    }

                    case REACT_RETURN_TYPE: {
                      // Returns don't have keys, so we neither have to check the old nor
                      // new node for the key. If both are returns, they match.
                      var _matchedFiber3 = existingChildren.get(newIdx) || null;
                      return updateReturn(
                        returnFiber,
                        _matchedFiber3,
                        newChild,
                        expirationTime
                      );
                    }

                    case REACT_PORTAL_TYPE: {
                      var _matchedFiber4 =
                        existingChildren.get(
                          newChild.key === null ? newIdx : newChild.key
                        ) || null;
                      return updatePortal(
                        returnFiber,
                        _matchedFiber4,
                        newChild,
                        expirationTime
                      );
                    }
                  }

                  if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber5 = existingChildren.get(newIdx) || null;
                    return updateFragment(
                      returnFiber,
                      _matchedFiber5,
                      newChild,
                      expirationTime,
                      null
                    );
                  }

                  throwOnInvalidObjectType(returnFiber, newChild);
                }

                {
                  if (typeof newChild === "function") {
                    warnOnFunctionType();
                  }
                }

                return null;
              }

              /**
               * Warns if there is a duplicate or missing key
               */
              function warnOnInvalidKey(child, knownKeys) {
                {
                  if (typeof child !== "object" || child === null) {
                    return knownKeys;
                  }
                  switch (child.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                    case REACT_CALL_TYPE:
                    case REACT_PORTAL_TYPE:
                      warnForMissingKey(child);
                      var key = child.key;
                      if (typeof key !== "string") {
                        break;
                      }
                      if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                      }
                      if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                      }
                      warning(
                        false,
                        "Encountered two children with the same key, `%s`. " +
                          "Keys should be unique so that components maintain their identity " +
                          "across updates. Non-unique keys may cause children to be " +
                          "duplicated and/or omitted — the behavior is unsupported and " +
                          "could change in a future version.%s",
                        key,
                        getCurrentFiberStackAddendum$1()
                      );
                      break;
                    default:
                      break;
                  }
                }
                return knownKeys;
              }

              function reconcileChildrenArray(
                returnFiber,
                currentFirstChild,
                newChildren,
                expirationTime
              ) {
                // This algorithm can't optimize by searching from boths ends since we
                // don't have backpointers on fibers. I'm trying to see how far we can get
                // with that model. If it ends up not being worth the tradeoffs, we can
                // add it later.

                // Even with a two ended optimization, we'd want to optimize for the case
                // where there are few changes and brute force the comparison instead of
                // going for the Map. It'd like to explore hitting that path first in
                // forward-only mode and only go for the Map once we notice that we need
                // lots of look ahead. This doesn't handle reversal as well as two ended
                // search but that's unusual. Besides, for the two ended optimization to
                // work on Iterables, we'd need to copy the whole set.

                // In this first iteration, we'll just live with hitting the bad case
                // (adding everything to a Map) in for every insert/move.

                // If you change this code, also update reconcileChildrenIterator() which
                // uses the same algorithm.

                {
                  // First, validate keys.
                  var knownKeys = null;
                  for (var i = 0; i < newChildren.length; i++) {
                    var child = newChildren[i];
                    knownKeys = warnOnInvalidKey(child, knownKeys);
                  }
                }

                var resultingFirstChild = null;
                var previousNewFiber = null;

                var oldFiber = currentFirstChild;
                var lastPlacedIndex = 0;
                var newIdx = 0;
                var nextOldFiber = null;
                for (
                  ;
                  oldFiber !== null && newIdx < newChildren.length;
                  newIdx++
                ) {
                  if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                  } else {
                    nextOldFiber = oldFiber.sibling;
                  }
                  var newFiber = updateSlot(
                    returnFiber,
                    oldFiber,
                    newChildren[newIdx],
                    expirationTime
                  );
                  if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) {
                      oldFiber = nextOldFiber;
                    }
                    break;
                  }
                  if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) {
                      // We matched the slot, but we didn't reuse the existing fiber, so we
                      // need to delete the existing child.
                      deleteChild(returnFiber, oldFiber);
                    }
                  }
                  lastPlacedIndex = placeChild(
                    newFiber,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = newFiber;
                  } else {
                    // TODO: Defer siblings if we're not at the right index for this slot.
                    // I.e. if we had null values before, then we want to defer this
                    // for each null value. However, we also don't want to call updateSlot
                    // with the previous one.
                    previousNewFiber.sibling = newFiber;
                  }
                  previousNewFiber = newFiber;
                  oldFiber = nextOldFiber;
                }

                if (newIdx === newChildren.length) {
                  // We've reached the end of the new children. We can delete the rest.
                  deleteRemainingChildren(returnFiber, oldFiber);
                  return resultingFirstChild;
                }

                if (oldFiber === null) {
                  // If we don't have any more existing children we can choose a fast path
                  // since the rest will all be insertions.
                  for (; newIdx < newChildren.length; newIdx++) {
                    var _newFiber = createChild(
                      returnFiber,
                      newChildren[newIdx],
                      expirationTime
                    );
                    if (!_newFiber) {
                      continue;
                    }
                    lastPlacedIndex = placeChild(
                      _newFiber,
                      lastPlacedIndex,
                      newIdx
                    );
                    if (previousNewFiber === null) {
                      // TODO: Move out of the loop. This only happens for the first run.
                      resultingFirstChild = _newFiber;
                    } else {
                      previousNewFiber.sibling = _newFiber;
                    }
                    previousNewFiber = _newFiber;
                  }
                  return resultingFirstChild;
                }

                // Add all children to a key map for quick lookups.
                var existingChildren = mapRemainingChildren(
                  returnFiber,
                  oldFiber
                );

                // Keep scanning and use the map to restore deleted items as moves.
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber2 = updateFromMap(
                    existingChildren,
                    returnFiber,
                    newIdx,
                    newChildren[newIdx],
                    expirationTime
                  );
                  if (_newFiber2) {
                    if (shouldTrackSideEffects) {
                      if (_newFiber2.alternate !== null) {
                        // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren["delete"](
                          _newFiber2.key === null ? newIdx : _newFiber2.key
                        );
                      }
                    }
                    lastPlacedIndex = placeChild(
                      _newFiber2,
                      lastPlacedIndex,
                      newIdx
                    );
                    if (previousNewFiber === null) {
                      resultingFirstChild = _newFiber2;
                    } else {
                      previousNewFiber.sibling = _newFiber2;
                    }
                    previousNewFiber = _newFiber2;
                  }
                }

                if (shouldTrackSideEffects) {
                  // Any existing children that weren't consumed above were deleted. We need
                  // to add them to the deletion list.
                  existingChildren.forEach(function(child) {
                    return deleteChild(returnFiber, child);
                  });
                }

                return resultingFirstChild;
              }

              function reconcileChildrenIterator(
                returnFiber,
                currentFirstChild,
                newChildrenIterable,
                expirationTime
              ) {
                // This is the same implementation as reconcileChildrenArray(),
                // but using the iterator instead.

                var iteratorFn = getIteratorFn(newChildrenIterable);
                !(typeof iteratorFn === "function")
                  ? invariant(
                      false,
                      "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                {
                  // Warn about using Maps as children
                  if (typeof newChildrenIterable.entries === "function") {
                    var possibleMap = newChildrenIterable;
                    if (possibleMap.entries === iteratorFn) {
                      warning(
                        didWarnAboutMaps,
                        "Using Maps as children is unsupported and will likely yield " +
                          "unexpected results. Convert it to a sequence/iterable of keyed " +
                          "ReactElements instead.%s",
                        getCurrentFiberStackAddendum$1()
                      );
                      didWarnAboutMaps = true;
                    }
                  }

                  // First, validate keys.
                  // We'll get a different iterator later for the main pass.
                  var _newChildren = iteratorFn.call(newChildrenIterable);
                  if (_newChildren) {
                    var knownKeys = null;
                    var _step = _newChildren.next();
                    for (; !_step.done; _step = _newChildren.next()) {
                      var child = _step.value;
                      knownKeys = warnOnInvalidKey(child, knownKeys);
                    }
                  }
                }

                var newChildren = iteratorFn.call(newChildrenIterable);
                !(newChildren != null)
                  ? invariant(false, "An iterable object provided no iterator.")
                  : void 0;

                var resultingFirstChild = null;
                var previousNewFiber = null;

                var oldFiber = currentFirstChild;
                var lastPlacedIndex = 0;
                var newIdx = 0;
                var nextOldFiber = null;

                var step = newChildren.next();
                for (
                  ;
                  oldFiber !== null && !step.done;
                  newIdx++, step = newChildren.next()
                ) {
                  if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                  } else {
                    nextOldFiber = oldFiber.sibling;
                  }
                  var newFiber = updateSlot(
                    returnFiber,
                    oldFiber,
                    step.value,
                    expirationTime
                  );
                  if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (!oldFiber) {
                      oldFiber = nextOldFiber;
                    }
                    break;
                  }
                  if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) {
                      // We matched the slot, but we didn't reuse the existing fiber, so we
                      // need to delete the existing child.
                      deleteChild(returnFiber, oldFiber);
                    }
                  }
                  lastPlacedIndex = placeChild(
                    newFiber,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = newFiber;
                  } else {
                    // TODO: Defer siblings if we're not at the right index for this slot.
                    // I.e. if we had null values before, then we want to defer this
                    // for each null value. However, we also don't want to call updateSlot
                    // with the previous one.
                    previousNewFiber.sibling = newFiber;
                  }
                  previousNewFiber = newFiber;
                  oldFiber = nextOldFiber;
                }

                if (step.done) {
                  // We've reached the end of the new children. We can delete the rest.
                  deleteRemainingChildren(returnFiber, oldFiber);
                  return resultingFirstChild;
                }

                if (oldFiber === null) {
                  // If we don't have any more existing children we can choose a fast path
                  // since the rest will all be insertions.
                  for (; !step.done; newIdx++, step = newChildren.next()) {
                    var _newFiber3 = createChild(
                      returnFiber,
                      step.value,
                      expirationTime
                    );
                    if (_newFiber3 === null) {
                      continue;
                    }
                    lastPlacedIndex = placeChild(
                      _newFiber3,
                      lastPlacedIndex,
                      newIdx
                    );
                    if (previousNewFiber === null) {
                      // TODO: Move out of the loop. This only happens for the first run.
                      resultingFirstChild = _newFiber3;
                    } else {
                      previousNewFiber.sibling = _newFiber3;
                    }
                    previousNewFiber = _newFiber3;
                  }
                  return resultingFirstChild;
                }

                // Add all children to a key map for quick lookups.
                var existingChildren = mapRemainingChildren(
                  returnFiber,
                  oldFiber
                );

                // Keep scanning and use the map to restore deleted items as moves.
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber4 = updateFromMap(
                    existingChildren,
                    returnFiber,
                    newIdx,
                    step.value,
                    expirationTime
                  );
                  if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                      if (_newFiber4.alternate !== null) {
                        // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren["delete"](
                          _newFiber4.key === null ? newIdx : _newFiber4.key
                        );
                      }
                    }
                    lastPlacedIndex = placeChild(
                      _newFiber4,
                      lastPlacedIndex,
                      newIdx
                    );
                    if (previousNewFiber === null) {
                      resultingFirstChild = _newFiber4;
                    } else {
                      previousNewFiber.sibling = _newFiber4;
                    }
                    previousNewFiber = _newFiber4;
                  }
                }

                if (shouldTrackSideEffects) {
                  // Any existing children that weren't consumed above were deleted. We need
                  // to add them to the deletion list.
                  existingChildren.forEach(function(child) {
                    return deleteChild(returnFiber, child);
                  });
                }

                return resultingFirstChild;
              }

              function reconcileSingleTextNode(
                returnFiber,
                currentFirstChild,
                textContent,
                expirationTime
              ) {
                // There's no need to check for keys on text nodes since we don't have a
                // way to define them.
                if (
                  currentFirstChild !== null &&
                  currentFirstChild.tag === HostText
                ) {
                  // We already have an existing node so let's just update it and delete
                  // the rest.
                  deleteRemainingChildren(
                    returnFiber,
                    currentFirstChild.sibling
                  );
                  var existing = useFiber(
                    currentFirstChild,
                    textContent,
                    expirationTime
                  );
                  existing["return"] = returnFiber;
                  return existing;
                }
                // The existing first child is not a text node so we need to create one
                // and delete the existing ones.
                deleteRemainingChildren(returnFiber, currentFirstChild);
                var created = createFiberFromText(
                  textContent,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              }

              function reconcileSingleElement(
                returnFiber,
                currentFirstChild,
                element,
                expirationTime
              ) {
                var key = element.key;
                var child = currentFirstChild;
                while (child !== null) {
                  // TODO: If key === null and child.key === null, then this only applies to
                  // the first item in the list.
                  if (child.key === key) {
                    if (
                      child.tag === Fragment
                        ? element.type === REACT_FRAGMENT_TYPE
                        : child.type === element.type
                    ) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(
                        child,
                        element.type === REACT_FRAGMENT_TYPE
                          ? element.props.children
                          : element.props,
                        expirationTime
                      );
                      existing.ref = coerceRef(child, element);
                      existing["return"] = returnFiber;
                      {
                        existing._debugSource = element._source;
                        existing._debugOwner = element._owner;
                      }
                      return existing;
                    } else {
                      deleteRemainingChildren(returnFiber, child);
                      break;
                    }
                  } else {
                    deleteChild(returnFiber, child);
                  }
                  child = child.sibling;
                }

                if (element.type === REACT_FRAGMENT_TYPE) {
                  var created = createFiberFromFragment(
                    element.props.children,
                    returnFiber.internalContextTag,
                    expirationTime,
                    element.key
                  );
                  created["return"] = returnFiber;
                  return created;
                } else {
                  var _created7 = createFiberFromElement(
                    element,
                    returnFiber.internalContextTag,
                    expirationTime
                  );
                  _created7.ref = coerceRef(currentFirstChild, element);
                  _created7["return"] = returnFiber;
                  return _created7;
                }
              }

              function reconcileSingleCall(
                returnFiber,
                currentFirstChild,
                call,
                expirationTime
              ) {
                var key = call.key;
                var child = currentFirstChild;
                while (child !== null) {
                  // TODO: If key === null and child.key === null, then this only applies to
                  // the first item in the list.
                  if (child.key === key) {
                    if (child.tag === CallComponent) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(child, call, expirationTime);
                      existing["return"] = returnFiber;
                      return existing;
                    } else {
                      deleteRemainingChildren(returnFiber, child);
                      break;
                    }
                  } else {
                    deleteChild(returnFiber, child);
                  }
                  child = child.sibling;
                }

                var created = createFiberFromCall(
                  call,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              }

              function reconcileSingleReturn(
                returnFiber,
                currentFirstChild,
                returnNode,
                expirationTime
              ) {
                // There's no need to check for keys on yields since they're stateless.
                var child = currentFirstChild;
                if (child !== null) {
                  if (child.tag === ReturnComponent) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, null, expirationTime);
                    existing.type = returnNode.value;
                    existing["return"] = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                  }
                }

                var created = createFiberFromReturn(
                  returnNode,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created.type = returnNode.value;
                created["return"] = returnFiber;
                return created;
              }

              function reconcileSinglePortal(
                returnFiber,
                currentFirstChild,
                portal,
                expirationTime
              ) {
                var key = portal.key;
                var child = currentFirstChild;
                while (child !== null) {
                  // TODO: If key === null and child.key === null, then this only applies to
                  // the first item in the list.
                  if (child.key === key) {
                    if (
                      child.tag === HostPortal &&
                      child.stateNode.containerInfo === portal.containerInfo &&
                      child.stateNode.implementation === portal.implementation
                    ) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(
                        child,
                        portal.children || [],
                        expirationTime
                      );
                      existing["return"] = returnFiber;
                      return existing;
                    } else {
                      deleteRemainingChildren(returnFiber, child);
                      break;
                    }
                  } else {
                    deleteChild(returnFiber, child);
                  }
                  child = child.sibling;
                }

                var created = createFiberFromPortal(
                  portal,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              }

              // This API will tag the children with the side-effect of the reconciliation
              // itself. They will be added to the side-effect list as we pass through the
              // children and the parent.
              function reconcileChildFibers(
                returnFiber,
                currentFirstChild,
                newChild,
                expirationTime
              ) {
                // This function is not recursive.
                // If the top level item is an array, we treat it as a set of children,
                // not as a fragment. Nested arrays on the other hand will be treated as
                // fragment nodes. Recursion happens at the normal flow.

                // Handle top level unkeyed fragments as if they were arrays.
                // This leads to an ambiguity between <>{[...]}</> and <>...</>.
                // We treat the ambiguous cases above the same.
                if (
                  typeof newChild === "object" &&
                  newChild !== null &&
                  newChild.type === REACT_FRAGMENT_TYPE &&
                  newChild.key === null
                ) {
                  newChild = newChild.props.children;
                }

                // Handle object types
                var isObject =
                  typeof newChild === "object" && newChild !== null;

                if (isObject) {
                  switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                      return placeSingleChild(
                        reconcileSingleElement(
                          returnFiber,
                          currentFirstChild,
                          newChild,
                          expirationTime
                        )
                      );

                    case REACT_CALL_TYPE:
                      return placeSingleChild(
                        reconcileSingleCall(
                          returnFiber,
                          currentFirstChild,
                          newChild,
                          expirationTime
                        )
                      );
                    case REACT_RETURN_TYPE:
                      return placeSingleChild(
                        reconcileSingleReturn(
                          returnFiber,
                          currentFirstChild,
                          newChild,
                          expirationTime
                        )
                      );
                    case REACT_PORTAL_TYPE:
                      return placeSingleChild(
                        reconcileSinglePortal(
                          returnFiber,
                          currentFirstChild,
                          newChild,
                          expirationTime
                        )
                      );
                  }
                }

                if (
                  typeof newChild === "string" ||
                  typeof newChild === "number"
                ) {
                  return placeSingleChild(
                    reconcileSingleTextNode(
                      returnFiber,
                      currentFirstChild,
                      "" + newChild,
                      expirationTime
                    )
                  );
                }

                if (isArray$1(newChild)) {
                  return reconcileChildrenArray(
                    returnFiber,
                    currentFirstChild,
                    newChild,
                    expirationTime
                  );
                }

                if (getIteratorFn(newChild)) {
                  return reconcileChildrenIterator(
                    returnFiber,
                    currentFirstChild,
                    newChild,
                    expirationTime
                  );
                }

                if (isObject) {
                  throwOnInvalidObjectType(returnFiber, newChild);
                }

                {
                  if (typeof newChild === "function") {
                    warnOnFunctionType();
                  }
                }
                if (typeof newChild === "undefined") {
                  // If the new child is undefined, and the return fiber is a composite
                  // component, throw an error. If Fiber return types are disabled,
                  // we already threw above.
                  switch (returnFiber.tag) {
                    case ClassComponent: {
                      {
                        var instance = returnFiber.stateNode;
                        if (instance.render._isMockFunction) {
                          // We allow auto-mocks to proceed as if they're returning null.
                          break;
                        }
                      }
                    }
                    // Intentionally fall through to the next case, which handles both
                    // functions and classes
                    // eslint-disable-next-lined no-fallthrough
                    case FunctionalComponent: {
                      var Component = returnFiber.type;
                      invariant(
                        false,
                        "%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.",
                        Component.displayName || Component.name || "Component"
                      );
                    }
                  }
                }

                // Remaining cases are all treated as empty.
                return deleteRemainingChildren(returnFiber, currentFirstChild);
              }

              return reconcileChildFibers;
            }

            var reconcileChildFibers = ChildReconciler(true);
            var mountChildFibers = ChildReconciler(false);

            function cloneChildFibers(current, workInProgress) {
              !(current === null || workInProgress.child === current.child)
                ? invariant(false, "Resuming work not yet implemented.")
                : void 0;

              if (workInProgress.child === null) {
                return;
              }

              var currentChild = workInProgress.child;
              var newChild = createWorkInProgress(
                currentChild,
                currentChild.pendingProps,
                currentChild.expirationTime
              );
              workInProgress.child = newChild;

              newChild["return"] = workInProgress;
              while (currentChild.sibling !== null) {
                currentChild = currentChild.sibling;
                newChild = newChild.sibling = createWorkInProgress(
                  currentChild,
                  currentChild.pendingProps,
                  currentChild.expirationTime
                );
                newChild["return"] = workInProgress;
              }
              newChild.sibling = null;
            }

            {
              var warnedAboutStatelessRefs = {};
            }

            var ReactFiberBeginWork = function(
              config,
              hostContext,
              hydrationContext,
              scheduleWork,
              computeExpirationForFiber
            ) {
              var shouldSetTextContent = config.shouldSetTextContent,
                useSyncScheduling = config.useSyncScheduling,
                shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
              var pushHostContext = hostContext.pushHostContext,
                pushHostContainer = hostContext.pushHostContainer;
              var enterHydrationState = hydrationContext.enterHydrationState,
                resetHydrationState = hydrationContext.resetHydrationState,
                tryToClaimNextHydratableInstance =
                  hydrationContext.tryToClaimNextHydratableInstance;

              var _ReactFiberClassCompo = ReactFiberClassComponent(
                  scheduleWork,
                  computeExpirationForFiber,
                  memoizeProps,
                  memoizeState
                ),
                adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
                constructClassInstance =
                  _ReactFiberClassCompo.constructClassInstance,
                mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
                updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

              // TODO: Remove this and use reconcileChildrenAtExpirationTime directly.

              function reconcileChildren(
                current,
                workInProgress,
                nextChildren
              ) {
                reconcileChildrenAtExpirationTime(
                  current,
                  workInProgress,
                  nextChildren,
                  workInProgress.expirationTime
                );
              }

              function reconcileChildrenAtExpirationTime(
                current,
                workInProgress,
                nextChildren,
                renderExpirationTime
              ) {
                if (current === null) {
                  // If this is a fresh new component that hasn't been rendered yet, we
                  // won't update its child set by applying minimal side-effects. Instead,
                  // we will add them all to the child before it gets rendered. That means
                  // we can optimize this reconciliation pass by not tracking side-effects.
                  workInProgress.child = mountChildFibers(
                    workInProgress,
                    null,
                    nextChildren,
                    renderExpirationTime
                  );
                } else {
                  // If the current child is the same as the work in progress, it means that
                  // we haven't yet started any work on these children. Therefore, we use
                  // the clone algorithm to create a copy of all the current children.

                  // If we had any progressed work already, that is invalid at this point so
                  // let's throw it out.
                  workInProgress.child = reconcileChildFibers(
                    workInProgress,
                    current.child,
                    nextChildren,
                    renderExpirationTime
                  );
                }
              }

              function updateFragment(current, workInProgress) {
                var nextChildren = workInProgress.pendingProps;
                if (hasContextChanged()) {
                  // Normally we can bail out on props equality but if context has changed
                  // we don't do the bailout and we have to reuse existing props instead.
                  if (nextChildren === null) {
                    nextChildren = workInProgress.memoizedProps;
                  }
                } else if (
                  nextChildren === null ||
                  workInProgress.memoizedProps === nextChildren
                ) {
                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }
                reconcileChildren(current, workInProgress, nextChildren);
                memoizeProps(workInProgress, nextChildren);
                return workInProgress.child;
              }

              function markRef(current, workInProgress) {
                var ref = workInProgress.ref;
                if (ref !== null && (!current || current.ref !== ref)) {
                  // Schedule a Ref effect
                  workInProgress.effectTag |= Ref;
                }
              }

              function updateFunctionalComponent(current, workInProgress) {
                var fn = workInProgress.type;
                var nextProps = workInProgress.pendingProps;

                var memoizedProps = workInProgress.memoizedProps;
                if (hasContextChanged()) {
                  // Normally we can bail out on props equality but if context has changed
                  // we don't do the bailout and we have to reuse existing props instead.
                  if (nextProps === null) {
                    nextProps = memoizedProps;
                  }
                } else {
                  if (nextProps === null || memoizedProps === nextProps) {
                    return bailoutOnAlreadyFinishedWork(
                      current,
                      workInProgress
                    );
                  }
                  // TODO: consider bringing fn.shouldComponentUpdate() back.
                  // It used to be here.
                }

                var unmaskedContext = getUnmaskedContext(workInProgress);
                var context = getMaskedContext(workInProgress, unmaskedContext);

                var nextChildren;

                {
                  ReactCurrentOwner.current = workInProgress;
                  ReactDebugCurrentFiber.setCurrentPhase("render");
                  nextChildren = fn(nextProps, context);
                  ReactDebugCurrentFiber.setCurrentPhase(null);
                }
                // React DevTools reads this flag.
                workInProgress.effectTag |= PerformedWork;
                reconcileChildren(current, workInProgress, nextChildren);
                memoizeProps(workInProgress, nextProps);
                return workInProgress.child;
              }

              function updateClassComponent(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                // Push context providers early to prevent context stack mismatches.
                // During mounting we don't know the child context yet as the instance doesn't exist.
                // We will invalidate the child context in finishClassComponent() right after rendering.
                var hasContext = pushContextProvider(workInProgress);

                var shouldUpdate = void 0;
                if (current === null) {
                  if (!workInProgress.stateNode) {
                    // In the initial pass we might need to construct the instance.
                    constructClassInstance(
                      workInProgress,
                      workInProgress.pendingProps
                    );
                    mountClassInstance(workInProgress, renderExpirationTime);
                    shouldUpdate = true;
                  } else {
                    invariant(false, "Resuming work not yet implemented.");
                    // In a resume, we'll already have an instance we can reuse.
                    // shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
                  }
                } else {
                  shouldUpdate = updateClassInstance(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                }
                return finishClassComponent(
                  current,
                  workInProgress,
                  shouldUpdate,
                  hasContext
                );
              }

              function finishClassComponent(
                current,
                workInProgress,
                shouldUpdate,
                hasContext
              ) {
                // Refs should update even if shouldComponentUpdate returns false
                markRef(current, workInProgress);

                if (!shouldUpdate) {
                  // Context providers should defer to sCU for rendering
                  if (hasContext) {
                    invalidateContextProvider(workInProgress, false);
                  }

                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }

                var instance = workInProgress.stateNode;

                // Rerender
                ReactCurrentOwner.current = workInProgress;
                var nextChildren = void 0;
                {
                  ReactDebugCurrentFiber.setCurrentPhase("render");
                  nextChildren = instance.render();
                  if (debugRenderPhaseSideEffects) {
                    instance.render();
                  }
                  ReactDebugCurrentFiber.setCurrentPhase(null);
                }
                // React DevTools reads this flag.
                workInProgress.effectTag |= PerformedWork;
                reconcileChildren(current, workInProgress, nextChildren);
                // Memoize props and state using the values we just used to render.
                // TODO: Restructure so we never read values from the instance.
                memoizeState(workInProgress, instance.state);
                memoizeProps(workInProgress, instance.props);

                // The context might have changed so we need to recalculate it.
                if (hasContext) {
                  invalidateContextProvider(workInProgress, true);
                }

                return workInProgress.child;
              }

              function pushHostRootContext(workInProgress) {
                var root = workInProgress.stateNode;
                if (root.pendingContext) {
                  pushTopLevelContextObject(
                    workInProgress,
                    root.pendingContext,
                    root.pendingContext !== root.context
                  );
                } else if (root.context) {
                  // Should always be set
                  pushTopLevelContextObject(
                    workInProgress,
                    root.context,
                    false
                  );
                }
                pushHostContainer(workInProgress, root.containerInfo);
              }

              function updateHostRoot(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                pushHostRootContext(workInProgress);
                var updateQueue = workInProgress.updateQueue;
                if (updateQueue !== null) {
                  var prevState = workInProgress.memoizedState;
                  var state = processUpdateQueue(
                    current,
                    workInProgress,
                    updateQueue,
                    null,
                    null,
                    renderExpirationTime
                  );
                  if (prevState === state) {
                    // If the state is the same as before, that's a bailout because we had
                    // no work that expires at this time.
                    resetHydrationState();
                    return bailoutOnAlreadyFinishedWork(
                      current,
                      workInProgress
                    );
                  }
                  var element = state.element;
                  var root = workInProgress.stateNode;
                  if (
                    (current === null || current.child === null) &&
                    root.hydrate &&
                    enterHydrationState(workInProgress)
                  ) {
                    // If we don't have any current children this might be the first pass.
                    // We always try to hydrate. If this isn't a hydration pass there won't
                    // be any children to hydrate which is effectively the same thing as
                    // not hydrating.

                    // This is a bit of a hack. We track the host root as a placement to
                    // know that we're currently in a mounting state. That way isMounted
                    // works as expected. We must reset this before committing.
                    // TODO: Delete this when we delete isMounted and findDOMNode.
                    workInProgress.effectTag |= Placement;

                    // Ensure that children mount into this root without tracking
                    // side-effects. This ensures that we don't store Placement effects on
                    // nodes that will be hydrated.
                    workInProgress.child = mountChildFibers(
                      workInProgress,
                      null,
                      element,
                      renderExpirationTime
                    );
                  } else {
                    // Otherwise reset hydration state in case we aborted and resumed another
                    // root.
                    resetHydrationState();
                    reconcileChildren(current, workInProgress, element);
                  }
                  memoizeState(workInProgress, state);
                  return workInProgress.child;
                }
                resetHydrationState();
                // If there is no update queue, that's a bailout because the root has no props.
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }

              function updateHostComponent(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                pushHostContext(workInProgress);

                if (current === null) {
                  tryToClaimNextHydratableInstance(workInProgress);
                }

                var type = workInProgress.type;
                var memoizedProps = workInProgress.memoizedProps;
                var nextProps = workInProgress.pendingProps;
                if (nextProps === null) {
                  nextProps = memoizedProps;
                  !(nextProps !== null)
                    ? invariant(
                        false,
                        "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                }
                var prevProps = current !== null ? current.memoizedProps : null;

                if (hasContextChanged()) {
                  // Normally we can bail out on props equality but if context has changed
                  // we don't do the bailout and we have to reuse existing props instead.
                } else if (nextProps === null || memoizedProps === nextProps) {
                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }

                var nextChildren = nextProps.children;
                var isDirectTextChild = shouldSetTextContent(type, nextProps);

                if (isDirectTextChild) {
                  // We special case a direct text child of a host node. This is a common
                  // case. We won't handle it as a reified child. We will instead handle
                  // this in the host environment that also have access to this prop. That
                  // avoids allocating another HostText fiber and traversing it.
                  nextChildren = null;
                } else if (prevProps && shouldSetTextContent(type, prevProps)) {
                  // If we're switching from a direct text child to a normal child, or to
                  // empty, we need to schedule the text content to be reset.
                  workInProgress.effectTag |= ContentReset;
                }

                markRef(current, workInProgress);

                // Check the host config to see if the children are offscreen/hidden.
                if (
                  renderExpirationTime !== Never &&
                  !useSyncScheduling &&
                  shouldDeprioritizeSubtree(type, nextProps)
                ) {
                  // Down-prioritize the children.
                  workInProgress.expirationTime = Never;
                  // Bailout and come back to this fiber later.
                  return null;
                }

                reconcileChildren(current, workInProgress, nextChildren);
                memoizeProps(workInProgress, nextProps);
                return workInProgress.child;
              }

              function updateHostText(current, workInProgress) {
                if (current === null) {
                  tryToClaimNextHydratableInstance(workInProgress);
                }
                var nextProps = workInProgress.pendingProps;
                if (nextProps === null) {
                  nextProps = workInProgress.memoizedProps;
                }
                memoizeProps(workInProgress, nextProps);
                // Nothing to do here. This is terminal. We'll do the completion step
                // immediately after.
                return null;
              }

              function mountIndeterminateComponent(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                !(current === null)
                  ? invariant(
                      false,
                      "An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                var fn = workInProgress.type;
                var props = workInProgress.pendingProps;
                var unmaskedContext = getUnmaskedContext(workInProgress);
                var context = getMaskedContext(workInProgress, unmaskedContext);

                var value;

                {
                  if (
                    fn.prototype &&
                    typeof fn.prototype.render === "function"
                  ) {
                    var componentName = getComponentName(workInProgress);
                    warning(
                      false,
                      "The <%s /> component appears to have a render method, but doesn't extend React.Component. " +
                        "This is likely to cause errors. Change %s to extend React.Component instead.",
                      componentName,
                      componentName
                    );
                  }
                  ReactCurrentOwner.current = workInProgress;
                  value = fn(props, context);
                }
                // React DevTools reads this flag.
                workInProgress.effectTag |= PerformedWork;

                if (
                  typeof value === "object" &&
                  value !== null &&
                  typeof value.render === "function"
                ) {
                  // Proceed under the assumption that this is a class instance
                  workInProgress.tag = ClassComponent;

                  // Push context providers early to prevent context stack mismatches.
                  // During mounting we don't know the child context yet as the instance doesn't exist.
                  // We will invalidate the child context in finishClassComponent() right after rendering.
                  var hasContext = pushContextProvider(workInProgress);
                  adoptClassInstance(workInProgress, value);
                  mountClassInstance(workInProgress, renderExpirationTime);
                  return finishClassComponent(
                    current,
                    workInProgress,
                    true,
                    hasContext
                  );
                } else {
                  // Proceed under the assumption that this is a functional component
                  workInProgress.tag = FunctionalComponent;
                  {
                    var Component = workInProgress.type;

                    if (Component) {
                      warning(
                        !Component.childContextTypes,
                        "%s(...): childContextTypes cannot be defined on a functional component.",
                        Component.displayName || Component.name || "Component"
                      );
                    }
                    if (workInProgress.ref !== null) {
                      var info = "";
                      var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
                      if (ownerName) {
                        info +=
                          "\n\nCheck the render method of `" + ownerName + "`.";
                      }

                      var warningKey =
                        ownerName || workInProgress._debugID || "";
                      var debugSource = workInProgress._debugSource;
                      if (debugSource) {
                        warningKey =
                          debugSource.fileName + ":" + debugSource.lineNumber;
                      }
                      if (!warnedAboutStatelessRefs[warningKey]) {
                        warnedAboutStatelessRefs[warningKey] = true;
                        warning(
                          false,
                          "Stateless function components cannot be given refs. " +
                            "Attempts to access this ref will fail.%s%s",
                          info,
                          ReactDebugCurrentFiber.getCurrentFiberStackAddendum()
                        );
                      }
                    }
                  }
                  reconcileChildren(current, workInProgress, value);
                  memoizeProps(workInProgress, props);
                  return workInProgress.child;
                }
              }

              function updateCallComponent(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                var nextCall = workInProgress.pendingProps;
                if (hasContextChanged()) {
                  // Normally we can bail out on props equality but if context has changed
                  // we don't do the bailout and we have to reuse existing props instead.
                  if (nextCall === null) {
                    nextCall = current && current.memoizedProps;
                    !(nextCall !== null)
                      ? invariant(
                          false,
                          "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                  }
                } else if (
                  nextCall === null ||
                  workInProgress.memoizedProps === nextCall
                ) {
                  nextCall = workInProgress.memoizedProps;
                  // TODO: When bailing out, we might need to return the stateNode instead
                  // of the child. To check it for work.
                  // return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }

                var nextChildren = nextCall.children;

                // The following is a fork of reconcileChildrenAtExpirationTime but using
                // stateNode to store the child.
                if (current === null) {
                  workInProgress.stateNode = mountChildFibers(
                    workInProgress,
                    workInProgress.stateNode,
                    nextChildren,
                    renderExpirationTime
                  );
                } else {
                  workInProgress.stateNode = reconcileChildFibers(
                    workInProgress,
                    workInProgress.stateNode,
                    nextChildren,
                    renderExpirationTime
                  );
                }

                memoizeProps(workInProgress, nextCall);
                // This doesn't take arbitrary time so we could synchronously just begin
                // eagerly do the work of workInProgress.child as an optimization.
                return workInProgress.stateNode;
              }

              function updatePortalComponent(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                pushHostContainer(
                  workInProgress,
                  workInProgress.stateNode.containerInfo
                );
                var nextChildren = workInProgress.pendingProps;
                if (hasContextChanged()) {
                  // Normally we can bail out on props equality but if context has changed
                  // we don't do the bailout and we have to reuse existing props instead.
                  if (nextChildren === null) {
                    nextChildren = current && current.memoizedProps;
                    !(nextChildren != null)
                      ? invariant(
                          false,
                          "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                  }
                } else if (
                  nextChildren === null ||
                  workInProgress.memoizedProps === nextChildren
                ) {
                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }

                if (current === null) {
                  // Portals are special because we don't append the children during mount
                  // but at commit. Therefore we need to track insertions which the normal
                  // flow doesn't do during mount. This doesn't happen at the root because
                  // the root always starts with a "current" with a null child.
                  // TODO: Consider unifying this with how the root works.
                  workInProgress.child = reconcileChildFibers(
                    workInProgress,
                    null,
                    nextChildren,
                    renderExpirationTime
                  );
                  memoizeProps(workInProgress, nextChildren);
                } else {
                  reconcileChildren(current, workInProgress, nextChildren);
                  memoizeProps(workInProgress, nextChildren);
                }
                return workInProgress.child;
              }

              /*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

              function bailoutOnAlreadyFinishedWork(current, workInProgress) {
                cancelWorkTimer(workInProgress);

                // TODO: We should ideally be able to bail out early if the children have no
                // more work to do. However, since we don't have a separation of this
                // Fiber's priority and its children yet - we don't know without doing lots
                // of the same work we do anyway. Once we have that separation we can just
                // bail out here if the children has no more work at this priority level.
                // if (workInProgress.priorityOfChildren <= priorityLevel) {
                //   // If there are side-effects in these children that have not yet been
                //   // committed we need to ensure that they get properly transferred up.
                //   if (current && current.child !== workInProgress.child) {
                //     reuseChildrenEffects(workInProgress, child);
                //   }
                //   return null;
                // }

                cloneChildFibers(current, workInProgress);
                return workInProgress.child;
              }

              function bailoutOnLowPriority(current, workInProgress) {
                cancelWorkTimer(workInProgress);

                // TODO: Handle HostComponent tags here as well and call pushHostContext()?
                // See PR 8590 discussion for context
                switch (workInProgress.tag) {
                  case HostRoot:
                    pushHostRootContext(workInProgress);
                    break;
                  case ClassComponent:
                    pushContextProvider(workInProgress);
                    break;
                  case HostPortal:
                    pushHostContainer(
                      workInProgress,
                      workInProgress.stateNode.containerInfo
                    );
                    break;
                }
                // TODO: What if this is currently in progress?
                // How can that happen? How is this not being cloned?
                return null;
              }

              // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
              function memoizeProps(workInProgress, nextProps) {
                workInProgress.memoizedProps = nextProps;
              }

              function memoizeState(workInProgress, nextState) {
                workInProgress.memoizedState = nextState;
                // Don't reset the updateQueue, in case there are pending updates. Resetting
                // is handled by processUpdateQueue.
              }

              function beginWork(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                if (
                  workInProgress.expirationTime === NoWork ||
                  workInProgress.expirationTime > renderExpirationTime
                ) {
                  return bailoutOnLowPriority(current, workInProgress);
                }

                switch (workInProgress.tag) {
                  case IndeterminateComponent:
                    return mountIndeterminateComponent(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case FunctionalComponent:
                    return updateFunctionalComponent(current, workInProgress);
                  case ClassComponent:
                    return updateClassComponent(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case HostRoot:
                    return updateHostRoot(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case HostComponent:
                    return updateHostComponent(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case HostText:
                    return updateHostText(current, workInProgress);
                  case CallHandlerPhase:
                    // This is a restart. Reset the tag to the initial phase.
                    workInProgress.tag = CallComponent;
                  // Intentionally fall through since this is now the same.
                  case CallComponent:
                    return updateCallComponent(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case ReturnComponent:
                    // A return component is just a placeholder, we can just run through the
                    // next one immediately.
                    return null;
                  case HostPortal:
                    return updatePortalComponent(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case Fragment:
                    return updateFragment(current, workInProgress);
                  default:
                    invariant(
                      false,
                      "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."
                    );
                }
              }

              function beginFailedWork(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                // Push context providers here to avoid a push/pop context mismatch.
                switch (workInProgress.tag) {
                  case ClassComponent:
                    pushContextProvider(workInProgress);
                    break;
                  case HostRoot:
                    pushHostRootContext(workInProgress);
                    break;
                  default:
                    invariant(
                      false,
                      "Invalid type of work. This error is likely caused by a bug in React. Please file an issue."
                    );
                }

                // Add an error effect so we can handle the error during the commit phase
                workInProgress.effectTag |= Err;

                // This is a weird case where we do "resume" work — work that failed on
                // our first attempt. Because we no longer have a notion of "progressed
                // deletions," reset the child to the current child to make sure we delete
                // it again. TODO: Find a better way to handle this, perhaps during a more
                // general overhaul of error handling.
                if (current === null) {
                  workInProgress.child = null;
                } else if (workInProgress.child !== current.child) {
                  workInProgress.child = current.child;
                }

                if (
                  workInProgress.expirationTime === NoWork ||
                  workInProgress.expirationTime > renderExpirationTime
                ) {
                  return bailoutOnLowPriority(current, workInProgress);
                }

                // If we don't bail out, we're going be recomputing our children so we need
                // to drop our effect list.
                workInProgress.firstEffect = null;
                workInProgress.lastEffect = null;

                // Unmount the current children as if the component rendered null
                var nextChildren = null;
                reconcileChildrenAtExpirationTime(
                  current,
                  workInProgress,
                  nextChildren,
                  renderExpirationTime
                );

                if (workInProgress.tag === ClassComponent) {
                  var instance = workInProgress.stateNode;
                  workInProgress.memoizedProps = instance.props;
                  workInProgress.memoizedState = instance.state;
                }

                return workInProgress.child;
              }

              return {
                beginWork: beginWork,
                beginFailedWork: beginFailedWork
              };
            };

            var ReactFiberCompleteWork = function(
              config,
              hostContext,
              hydrationContext
            ) {
              var createInstance = config.createInstance,
                createTextInstance = config.createTextInstance,
                appendInitialChild = config.appendInitialChild,
                finalizeInitialChildren = config.finalizeInitialChildren,
                prepareUpdate = config.prepareUpdate,
                mutation = config.mutation,
                persistence = config.persistence;
              var getRootHostContainer = hostContext.getRootHostContainer,
                popHostContext = hostContext.popHostContext,
                getHostContext = hostContext.getHostContext,
                popHostContainer = hostContext.popHostContainer;
              var prepareToHydrateHostInstance =
                  hydrationContext.prepareToHydrateHostInstance,
                prepareToHydrateHostTextInstance =
                  hydrationContext.prepareToHydrateHostTextInstance,
                popHydrationState = hydrationContext.popHydrationState;

              function markUpdate(workInProgress) {
                // Tag the fiber with an update effect. This turns a Placement into
                // an UpdateAndPlacement.
                workInProgress.effectTag |= Update;
              }

              function markRef(workInProgress) {
                workInProgress.effectTag |= Ref;
              }

              function appendAllReturns(returns, workInProgress) {
                var node = workInProgress.stateNode;
                if (node) {
                  node["return"] = workInProgress;
                }
                while (node !== null) {
                  if (
                    node.tag === HostComponent ||
                    node.tag === HostText ||
                    node.tag === HostPortal
                  ) {
                    invariant(
                      false,
                      "A call cannot have host component children."
                    );
                  } else if (node.tag === ReturnComponent) {
                    returns.push(node.type);
                  } else if (node.child !== null) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                  while (node.sibling === null) {
                    if (
                      node["return"] === null ||
                      node["return"] === workInProgress
                    ) {
                      return;
                    }
                    node = node["return"];
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                }
              }

              function moveCallToHandlerPhase(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                var call = workInProgress.memoizedProps;
                !call
                  ? invariant(
                      false,
                      "Should be resolved by now. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                // First step of the call has completed. Now we need to do the second.
                // TODO: It would be nice to have a multi stage call represented by a
                // single component, or at least tail call optimize nested ones. Currently
                // that requires additional fields that we don't want to add to the fiber.
                // So this requires nested handlers.
                // Note: This doesn't mutate the alternate node. I don't think it needs to
                // since this stage is reset for every pass.
                workInProgress.tag = CallHandlerPhase;

                // Build up the returns.
                // TODO: Compare this to a generator or opaque helpers like Children.
                var returns = [];
                appendAllReturns(returns, workInProgress);
                var fn = call.handler;
                var props = call.props;
                var nextChildren = fn(props, returns);

                var currentFirstChild = current !== null ? current.child : null;
                workInProgress.child = reconcileChildFibers(
                  workInProgress,
                  currentFirstChild,
                  nextChildren,
                  renderExpirationTime
                );
                return workInProgress.child;
              }

              function appendAllChildren(parent, workInProgress) {
                // We only have the top Fiber that was created but we need recurse down its
                // children to find all the terminal nodes.
                var node = workInProgress.child;
                while (node !== null) {
                  if (node.tag === HostComponent || node.tag === HostText) {
                    appendInitialChild(parent, node.stateNode);
                  } else if (node.tag === HostPortal) {
                    // If we have a portal child, then we don't want to traverse
                    // down its children. Instead, we'll get insertions from each child in
                    // the portal directly.
                  } else if (node.child !== null) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                  if (node === workInProgress) {
                    return;
                  }
                  while (node.sibling === null) {
                    if (
                      node["return"] === null ||
                      node["return"] === workInProgress
                    ) {
                      return;
                    }
                    node = node["return"];
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                }
              }

              var updateHostContainer = void 0;
              var updateHostComponent = void 0;
              var updateHostText = void 0;
              if (mutation) {
                if (enableMutatingReconciler) {
                  // Mutation mode
                  updateHostContainer = function(workInProgress) {
                    // Noop
                  };
                  updateHostComponent = function(
                    current,
                    workInProgress,
                    updatePayload,
                    type,
                    oldProps,
                    newProps,
                    rootContainerInstance
                  ) {
                    // TODO: Type this specific to this type of component.
                    workInProgress.updateQueue = updatePayload;
                    // If the update payload indicates that there is a change or if there
                    // is a new ref we mark this as an update. All the work is done in commitWork.
                    if (updatePayload) {
                      markUpdate(workInProgress);
                    }
                  };
                  updateHostText = function(
                    current,
                    workInProgress,
                    oldText,
                    newText
                  ) {
                    // If the text differs, mark it as an update. All the work in done in commitWork.
                    if (oldText !== newText) {
                      markUpdate(workInProgress);
                    }
                  };
                } else {
                  invariant(false, "Mutating reconciler is disabled.");
                }
              } else if (persistence) {
                if (enablePersistentReconciler) {
                  // Persistent host tree mode
                  var cloneInstance = persistence.cloneInstance,
                    createContainerChildSet =
                      persistence.createContainerChildSet,
                    appendChildToContainerChildSet =
                      persistence.appendChildToContainerChildSet,
                    finalizeContainerChildren =
                      persistence.finalizeContainerChildren;

                  // An unfortunate fork of appendAllChildren because we have two different parent types.

                  var appendAllChildrenToContainer = function(
                    containerChildSet,
                    workInProgress
                  ) {
                    // We only have the top Fiber that was created but we need recurse down its
                    // children to find all the terminal nodes.
                    var node = workInProgress.child;
                    while (node !== null) {
                      if (node.tag === HostComponent || node.tag === HostText) {
                        appendChildToContainerChildSet(
                          containerChildSet,
                          node.stateNode
                        );
                      } else if (node.tag === HostPortal) {
                        // If we have a portal child, then we don't want to traverse
                        // down its children. Instead, we'll get insertions from each child in
                        // the portal directly.
                      } else if (node.child !== null) {
                        node.child["return"] = node;
                        node = node.child;
                        continue;
                      }
                      if (node === workInProgress) {
                        return;
                      }
                      while (node.sibling === null) {
                        if (
                          node["return"] === null ||
                          node["return"] === workInProgress
                        ) {
                          return;
                        }
                        node = node["return"];
                      }
                      node.sibling["return"] = node["return"];
                      node = node.sibling;
                    }
                  };
                  updateHostContainer = function(workInProgress) {
                    var portalOrRoot = workInProgress.stateNode;
                    var childrenUnchanged = workInProgress.firstEffect === null;
                    if (childrenUnchanged) {
                      // No changes, just reuse the existing instance.
                    } else {
                      var container = portalOrRoot.containerInfo;
                      var newChildSet = createContainerChildSet(container);
                      if (finalizeContainerChildren(container, newChildSet)) {
                        markUpdate(workInProgress);
                      }
                      portalOrRoot.pendingChildren = newChildSet;
                      // If children might have changed, we have to add them all to the set.
                      appendAllChildrenToContainer(newChildSet, workInProgress);
                      // Schedule an update on the container to swap out the container.
                      markUpdate(workInProgress);
                    }
                  };
                  updateHostComponent = function(
                    current,
                    workInProgress,
                    updatePayload,
                    type,
                    oldProps,
                    newProps,
                    rootContainerInstance
                  ) {
                    // If there are no effects associated with this node, then none of our children had any updates.
                    // This guarantees that we can reuse all of them.
                    var childrenUnchanged = workInProgress.firstEffect === null;
                    var currentInstance = current.stateNode;
                    if (childrenUnchanged && updatePayload === null) {
                      // No changes, just reuse the existing instance.
                      // Note that this might release a previous clone.
                      workInProgress.stateNode = currentInstance;
                    } else {
                      var recyclableInstance = workInProgress.stateNode;
                      var newInstance = cloneInstance(
                        currentInstance,
                        updatePayload,
                        type,
                        oldProps,
                        newProps,
                        workInProgress,
                        childrenUnchanged,
                        recyclableInstance
                      );
                      if (
                        finalizeInitialChildren(
                          newInstance,
                          type,
                          newProps,
                          rootContainerInstance
                        )
                      ) {
                        markUpdate(workInProgress);
                      }
                      workInProgress.stateNode = newInstance;
                      if (childrenUnchanged) {
                        // If there are no other effects in this tree, we need to flag this node as having one.
                        // Even though we're not going to use it for anything.
                        // Otherwise parents won't know that there are new children to propagate upwards.
                        markUpdate(workInProgress);
                      } else {
                        // If children might have changed, we have to add them all to the set.
                        appendAllChildren(newInstance, workInProgress);
                      }
                    }
                  };
                  updateHostText = function(
                    current,
                    workInProgress,
                    oldText,
                    newText
                  ) {
                    if (oldText !== newText) {
                      // If the text content differs, we'll create a new text instance for it.
                      var rootContainerInstance = getRootHostContainer();
                      var currentHostContext = getHostContext();
                      workInProgress.stateNode = createTextInstance(
                        newText,
                        rootContainerInstance,
                        currentHostContext,
                        workInProgress
                      );
                      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
                      // This lets the parents know that at least one of their children has changed.
                      markUpdate(workInProgress);
                    }
                  };
                } else {
                  invariant(false, "Persistent reconciler is disabled.");
                }
              } else {
                if (enableNoopReconciler) {
                  // No host operations
                  updateHostContainer = function(workInProgress) {
                    // Noop
                  };
                  updateHostComponent = function(
                    current,
                    workInProgress,
                    updatePayload,
                    type,
                    oldProps,
                    newProps,
                    rootContainerInstance
                  ) {
                    // Noop
                  };
                  updateHostText = function(
                    current,
                    workInProgress,
                    oldText,
                    newText
                  ) {
                    // Noop
                  };
                } else {
                  invariant(false, "Noop reconciler is disabled.");
                }
              }

              function completeWork(
                current,
                workInProgress,
                renderExpirationTime
              ) {
                // Get the latest props.
                var newProps = workInProgress.pendingProps;
                if (newProps === null) {
                  newProps = workInProgress.memoizedProps;
                } else if (
                  workInProgress.expirationTime !== Never ||
                  renderExpirationTime === Never
                ) {
                  // Reset the pending props, unless this was a down-prioritization.
                  workInProgress.pendingProps = null;
                }

                switch (workInProgress.tag) {
                  case FunctionalComponent:
                    return null;
                  case ClassComponent: {
                    // We are leaving this subtree, so pop context if any.
                    popContextProvider(workInProgress);
                    return null;
                  }
                  case HostRoot: {
                    popHostContainer(workInProgress);
                    popTopLevelContextObject(workInProgress);
                    var fiberRoot = workInProgress.stateNode;
                    if (fiberRoot.pendingContext) {
                      fiberRoot.context = fiberRoot.pendingContext;
                      fiberRoot.pendingContext = null;
                    }

                    if (current === null || current.child === null) {
                      // If we hydrated, pop so that we can delete any remaining children
                      // that weren't hydrated.
                      popHydrationState(workInProgress);
                      // This resets the hacky state to fix isMounted before committing.
                      // TODO: Delete this when we delete isMounted and findDOMNode.
                      workInProgress.effectTag &= ~Placement;
                    }
                    updateHostContainer(workInProgress);
                    return null;
                  }
                  case HostComponent: {
                    popHostContext(workInProgress);
                    var rootContainerInstance = getRootHostContainer();
                    var type = workInProgress.type;
                    if (current !== null && workInProgress.stateNode != null) {
                      // If we have an alternate, that means this is an update and we need to
                      // schedule a side-effect to do the updates.
                      var oldProps = current.memoizedProps;
                      // If we get updated because one of our children updated, we don't
                      // have newProps so we'll have to reuse them.
                      // TODO: Split the update API as separate for the props vs. children.
                      // Even better would be if children weren't special cased at all tho.
                      var instance = workInProgress.stateNode;
                      var currentHostContext = getHostContext();
                      var updatePayload = prepareUpdate(
                        instance,
                        type,
                        oldProps,
                        newProps,
                        rootContainerInstance,
                        currentHostContext
                      );

                      updateHostComponent(
                        current,
                        workInProgress,
                        updatePayload,
                        type,
                        oldProps,
                        newProps,
                        rootContainerInstance
                      );

                      if (current.ref !== workInProgress.ref) {
                        markRef(workInProgress);
                      }
                    } else {
                      if (!newProps) {
                        !(workInProgress.stateNode !== null)
                          ? invariant(
                              false,
                              "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                            )
                          : void 0;
                        // This can happen when we abort work.
                        return null;
                      }

                      var _currentHostContext = getHostContext();
                      // TODO: Move createInstance to beginWork and keep it on a context
                      // "stack" as the parent. Then append children as we go in beginWork
                      // or completeWork depending on we want to add then top->down or
                      // bottom->up. Top->down is faster in IE11.
                      var wasHydrated = popHydrationState(workInProgress);
                      if (wasHydrated) {
                        // TODO: Move this and createInstance step into the beginPhase
                        // to consolidate.
                        if (
                          prepareToHydrateHostInstance(
                            workInProgress,
                            rootContainerInstance,
                            _currentHostContext
                          )
                        ) {
                          // If changes to the hydrated node needs to be applied at the
                          // commit-phase we mark this as such.
                          markUpdate(workInProgress);
                        }
                      } else {
                        var _instance = createInstance(
                          type,
                          newProps,
                          rootContainerInstance,
                          _currentHostContext,
                          workInProgress
                        );

                        appendAllChildren(_instance, workInProgress);

                        // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (
                          finalizeInitialChildren(
                            _instance,
                            type,
                            newProps,
                            rootContainerInstance
                          )
                        ) {
                          markUpdate(workInProgress);
                        }
                        workInProgress.stateNode = _instance;
                      }

                      if (workInProgress.ref !== null) {
                        // If there is a ref on a host node we need to schedule a callback
                        markRef(workInProgress);
                      }
                    }
                    return null;
                  }
                  case HostText: {
                    var newText = newProps;
                    if (current && workInProgress.stateNode != null) {
                      var oldText = current.memoizedProps;
                      // If we have an alternate, that means this is an update and we need
                      // to schedule a side-effect to do the updates.
                      updateHostText(current, workInProgress, oldText, newText);
                    } else {
                      if (typeof newText !== "string") {
                        !(workInProgress.stateNode !== null)
                          ? invariant(
                              false,
                              "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                            )
                          : void 0;
                        // This can happen when we abort work.
                        return null;
                      }
                      var _rootContainerInstance = getRootHostContainer();
                      var _currentHostContext2 = getHostContext();
                      var _wasHydrated = popHydrationState(workInProgress);
                      if (_wasHydrated) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) {
                          markUpdate(workInProgress);
                        }
                      } else {
                        workInProgress.stateNode = createTextInstance(
                          newText,
                          _rootContainerInstance,
                          _currentHostContext2,
                          workInProgress
                        );
                      }
                    }
                    return null;
                  }
                  case CallComponent:
                    return moveCallToHandlerPhase(
                      current,
                      workInProgress,
                      renderExpirationTime
                    );
                  case CallHandlerPhase:
                    // Reset the tag to now be a first phase call.
                    workInProgress.tag = CallComponent;
                    return null;
                  case ReturnComponent:
                    // Does nothing.
                    return null;
                  case Fragment:
                    return null;
                  case HostPortal:
                    popHostContainer(workInProgress);
                    updateHostContainer(workInProgress);
                    return null;
                  // Error cases
                  case IndeterminateComponent:
                    invariant(
                      false,
                      "An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue."
                    );
                  // eslint-disable-next-line no-fallthrough
                  default:
                    invariant(
                      false,
                      "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."
                    );
                }
              }

              return {
                completeWork: completeWork
              };
            };

            var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
            var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
            var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;

            var ReactFiberCommitWork = function(config, captureError) {
              var getPublicInstance = config.getPublicInstance,
                mutation = config.mutation,
                persistence = config.persistence;

              var callComponentWillUnmountWithTimer = function(
                current,
                instance
              ) {
                startPhaseTimer(current, "componentWillUnmount");
                instance.props = current.memoizedProps;
                instance.state = current.memoizedState;
                instance.componentWillUnmount();
                stopPhaseTimer();
              };

              // Capture errors so they don't interrupt unmounting.
              function safelyCallComponentWillUnmount(current, instance) {
                {
                  invokeGuardedCallback$2(
                    null,
                    callComponentWillUnmountWithTimer,
                    null,
                    current,
                    instance
                  );
                  if (hasCaughtError$1()) {
                    var unmountError = clearCaughtError$1();
                    captureError(current, unmountError);
                  }
                }
              }

              function safelyDetachRef(current) {
                var ref = current.ref;
                if (ref !== null) {
                  {
                    invokeGuardedCallback$2(null, ref, null, null);
                    if (hasCaughtError$1()) {
                      var refError = clearCaughtError$1();
                      captureError(current, refError);
                    }
                  }
                }
              }

              function commitLifeCycles(current, finishedWork) {
                switch (finishedWork.tag) {
                  case ClassComponent: {
                    var instance = finishedWork.stateNode;
                    if (finishedWork.effectTag & Update) {
                      if (current === null) {
                        startPhaseTimer(finishedWork, "componentDidMount");
                        instance.props = finishedWork.memoizedProps;
                        instance.state = finishedWork.memoizedState;
                        instance.componentDidMount();
                        stopPhaseTimer();
                      } else {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        startPhaseTimer(finishedWork, "componentDidUpdate");
                        instance.props = finishedWork.memoizedProps;
                        instance.state = finishedWork.memoizedState;
                        instance.componentDidUpdate(prevProps, prevState);
                        stopPhaseTimer();
                      }
                    }
                    var updateQueue = finishedWork.updateQueue;
                    if (updateQueue !== null) {
                      commitCallbacks(updateQueue, instance);
                    }
                    return;
                  }
                  case HostRoot: {
                    var _updateQueue = finishedWork.updateQueue;
                    if (_updateQueue !== null) {
                      var _instance =
                        finishedWork.child !== null
                          ? finishedWork.child.stateNode
                          : null;
                      commitCallbacks(_updateQueue, _instance);
                    }
                    return;
                  }
                  case HostComponent: {
                    var _instance2 = finishedWork.stateNode;

                    // Renderers may schedule work to be done after host components are mounted
                    // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                    // These effects should only be committed when components are first mounted,
                    // aka when there is no current/alternate.
                    if (current === null && finishedWork.effectTag & Update) {
                      var type = finishedWork.type;
                      var props = finishedWork.memoizedProps;
                      commitMount(_instance2, type, props, finishedWork);
                    }

                    return;
                  }
                  case HostText: {
                    // We have no life-cycles associated with text.
                    return;
                  }
                  case HostPortal: {
                    // We have no life-cycles associated with portals.
                    return;
                  }
                  default: {
                    invariant(
                      false,
                      "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                    );
                  }
                }
              }

              function commitAttachRef(finishedWork) {
                var ref = finishedWork.ref;
                if (ref !== null) {
                  var instance = finishedWork.stateNode;
                  switch (finishedWork.tag) {
                    case HostComponent:
                      ref(getPublicInstance(instance));
                      break;
                    default:
                      ref(instance);
                  }
                }
              }

              function commitDetachRef(current) {
                var currentRef = current.ref;
                if (currentRef !== null) {
                  currentRef(null);
                }
              }

              // User-originating errors (lifecycles and refs) should not interrupt
              // deletion, so don't let them throw. Host-originating errors should
              // interrupt deletion, so it's okay
              function commitUnmount(current) {
                if (typeof onCommitUnmount === "function") {
                  onCommitUnmount(current);
                }

                switch (current.tag) {
                  case ClassComponent: {
                    safelyDetachRef(current);
                    var instance = current.stateNode;
                    if (typeof instance.componentWillUnmount === "function") {
                      safelyCallComponentWillUnmount(current, instance);
                    }
                    return;
                  }
                  case HostComponent: {
                    safelyDetachRef(current);
                    return;
                  }
                  case CallComponent: {
                    commitNestedUnmounts(current.stateNode);
                    return;
                  }
                  case HostPortal: {
                    // TODO: this is recursive.
                    // We are also not using this parent because
                    // the portal will get pushed immediately.
                    if (enableMutatingReconciler && mutation) {
                      unmountHostComponents(current);
                    } else if (enablePersistentReconciler && persistence) {
                      emptyPortalContainer(current);
                    }
                    return;
                  }
                }
              }

              function commitNestedUnmounts(root) {
                // While we're inside a removed host node we don't want to call
                // removeChild on the inner nodes because they're removed by the top
                // call anyway. We also want to call componentWillUnmount on all
                // composites before this host node is removed from the tree. Therefore
                var node = root;
                while (true) {
                  commitUnmount(node);
                  // Visit children because they may contain more composite or host nodes.
                  // Skip portals because commitUnmount() currently visits them recursively.
                  if (
                    node.child !== null &&
                    // If we use mutation we drill down into portals using commitUnmount above.
                    // If we don't use mutation we drill down into portals here instead.
                    (!mutation || node.tag !== HostPortal)
                  ) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                  if (node === root) {
                    return;
                  }
                  while (node.sibling === null) {
                    if (node["return"] === null || node["return"] === root) {
                      return;
                    }
                    node = node["return"];
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                }
              }

              function detachFiber(current) {
                // Cut off the return pointers to disconnect it from the tree. Ideally, we
                // should clear the child pointer of the parent alternate to let this
                // get GC:ed but we don't know which for sure which parent is the current
                // one so we'll settle for GC:ing the subtree of this child. This child
                // itself will be GC:ed when the parent updates the next time.
                current["return"] = null;
                current.child = null;
                if (current.alternate) {
                  current.alternate.child = null;
                  current.alternate["return"] = null;
                }
              }

              if (!mutation) {
                var commitContainer = void 0;
                if (persistence) {
                  var replaceContainerChildren =
                      persistence.replaceContainerChildren,
                    createContainerChildSet =
                      persistence.createContainerChildSet;

                  var emptyPortalContainer = function(current) {
                    var portal = current.stateNode;
                    var containerInfo = portal.containerInfo;

                    var emptyChildSet = createContainerChildSet(containerInfo);
                    replaceContainerChildren(containerInfo, emptyChildSet);
                  };
                  commitContainer = function(finishedWork) {
                    switch (finishedWork.tag) {
                      case ClassComponent: {
                        return;
                      }
                      case HostComponent: {
                        return;
                      }
                      case HostText: {
                        return;
                      }
                      case HostRoot:
                      case HostPortal: {
                        var portalOrRoot = finishedWork.stateNode;
                        var containerInfo = portalOrRoot.containerInfo,
                          _pendingChildren = portalOrRoot.pendingChildren;

                        replaceContainerChildren(
                          containerInfo,
                          _pendingChildren
                        );
                        return;
                      }
                      default: {
                        invariant(
                          false,
                          "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                        );
                      }
                    }
                  };
                } else {
                  commitContainer = function(finishedWork) {
                    // Noop
                  };
                }
                if (enablePersistentReconciler || enableNoopReconciler) {
                  return {
                    commitResetTextContent: function(finishedWork) {},
                    commitPlacement: function(finishedWork) {},
                    commitDeletion: function(current) {
                      // Detach refs and call componentWillUnmount() on the whole subtree.
                      commitNestedUnmounts(current);
                      detachFiber(current);
                    },
                    commitWork: function(current, finishedWork) {
                      commitContainer(finishedWork);
                    },

                    commitLifeCycles: commitLifeCycles,
                    commitAttachRef: commitAttachRef,
                    commitDetachRef: commitDetachRef
                  };
                } else if (persistence) {
                  invariant(false, "Persistent reconciler is disabled.");
                } else {
                  invariant(false, "Noop reconciler is disabled.");
                }
              }
              var commitMount = mutation.commitMount,
                commitUpdate = mutation.commitUpdate,
                resetTextContent = mutation.resetTextContent,
                commitTextUpdate = mutation.commitTextUpdate,
                appendChild = mutation.appendChild,
                appendChildToContainer = mutation.appendChildToContainer,
                insertBefore = mutation.insertBefore,
                insertInContainerBefore = mutation.insertInContainerBefore,
                removeChild = mutation.removeChild,
                removeChildFromContainer = mutation.removeChildFromContainer;

              function getHostParentFiber(fiber) {
                var parent = fiber["return"];
                while (parent !== null) {
                  if (isHostParent(parent)) {
                    return parent;
                  }
                  parent = parent["return"];
                }
                invariant(
                  false,
                  "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
                );
              }

              function isHostParent(fiber) {
                return (
                  fiber.tag === HostComponent ||
                  fiber.tag === HostRoot ||
                  fiber.tag === HostPortal
                );
              }

              function getHostSibling(fiber) {
                // We're going to search forward into the tree until we find a sibling host
                // node. Unfortunately, if multiple insertions are done in a row we have to
                // search past them. This leads to exponential search for the next sibling.
                var node = fiber;
                siblings: while (true) {
                  // If we didn't find anything, let's try the next sibling.
                  while (node.sibling === null) {
                    if (
                      node["return"] === null ||
                      isHostParent(node["return"])
                    ) {
                      // If we pop out of the root or hit the parent the fiber we are the
                      // last sibling.
                      return null;
                    }
                    node = node["return"];
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                  while (node.tag !== HostComponent && node.tag !== HostText) {
                    // If it is not host node and, we might have a host node inside it.
                    // Try to search down until we find one.
                    if (node.effectTag & Placement) {
                      // If we don't have a child, try the siblings instead.
                      continue siblings;
                    }
                    // If we don't have a child, try the siblings instead.
                    // We also skip portals because they are not part of this host tree.
                    if (node.child === null || node.tag === HostPortal) {
                      continue siblings;
                    } else {
                      node.child["return"] = node;
                      node = node.child;
                    }
                  }
                  // Check if this host node is stable or about to be placed.
                  if (!(node.effectTag & Placement)) {
                    // Found it!
                    return node.stateNode;
                  }
                }
              }

              function commitPlacement(finishedWork) {
                // Recursively insert all host nodes into the parent.
                var parentFiber = getHostParentFiber(finishedWork);
                var parent = void 0;
                var isContainer = void 0;
                switch (parentFiber.tag) {
                  case HostComponent:
                    parent = parentFiber.stateNode;
                    isContainer = false;
                    break;
                  case HostRoot:
                    parent = parentFiber.stateNode.containerInfo;
                    isContainer = true;
                    break;
                  case HostPortal:
                    parent = parentFiber.stateNode.containerInfo;
                    isContainer = true;
                    break;
                  default:
                    invariant(
                      false,
                      "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
                    );
                }
                if (parentFiber.effectTag & ContentReset) {
                  // Reset the text content of the parent before doing any insertions
                  resetTextContent(parent);
                  // Clear ContentReset from the effect tag
                  parentFiber.effectTag &= ~ContentReset;
                }

                var before = getHostSibling(finishedWork);
                // We only have the top Fiber that was inserted but we need recurse down its
                // children to find all the terminal nodes.
                var node = finishedWork;
                while (true) {
                  if (node.tag === HostComponent || node.tag === HostText) {
                    if (before) {
                      if (isContainer) {
                        insertInContainerBefore(parent, node.stateNode, before);
                      } else {
                        insertBefore(parent, node.stateNode, before);
                      }
                    } else {
                      if (isContainer) {
                        appendChildToContainer(parent, node.stateNode);
                      } else {
                        appendChild(parent, node.stateNode);
                      }
                    }
                  } else if (node.tag === HostPortal) {
                    // If the insertion itself is a portal, then we don't want to traverse
                    // down its children. Instead, we'll get insertions from each child in
                    // the portal directly.
                  } else if (node.child !== null) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                  if (node === finishedWork) {
                    return;
                  }
                  while (node.sibling === null) {
                    if (
                      node["return"] === null ||
                      node["return"] === finishedWork
                    ) {
                      return;
                    }
                    node = node["return"];
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                }
              }

              function unmountHostComponents(current) {
                // We only have the top Fiber that was inserted but we need recurse down its
                var node = current;

                // Each iteration, currentParent is populated with node's host parent if not
                // currentParentIsValid.
                var currentParentIsValid = false;
                var currentParent = void 0;
                var currentParentIsContainer = void 0;

                while (true) {
                  if (!currentParentIsValid) {
                    var parent = node["return"];
                    findParent: while (true) {
                      !(parent !== null)
                        ? invariant(
                            false,
                            "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
                          )
                        : void 0;
                      switch (parent.tag) {
                        case HostComponent:
                          currentParent = parent.stateNode;
                          currentParentIsContainer = false;
                          break findParent;
                        case HostRoot:
                          currentParent = parent.stateNode.containerInfo;
                          currentParentIsContainer = true;
                          break findParent;
                        case HostPortal:
                          currentParent = parent.stateNode.containerInfo;
                          currentParentIsContainer = true;
                          break findParent;
                      }
                      parent = parent["return"];
                    }
                    currentParentIsValid = true;
                  }

                  if (node.tag === HostComponent || node.tag === HostText) {
                    commitNestedUnmounts(node);
                    // After all the children have unmounted, it is now safe to remove the
                    // node from the tree.
                    if (currentParentIsContainer) {
                      removeChildFromContainer(currentParent, node.stateNode);
                    } else {
                      removeChild(currentParent, node.stateNode);
                    }
                    // Don't visit children because we already visited them.
                  } else if (node.tag === HostPortal) {
                    // When we go into a portal, it becomes the parent to remove from.
                    // We will reassign it back when we pop the portal on the way up.
                    currentParent = node.stateNode.containerInfo;
                    // Visit children because portals might contain host components.
                    if (node.child !== null) {
                      node.child["return"] = node;
                      node = node.child;
                      continue;
                    }
                  } else {
                    commitUnmount(node);
                    // Visit children because we may find more host components below.
                    if (node.child !== null) {
                      node.child["return"] = node;
                      node = node.child;
                      continue;
                    }
                  }
                  if (node === current) {
                    return;
                  }
                  while (node.sibling === null) {
                    if (node["return"] === null || node["return"] === current) {
                      return;
                    }
                    node = node["return"];
                    if (node.tag === HostPortal) {
                      // When we go out of the portal, we need to restore the parent.
                      // Since we don't keep a stack of them, we will search for it.
                      currentParentIsValid = false;
                    }
                  }
                  node.sibling["return"] = node["return"];
                  node = node.sibling;
                }
              }

              function commitDeletion(current) {
                // Recursively delete all host nodes from the parent.
                // Detach refs and call componentWillUnmount() on the whole subtree.
                unmountHostComponents(current);
                detachFiber(current);
              }

              function commitWork(current, finishedWork) {
                switch (finishedWork.tag) {
                  case ClassComponent: {
                    return;
                  }
                  case HostComponent: {
                    var instance = finishedWork.stateNode;
                    if (instance != null) {
                      // Commit the work prepared earlier.
                      var newProps = finishedWork.memoizedProps;
                      // For hydration we reuse the update path but we treat the oldProps
                      // as the newProps. The updatePayload will contain the real change in
                      // this case.
                      var oldProps =
                        current !== null ? current.memoizedProps : newProps;
                      var type = finishedWork.type;
                      // TODO: Type the updateQueue to be specific to host components.
                      var updatePayload = finishedWork.updateQueue;
                      finishedWork.updateQueue = null;
                      if (updatePayload !== null) {
                        commitUpdate(
                          instance,
                          updatePayload,
                          type,
                          oldProps,
                          newProps,
                          finishedWork
                        );
                      }
                    }
                    return;
                  }
                  case HostText: {
                    !(finishedWork.stateNode !== null)
                      ? invariant(
                          false,
                          "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps;
                    // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText =
                      current !== null ? current.memoizedProps : newText;
                    commitTextUpdate(textInstance, oldText, newText);
                    return;
                  }
                  case HostRoot: {
                    return;
                  }
                  default: {
                    invariant(
                      false,
                      "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                    );
                  }
                }
              }

              function commitResetTextContent(current) {
                resetTextContent(current.stateNode);
              }

              if (enableMutatingReconciler) {
                return {
                  commitResetTextContent: commitResetTextContent,
                  commitPlacement: commitPlacement,
                  commitDeletion: commitDeletion,
                  commitWork: commitWork,
                  commitLifeCycles: commitLifeCycles,
                  commitAttachRef: commitAttachRef,
                  commitDetachRef: commitDetachRef
                };
              } else {
                invariant(false, "Mutating reconciler is disabled.");
              }
            };

            var NO_CONTEXT = {};

            var ReactFiberHostContext = function(config) {
              var getChildHostContext = config.getChildHostContext,
                getRootHostContext = config.getRootHostContext;

              var contextStackCursor = createCursor(NO_CONTEXT);
              var contextFiberStackCursor = createCursor(NO_CONTEXT);
              var rootInstanceStackCursor = createCursor(NO_CONTEXT);

              function requiredContext(c) {
                !(c !== NO_CONTEXT)
                  ? invariant(
                      false,
                      "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                return c;
              }

              function getRootHostContainer() {
                var rootInstance = requiredContext(
                  rootInstanceStackCursor.current
                );
                return rootInstance;
              }

              function pushHostContainer(fiber, nextRootInstance) {
                // Push current root instance onto the stack;
                // This allows us to reset root when portals are popped.
                push(rootInstanceStackCursor, nextRootInstance, fiber);

                var nextRootContext = getRootHostContext(nextRootInstance);

                // Track the context and the Fiber that provided it.
                // This enables us to pop only Fibers that provide unique contexts.
                push(contextFiberStackCursor, fiber, fiber);
                push(contextStackCursor, nextRootContext, fiber);
              }

              function popHostContainer(fiber) {
                pop(contextStackCursor, fiber);
                pop(contextFiberStackCursor, fiber);
                pop(rootInstanceStackCursor, fiber);
              }

              function getHostContext() {
                var context = requiredContext(contextStackCursor.current);
                return context;
              }

              function pushHostContext(fiber) {
                var rootInstance = requiredContext(
                  rootInstanceStackCursor.current
                );
                var context = requiredContext(contextStackCursor.current);
                var nextContext = getChildHostContext(
                  context,
                  fiber.type,
                  rootInstance
                );

                // Don't push this Fiber's context unless it's unique.
                if (context === nextContext) {
                  return;
                }

                // Track the context and the Fiber that provided it.
                // This enables us to pop only Fibers that provide unique contexts.
                push(contextFiberStackCursor, fiber, fiber);
                push(contextStackCursor, nextContext, fiber);
              }

              function popHostContext(fiber) {
                // Do not pop unless this Fiber provided the current context.
                // pushHostContext() only pushes Fibers that provide unique contexts.
                if (contextFiberStackCursor.current !== fiber) {
                  return;
                }

                pop(contextStackCursor, fiber);
                pop(contextFiberStackCursor, fiber);
              }

              function resetHostContainer() {
                contextStackCursor.current = NO_CONTEXT;
                rootInstanceStackCursor.current = NO_CONTEXT;
              }

              return {
                getHostContext: getHostContext,
                getRootHostContainer: getRootHostContainer,
                popHostContainer: popHostContainer,
                popHostContext: popHostContext,
                pushHostContainer: pushHostContainer,
                pushHostContext: pushHostContext,
                resetHostContainer: resetHostContainer
              };
            };

            var ReactFiberHydrationContext = function(config) {
              var shouldSetTextContent = config.shouldSetTextContent,
                hydration = config.hydration;

              // If this doesn't have hydration mode.

              if (!hydration) {
                return {
                  enterHydrationState: function() {
                    return false;
                  },
                  resetHydrationState: function() {},
                  tryToClaimNextHydratableInstance: function() {},
                  prepareToHydrateHostInstance: function() {
                    invariant(
                      false,
                      "Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."
                    );
                  },
                  prepareToHydrateHostTextInstance: function() {
                    invariant(
                      false,
                      "Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."
                    );
                  },
                  popHydrationState: function(fiber) {
                    return false;
                  }
                };
              }

              var canHydrateInstance = hydration.canHydrateInstance,
                canHydrateTextInstance = hydration.canHydrateTextInstance,
                getNextHydratableSibling = hydration.getNextHydratableSibling,
                getFirstHydratableChild = hydration.getFirstHydratableChild,
                hydrateInstance = hydration.hydrateInstance,
                hydrateTextInstance = hydration.hydrateTextInstance,
                didNotMatchHydratedContainerTextInstance =
                  hydration.didNotMatchHydratedContainerTextInstance,
                didNotMatchHydratedTextInstance =
                  hydration.didNotMatchHydratedTextInstance,
                didNotHydrateContainerInstance =
                  hydration.didNotHydrateContainerInstance,
                didNotHydrateInstance = hydration.didNotHydrateInstance,
                didNotFindHydratableContainerInstance =
                  hydration.didNotFindHydratableContainerInstance,
                didNotFindHydratableContainerTextInstance =
                  hydration.didNotFindHydratableContainerTextInstance,
                didNotFindHydratableInstance =
                  hydration.didNotFindHydratableInstance,
                didNotFindHydratableTextInstance =
                  hydration.didNotFindHydratableTextInstance;

              // The deepest Fiber on the stack involved in a hydration context.
              // This may have been an insertion or a hydration.

              var hydrationParentFiber = null;
              var nextHydratableInstance = null;
              var isHydrating = false;

              function enterHydrationState(fiber) {
                var parentInstance = fiber.stateNode.containerInfo;
                nextHydratableInstance = getFirstHydratableChild(
                  parentInstance
                );
                hydrationParentFiber = fiber;
                isHydrating = true;
                return true;
              }

              function deleteHydratableInstance(returnFiber, instance) {
                {
                  switch (returnFiber.tag) {
                    case HostRoot:
                      didNotHydrateContainerInstance(
                        returnFiber.stateNode.containerInfo,
                        instance
                      );
                      break;
                    case HostComponent:
                      didNotHydrateInstance(
                        returnFiber.type,
                        returnFiber.memoizedProps,
                        returnFiber.stateNode,
                        instance
                      );
                      break;
                  }
                }

                var childToDelete = createFiberFromHostInstanceForDeletion();
                childToDelete.stateNode = instance;
                childToDelete["return"] = returnFiber;
                childToDelete.effectTag = Deletion;

                // This might seem like it belongs on progressedFirstDeletion. However,
                // these children are not part of the reconciliation list of children.
                // Even if we abort and rereconcile the children, that will try to hydrate
                // again and the nodes are still in the host tree so these will be
                // recreated.
                if (returnFiber.lastEffect !== null) {
                  returnFiber.lastEffect.nextEffect = childToDelete;
                  returnFiber.lastEffect = childToDelete;
                } else {
                  returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
                }
              }

              function insertNonHydratedInstance(returnFiber, fiber) {
                fiber.effectTag |= Placement;
                {
                  switch (returnFiber.tag) {
                    case HostRoot: {
                      var parentContainer = returnFiber.stateNode.containerInfo;
                      switch (fiber.tag) {
                        case HostComponent:
                          var type = fiber.type;
                          var props = fiber.pendingProps;
                          didNotFindHydratableContainerInstance(
                            parentContainer,
                            type,
                            props
                          );
                          break;
                        case HostText:
                          var text = fiber.pendingProps;
                          didNotFindHydratableContainerTextInstance(
                            parentContainer,
                            text
                          );
                          break;
                      }
                      break;
                    }
                    case HostComponent: {
                      var parentType = returnFiber.type;
                      var parentProps = returnFiber.memoizedProps;
                      var parentInstance = returnFiber.stateNode;
                      switch (fiber.tag) {
                        case HostComponent:
                          var _type = fiber.type;
                          var _props = fiber.pendingProps;
                          didNotFindHydratableInstance(
                            parentType,
                            parentProps,
                            parentInstance,
                            _type,
                            _props
                          );
                          break;
                        case HostText:
                          var _text = fiber.pendingProps;
                          didNotFindHydratableTextInstance(
                            parentType,
                            parentProps,
                            parentInstance,
                            _text
                          );
                          break;
                      }
                      break;
                    }
                    default:
                      return;
                  }
                }
              }

              function tryHydrate(fiber, nextInstance) {
                switch (fiber.tag) {
                  case HostComponent: {
                    var type = fiber.type;
                    var props = fiber.pendingProps;
                    var instance = canHydrateInstance(
                      nextInstance,
                      type,
                      props
                    );
                    if (instance !== null) {
                      fiber.stateNode = instance;
                      return true;
                    }
                    return false;
                  }
                  case HostText: {
                    var text = fiber.pendingProps;
                    var textInstance = canHydrateTextInstance(
                      nextInstance,
                      text
                    );
                    if (textInstance !== null) {
                      fiber.stateNode = textInstance;
                      return true;
                    }
                    return false;
                  }
                  default:
                    return false;
                }
              }

              function tryToClaimNextHydratableInstance(fiber) {
                if (!isHydrating) {
                  return;
                }
                var nextInstance = nextHydratableInstance;
                if (!nextInstance) {
                  // Nothing to hydrate. Make it an insertion.
                  insertNonHydratedInstance(hydrationParentFiber, fiber);
                  isHydrating = false;
                  hydrationParentFiber = fiber;
                  return;
                }
                if (!tryHydrate(fiber, nextInstance)) {
                  // If we can't hydrate this instance let's try the next one.
                  // We use this as a heuristic. It's based on intuition and not data so it
                  // might be flawed or unnecessary.
                  nextInstance = getNextHydratableSibling(nextInstance);
                  if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                    // Nothing to hydrate. Make it an insertion.
                    insertNonHydratedInstance(hydrationParentFiber, fiber);
                    isHydrating = false;
                    hydrationParentFiber = fiber;
                    return;
                  }
                  // We matched the next one, we'll now assume that the first one was
                  // superfluous and we'll delete it. Since we can't eagerly delete it
                  // we'll have to schedule a deletion. To do that, this node needs a dummy
                  // fiber associated with it.
                  deleteHydratableInstance(
                    hydrationParentFiber,
                    nextHydratableInstance
                  );
                }
                hydrationParentFiber = fiber;
                nextHydratableInstance = getFirstHydratableChild(nextInstance);
              }

              function prepareToHydrateHostInstance(
                fiber,
                rootContainerInstance,
                hostContext
              ) {
                var instance = fiber.stateNode;
                var updatePayload = hydrateInstance(
                  instance,
                  fiber.type,
                  fiber.memoizedProps,
                  rootContainerInstance,
                  hostContext,
                  fiber
                );
                // TODO: Type this specific to this type of component.
                fiber.updateQueue = updatePayload;
                // If the update payload indicates that there is a change or if there
                // is a new ref we mark this as an update.
                if (updatePayload !== null) {
                  return true;
                }
                return false;
              }

              function prepareToHydrateHostTextInstance(fiber) {
                var textInstance = fiber.stateNode;
                var textContent = fiber.memoizedProps;
                var shouldUpdate = hydrateTextInstance(
                  textInstance,
                  textContent,
                  fiber
                );
                {
                  if (shouldUpdate) {
                    // We assume that prepareToHydrateHostTextInstance is called in a context where the
                    // hydration parent is the parent host component of this host text.
                    var returnFiber = hydrationParentFiber;
                    if (returnFiber !== null) {
                      switch (returnFiber.tag) {
                        case HostRoot: {
                          var parentContainer =
                            returnFiber.stateNode.containerInfo;
                          didNotMatchHydratedContainerTextInstance(
                            parentContainer,
                            textInstance,
                            textContent
                          );
                          break;
                        }
                        case HostComponent: {
                          var parentType = returnFiber.type;
                          var parentProps = returnFiber.memoizedProps;
                          var parentInstance = returnFiber.stateNode;
                          didNotMatchHydratedTextInstance(
                            parentType,
                            parentProps,
                            parentInstance,
                            textInstance,
                            textContent
                          );
                          break;
                        }
                      }
                    }
                  }
                }
                return shouldUpdate;
              }

              function popToNextHostParent(fiber) {
                var parent = fiber["return"];
                while (
                  parent !== null &&
                  parent.tag !== HostComponent &&
                  parent.tag !== HostRoot
                ) {
                  parent = parent["return"];
                }
                hydrationParentFiber = parent;
              }

              function popHydrationState(fiber) {
                if (fiber !== hydrationParentFiber) {
                  // We're deeper than the current hydration context, inside an inserted
                  // tree.
                  return false;
                }
                if (!isHydrating) {
                  // If we're not currently hydrating but we're in a hydration context, then
                  // we were an insertion and now need to pop up reenter hydration of our
                  // siblings.
                  popToNextHostParent(fiber);
                  isHydrating = true;
                  return false;
                }

                var type = fiber.type;

                // If we have any remaining hydratable nodes, we need to delete them now.
                // We only do this deeper than head and body since they tend to have random
                // other nodes in them. We also ignore components with pure text content in
                // side of them.
                // TODO: Better heuristic.
                if (
                  fiber.tag !== HostComponent ||
                  (type !== "head" &&
                    type !== "body" &&
                    !shouldSetTextContent(type, fiber.memoizedProps))
                ) {
                  var nextInstance = nextHydratableInstance;
                  while (nextInstance) {
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                  }
                }

                popToNextHostParent(fiber);
                nextHydratableInstance = hydrationParentFiber
                  ? getNextHydratableSibling(fiber.stateNode)
                  : null;
                return true;
              }

              function resetHydrationState() {
                hydrationParentFiber = null;
                nextHydratableInstance = null;
                isHydrating = false;
              }

              return {
                enterHydrationState: enterHydrationState,
                resetHydrationState: resetHydrationState,
                tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
                prepareToHydrateHostInstance: prepareToHydrateHostInstance,
                prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
                popHydrationState: popHydrationState
              };
            };

            // This lets us hook into Fiber to debug what it's doing.
            // See https://github.com/facebook/react/pull/8033.
            // This is not part of the public API, not even for React DevTools.
            // You may only inject a debugTool if you work on React Fiber itself.
            var ReactFiberInstrumentation = {
              debugTool: null
            };

            var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

            var defaultShowDialog = function(capturedError) {
              return true;
            };

            var showDialog = defaultShowDialog;

            function logCapturedError(capturedError) {
              var logError = showDialog(capturedError);

              // Allow injected showDialog() to prevent default console.error logging.
              // This enables renderers like ReactNative to better manage redbox behavior.
              if (logError === false) {
                return;
              }

              var error = capturedError.error;
              var suppressLogging = error && error.suppressReactErrorLogging;
              if (suppressLogging) {
                return;
              }

              {
                var componentName = capturedError.componentName,
                  componentStack = capturedError.componentStack,
                  errorBoundaryName = capturedError.errorBoundaryName,
                  errorBoundaryFound = capturedError.errorBoundaryFound,
                  willRetry = capturedError.willRetry;

                var componentNameMessage = componentName
                  ? "The above error occurred in the <" +
                    componentName +
                    "> component:"
                  : "The above error occurred in one of your React components:";

                var errorBoundaryMessage = void 0;
                // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
                if (errorBoundaryFound && errorBoundaryName) {
                  if (willRetry) {
                    errorBoundaryMessage =
                      "React will try to recreate this component tree from scratch " +
                      ("using the error boundary you provided, " +
                        errorBoundaryName +
                        ".");
                  } else {
                    errorBoundaryMessage =
                      "This error was initially handled by the error boundary " +
                      errorBoundaryName +
                      ".\n" +
                      "Recreating the tree from scratch failed so React will unmount the tree.";
                  }
                } else {
                  errorBoundaryMessage =
                    "Consider adding an error boundary to your tree to customize error handling behavior.\n" +
                    "Visit https://fb.me/react-error-boundaries to learn more about error boundaries.";
                }
                var combinedMessage =
                  "" +
                  componentNameMessage +
                  componentStack +
                  "\n\n" +
                  ("" + errorBoundaryMessage);

                // In development, we provide our own message with just the component stack.
                // We don't include the original error message and JS stack because the browser
                // has already printed it. Even if the application swallows the error, it is still
                // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
                console.error(combinedMessage);
              }
            }

            var invokeGuardedCallback$1 = ReactErrorUtils.invokeGuardedCallback;
            var hasCaughtError = ReactErrorUtils.hasCaughtError;
            var clearCaughtError = ReactErrorUtils.clearCaughtError;

            {
              var didWarnAboutStateTransition = false;
              var didWarnSetStateChildContext = false;
              var didWarnStateUpdateForUnmountedComponent = {};

              var warnAboutUpdateOnUnmounted = function(fiber) {
                var componentName = getComponentName(fiber) || "ReactClass";
                if (didWarnStateUpdateForUnmountedComponent[componentName]) {
                  return;
                }
                warning(
                  false,
                  "Can only update a mounted or mounting " +
                    "component. This usually means you called setState, replaceState, " +
                    "or forceUpdate on an unmounted component. This is a no-op.\n\nPlease " +
                    "check the code for the %s component.",
                  componentName
                );
                didWarnStateUpdateForUnmountedComponent[componentName] = true;
              };

              var warnAboutInvalidUpdates = function(instance) {
                switch (ReactDebugCurrentFiber.phase) {
                  case "getChildContext":
                    if (didWarnSetStateChildContext) {
                      return;
                    }
                    warning(
                      false,
                      "setState(...): Cannot call setState() inside getChildContext()"
                    );
                    didWarnSetStateChildContext = true;
                    break;
                  case "render":
                    if (didWarnAboutStateTransition) {
                      return;
                    }
                    warning(
                      false,
                      "Cannot update during an existing state transition (such as within " +
                        "`render` or another component's constructor). Render methods should " +
                        "be a pure function of props and state; constructor side-effects are " +
                        "an anti-pattern, but can be moved to `componentWillMount`."
                    );
                    didWarnAboutStateTransition = true;
                    break;
                }
              };
            }

            var ReactFiberScheduler = function(config) {
              var hostContext = ReactFiberHostContext(config);
              var hydrationContext = ReactFiberHydrationContext(config);
              var popHostContainer = hostContext.popHostContainer,
                popHostContext = hostContext.popHostContext,
                resetHostContainer = hostContext.resetHostContainer;

              var _ReactFiberBeginWork = ReactFiberBeginWork(
                  config,
                  hostContext,
                  hydrationContext,
                  scheduleWork,
                  computeExpirationForFiber
                ),
                beginWork = _ReactFiberBeginWork.beginWork,
                beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

              var _ReactFiberCompleteWo = ReactFiberCompleteWork(
                  config,
                  hostContext,
                  hydrationContext
                ),
                completeWork = _ReactFiberCompleteWo.completeWork;

              var _ReactFiberCommitWork = ReactFiberCommitWork(
                  config,
                  captureError
                ),
                commitResetTextContent =
                  _ReactFiberCommitWork.commitResetTextContent,
                commitPlacement = _ReactFiberCommitWork.commitPlacement,
                commitDeletion = _ReactFiberCommitWork.commitDeletion,
                commitWork = _ReactFiberCommitWork.commitWork,
                commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
                commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
                commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

              var now = config.now,
                scheduleDeferredCallback = config.scheduleDeferredCallback,
                cancelDeferredCallback = config.cancelDeferredCallback,
                useSyncScheduling = config.useSyncScheduling,
                prepareForCommit = config.prepareForCommit,
                resetAfterCommit = config.resetAfterCommit;

              // Represents the current time in ms.

              var startTime = now();
              var mostRecentCurrentTime = msToExpirationTime(0);

              // Represents the expiration time that incoming updates should use. (If this
              // is NoWork, use the default strategy: async updates in async mode, sync
              // updates in sync mode.)
              var expirationContext = NoWork;

              var isWorking = false;

              // The next work in progress fiber that we're currently working on.
              var nextUnitOfWork = null;
              var nextRoot = null;
              // The time at which we're currently rendering work.
              var nextRenderExpirationTime = NoWork;

              // The next fiber with an effect that we're currently committing.
              var nextEffect = null;

              // Keep track of which fibers have captured an error that need to be handled.
              // Work is removed from this collection after componentDidCatch is called.
              var capturedErrors = null;
              // Keep track of which fibers have failed during the current batch of work.
              // This is a different set than capturedErrors, because it is not reset until
              // the end of the batch. This is needed to propagate errors correctly if a
              // subtree fails more than once.
              var failedBoundaries = null;
              // Error boundaries that captured an error during the current commit.
              var commitPhaseBoundaries = null;
              var firstUncaughtError = null;
              var didFatal = false;

              var isCommitting = false;
              var isUnmounting = false;

              // Used for performance tracking.
              var interruptedBy = null;

              function resetContextStack() {
                // Reset the stack
                reset$1();
                // Reset the cursors
                resetContext();
                resetHostContainer();
              }

              function commitAllHostEffects() {
                while (nextEffect !== null) {
                  {
                    ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
                  }
                  recordEffect();

                  var effectTag = nextEffect.effectTag;
                  if (effectTag & ContentReset) {
                    commitResetTextContent(nextEffect);
                  }

                  if (effectTag & Ref) {
                    var current = nextEffect.alternate;
                    if (current !== null) {
                      commitDetachRef(current);
                    }
                  }

                  // The following switch statement is only concerned about placement,
                  // updates, and deletions. To avoid needing to add a case for every
                  // possible bitmap value, we remove the secondary effects from the
                  // effect tag and switch on that value.
                  var primaryEffectTag =
                    effectTag &
                    ~(Callback | Err | ContentReset | Ref | PerformedWork);
                  switch (primaryEffectTag) {
                    case Placement: {
                      commitPlacement(nextEffect);
                      // Clear the "placement" from effect tag so that we know that this is inserted, before
                      // any life-cycles like componentDidMount gets called.
                      // TODO: findDOMNode doesn't rely on this any more but isMounted
                      // does and isMounted is deprecated anyway so we should be able
                      // to kill this.
                      nextEffect.effectTag &= ~Placement;
                      break;
                    }
                    case PlacementAndUpdate: {
                      // Placement
                      commitPlacement(nextEffect);
                      // Clear the "placement" from effect tag so that we know that this is inserted, before
                      // any life-cycles like componentDidMount gets called.
                      nextEffect.effectTag &= ~Placement;

                      // Update
                      var _current = nextEffect.alternate;
                      commitWork(_current, nextEffect);
                      break;
                    }
                    case Update: {
                      var _current2 = nextEffect.alternate;
                      commitWork(_current2, nextEffect);
                      break;
                    }
                    case Deletion: {
                      isUnmounting = true;
                      commitDeletion(nextEffect);
                      isUnmounting = false;
                      break;
                    }
                  }
                  nextEffect = nextEffect.nextEffect;
                }

                {
                  ReactDebugCurrentFiber.resetCurrentFiber();
                }
              }

              function commitAllLifeCycles() {
                while (nextEffect !== null) {
                  var effectTag = nextEffect.effectTag;

                  if (effectTag & (Update | Callback)) {
                    recordEffect();
                    var current = nextEffect.alternate;
                    commitLifeCycles(current, nextEffect);
                  }

                  if (effectTag & Ref) {
                    recordEffect();
                    commitAttachRef(nextEffect);
                  }

                  if (effectTag & Err) {
                    recordEffect();
                    commitErrorHandling(nextEffect);
                  }

                  var next = nextEffect.nextEffect;
                  // Ensure that we clean these up so that we don't accidentally keep them.
                  // I'm not actually sure this matters because we can't reset firstEffect
                  // and lastEffect since they're on every node, not just the effectful
                  // ones. So we have to clean everything as we reuse nodes anyway.
                  nextEffect.nextEffect = null;
                  // Ensure that we reset the effectTag here so that we can rely on effect
                  // tags to reason about the current life-cycle.
                  nextEffect = next;
                }
              }

              function commitRoot(finishedWork) {
                // We keep track of this so that captureError can collect any boundaries
                // that capture an error during the commit phase. The reason these aren't
                // local to this function is because errors that occur during cWU are
                // captured elsewhere, to prevent the unmount from being interrupted.
                isWorking = true;
                isCommitting = true;
                startCommitTimer();

                var root = finishedWork.stateNode;
                !(root.current !== finishedWork)
                  ? invariant(
                      false,
                      "Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                root.isReadyForCommit = false;

                // Reset this to null before calling lifecycles
                ReactCurrentOwner.current = null;

                var firstEffect = void 0;
                if (finishedWork.effectTag > PerformedWork) {
                  // A fiber's effect list consists only of its children, not itself. So if
                  // the root has an effect, we need to add it to the end of the list. The
                  // resulting list is the set that would belong to the root's parent, if
                  // it had one; that is, all the effects in the tree including the root.
                  if (finishedWork.lastEffect !== null) {
                    finishedWork.lastEffect.nextEffect = finishedWork;
                    firstEffect = finishedWork.firstEffect;
                  } else {
                    firstEffect = finishedWork;
                  }
                } else {
                  // There is no effect on the root.
                  firstEffect = finishedWork.firstEffect;
                }

                prepareForCommit();

                // Commit all the side-effects within a tree. We'll do this in two passes.
                // The first pass performs all the host insertions, updates, deletions and
                // ref unmounts.
                nextEffect = firstEffect;
                startCommitHostEffectsTimer();
                while (nextEffect !== null) {
                  var didError = false;
                  var _error = void 0;
                  {
                    invokeGuardedCallback$1(null, commitAllHostEffects, null);
                    if (hasCaughtError()) {
                      didError = true;
                      _error = clearCaughtError();
                    }
                  }
                  if (didError) {
                    !(nextEffect !== null)
                      ? invariant(
                          false,
                          "Should have next effect. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                    captureError(nextEffect, _error);
                    // Clean-up
                    if (nextEffect !== null) {
                      nextEffect = nextEffect.nextEffect;
                    }
                  }
                }
                stopCommitHostEffectsTimer();

                resetAfterCommit();

                // The work-in-progress tree is now the current tree. This must come after
                // the first pass of the commit phase, so that the previous tree is still
                // current during componentWillUnmount, but before the second pass, so that
                // the finished work is current during componentDidMount/Update.
                root.current = finishedWork;

                // In the second pass we'll perform all life-cycles and ref callbacks.
                // Life-cycles happen as a separate pass so that all placements, updates,
                // and deletions in the entire tree have already been invoked.
                // This pass also triggers any renderer-specific initial effects.
                nextEffect = firstEffect;
                startCommitLifeCyclesTimer();
                while (nextEffect !== null) {
                  var _didError = false;
                  var _error2 = void 0;
                  {
                    invokeGuardedCallback$1(null, commitAllLifeCycles, null);
                    if (hasCaughtError()) {
                      _didError = true;
                      _error2 = clearCaughtError();
                    }
                  }
                  if (_didError) {
                    !(nextEffect !== null)
                      ? invariant(
                          false,
                          "Should have next effect. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                    captureError(nextEffect, _error2);
                    if (nextEffect !== null) {
                      nextEffect = nextEffect.nextEffect;
                    }
                  }
                }

                isCommitting = false;
                isWorking = false;
                stopCommitLifeCyclesTimer();
                stopCommitTimer();
                if (typeof onCommitRoot === "function") {
                  onCommitRoot(finishedWork.stateNode);
                }
                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onCommitWork(
                    finishedWork
                  );
                }

                // If we caught any errors during this commit, schedule their boundaries
                // to update.
                if (commitPhaseBoundaries) {
                  commitPhaseBoundaries.forEach(scheduleErrorRecovery);
                  commitPhaseBoundaries = null;
                }

                if (firstUncaughtError !== null) {
                  var _error3 = firstUncaughtError;
                  firstUncaughtError = null;
                  onUncaughtError(_error3);
                }

                var remainingTime = root.current.expirationTime;

                if (remainingTime === NoWork) {
                  capturedErrors = null;
                  failedBoundaries = null;
                }

                return remainingTime;
              }

              function resetExpirationTime(workInProgress, renderTime) {
                if (
                  renderTime !== Never &&
                  workInProgress.expirationTime === Never
                ) {
                  // The children of this component are hidden. Don't bubble their
                  // expiration times.
                  return;
                }

                // Check for pending updates.
                var newExpirationTime = getUpdateExpirationTime(workInProgress);

                // TODO: Calls need to visit stateNode

                // Bubble up the earliest expiration time.
                var child = workInProgress.child;
                while (child !== null) {
                  if (
                    child.expirationTime !== NoWork &&
                    (newExpirationTime === NoWork ||
                      newExpirationTime > child.expirationTime)
                  ) {
                    newExpirationTime = child.expirationTime;
                  }
                  child = child.sibling;
                }
                workInProgress.expirationTime = newExpirationTime;
              }

              function completeUnitOfWork(workInProgress) {
                while (true) {
                  // The current, flushed, state of this fiber is the alternate.
                  // Ideally nothing should rely on this, but relying on it here
                  // means that we don't need an additional field on the work in
                  // progress.
                  var current = workInProgress.alternate;
                  {
                    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
                  }
                  var next = completeWork(
                    current,
                    workInProgress,
                    nextRenderExpirationTime
                  );
                  {
                    ReactDebugCurrentFiber.resetCurrentFiber();
                  }

                  var returnFiber = workInProgress["return"];
                  var siblingFiber = workInProgress.sibling;

                  resetExpirationTime(workInProgress, nextRenderExpirationTime);

                  if (next !== null) {
                    stopWorkTimer(workInProgress);
                    if (true && ReactFiberInstrumentation_1.debugTool) {
                      ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                        workInProgress
                      );
                    }
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    return next;
                  }

                  if (returnFiber !== null) {
                    // Append all the effects of the subtree and this fiber onto the effect
                    // list of the parent. The completion order of the children affects the
                    // side-effect order.
                    if (returnFiber.firstEffect === null) {
                      returnFiber.firstEffect = workInProgress.firstEffect;
                    }
                    if (workInProgress.lastEffect !== null) {
                      if (returnFiber.lastEffect !== null) {
                        returnFiber.lastEffect.nextEffect =
                          workInProgress.firstEffect;
                      }
                      returnFiber.lastEffect = workInProgress.lastEffect;
                    }

                    // If this fiber had side-effects, we append it AFTER the children's
                    // side-effects. We can perform certain side-effects earlier if
                    // needed, by doing multiple passes over the effect list. We don't want
                    // to schedule our own side-effect on our own list because if end up
                    // reusing children we'll schedule this effect onto itself since we're
                    // at the end.
                    var effectTag = workInProgress.effectTag;
                    // Skip both NoWork and PerformedWork tags when creating the effect list.
                    // PerformedWork effect is read by React DevTools but shouldn't be committed.
                    if (effectTag > PerformedWork) {
                      if (returnFiber.lastEffect !== null) {
                        returnFiber.lastEffect.nextEffect = workInProgress;
                      } else {
                        returnFiber.firstEffect = workInProgress;
                      }
                      returnFiber.lastEffect = workInProgress;
                    }
                  }

                  stopWorkTimer(workInProgress);
                  if (true && ReactFiberInstrumentation_1.debugTool) {
                    ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                      workInProgress
                    );
                  }

                  if (siblingFiber !== null) {
                    // If there is more work to do in this returnFiber, do that next.
                    return siblingFiber;
                  } else if (returnFiber !== null) {
                    // If there's no more work in this returnFiber. Complete the returnFiber.
                    workInProgress = returnFiber;
                    continue;
                  } else {
                    // We've reached the root.
                    var root = workInProgress.stateNode;
                    root.isReadyForCommit = true;
                    return null;
                  }
                }

                // Without this explicit null return Flow complains of invalid return type
                // TODO Remove the above while(true) loop
                // eslint-disable-next-line no-unreachable
                return null;
              }

              function performUnitOfWork(workInProgress) {
                // The current, flushed, state of this fiber is the alternate.
                // Ideally nothing should rely on this, but relying on it here
                // means that we don't need an additional field on the work in
                // progress.
                var current = workInProgress.alternate;

                // See if beginning this work spawns more work.
                startWorkTimer(workInProgress);
                {
                  ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
                }

                var next = beginWork(
                  current,
                  workInProgress,
                  nextRenderExpirationTime
                );
                {
                  ReactDebugCurrentFiber.resetCurrentFiber();
                }
                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onBeginWork(
                    workInProgress
                  );
                }

                if (next === null) {
                  // If this doesn't spawn new work, complete the current work.
                  next = completeUnitOfWork(workInProgress);
                }

                ReactCurrentOwner.current = null;

                return next;
              }

              function performFailedUnitOfWork(workInProgress) {
                // The current, flushed, state of this fiber is the alternate.
                // Ideally nothing should rely on this, but relying on it here
                // means that we don't need an additional field on the work in
                // progress.
                var current = workInProgress.alternate;

                // See if beginning this work spawns more work.
                startWorkTimer(workInProgress);
                {
                  ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
                }
                var next = beginFailedWork(
                  current,
                  workInProgress,
                  nextRenderExpirationTime
                );
                {
                  ReactDebugCurrentFiber.resetCurrentFiber();
                }
                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onBeginWork(
                    workInProgress
                  );
                }

                if (next === null) {
                  // If this doesn't spawn new work, complete the current work.
                  next = completeUnitOfWork(workInProgress);
                }

                ReactCurrentOwner.current = null;

                return next;
              }

              function workLoop(expirationTime) {
                if (capturedErrors !== null) {
                  // If there are unhandled errors, switch to the slow work loop.
                  // TODO: How to avoid this check in the fast path? Maybe the renderer
                  // could keep track of which roots have unhandled errors and call a
                  // forked version of renderRoot.
                  slowWorkLoopThatChecksForFailedWork(expirationTime);
                  return;
                }
                if (
                  nextRenderExpirationTime === NoWork ||
                  nextRenderExpirationTime > expirationTime
                ) {
                  return;
                }

                if (nextRenderExpirationTime <= mostRecentCurrentTime) {
                  // Flush all expired work.
                  while (nextUnitOfWork !== null) {
                    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                  }
                } else {
                  // Flush asynchronous work until the deadline runs out of time.
                  while (nextUnitOfWork !== null && !shouldYield()) {
                    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                  }
                }
              }

              function slowWorkLoopThatChecksForFailedWork(expirationTime) {
                if (
                  nextRenderExpirationTime === NoWork ||
                  nextRenderExpirationTime > expirationTime
                ) {
                  return;
                }

                if (nextRenderExpirationTime <= mostRecentCurrentTime) {
                  // Flush all expired work.
                  while (nextUnitOfWork !== null) {
                    if (hasCapturedError(nextUnitOfWork)) {
                      // Use a forked version of performUnitOfWork
                      nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
                    } else {
                      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                    }
                  }
                } else {
                  // Flush asynchronous work until the deadline runs out of time.
                  while (nextUnitOfWork !== null && !shouldYield()) {
                    if (hasCapturedError(nextUnitOfWork)) {
                      // Use a forked version of performUnitOfWork
                      nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
                    } else {
                      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                    }
                  }
                }
              }

              function renderRootCatchBlock(
                root,
                failedWork,
                boundary,
                expirationTime
              ) {
                // We're going to restart the error boundary that captured the error.
                // Conceptually, we're unwinding the stack. We need to unwind the
                // context stack, too.
                unwindContexts(failedWork, boundary);

                // Restart the error boundary using a forked version of
                // performUnitOfWork that deletes the boundary's children. The entire
                // failed subree will be unmounted. During the commit phase, a special
                // lifecycle method is called on the error boundary, which triggers
                // a re-render.
                nextUnitOfWork = performFailedUnitOfWork(boundary);

                // Continue working.
                workLoop(expirationTime);
              }

              function renderRoot(root, expirationTime) {
                !!isWorking
                  ? invariant(
                      false,
                      "renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                isWorking = true;

                // We're about to mutate the work-in-progress tree. If the root was pending
                // commit, it no longer is: we'll need to complete it again.
                root.isReadyForCommit = false;

                // Check if we're starting from a fresh stack, or if we're resuming from
                // previously yielded work.
                if (
                  root !== nextRoot ||
                  expirationTime !== nextRenderExpirationTime ||
                  nextUnitOfWork === null
                ) {
                  // Reset the stack and start working from the root.
                  resetContextStack();
                  nextRoot = root;
                  nextRenderExpirationTime = expirationTime;
                  nextUnitOfWork = createWorkInProgress(
                    nextRoot.current,
                    null,
                    expirationTime
                  );
                }

                startWorkLoopTimer(nextUnitOfWork);

                var didError = false;
                var error = null;
                {
                  invokeGuardedCallback$1(null, workLoop, null, expirationTime);
                  if (hasCaughtError()) {
                    didError = true;
                    error = clearCaughtError();
                  }
                }

                // An error was thrown during the render phase.
                while (didError) {
                  if (didFatal) {
                    // This was a fatal error. Don't attempt to recover from it.
                    firstUncaughtError = error;
                    break;
                  }

                  var failedWork = nextUnitOfWork;
                  if (failedWork === null) {
                    // An error was thrown but there's no current unit of work. This can
                    // happen during the commit phase if there's a bug in the renderer.
                    didFatal = true;
                    continue;
                  }

                  // "Capture" the error by finding the nearest boundary. If there is no
                  // error boundary, we use the root.
                  var boundary = captureError(failedWork, error);
                  !(boundary !== null)
                    ? invariant(
                        false,
                        "Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;

                  if (didFatal) {
                    // The error we just captured was a fatal error. This happens
                    // when the error propagates to the root more than once.
                    continue;
                  }

                  didError = false;
                  error = null;
                  {
                    invokeGuardedCallback$1(
                      null,
                      renderRootCatchBlock,
                      null,
                      root,
                      failedWork,
                      boundary,
                      expirationTime
                    );
                    if (hasCaughtError()) {
                      didError = true;
                      error = clearCaughtError();
                      continue;
                    }
                  }
                  // We're finished working. Exit the error loop.
                  break;
                }

                var uncaughtError = firstUncaughtError;

                // We're done performing work. Time to clean up.
                stopWorkLoopTimer(interruptedBy);
                interruptedBy = null;
                isWorking = false;
                didFatal = false;
                firstUncaughtError = null;

                if (uncaughtError !== null) {
                  onUncaughtError(uncaughtError);
                }

                return root.isReadyForCommit ? root.current.alternate : null;
              }

              // Returns the boundary that captured the error, or null if the error is ignored
              function captureError(failedWork, error) {
                // It is no longer valid because we exited the user code.
                ReactCurrentOwner.current = null;
                {
                  ReactDebugCurrentFiber.resetCurrentFiber();
                }

                // Search for the nearest error boundary.
                var boundary = null;

                // Passed to logCapturedError()
                var errorBoundaryFound = false;
                var willRetry = false;
                var errorBoundaryName = null;

                // Host containers are a special case. If the failed work itself is a host
                // container, then it acts as its own boundary. In all other cases, we
                // ignore the work itself and only search through the parents.
                if (failedWork.tag === HostRoot) {
                  boundary = failedWork;

                  if (isFailedBoundary(failedWork)) {
                    // If this root already failed, there must have been an error when
                    // attempting to unmount it. This is a worst-case scenario and
                    // should only be possible if there's a bug in the renderer.
                    didFatal = true;
                  }
                } else {
                  var node = failedWork["return"];
                  while (node !== null && boundary === null) {
                    if (node.tag === ClassComponent) {
                      var instance = node.stateNode;
                      if (typeof instance.componentDidCatch === "function") {
                        errorBoundaryFound = true;
                        errorBoundaryName = getComponentName(node);

                        // Found an error boundary!
                        boundary = node;
                        willRetry = true;
                      }
                    } else if (node.tag === HostRoot) {
                      // Treat the root like a no-op error boundary
                      boundary = node;
                    }

                    if (isFailedBoundary(node)) {
                      // This boundary is already in a failed state.

                      // If we're currently unmounting, that means this error was
                      // thrown while unmounting a failed subtree. We should ignore
                      // the error.
                      if (isUnmounting) {
                        return null;
                      }

                      // If we're in the commit phase, we should check to see if
                      // this boundary already captured an error during this commit.
                      // This case exists because multiple errors can be thrown during
                      // a single commit without interruption.
                      if (
                        commitPhaseBoundaries !== null &&
                        (commitPhaseBoundaries.has(node) ||
                          (node.alternate !== null &&
                            commitPhaseBoundaries.has(node.alternate)))
                      ) {
                        // If so, we should ignore this error.
                        return null;
                      }

                      // The error should propagate to the next boundary -— we keep looking.
                      boundary = null;
                      willRetry = false;
                    }

                    node = node["return"];
                  }
                }

                if (boundary !== null) {
                  // Add to the collection of failed boundaries. This lets us know that
                  // subsequent errors in this subtree should propagate to the next boundary.
                  if (failedBoundaries === null) {
                    failedBoundaries = new Set();
                  }
                  failedBoundaries.add(boundary);

                  // This method is unsafe outside of the begin and complete phases.
                  // We might be in the commit phase when an error is captured.
                  // The risk is that the return path from this Fiber may not be accurate.
                  // That risk is acceptable given the benefit of providing users more context.
                  var _componentStack = getStackAddendumByWorkInProgressFiber(
                    failedWork
                  );
                  var _componentName = getComponentName(failedWork);

                  // Add to the collection of captured errors. This is stored as a global
                  // map of errors and their component stack location keyed by the boundaries
                  // that capture them. We mostly use this Map as a Set; it's a Map only to
                  // avoid adding a field to Fiber to store the error.
                  if (capturedErrors === null) {
                    capturedErrors = new Map();
                  }

                  var capturedError = {
                    componentName: _componentName,
                    componentStack: _componentStack,
                    error: error,
                    errorBoundary: errorBoundaryFound
                      ? boundary.stateNode
                      : null,
                    errorBoundaryFound: errorBoundaryFound,
                    errorBoundaryName: errorBoundaryName,
                    willRetry: willRetry
                  };

                  capturedErrors.set(boundary, capturedError);

                  try {
                    logCapturedError(capturedError);
                  } catch (e) {
                    // Prevent cycle if logCapturedError() throws.
                    // A cycle may still occur if logCapturedError renders a component that throws.
                    var suppressLogging = e && e.suppressReactErrorLogging;
                    if (!suppressLogging) {
                      console.error(e);
                    }
                  }

                  // If we're in the commit phase, defer scheduling an update on the
                  // boundary until after the commit is complete
                  if (isCommitting) {
                    if (commitPhaseBoundaries === null) {
                      commitPhaseBoundaries = new Set();
                    }
                    commitPhaseBoundaries.add(boundary);
                  } else {
                    // Otherwise, schedule an update now.
                    // TODO: Is this actually necessary during the render phase? Is it
                    // possible to unwind and continue rendering at the same priority,
                    // without corrupting internal state?
                    scheduleErrorRecovery(boundary);
                  }
                  return boundary;
                } else if (firstUncaughtError === null) {
                  // If no boundary is found, we'll need to throw the error
                  firstUncaughtError = error;
                }
                return null;
              }

              function hasCapturedError(fiber) {
                // TODO: capturedErrors should store the boundary instance, to avoid needing
                // to check the alternate.
                return (
                  capturedErrors !== null &&
                  (capturedErrors.has(fiber) ||
                    (fiber.alternate !== null &&
                      capturedErrors.has(fiber.alternate)))
                );
              }

              function isFailedBoundary(fiber) {
                // TODO: failedBoundaries should store the boundary instance, to avoid
                // needing to check the alternate.
                return (
                  failedBoundaries !== null &&
                  (failedBoundaries.has(fiber) ||
                    (fiber.alternate !== null &&
                      failedBoundaries.has(fiber.alternate)))
                );
              }

              function commitErrorHandling(effectfulFiber) {
                var capturedError = void 0;
                if (capturedErrors !== null) {
                  capturedError = capturedErrors.get(effectfulFiber);
                  capturedErrors["delete"](effectfulFiber);
                  if (capturedError == null) {
                    if (effectfulFiber.alternate !== null) {
                      effectfulFiber = effectfulFiber.alternate;
                      capturedError = capturedErrors.get(effectfulFiber);
                      capturedErrors["delete"](effectfulFiber);
                    }
                  }
                }

                !(capturedError != null)
                  ? invariant(
                      false,
                      "No error for given unit of work. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                switch (effectfulFiber.tag) {
                  case ClassComponent:
                    var instance = effectfulFiber.stateNode;

                    var info = {
                      componentStack: capturedError.componentStack
                    };

                    // Allow the boundary to handle the error, usually by scheduling
                    // an update to itself
                    instance.componentDidCatch(capturedError.error, info);
                    return;
                  case HostRoot:
                    if (firstUncaughtError === null) {
                      firstUncaughtError = capturedError.error;
                    }
                    return;
                  default:
                    invariant(
                      false,
                      "Invalid type of work. This error is likely caused by a bug in React. Please file an issue."
                    );
                }
              }

              function unwindContexts(from, to) {
                var node = from;
                while (node !== null) {
                  switch (node.tag) {
                    case ClassComponent:
                      popContextProvider(node);
                      break;
                    case HostComponent:
                      popHostContext(node);
                      break;
                    case HostRoot:
                      popHostContainer(node);
                      break;
                    case HostPortal:
                      popHostContainer(node);
                      break;
                  }
                  if (node === to || node.alternate === to) {
                    stopFailedWorkTimer(node);
                    break;
                  } else {
                    stopWorkTimer(node);
                  }
                  node = node["return"];
                }
              }

              function computeAsyncExpiration() {
                // Given the current clock time, returns an expiration time. We use rounding
                // to batch like updates together.
                // Should complete within ~1000ms. 1200ms max.
                var currentTime = recalculateCurrentTime();
                var expirationMs = 1000;
                var bucketSizeMs = 200;
                return computeExpirationBucket(
                  currentTime,
                  expirationMs,
                  bucketSizeMs
                );
              }

              function computeExpirationForFiber(fiber) {
                var expirationTime = void 0;
                if (expirationContext !== NoWork) {
                  // An explicit expiration context was set;
                  expirationTime = expirationContext;
                } else if (isWorking) {
                  if (isCommitting) {
                    // Updates that occur during the commit phase should have sync priority
                    // by default.
                    expirationTime = Sync;
                  } else {
                    // Updates during the render phase should expire at the same time as
                    // the work that is being rendered.
                    expirationTime = nextRenderExpirationTime;
                  }
                } else {
                  // No explicit expiration context was set, and we're not currently
                  // performing work. Calculate a new expiration time.
                  if (
                    useSyncScheduling &&
                    !(fiber.internalContextTag & AsyncUpdates)
                  ) {
                    // This is a sync update
                    expirationTime = Sync;
                  } else {
                    // This is an async update
                    expirationTime = computeAsyncExpiration();
                  }
                }
                return expirationTime;
              }

              function scheduleWork(fiber, expirationTime) {
                return scheduleWorkImpl(fiber, expirationTime, false);
              }

              function checkRootNeedsClearing(root, fiber, expirationTime) {
                if (
                  !isWorking &&
                  root === nextRoot &&
                  expirationTime < nextRenderExpirationTime
                ) {
                  // Restart the root from the top.
                  if (nextUnitOfWork !== null) {
                    // This is an interruption. (Used for performance tracking.)
                    interruptedBy = fiber;
                  }
                  nextRoot = null;
                  nextUnitOfWork = null;
                  nextRenderExpirationTime = NoWork;
                }
              }

              function scheduleWorkImpl(
                fiber,
                expirationTime,
                isErrorRecovery
              ) {
                recordScheduleUpdate();

                {
                  if (!isErrorRecovery && fiber.tag === ClassComponent) {
                    var instance = fiber.stateNode;
                    warnAboutInvalidUpdates(instance);
                  }
                }

                var node = fiber;
                while (node !== null) {
                  // Walk the parent path to the root and update each node's
                  // expiration time.
                  if (
                    node.expirationTime === NoWork ||
                    node.expirationTime > expirationTime
                  ) {
                    node.expirationTime = expirationTime;
                  }
                  if (node.alternate !== null) {
                    if (
                      node.alternate.expirationTime === NoWork ||
                      node.alternate.expirationTime > expirationTime
                    ) {
                      node.alternate.expirationTime = expirationTime;
                    }
                  }
                  if (node["return"] === null) {
                    if (node.tag === HostRoot) {
                      var root = node.stateNode;

                      checkRootNeedsClearing(root, fiber, expirationTime);
                      requestWork(root, expirationTime);
                      checkRootNeedsClearing(root, fiber, expirationTime);
                    } else {
                      {
                        if (!isErrorRecovery && fiber.tag === ClassComponent) {
                          warnAboutUpdateOnUnmounted(fiber);
                        }
                      }
                      return;
                    }
                  }
                  node = node["return"];
                }
              }

              function scheduleErrorRecovery(fiber) {
                scheduleWorkImpl(fiber, Sync, true);
              }

              function recalculateCurrentTime() {
                // Subtract initial time so it fits inside 32bits
                var ms = now() - startTime;
                mostRecentCurrentTime = msToExpirationTime(ms);
                return mostRecentCurrentTime;
              }

              function deferredUpdates(fn) {
                var previousExpirationContext = expirationContext;
                expirationContext = computeAsyncExpiration();
                try {
                  return fn();
                } finally {
                  expirationContext = previousExpirationContext;
                }
              }

              function syncUpdates(fn) {
                var previousExpirationContext = expirationContext;
                expirationContext = Sync;
                try {
                  return fn();
                } finally {
                  expirationContext = previousExpirationContext;
                }
              }

              // TODO: Everything below this is written as if it has been lifted to the
              // renderers. I'll do this in a follow-up.

              // Linked-list of roots
              var firstScheduledRoot = null;
              var lastScheduledRoot = null;

              var callbackExpirationTime = NoWork;
              var callbackID = -1;
              var isRendering = false;
              var nextFlushedRoot = null;
              var nextFlushedExpirationTime = NoWork;
              var deadlineDidExpire = false;
              var hasUnhandledError = false;
              var unhandledError = null;
              var deadline = null;

              var isBatchingUpdates = false;
              var isUnbatchingUpdates = false;

              // Use these to prevent an infinite loop of nested updates
              var NESTED_UPDATE_LIMIT = 1000;
              var nestedUpdateCount = 0;

              var timeHeuristicForUnitOfWork = 1;

              function scheduleCallbackWithExpiration(expirationTime) {
                if (callbackExpirationTime !== NoWork) {
                  // A callback is already scheduled. Check its expiration time (timeout).
                  if (expirationTime > callbackExpirationTime) {
                    // Existing callback has sufficient timeout. Exit.
                    return;
                  } else {
                    // Existing callback has insufficient timeout. Cancel and schedule a
                    // new one.
                    cancelDeferredCallback(callbackID);
                  }
                  // The request callback timer is already running. Don't start a new one.
                } else {
                  startRequestCallbackTimer();
                }

                // Compute a timeout for the given expiration time.
                var currentMs = now() - startTime;
                var expirationMs = expirationTimeToMs(expirationTime);
                var timeout = expirationMs - currentMs;

                callbackExpirationTime = expirationTime;
                callbackID = scheduleDeferredCallback(performAsyncWork, {
                  timeout: timeout
                });
              }

              // requestWork is called by the scheduler whenever a root receives an update.
              // It's up to the renderer to call renderRoot at some point in the future.
              function requestWork(root, expirationTime) {
                if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
                  invariant(
                    false,
                    "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
                  );
                }

                // Add the root to the schedule.
                // Check if this root is already part of the schedule.
                if (root.nextScheduledRoot === null) {
                  // This root is not already scheduled. Add it.
                  root.remainingExpirationTime = expirationTime;
                  if (lastScheduledRoot === null) {
                    firstScheduledRoot = lastScheduledRoot = root;
                    root.nextScheduledRoot = root;
                  } else {
                    lastScheduledRoot.nextScheduledRoot = root;
                    lastScheduledRoot = root;
                    lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                  }
                } else {
                  // This root is already scheduled, but its priority may have increased.
                  var remainingExpirationTime = root.remainingExpirationTime;
                  if (
                    remainingExpirationTime === NoWork ||
                    expirationTime < remainingExpirationTime
                  ) {
                    // Update the priority.
                    root.remainingExpirationTime = expirationTime;
                  }
                }

                if (isRendering) {
                  // Prevent reentrancy. Remaining work will be scheduled at the end of
                  // the currently rendering batch.
                  return;
                }

                if (isBatchingUpdates) {
                  // Flush work at the end of the batch.
                  if (isUnbatchingUpdates) {
                    // ...unless we're inside unbatchedUpdates, in which case we should
                    // flush it now.
                    nextFlushedRoot = root;
                    nextFlushedExpirationTime = Sync;
                    performWorkOnRoot(
                      nextFlushedRoot,
                      nextFlushedExpirationTime
                    );
                  }
                  return;
                }

                // TODO: Get rid of Sync and use current time?
                if (expirationTime === Sync) {
                  performWork(Sync, null);
                } else {
                  scheduleCallbackWithExpiration(expirationTime);
                }
              }

              function findHighestPriorityRoot() {
                var highestPriorityWork = NoWork;
                var highestPriorityRoot = null;

                if (lastScheduledRoot !== null) {
                  var previousScheduledRoot = lastScheduledRoot;
                  var root = firstScheduledRoot;
                  while (root !== null) {
                    var remainingExpirationTime = root.remainingExpirationTime;
                    if (remainingExpirationTime === NoWork) {
                      // This root no longer has work. Remove it from the scheduler.

                      // TODO: This check is redudant, but Flow is confused by the branch
                      // below where we set lastScheduledRoot to null, even though we break
                      // from the loop right after.
                      !(
                        previousScheduledRoot !== null &&
                        lastScheduledRoot !== null
                      )
                        ? invariant(
                            false,
                            "Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue."
                          )
                        : void 0;
                      if (root === root.nextScheduledRoot) {
                        // This is the only root in the list.
                        root.nextScheduledRoot = null;
                        firstScheduledRoot = lastScheduledRoot = null;
                        break;
                      } else if (root === firstScheduledRoot) {
                        // This is the first root in the list.
                        var next = root.nextScheduledRoot;
                        firstScheduledRoot = next;
                        lastScheduledRoot.nextScheduledRoot = next;
                        root.nextScheduledRoot = null;
                      } else if (root === lastScheduledRoot) {
                        // This is the last root in the list.
                        lastScheduledRoot = previousScheduledRoot;
                        lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                        root.nextScheduledRoot = null;
                        break;
                      } else {
                        previousScheduledRoot.nextScheduledRoot =
                          root.nextScheduledRoot;
                        root.nextScheduledRoot = null;
                      }
                      root = previousScheduledRoot.nextScheduledRoot;
                    } else {
                      if (
                        highestPriorityWork === NoWork ||
                        remainingExpirationTime < highestPriorityWork
                      ) {
                        // Update the priority, if it's higher
                        highestPriorityWork = remainingExpirationTime;
                        highestPriorityRoot = root;
                      }
                      if (root === lastScheduledRoot) {
                        break;
                      }
                      previousScheduledRoot = root;
                      root = root.nextScheduledRoot;
                    }
                  }
                }

                // If the next root is the same as the previous root, this is a nested
                // update. To prevent an infinite loop, increment the nested update count.
                var previousFlushedRoot = nextFlushedRoot;
                if (
                  previousFlushedRoot !== null &&
                  previousFlushedRoot === highestPriorityRoot
                ) {
                  nestedUpdateCount++;
                } else {
                  // Reset whenever we switch roots.
                  nestedUpdateCount = 0;
                }
                nextFlushedRoot = highestPriorityRoot;
                nextFlushedExpirationTime = highestPriorityWork;
              }

              function performAsyncWork(dl) {
                performWork(NoWork, dl);
              }

              function performWork(minExpirationTime, dl) {
                deadline = dl;

                // Keep working on roots until there's no more work, or until the we reach
                // the deadline.
                findHighestPriorityRoot();

                if (enableUserTimingAPI && deadline !== null) {
                  var didExpire =
                    nextFlushedExpirationTime < recalculateCurrentTime();
                  stopRequestCallbackTimer(didExpire);
                }

                while (
                  nextFlushedRoot !== null &&
                  nextFlushedExpirationTime !== NoWork &&
                  (minExpirationTime === NoWork ||
                    nextFlushedExpirationTime <= minExpirationTime) &&
                  !deadlineDidExpire
                ) {
                  performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
                  // Find the next highest priority work.
                  findHighestPriorityRoot();
                }

                // We're done flushing work. Either we ran out of time in this callback,
                // or there's no more work left with sufficient priority.

                // If we're inside a callback, set this to false since we just completed it.
                if (deadline !== null) {
                  callbackExpirationTime = NoWork;
                  callbackID = -1;
                }
                // If there's work left over, schedule a new callback.
                if (nextFlushedExpirationTime !== NoWork) {
                  scheduleCallbackWithExpiration(nextFlushedExpirationTime);
                }

                // Clean-up.
                deadline = null;
                deadlineDidExpire = false;
                nestedUpdateCount = 0;

                if (hasUnhandledError) {
                  var _error4 = unhandledError;
                  unhandledError = null;
                  hasUnhandledError = false;
                  throw _error4;
                }
              }

              function performWorkOnRoot(root, expirationTime) {
                !!isRendering
                  ? invariant(
                      false,
                      "performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                isRendering = true;

                // Check if this is async work or sync/expired work.
                // TODO: Pass current time as argument to renderRoot, commitRoot
                if (expirationTime <= recalculateCurrentTime()) {
                  // Flush sync work.
                  var finishedWork = root.finishedWork;
                  if (finishedWork !== null) {
                    // This root is already complete. We can commit it.
                    root.finishedWork = null;
                    root.remainingExpirationTime = commitRoot(finishedWork);
                  } else {
                    root.finishedWork = null;
                    finishedWork = renderRoot(root, expirationTime);
                    if (finishedWork !== null) {
                      // We've completed the root. Commit it.
                      root.remainingExpirationTime = commitRoot(finishedWork);
                    }
                  }
                } else {
                  // Flush async work.
                  var _finishedWork = root.finishedWork;
                  if (_finishedWork !== null) {
                    // This root is already complete. We can commit it.
                    root.finishedWork = null;
                    root.remainingExpirationTime = commitRoot(_finishedWork);
                  } else {
                    root.finishedWork = null;
                    _finishedWork = renderRoot(root, expirationTime);
                    if (_finishedWork !== null) {
                      // We've completed the root. Check the deadline one more time
                      // before committing.
                      if (!shouldYield()) {
                        // Still time left. Commit the root.
                        root.remainingExpirationTime = commitRoot(
                          _finishedWork
                        );
                      } else {
                        // There's no time left. Mark this root as complete. We'll come
                        // back and commit it later.
                        root.finishedWork = _finishedWork;
                      }
                    }
                  }
                }

                isRendering = false;
              }

              // When working on async work, the reconciler asks the renderer if it should
              // yield execution. For DOM, we implement this with requestIdleCallback.
              function shouldYield() {
                if (deadline === null) {
                  return false;
                }
                if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                  // Disregard deadline.didTimeout. Only expired work should be flushed
                  // during a timeout. This path is only hit for non-expired work.
                  return false;
                }
                deadlineDidExpire = true;
                return true;
              }

              // TODO: Not happy about this hook. Conceptually, renderRoot should return a
              // tuple of (isReadyForCommit, didError, error)
              function onUncaughtError(error) {
                !(nextFlushedRoot !== null)
                  ? invariant(
                      false,
                      "Should be working on a root. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
                // Unschedule this root so we don't work on it again until there's
                // another update.
                nextFlushedRoot.remainingExpirationTime = NoWork;
                if (!hasUnhandledError) {
                  hasUnhandledError = true;
                  unhandledError = error;
                }
              }

              // TODO: Batching should be implemented at the renderer level, not inside
              // the reconciler.
              function batchedUpdates(fn, a) {
                var previousIsBatchingUpdates = isBatchingUpdates;
                isBatchingUpdates = true;
                try {
                  return fn(a);
                } finally {
                  isBatchingUpdates = previousIsBatchingUpdates;
                  if (!isBatchingUpdates && !isRendering) {
                    performWork(Sync, null);
                  }
                }
              }

              // TODO: Batching should be implemented at the renderer level, not inside
              // the reconciler.
              function unbatchedUpdates(fn) {
                if (isBatchingUpdates && !isUnbatchingUpdates) {
                  isUnbatchingUpdates = true;
                  try {
                    return fn();
                  } finally {
                    isUnbatchingUpdates = false;
                  }
                }
                return fn();
              }

              // TODO: Batching should be implemented at the renderer level, not within
              // the reconciler.
              function flushSync(fn) {
                var previousIsBatchingUpdates = isBatchingUpdates;
                isBatchingUpdates = true;
                try {
                  return syncUpdates(fn);
                } finally {
                  isBatchingUpdates = previousIsBatchingUpdates;
                  !!isRendering
                    ? invariant(
                        false,
                        "flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering."
                      )
                    : void 0;
                  performWork(Sync, null);
                }
              }

              return {
                computeAsyncExpiration: computeAsyncExpiration,
                computeExpirationForFiber: computeExpirationForFiber,
                scheduleWork: scheduleWork,
                batchedUpdates: batchedUpdates,
                unbatchedUpdates: unbatchedUpdates,
                flushSync: flushSync,
                deferredUpdates: deferredUpdates
              };
            };

            {
              var didWarnAboutNestedUpdates = false;
            }

            // 0 is PROD, 1 is DEV.
            // Might add PROFILE later.

            function getContextForSubtree(parentComponent) {
              if (!parentComponent) {
                return emptyObject;
              }

              var fiber = get(parentComponent);
              var parentContext = findCurrentUnmaskedContext(fiber);
              return isContextProvider(fiber)
                ? processChildContext(fiber, parentContext)
                : parentContext;
            }

            var ReactFiberReconciler$1 = function(config) {
              var getPublicInstance = config.getPublicInstance;

              var _ReactFiberScheduler = ReactFiberScheduler(config),
                computeAsyncExpiration =
                  _ReactFiberScheduler.computeAsyncExpiration,
                computeExpirationForFiber =
                  _ReactFiberScheduler.computeExpirationForFiber,
                scheduleWork = _ReactFiberScheduler.scheduleWork,
                batchedUpdates = _ReactFiberScheduler.batchedUpdates,
                unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
                flushSync = _ReactFiberScheduler.flushSync,
                deferredUpdates = _ReactFiberScheduler.deferredUpdates;

              function scheduleTopLevelUpdate(current, element, callback) {
                {
                  if (
                    ReactDebugCurrentFiber.phase === "render" &&
                    ReactDebugCurrentFiber.current !== null &&
                    !didWarnAboutNestedUpdates
                  ) {
                    didWarnAboutNestedUpdates = true;
                    warning(
                      false,
                      "Render methods should be a pure function of props and state; " +
                        "triggering nested component updates from render is not allowed. " +
                        "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
                        "Check the render method of %s.",
                      getComponentName(ReactDebugCurrentFiber.current) ||
                        "Unknown"
                    );
                  }
                }

                callback = callback === undefined ? null : callback;
                {
                  warning(
                    callback === null || typeof callback === "function",
                    "render(...): Expected the last optional `callback` argument to be a " +
                      "function. Instead received: %s.",
                    callback
                  );
                }

                var expirationTime = void 0;
                // Check if the top-level element is an async wrapper component. If so,
                // treat updates to the root as async. This is a bit weird but lets us
                // avoid a separate `renderAsync` API.
                if (
                  enableAsyncSubtreeAPI &&
                  element != null &&
                  element.type != null &&
                  element.type.prototype != null &&
                  element.type.prototype.unstable_isAsyncReactComponent === true
                ) {
                  expirationTime = computeAsyncExpiration();
                } else {
                  expirationTime = computeExpirationForFiber(current);
                }

                var update = {
                  expirationTime: expirationTime,
                  partialState: { element: element },
                  callback: callback,
                  isReplace: false,
                  isForced: false,
                  nextCallback: null,
                  next: null
                };
                insertUpdateIntoFiber(current, update);
                scheduleWork(current, expirationTime);
              }

              function findHostInstance(fiber) {
                var hostFiber = findCurrentHostFiber(fiber);
                if (hostFiber === null) {
                  return null;
                }
                return hostFiber.stateNode;
              }

              return {
                createContainer: function(containerInfo, hydrate) {
                  return createFiberRoot(containerInfo, hydrate);
                },
                updateContainer: function(
                  element,
                  container,
                  parentComponent,
                  callback
                ) {
                  // TODO: If this is a nested container, this won't be the root.
                  var current = container.current;

                  {
                    if (ReactFiberInstrumentation_1.debugTool) {
                      if (current.alternate === null) {
                        ReactFiberInstrumentation_1.debugTool.onMountContainer(
                          container
                        );
                      } else if (element === null) {
                        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(
                          container
                        );
                      } else {
                        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(
                          container
                        );
                      }
                    }
                  }

                  var context = getContextForSubtree(parentComponent);
                  if (container.context === null) {
                    container.context = context;
                  } else {
                    container.pendingContext = context;
                  }

                  scheduleTopLevelUpdate(current, element, callback);
                },

                batchedUpdates: batchedUpdates,

                unbatchedUpdates: unbatchedUpdates,

                deferredUpdates: deferredUpdates,

                flushSync: flushSync,

                getPublicRootInstance: function(container) {
                  var containerFiber = container.current;
                  if (!containerFiber.child) {
                    return null;
                  }
                  switch (containerFiber.child.tag) {
                    case HostComponent:
                      return getPublicInstance(containerFiber.child.stateNode);
                    default:
                      return containerFiber.child.stateNode;
                  }
                },

                findHostInstance: findHostInstance,

                findHostInstanceWithNoPortals: function(fiber) {
                  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
                  if (hostFiber === null) {
                    return null;
                  }
                  return hostFiber.stateNode;
                },
                injectIntoDevTools: function(devToolsConfig) {
                  var findFiberByHostInstance =
                    devToolsConfig.findFiberByHostInstance;

                  return injectInternals(
                    _assign({}, devToolsConfig, {
                      findHostInstanceByFiber: function(fiber) {
                        return findHostInstance(fiber);
                      },
                      findFiberByHostInstance: function(instance) {
                        if (!findFiberByHostInstance) {
                          // Might not be implemented by the renderer.
                          return null;
                        }
                        return findFiberByHostInstance(instance);
                      }
                    })
                  );
                }
              };
            };

            var ReactFiberReconciler$2 = Object.freeze({
              default: ReactFiberReconciler$1
            });

            var ReactFiberReconciler$3 =
              (ReactFiberReconciler$2 && ReactFiberReconciler$1) ||
              ReactFiberReconciler$2;

            // TODO: bundle Flow types with the package.

            // TODO: decide on the top-level export form.
            // This is hacky but makes it work with both Rollup and Jest.
            var reactReconciler = ReactFiberReconciler$3["default"]
              ? ReactFiberReconciler$3["default"]
              : ReactFiberReconciler$3;

            function createPortal$1(
              children,
              containerInfo,
              // TODO: figure out the API for cross-renderer implementation.
              implementation
            ) {
              var key =
                arguments.length > 3 && arguments[3] !== undefined
                  ? arguments[3]
                  : null;

              return {
                // This tag allow us to uniquely identify this as a React Portal
                $$typeof: REACT_PORTAL_TYPE,
                key: key == null ? null : "" + key,
                children: children,
                containerInfo: containerInfo,
                implementation: implementation
              };
            }

            // TODO: this is special because it gets imported during build.

            var ReactVersion = "16.2.0";

            // a requestAnimationFrame, storing the time for the start of the frame, then
            // scheduling a postMessage which gets scheduled after paint. Within the
            // postMessage handler do as much work as possible until time + frame rate.
            // By separating the idle call into a separate event tick we ensure that
            // layout, paint and other browser work is counted against the available time.
            // The frame rate is dynamically adjusted.

            {
              if (
                ExecutionEnvironment.canUseDOM &&
                typeof requestAnimationFrame !== "function"
              ) {
                warning(
                  false,
                  "React depends on requestAnimationFrame. Make sure that you load a " +
                    "polyfill in older browsers. http://fb.me/react-polyfills"
                );
              }
            }

            var hasNativePerformanceNow =
              typeof performance === "object" &&
              typeof performance.now === "function";

            var now = void 0;
            if (hasNativePerformanceNow) {
              now = function() {
                return performance.now();
              };
            } else {
              now = function() {
                return Date.now();
              };
            }

            // TODO: There's no way to cancel, because Fiber doesn't atm.
            var rIC = void 0;
            var cIC = void 0;

            if (!ExecutionEnvironment.canUseDOM) {
              rIC = function(frameCallback) {
                return setTimeout(function() {
                  frameCallback({
                    timeRemaining: function() {
                      return Infinity;
                    }
                  });
                });
              };
              cIC = function(timeoutID) {
                clearTimeout(timeoutID);
              };
            } else if (
              typeof requestIdleCallback !== "function" ||
              typeof cancelIdleCallback !== "function"
            ) {
              // Polyfill requestIdleCallback and cancelIdleCallback

              var scheduledRICCallback = null;
              var isIdleScheduled = false;
              var timeoutTime = -1;

              var isAnimationFrameScheduled = false;

              var frameDeadline = 0;
              // We start out assuming that we run at 30fps but then the heuristic tracking
              // will adjust this value to a faster fps if we get more frequent animation
              // frames.
              var previousFrameTime = 33;
              var activeFrameTime = 33;

              var frameDeadlineObject;
              if (hasNativePerformanceNow) {
                frameDeadlineObject = {
                  didTimeout: false,
                  timeRemaining: function() {
                    // We assume that if we have a performance timer that the rAF callback
                    // gets a performance timer value. Not sure if this is always true.
                    var remaining = frameDeadline - performance.now();
                    return remaining > 0 ? remaining : 0;
                  }
                };
              } else {
                frameDeadlineObject = {
                  didTimeout: false,
                  timeRemaining: function() {
                    // Fallback to Date.now()
                    var remaining = frameDeadline - Date.now();
                    return remaining > 0 ? remaining : 0;
                  }
                };
              }

              // We use the postMessage trick to defer idle work until after the repaint.
              var messageKey =
                "__reactIdleCallback$" +
                Math.random()
                  .toString(36)
                  .slice(2);
              var idleTick = function(event) {
                if (event.source !== window || event.data !== messageKey) {
                  return;
                }

                isIdleScheduled = false;

                var currentTime = now();
                if (frameDeadline - currentTime <= 0) {
                  // There's no time left in this idle period. Check if the callback has
                  // a timeout and whether it's been exceeded.
                  if (timeoutTime !== -1 && timeoutTime <= currentTime) {
                    // Exceeded the timeout. Invoke the callback even though there's no
                    // time left.
                    frameDeadlineObject.didTimeout = true;
                  } else {
                    // No timeout.
                    if (!isAnimationFrameScheduled) {
                      // Schedule another animation callback so we retry later.
                      isAnimationFrameScheduled = true;
                      requestAnimationFrame(animationTick);
                    }
                    // Exit without invoking the callback.
                    return;
                  }
                } else {
                  // There's still time left in this idle period.
                  frameDeadlineObject.didTimeout = false;
                }

                timeoutTime = -1;
                var callback = scheduledRICCallback;
                scheduledRICCallback = null;
                if (callback !== null) {
                  callback(frameDeadlineObject);
                }
              };
              // Assumes that we have addEventListener in this environment. Might need
              // something better for old IE.
              window.addEventListener("message", idleTick, false);

              var animationTick = function(rafTime) {
                isAnimationFrameScheduled = false;
                var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
                if (
                  nextFrameTime < activeFrameTime &&
                  previousFrameTime < activeFrameTime
                ) {
                  if (nextFrameTime < 8) {
                    // Defensive coding. We don't support higher frame rates than 120hz.
                    // If we get lower than that, it is probably a bug.
                    nextFrameTime = 8;
                  }
                  // If one frame goes long, then the next one can be short to catch up.
                  // If two frames are short in a row, then that's an indication that we
                  // actually have a higher frame rate than what we're currently optimizing.
                  // We adjust our heuristic dynamically accordingly. For example, if we're
                  // running on 120hz display or 90hz VR display.
                  // Take the max of the two in case one of them was an anomaly due to
                  // missed frame deadlines.
                  activeFrameTime =
                    nextFrameTime < previousFrameTime
                      ? previousFrameTime
                      : nextFrameTime;
                } else {
                  previousFrameTime = nextFrameTime;
                }
                frameDeadline = rafTime + activeFrameTime;
                if (!isIdleScheduled) {
                  isIdleScheduled = true;
                  window.postMessage(messageKey, "*");
                }
              };

              rIC = function(callback, options) {
                // This assumes that we only schedule one callback at a time because that's
                // how Fiber uses it.
                scheduledRICCallback = callback;
                if (options != null && typeof options.timeout === "number") {
                  timeoutTime = now() + options.timeout;
                }
                if (!isAnimationFrameScheduled) {
                  // If rAF didn't already schedule one, we need to schedule a frame.
                  // TODO: If this rAF doesn't materialize because the browser throttles, we
                  // might want to still have setTimeout trigger rIC as a backup to ensure
                  // that we keep performing work.
                  isAnimationFrameScheduled = true;
                  requestAnimationFrame(animationTick);
                }
                return 0;
              };

              cIC = function() {
                scheduledRICCallback = null;
                isIdleScheduled = false;
                timeoutTime = -1;
              };
            } else {
              rIC = window.requestIdleCallback;
              cIC = window.cancelIdleCallback;
            }

            /**
             * Forked from fbjs/warning:
             * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
             *
             * Only change is we use console.warn instead of console.error,
             * and do nothing when 'console' is not supported.
             * This really simplifies the code.
             * ---
             * Similar to invariant but only logs a warning if the condition is not met.
             * This can be used to log issues in development environments in critical
             * paths. Removing the logging code for production environments will keep the
             * same logic and follow the same code paths.
             */

            var lowPriorityWarning = function() {};

            {
              var printWarning = function(format) {
                for (
                  var _len = arguments.length,
                    args = Array(_len > 1 ? _len - 1 : 0),
                    _key = 1;
                  _key < _len;
                  _key++
                ) {
                  args[_key - 1] = arguments[_key];
                }

                var argIndex = 0;
                var message =
                  "Warning: " +
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                if (typeof console !== "undefined") {
                  console.warn(message);
                }
                try {
                  // --- Welcome to debugging React ---
                  // This error was thrown as a convenience so that you can use this stack
                  // to find the callsite that caused this warning to fire.
                  throw new Error(message);
                } catch (x) {}
              };

              lowPriorityWarning = function(condition, format) {
                if (format === undefined) {
                  throw new Error(
                    "`warning(condition, format, ...args)` requires a warning " +
                      "message argument"
                  );
                }
                if (!condition) {
                  for (
                    var _len2 = arguments.length,
                      args = Array(_len2 > 2 ? _len2 - 2 : 0),
                      _key2 = 2;
                    _key2 < _len2;
                    _key2++
                  ) {
                    args[_key2 - 2] = arguments[_key2];
                  }

                  printWarning.apply(undefined, [format].concat(args));
                }
              };
            }

            var lowPriorityWarning$1 = lowPriorityWarning;

            // isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
            // TODO: Find a better place for this.
            var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
              "^[" +
                ATTRIBUTE_NAME_START_CHAR +
                "][" +
                ATTRIBUTE_NAME_CHAR +
                "]*$"
            );
            var illegalAttributeNameCache = {};
            var validatedAttributeNameCache = {};
            function isAttributeNameSafe(attributeName) {
              if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
                return true;
              }
              if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
                return false;
              }
              if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
                validatedAttributeNameCache[attributeName] = true;
                return true;
              }
              illegalAttributeNameCache[attributeName] = true;
              {
                warning(false, "Invalid attribute name: `%s`", attributeName);
              }
              return false;
            }

            // shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
            // TODO: Find a better place for this.
            function shouldIgnoreValue(propertyInfo, value) {
              return (
                value == null ||
                (propertyInfo.hasBooleanValue && !value) ||
                (propertyInfo.hasNumericValue && isNaN(value)) ||
                (propertyInfo.hasPositiveNumericValue && value < 1) ||
                (propertyInfo.hasOverloadedBooleanValue && value === false)
              );
            }

            /**
             * Operations for dealing with DOM properties.
             */

            /**
             * Get the value for a property on a node. Only used in DEV for SSR validation.
             * The "expected" argument is used as a hint of what the expected value is.
             * Some properties have multiple equivalent values.
             */
            function getValueForProperty(node, name, expected) {
              {
                var propertyInfo = getPropertyInfo(name);
                if (propertyInfo) {
                  var mutationMethod = propertyInfo.mutationMethod;
                  if (mutationMethod || propertyInfo.mustUseProperty) {
                    return node[propertyInfo.propertyName];
                  } else {
                    var attributeName = propertyInfo.attributeName;

                    var stringValue = null;

                    if (propertyInfo.hasOverloadedBooleanValue) {
                      if (node.hasAttribute(attributeName)) {
                        var value = node.getAttribute(attributeName);
                        if (value === "") {
                          return true;
                        }
                        if (shouldIgnoreValue(propertyInfo, expected)) {
                          return value;
                        }
                        if (value === "" + expected) {
                          return expected;
                        }
                        return value;
                      }
                    } else if (node.hasAttribute(attributeName)) {
                      if (shouldIgnoreValue(propertyInfo, expected)) {
                        // We had an attribute but shouldn't have had one, so read it
                        // for the error message.
                        return node.getAttribute(attributeName);
                      }
                      if (propertyInfo.hasBooleanValue) {
                        // If this was a boolean, it doesn't matter what the value is
                        // the fact that we have it is the same as the expected.
                        return expected;
                      }
                      // Even if this property uses a namespace we use getAttribute
                      // because we assume its namespaced name is the same as our config.
                      // To use getAttributeNS we need the local name which we don't have
                      // in our config atm.
                      stringValue = node.getAttribute(attributeName);
                    }

                    if (shouldIgnoreValue(propertyInfo, expected)) {
                      return stringValue === null ? expected : stringValue;
                    } else if (stringValue === "" + expected) {
                      return expected;
                    } else {
                      return stringValue;
                    }
                  }
                }
              }
            }

            /**
             * Get the value for a attribute on a node. Only used in DEV for SSR validation.
             * The third argument is used as a hint of what the expected value is. Some
             * attributes have multiple equivalent values.
             */
            function getValueForAttribute(node, name, expected) {
              {
                if (!isAttributeNameSafe(name)) {
                  return;
                }
                if (!node.hasAttribute(name)) {
                  return expected === undefined ? undefined : null;
                }
                var value = node.getAttribute(name);
                if (value === "" + expected) {
                  return expected;
                }
                return value;
              }
            }

            /**
             * Sets the value for a property on a node.
             *
             * @param {DOMElement} node
             * @param {string} name
             * @param {*} value
             */
            function setValueForProperty(node, name, value) {
              var propertyInfo = getPropertyInfo(name);

              if (propertyInfo && shouldSetAttribute(name, value)) {
                var mutationMethod = propertyInfo.mutationMethod;
                if (mutationMethod) {
                  mutationMethod(node, value);
                } else if (shouldIgnoreValue(propertyInfo, value)) {
                  deleteValueForProperty(node, name);
                  return;
                } else if (propertyInfo.mustUseProperty) {
                  // Contrary to `setAttribute`, object properties are properly
                  // `toString`ed by IE8/9.
                  node[propertyInfo.propertyName] = value;
                } else {
                  var attributeName = propertyInfo.attributeName;
                  var namespace = propertyInfo.attributeNamespace;
                  // `setAttribute` with objects becomes only `[object]` in IE8/9,
                  // ('' + value) makes it output the correct toString()-value.
                  if (namespace) {
                    node.setAttributeNS(namespace, attributeName, "" + value);
                  } else if (
                    propertyInfo.hasBooleanValue ||
                    (propertyInfo.hasOverloadedBooleanValue && value === true)
                  ) {
                    node.setAttribute(attributeName, "");
                  } else {
                    node.setAttribute(attributeName, "" + value);
                  }
                }
              } else {
                setValueForAttribute(
                  node,
                  name,
                  shouldSetAttribute(name, value) ? value : null
                );
                return;
              }

              {
              }
            }

            function setValueForAttribute(node, name, value) {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (value == null) {
                node.removeAttribute(name);
              } else {
                node.setAttribute(name, "" + value);
              }

              {
              }
            }

            /**
             * Deletes an attributes from a node.
             *
             * @param {DOMElement} node
             * @param {string} name
             */
            function deleteValueForAttribute(node, name) {
              node.removeAttribute(name);
            }

            /**
             * Deletes the value for a property on a node.
             *
             * @param {DOMElement} node
             * @param {string} name
             */
            function deleteValueForProperty(node, name) {
              var propertyInfo = getPropertyInfo(name);
              if (propertyInfo) {
                var mutationMethod = propertyInfo.mutationMethod;
                if (mutationMethod) {
                  mutationMethod(node, undefined);
                } else if (propertyInfo.mustUseProperty) {
                  var propName = propertyInfo.propertyName;
                  if (propertyInfo.hasBooleanValue) {
                    node[propName] = false;
                  } else {
                    node[propName] = "";
                  }
                } else {
                  node.removeAttribute(propertyInfo.attributeName);
                }
              } else {
                node.removeAttribute(name);
              }
            }

            var ReactControlledValuePropTypes = {
              checkPropTypes: null
            };

            {
              var hasReadOnlyValue = {
                button: true,
                checkbox: true,
                image: true,
                hidden: true,
                radio: true,
                reset: true,
                submit: true
              };

              var propTypes = {
                value: function(props, propName, componentName) {
                  if (
                    !props[propName] ||
                    hasReadOnlyValue[props.type] ||
                    props.onChange ||
                    props.readOnly ||
                    props.disabled
                  ) {
                    return null;
                  }
                  return new Error(
                    "You provided a `value` prop to a form field without an " +
                      "`onChange` handler. This will render a read-only field. If " +
                      "the field should be mutable use `defaultValue`. Otherwise, " +
                      "set either `onChange` or `readOnly`."
                  );
                },
                checked: function(props, propName, componentName) {
                  if (
                    !props[propName] ||
                    props.onChange ||
                    props.readOnly ||
                    props.disabled
                  ) {
                    return null;
                  }
                  return new Error(
                    "You provided a `checked` prop to a form field without an " +
                      "`onChange` handler. This will render a read-only field. If " +
                      "the field should be mutable use `defaultChecked`. Otherwise, " +
                      "set either `onChange` or `readOnly`."
                  );
                }
              };

              /**
               * Provide a linked `value` attribute for controlled forms. You should not use
               * this outside of the ReactDOM controlled form components.
               */
              ReactControlledValuePropTypes.checkPropTypes = function(
                tagName,
                props,
                getStack
              ) {
                checkPropTypes(propTypes, props, "prop", tagName, getStack);
              };
            }

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var getCurrentFiberOwnerName$2 =
              ReactDebugCurrentFiber.getCurrentFiberOwnerName;
            var getCurrentFiberStackAddendum$3 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            var didWarnValueDefaultValue = false;
            var didWarnCheckedDefaultChecked = false;
            var didWarnControlledToUncontrolled = false;
            var didWarnUncontrolledToControlled = false;

            function isControlled(props) {
              var usesChecked =
                props.type === "checkbox" || props.type === "radio";
              return usesChecked ? props.checked != null : props.value != null;
            }

            /**
             * Implements an <input> host component that allows setting these optional
             * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
             *
             * If `checked` or `value` are not supplied (or null/undefined), user actions
             * that affect the checked state or value will trigger updates to the element.
             *
             * If they are supplied (and not null/undefined), the rendered element will not
             * trigger updates to the element. Instead, the props must change in order for
             * the rendered element to be updated.
             *
             * The rendered element will be initialized as unchecked (or `defaultChecked`)
             * with an empty value (or `defaultValue`).
             *
             * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
             */

            function getHostProps(element, props) {
              var node = element;
              var value = props.value;
              var checked = props.checked;

              var hostProps = _assign(
                {
                  // Make sure we set .type before any other properties (setting .value
                  // before .type means .value is lost in IE11 and below)
                  type: undefined,
                  // Make sure we set .step before .value (setting .value before .step
                  // means .value is rounded on mount, based upon step precision)
                  step: undefined,
                  // Make sure we set .min & .max before .value (to ensure proper order
                  // in corner cases such as min or max deriving from value, e.g. Issue #7170)
                  min: undefined,
                  max: undefined
                },
                props,
                {
                  defaultChecked: undefined,
                  defaultValue: undefined,
                  value:
                    value != null ? value : node._wrapperState.initialValue,
                  checked:
                    checked != null
                      ? checked
                      : node._wrapperState.initialChecked
                }
              );

              return hostProps;
            }

            function initWrapperState(element, props) {
              {
                ReactControlledValuePropTypes.checkPropTypes(
                  "input",
                  props,
                  getCurrentFiberStackAddendum$3
                );

                if (
                  props.checked !== undefined &&
                  props.defaultChecked !== undefined &&
                  !didWarnCheckedDefaultChecked
                ) {
                  warning(
                    false,
                    "%s contains an input of type %s with both checked and defaultChecked props. " +
                      "Input elements must be either controlled or uncontrolled " +
                      "(specify either the checked prop, or the defaultChecked prop, but not " +
                      "both). Decide between using a controlled or uncontrolled input " +
                      "element and remove one of these props. More info: " +
                      "https://fb.me/react-controlled-components",
                    getCurrentFiberOwnerName$2() || "A component",
                    props.type
                  );
                  didWarnCheckedDefaultChecked = true;
                }
                if (
                  props.value !== undefined &&
                  props.defaultValue !== undefined &&
                  !didWarnValueDefaultValue
                ) {
                  warning(
                    false,
                    "%s contains an input of type %s with both value and defaultValue props. " +
                      "Input elements must be either controlled or uncontrolled " +
                      "(specify either the value prop, or the defaultValue prop, but not " +
                      "both). Decide between using a controlled or uncontrolled input " +
                      "element and remove one of these props. More info: " +
                      "https://fb.me/react-controlled-components",
                    getCurrentFiberOwnerName$2() || "A component",
                    props.type
                  );
                  didWarnValueDefaultValue = true;
                }
              }

              var defaultValue = props.defaultValue;
              var node = element;
              node._wrapperState = {
                initialChecked:
                  props.checked != null ? props.checked : props.defaultChecked,
                initialValue: props.value != null ? props.value : defaultValue,
                controlled: isControlled(props)
              };
            }

            function updateChecked(element, props) {
              var node = element;
              var checked = props.checked;
              if (checked != null) {
                setValueForProperty(node, "checked", checked);
              }
            }

            function updateWrapper(element, props) {
              var node = element;
              {
                var controlled = isControlled(props);

                if (
                  !node._wrapperState.controlled &&
                  controlled &&
                  !didWarnUncontrolledToControlled
                ) {
                  warning(
                    false,
                    "A component is changing an uncontrolled input of type %s to be controlled. " +
                      "Input elements should not switch from uncontrolled to controlled (or vice versa). " +
                      "Decide between using a controlled or uncontrolled input " +
                      "element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s",
                    props.type,
                    getCurrentFiberStackAddendum$3()
                  );
                  didWarnUncontrolledToControlled = true;
                }
                if (
                  node._wrapperState.controlled &&
                  !controlled &&
                  !didWarnControlledToUncontrolled
                ) {
                  warning(
                    false,
                    "A component is changing a controlled input of type %s to be uncontrolled. " +
                      "Input elements should not switch from controlled to uncontrolled (or vice versa). " +
                      "Decide between using a controlled or uncontrolled input " +
                      "element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s",
                    props.type,
                    getCurrentFiberStackAddendum$3()
                  );
                  didWarnControlledToUncontrolled = true;
                }
              }

              updateChecked(element, props);

              var value = props.value;
              if (value != null) {
                if (value === 0 && node.value === "") {
                  node.value = "0";
                  // Note: IE9 reports a number inputs as 'text', so check props instead.
                } else if (props.type === "number") {
                  // Simulate `input.valueAsNumber`. IE9 does not support it
                  var valueAsNumber = parseFloat(node.value) || 0;

                  if (
                    // eslint-disable-next-line
                    value != valueAsNumber ||
                    // eslint-disable-next-line
                    (value == valueAsNumber && node.value != value)
                  ) {
                    // Cast `value` to a string to ensure the value is set correctly. While
                    // browsers typically do this as necessary, jsdom doesn't.
                    node.value = "" + value;
                  }
                } else if (node.value !== "" + value) {
                  // Cast `value` to a string to ensure the value is set correctly. While
                  // browsers typically do this as necessary, jsdom doesn't.
                  node.value = "" + value;
                }
              } else {
                if (props.value == null && props.defaultValue != null) {
                  // In Chrome, assigning defaultValue to certain input types triggers input validation.
                  // For number inputs, the display value loses trailing decimal points. For email inputs,
                  // Chrome raises "The specified value <x> is not a valid email address".
                  //
                  // Here we check to see if the defaultValue has actually changed, avoiding these problems
                  // when the user is inputting text
                  //
                  // https://github.com/facebook/react/issues/7253
                  if (node.defaultValue !== "" + props.defaultValue) {
                    node.defaultValue = "" + props.defaultValue;
                  }
                }
                if (props.checked == null && props.defaultChecked != null) {
                  node.defaultChecked = !!props.defaultChecked;
                }
              }
            }

            function postMountWrapper(element, props) {
              var node = element;

              // Detach value from defaultValue. We won't do anything if we're working on
              // submit or reset inputs as those values & defaultValues are linked. They
              // are not resetable nodes so this operation doesn't matter and actually
              // removes browser-default values (eg "Submit Query") when no value is
              // provided.

              switch (props.type) {
                case "submit":
                case "reset":
                  break;
                case "color":
                case "date":
                case "datetime":
                case "datetime-local":
                case "month":
                case "time":
                case "week":
                  // This fixes the no-show issue on iOS Safari and Android Chrome:
                  // https://github.com/facebook/react/issues/7233
                  node.value = "";
                  node.value = node.defaultValue;
                  break;
                default:
                  node.value = node.value;
                  break;
              }

              // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
              // this is needed to work around a chrome bug where setting defaultChecked
              // will sometimes influence the value of checked (even after detachment).
              // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
              // We need to temporarily unset name to avoid disrupting radio button groups.
              var name = node.name;
              if (name !== "") {
                node.name = "";
              }
              node.defaultChecked = !node.defaultChecked;
              node.defaultChecked = !node.defaultChecked;
              if (name !== "") {
                node.name = name;
              }
            }

            function restoreControlledState$1(element, props) {
              var node = element;
              updateWrapper(node, props);
              updateNamedCousins(node, props);
            }

            function updateNamedCousins(rootNode, props) {
              var name = props.name;
              if (props.type === "radio" && name != null) {
                var queryRoot = rootNode;

                while (queryRoot.parentNode) {
                  queryRoot = queryRoot.parentNode;
                }

                // If `rootNode.form` was non-null, then we could try `form.elements`,
                // but that sometimes behaves strangely in IE8. We could also try using
                // `form.getElementsByName`, but that will only return direct children
                // and won't include inputs that use the HTML5 `form=` attribute. Since
                // the input might not even be in a form. It might not even be in the
                // document. Let's just use the local `querySelectorAll` to ensure we don't
                // miss anything.
                var group = queryRoot.querySelectorAll(
                  "input[name=" + JSON.stringify("" + name) + '][type="radio"]'
                );

                for (var i = 0; i < group.length; i++) {
                  var otherNode = group[i];
                  if (
                    otherNode === rootNode ||
                    otherNode.form !== rootNode.form
                  ) {
                    continue;
                  }
                  // This will throw if radio buttons rendered by different copies of React
                  // and the same name are rendered into the same form (same as #1939).
                  // That's probably okay; we don't support it just as we don't support
                  // mixing React radio buttons with non-React ones.
                  var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
                  !otherProps
                    ? invariant(
                        false,
                        "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."
                      )
                    : void 0;

                  // We need update the tracked value on the named cousin since the value
                  // was changed but the input saw no event or value set
                  updateValueIfChanged(otherNode);

                  // If this is a controlled radio button group, forcing the input that
                  // was previously checked to update will cause it to be come re-checked
                  // as appropriate.
                  updateWrapper(otherNode, otherProps);
                }
              }
            }

            function flattenChildren(children) {
              var content = "";

              // Flatten children and warn if they aren't strings or numbers;
              // invalid types are ignored.
              // We can silently skip them because invalid DOM nesting warning
              // catches these cases in Fiber.
              React.Children.forEach(children, function(child) {
                if (child == null) {
                  return;
                }
                if (typeof child === "string" || typeof child === "number") {
                  content += child;
                }
              });

              return content;
            }

            /**
             * Implements an <option> host component that warns when `selected` is set.
             */

            function validateProps(element, props) {
              // TODO (yungsters): Remove support for `selected` in <option>.
              {
                warning(
                  props.selected == null,
                  "Use the `defaultValue` or `value` props on <select> instead of " +
                    "setting `selected` on <option>."
                );
              }
            }

            function postMountWrapper$1(element, props) {
              // value="" should make a value attribute (#6219)
              if (props.value != null) {
                element.setAttribute("value", props.value);
              }
            }

            function getHostProps$1(element, props) {
              var hostProps = _assign({ children: undefined }, props);
              var content = flattenChildren(props.children);

              if (content) {
                hostProps.children = content;
              }

              return hostProps;
            }

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var getCurrentFiberOwnerName$3 =
              ReactDebugCurrentFiber.getCurrentFiberOwnerName;
            var getCurrentFiberStackAddendum$4 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            {
              var didWarnValueDefaultValue$1 = false;
            }

            function getDeclarationErrorAddendum() {
              var ownerName = getCurrentFiberOwnerName$3();
              if (ownerName) {
                return "\n\nCheck the render method of `" + ownerName + "`.";
              }
              return "";
            }

            var valuePropNames = ["value", "defaultValue"];

            /**
             * Validation function for `value` and `defaultValue`.
             */
            function checkSelectPropTypes(props) {
              ReactControlledValuePropTypes.checkPropTypes(
                "select",
                props,
                getCurrentFiberStackAddendum$4
              );

              for (var i = 0; i < valuePropNames.length; i++) {
                var propName = valuePropNames[i];
                if (props[propName] == null) {
                  continue;
                }
                var isArray = Array.isArray(props[propName]);
                if (props.multiple && !isArray) {
                  warning(
                    false,
                    "The `%s` prop supplied to <select> must be an array if " +
                      "`multiple` is true.%s",
                    propName,
                    getDeclarationErrorAddendum()
                  );
                } else if (!props.multiple && isArray) {
                  warning(
                    false,
                    "The `%s` prop supplied to <select> must be a scalar " +
                      "value if `multiple` is false.%s",
                    propName,
                    getDeclarationErrorAddendum()
                  );
                }
              }
            }

            function updateOptions(
              node,
              multiple,
              propValue,
              setDefaultSelected
            ) {
              var options = node.options;

              if (multiple) {
                var selectedValues = propValue;
                var selectedValue = {};
                for (var i = 0; i < selectedValues.length; i++) {
                  // Prefix to avoid chaos with special keys.
                  selectedValue["$" + selectedValues[i]] = true;
                }
                for (var _i = 0; _i < options.length; _i++) {
                  var selected = selectedValue.hasOwnProperty(
                    "$" + options[_i].value
                  );
                  if (options[_i].selected !== selected) {
                    options[_i].selected = selected;
                  }
                  if (selected && setDefaultSelected) {
                    options[_i].defaultSelected = true;
                  }
                }
              } else {
                // Do not set `select.value` as exact behavior isn't consistent across all
                // browsers for all cases.
                var _selectedValue = "" + propValue;
                var defaultSelected = null;
                for (var _i2 = 0; _i2 < options.length; _i2++) {
                  if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) {
                      options[_i2].defaultSelected = true;
                    }
                    return;
                  }
                  if (defaultSelected === null && !options[_i2].disabled) {
                    defaultSelected = options[_i2];
                  }
                }
                if (defaultSelected !== null) {
                  defaultSelected.selected = true;
                }
              }
            }

            /**
             * Implements a <select> host component that allows optionally setting the
             * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
             * stringable. If `multiple` is true, the prop must be an array of stringables.
             *
             * If `value` is not supplied (or null/undefined), user actions that change the
             * selected option will trigger updates to the rendered options.
             *
             * If it is supplied (and not null/undefined), the rendered options will not
             * update in response to user actions. Instead, the `value` prop must change in
             * order for the rendered options to update.
             *
             * If `defaultValue` is provided, any options with the supplied values will be
             * selected.
             */

            function getHostProps$2(element, props) {
              return _assign({}, props, {
                value: undefined
              });
            }

            function initWrapperState$1(element, props) {
              var node = element;
              {
                checkSelectPropTypes(props);
              }

              var value = props.value;
              node._wrapperState = {
                initialValue: value != null ? value : props.defaultValue,
                wasMultiple: !!props.multiple
              };

              {
                if (
                  props.value !== undefined &&
                  props.defaultValue !== undefined &&
                  !didWarnValueDefaultValue$1
                ) {
                  warning(
                    false,
                    "Select elements must be either controlled or uncontrolled " +
                      "(specify either the value prop, or the defaultValue prop, but not " +
                      "both). Decide between using a controlled or uncontrolled select " +
                      "element and remove one of these props. More info: " +
                      "https://fb.me/react-controlled-components"
                  );
                  didWarnValueDefaultValue$1 = true;
                }
              }
            }

            function postMountWrapper$2(element, props) {
              var node = element;
              node.multiple = !!props.multiple;
              var value = props.value;
              if (value != null) {
                updateOptions(node, !!props.multiple, value, false);
              } else if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue, true);
              }
            }

            function postUpdateWrapper(element, props) {
              var node = element;
              // After the initial mount, we control selected-ness manually so don't pass
              // this value down
              node._wrapperState.initialValue = undefined;

              var wasMultiple = node._wrapperState.wasMultiple;
              node._wrapperState.wasMultiple = !!props.multiple;

              var value = props.value;
              if (value != null) {
                updateOptions(node, !!props.multiple, value, false);
              } else if (wasMultiple !== !!props.multiple) {
                // For simplicity, reapply `defaultValue` if `multiple` is toggled.
                if (props.defaultValue != null) {
                  updateOptions(
                    node,
                    !!props.multiple,
                    props.defaultValue,
                    true
                  );
                } else {
                  // Revert the select back to its default unselected state.
                  updateOptions(
                    node,
                    !!props.multiple,
                    props.multiple ? [] : "",
                    false
                  );
                }
              }
            }

            function restoreControlledState$2(element, props) {
              var node = element;
              var value = props.value;

              if (value != null) {
                updateOptions(node, !!props.multiple, value, false);
              }
            }

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var getCurrentFiberStackAddendum$5 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            var didWarnValDefaultVal = false;

            /**
             * Implements a <textarea> host component that allows setting `value`, and
             * `defaultValue`. This differs from the traditional DOM API because value is
             * usually set as PCDATA children.
             *
             * If `value` is not supplied (or null/undefined), user actions that affect the
             * value will trigger updates to the element.
             *
             * If `value` is supplied (and not null/undefined), the rendered element will
             * not trigger updates to the element. Instead, the `value` prop must change in
             * order for the rendered element to be updated.
             *
             * The rendered element will be initialized with an empty value, the prop
             * `defaultValue` if specified, or the children content (deprecated).
             */

            function getHostProps$3(element, props) {
              var node = element;
              !(props.dangerouslySetInnerHTML == null)
                ? invariant(
                    false,
                    "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                  )
                : void 0;

              // Always set children to the same thing. In IE9, the selection range will
              // get reset if `textContent` is mutated.  We could add a check in setTextContent
              // to only set the value if/when the value differs from the node value (which would
              // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
              // solution. The value can be a boolean or object so that's why it's forced
              // to be a string.
              var hostProps = _assign({}, props, {
                value: undefined,
                defaultValue: undefined,
                children: "" + node._wrapperState.initialValue
              });

              return hostProps;
            }

            function initWrapperState$2(element, props) {
              var node = element;
              {
                ReactControlledValuePropTypes.checkPropTypes(
                  "textarea",
                  props,
                  getCurrentFiberStackAddendum$5
                );
                if (
                  props.value !== undefined &&
                  props.defaultValue !== undefined &&
                  !didWarnValDefaultVal
                ) {
                  warning(
                    false,
                    "Textarea elements must be either controlled or uncontrolled " +
                      "(specify either the value prop, or the defaultValue prop, but not " +
                      "both). Decide between using a controlled or uncontrolled textarea " +
                      "and remove one of these props. More info: " +
                      "https://fb.me/react-controlled-components"
                  );
                  didWarnValDefaultVal = true;
                }
              }

              var initialValue = props.value;

              // Only bother fetching default value if we're going to use it
              if (initialValue == null) {
                var defaultValue = props.defaultValue;
                // TODO (yungsters): Remove support for children content in <textarea>.
                var children = props.children;
                if (children != null) {
                  {
                    warning(
                      false,
                      "Use the `defaultValue` or `value` props instead of setting " +
                        "children on <textarea>."
                    );
                  }
                  !(defaultValue == null)
                    ? invariant(
                        false,
                        "If you supply `defaultValue` on a <textarea>, do not pass children."
                      )
                    : void 0;
                  if (Array.isArray(children)) {
                    !(children.length <= 1)
                      ? invariant(
                          false,
                          "<textarea> can only have at most one child."
                        )
                      : void 0;
                    children = children[0];
                  }

                  defaultValue = "" + children;
                }
                if (defaultValue == null) {
                  defaultValue = "";
                }
                initialValue = defaultValue;
              }

              node._wrapperState = {
                initialValue: "" + initialValue
              };
            }

            function updateWrapper$1(element, props) {
              var node = element;
              var value = props.value;
              if (value != null) {
                // Cast `value` to a string to ensure the value is set correctly. While
                // browsers typically do this as necessary, jsdom doesn't.
                var newValue = "" + value;

                // To avoid side effects (such as losing text selection), only set value if changed
                if (newValue !== node.value) {
                  node.value = newValue;
                }
                if (props.defaultValue == null) {
                  node.defaultValue = newValue;
                }
              }
              if (props.defaultValue != null) {
                node.defaultValue = props.defaultValue;
              }
            }

            function postMountWrapper$3(element, props) {
              var node = element;
              // This is in postMount because we need access to the DOM node, which is not
              // available until after the component has mounted.
              var textContent = node.textContent;

              // Only set node.value if textContent is equal to the expected
              // initial value. In IE10/IE11 there is a bug where the placeholder attribute
              // will populate textContent as well.
              // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
              if (textContent === node._wrapperState.initialValue) {
                node.value = textContent;
              }
            }

            function restoreControlledState$3(element, props) {
              // DOM component is still mounted; update
              updateWrapper$1(element, props);
            }

            var HTML_NAMESPACE$1 = "http://www.w3.org/1999/xhtml";
            var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
            var SVG_NAMESPACE = "http://www.w3.org/2000/svg";

            var Namespaces = {
              html: HTML_NAMESPACE$1,
              mathml: MATH_NAMESPACE,
              svg: SVG_NAMESPACE
            };

            // Assumes there is no parent namespace.
            function getIntrinsicNamespace(type) {
              switch (type) {
                case "svg":
                  return SVG_NAMESPACE;
                case "math":
                  return MATH_NAMESPACE;
                default:
                  return HTML_NAMESPACE$1;
              }
            }

            function getChildNamespace(parentNamespace, type) {
              if (
                parentNamespace == null ||
                parentNamespace === HTML_NAMESPACE$1
              ) {
                // No (or default) parent namespace: potential entry point.
                return getIntrinsicNamespace(type);
              }
              if (
                parentNamespace === SVG_NAMESPACE &&
                type === "foreignObject"
              ) {
                // We're leaving SVG.
                return HTML_NAMESPACE$1;
              }
              // By default, pass namespace below.
              return parentNamespace;
            }

            /* globals MSApp */

            /**
             * Create a function which has 'unsafe' privileges (required by windows8 apps)
             */
            var createMicrosoftUnsafeLocalFunction = function(func) {
              if (
                typeof MSApp !== "undefined" &&
                MSApp.execUnsafeLocalFunction
              ) {
                return function(arg0, arg1, arg2, arg3) {
                  MSApp.execUnsafeLocalFunction(function() {
                    return func(arg0, arg1, arg2, arg3);
                  });
                };
              } else {
                return func;
              }
            };

            // SVG temp container for IE lacking innerHTML
            var reusableSVGContainer = void 0;

            /**
             * Set the innerHTML property of a node
             *
             * @param {DOMElement} node
             * @param {string} html
             * @internal
             */
            var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(
              node,
              html
            ) {
              // IE does not have innerHTML for SVG nodes, so instead we inject the
              // new markup in a temp node and then move the child nodes across into
              // the target node

              if (
                node.namespaceURI === Namespaces.svg &&
                !("innerHTML" in node)
              ) {
                reusableSVGContainer =
                  reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while (node.firstChild) {
                  node.removeChild(node.firstChild);
                }
                while (svgNode.firstChild) {
                  node.appendChild(svgNode.firstChild);
                }
              } else {
                node.innerHTML = html;
              }
            });

            /**
             * Set the textContent property of a node, ensuring that whitespace is preserved
             * even in IE8. innerText is a poor substitute for textContent and, among many
             * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
             * as it should.
             *
             * @param {DOMElement} node
             * @param {string} text
             * @internal
             */
            var setTextContent = function(node, text) {
              if (text) {
                var firstChild = node.firstChild;

                if (
                  firstChild &&
                  firstChild === node.lastChild &&
                  firstChild.nodeType === TEXT_NODE
                ) {
                  firstChild.nodeValue = text;
                  return;
                }
              }
              node.textContent = text;
            };

            /**
             * CSS properties which accept numbers but are not in units of "px".
             */
            var isUnitlessNumber = {
              animationIterationCount: true,
              borderImageOutset: true,
              borderImageSlice: true,
              borderImageWidth: true,
              boxFlex: true,
              boxFlexGroup: true,
              boxOrdinalGroup: true,
              columnCount: true,
              columns: true,
              flex: true,
              flexGrow: true,
              flexPositive: true,
              flexShrink: true,
              flexNegative: true,
              flexOrder: true,
              gridRow: true,
              gridRowEnd: true,
              gridRowSpan: true,
              gridRowStart: true,
              gridColumn: true,
              gridColumnEnd: true,
              gridColumnSpan: true,
              gridColumnStart: true,
              fontWeight: true,
              lineClamp: true,
              lineHeight: true,
              opacity: true,
              order: true,
              orphans: true,
              tabSize: true,
              widows: true,
              zIndex: true,
              zoom: true,

              // SVG-related properties
              fillOpacity: true,
              floodOpacity: true,
              stopOpacity: true,
              strokeDasharray: true,
              strokeDashoffset: true,
              strokeMiterlimit: true,
              strokeOpacity: true,
              strokeWidth: true
            };

            /**
             * @param {string} prefix vendor-specific prefix, eg: Webkit
             * @param {string} key style name, eg: transitionDuration
             * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
             * WebkitTransitionDuration
             */
            function prefixKey(prefix, key) {
              return prefix + key.charAt(0).toUpperCase() + key.substring(1);
            }

            /**
             * Support style names that may come passed in prefixed by adding permutations
             * of vendor prefixes.
             */
            var prefixes = ["Webkit", "ms", "Moz", "O"];

            // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
            // infinite loop, because it iterates over the newly added props too.
            Object.keys(isUnitlessNumber).forEach(function(prop) {
              prefixes.forEach(function(prefix) {
                isUnitlessNumber[prefixKey(prefix, prop)] =
                  isUnitlessNumber[prop];
              });
            });

            /**
             * Convert a value into the proper css writable value. The style name `name`
             * should be logical (no hyphens), as specified
             * in `CSSProperty.isUnitlessNumber`.
             *
             * @param {string} name CSS property name such as `topMargin`.
             * @param {*} value CSS property value such as `10px`.
             * @return {string} Normalized style value with dimensions applied.
             */
            function dangerousStyleValue(name, value, isCustomProperty) {
              // Note that we've removed escapeTextForBrowser() calls here since the
              // whole string will be escaped when the attribute is injected into
              // the markup. If you provide unsafe user data here they can inject
              // arbitrary CSS which may be problematic (I couldn't repro this):
              // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
              // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
              // This is not an XSS hole but instead a potential CSS injection issue
              // which has lead to a greater discussion about how we're going to
              // trust URLs moving forward. See #2115901

              var isEmpty =
                value == null || typeof value === "boolean" || value === "";
              if (isEmpty) {
                return "";
              }

              if (
                !isCustomProperty &&
                typeof value === "number" &&
                value !== 0 &&
                !(
                  isUnitlessNumber.hasOwnProperty(name) &&
                  isUnitlessNumber[name]
                )
              ) {
                return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
              }

              return ("" + value).trim();
            }

            var warnValidStyle = emptyFunction;

            {
              // 'msTransform' is correct, but the other prefixes should be capitalized
              var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

              // style values shouldn't contain a semicolon
              var badStyleValueWithSemicolonPattern = /;\s*$/;

              var warnedStyleNames = {};
              var warnedStyleValues = {};
              var warnedForNaNValue = false;
              var warnedForInfinityValue = false;

              var warnHyphenatedStyleName = function(name, getStack) {
                if (
                  warnedStyleNames.hasOwnProperty(name) &&
                  warnedStyleNames[name]
                ) {
                  return;
                }

                warnedStyleNames[name] = true;
                warning(
                  false,
                  "Unsupported style property %s. Did you mean %s?%s",
                  name,
                  camelizeStyleName(name),
                  getStack()
                );
              };

              var warnBadVendoredStyleName = function(name, getStack) {
                if (
                  warnedStyleNames.hasOwnProperty(name) &&
                  warnedStyleNames[name]
                ) {
                  return;
                }

                warnedStyleNames[name] = true;
                warning(
                  false,
                  "Unsupported vendor-prefixed style property %s. Did you mean %s?%s",
                  name,
                  name.charAt(0).toUpperCase() + name.slice(1),
                  getStack()
                );
              };

              var warnStyleValueWithSemicolon = function(
                name,
                value,
                getStack
              ) {
                if (
                  warnedStyleValues.hasOwnProperty(value) &&
                  warnedStyleValues[value]
                ) {
                  return;
                }

                warnedStyleValues[value] = true;
                warning(
                  false,
                  "Style property values shouldn't contain a semicolon. " +
                    'Try "%s: %s" instead.%s',
                  name,
                  value.replace(badStyleValueWithSemicolonPattern, ""),
                  getStack()
                );
              };

              var warnStyleValueIsNaN = function(name, value, getStack) {
                if (warnedForNaNValue) {
                  return;
                }

                warnedForNaNValue = true;
                warning(
                  false,
                  "`NaN` is an invalid value for the `%s` css style property.%s",
                  name,
                  getStack()
                );
              };

              var warnStyleValueIsInfinity = function(name, value, getStack) {
                if (warnedForInfinityValue) {
                  return;
                }

                warnedForInfinityValue = true;
                warning(
                  false,
                  "`Infinity` is an invalid value for the `%s` css style property.%s",
                  name,
                  getStack()
                );
              };

              warnValidStyle = function(name, value, getStack) {
                if (name.indexOf("-") > -1) {
                  warnHyphenatedStyleName(name, getStack);
                } else if (badVendoredStyleNamePattern.test(name)) {
                  warnBadVendoredStyleName(name, getStack);
                } else if (badStyleValueWithSemicolonPattern.test(value)) {
                  warnStyleValueWithSemicolon(name, value, getStack);
                }

                if (typeof value === "number") {
                  if (isNaN(value)) {
                    warnStyleValueIsNaN(name, value, getStack);
                  } else if (!isFinite(value)) {
                    warnStyleValueIsInfinity(name, value, getStack);
                  }
                }
              };
            }

            var warnValidStyle$1 = warnValidStyle;

            /**
             * Operations for dealing with CSS properties.
             */

            /**
             * This creates a string that is expected to be equivalent to the style
             * attribute generated by server-side rendering. It by-passes warnings and
             * security checks so it's not safe to use this value for anything other than
             * comparison. It is only used in DEV for SSR validation.
             */
            function createDangerousStringForStyles(styles) {
              {
                var serialized = "";
                var delimiter = "";
                for (var styleName in styles) {
                  if (!styles.hasOwnProperty(styleName)) {
                    continue;
                  }
                  var styleValue = styles[styleName];
                  if (styleValue != null) {
                    var isCustomProperty = styleName.indexOf("--") === 0;
                    serialized +=
                      delimiter + hyphenateStyleName(styleName) + ":";
                    serialized += dangerousStyleValue(
                      styleName,
                      styleValue,
                      isCustomProperty
                    );

                    delimiter = ";";
                  }
                }
                return serialized || null;
              }
            }

            /**
             * Sets the value for multiple styles on a node.  If a value is specified as
             * '' (empty string), the corresponding style property will be unset.
             *
             * @param {DOMElement} node
             * @param {object} styles
             */
            function setValueForStyles(node, styles, getStack) {
              var style = node.style;
              for (var styleName in styles) {
                if (!styles.hasOwnProperty(styleName)) {
                  continue;
                }
                var isCustomProperty = styleName.indexOf("--") === 0;
                {
                  if (!isCustomProperty) {
                    warnValidStyle$1(styleName, styles[styleName], getStack);
                  }
                }
                var styleValue = dangerousStyleValue(
                  styleName,
                  styles[styleName],
                  isCustomProperty
                );
                if (styleName === "float") {
                  styleName = "cssFloat";
                }
                if (isCustomProperty) {
                  style.setProperty(styleName, styleValue);
                } else {
                  style[styleName] = styleValue;
                }
              }
            }

            // For HTML, certain tags should omit their close tag. We keep a whitelist for
            // those special-case tags.

            var omittedCloseTags = {
              area: true,
              base: true,
              br: true,
              col: true,
              embed: true,
              hr: true,
              img: true,
              input: true,
              keygen: true,
              link: true,
              meta: true,
              param: true,
              source: true,
              track: true,
              wbr: true
            };

            // For HTML, certain tags cannot have children. This has the same purpose as
            // `omittedCloseTags` except that `menuitem` should still have its closing tag.

            var voidElementTags = _assign(
              {
                menuitem: true
              },
              omittedCloseTags
            );

            var HTML$1 = "__html";

            function assertValidProps(tag, props, getStack) {
              if (!props) {
                return;
              }
              // Note the use of `==` which checks for null or undefined.
              if (voidElementTags[tag]) {
                !(
                  props.children == null &&
                  props.dangerouslySetInnerHTML == null
                )
                  ? invariant(
                      false,
                      "%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s",
                      tag,
                      getStack()
                    )
                  : void 0;
              }
              if (props.dangerouslySetInnerHTML != null) {
                !(props.children == null)
                  ? invariant(
                      false,
                      "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
                    )
                  : void 0;
                !(
                  typeof props.dangerouslySetInnerHTML === "object" &&
                  HTML$1 in props.dangerouslySetInnerHTML
                )
                  ? invariant(
                      false,
                      "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information."
                    )
                  : void 0;
              }
              {
                warning(
                  props.suppressContentEditableWarning ||
                    !props.contentEditable ||
                    props.children == null,
                  "A component is `contentEditable` and contains `children` managed by " +
                    "React. It is now your responsibility to guarantee that none of " +
                    "those nodes are unexpectedly modified or duplicated. This is " +
                    "probably not intentional.%s",
                  getStack()
                );
              }
              !(props.style == null || typeof props.style === "object")
                ? invariant(
                    false,
                    "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                    getStack()
                  )
                : void 0;
            }

            function isCustomComponent(tagName, props) {
              if (tagName.indexOf("-") === -1) {
                return typeof props.is === "string";
              }
              switch (tagName) {
                // These are reserved SVG and MathML elements.
                // We don't mind this whitelist too much because we expect it to never grow.
                // The alternative is to track the namespace in a few places which is convoluted.
                // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                  return false;
                default:
                  return true;
              }
            }

            var ariaProperties = {
              "aria-current": 0, // state
              "aria-details": 0,
              "aria-disabled": 0, // state
              "aria-hidden": 0, // state
              "aria-invalid": 0, // state
              "aria-keyshortcuts": 0,
              "aria-label": 0,
              "aria-roledescription": 0,
              // Widget Attributes
              "aria-autocomplete": 0,
              "aria-checked": 0,
              "aria-expanded": 0,
              "aria-haspopup": 0,
              "aria-level": 0,
              "aria-modal": 0,
              "aria-multiline": 0,
              "aria-multiselectable": 0,
              "aria-orientation": 0,
              "aria-placeholder": 0,
              "aria-pressed": 0,
              "aria-readonly": 0,
              "aria-required": 0,
              "aria-selected": 0,
              "aria-sort": 0,
              "aria-valuemax": 0,
              "aria-valuemin": 0,
              "aria-valuenow": 0,
              "aria-valuetext": 0,
              // Live Region Attributes
              "aria-atomic": 0,
              "aria-busy": 0,
              "aria-live": 0,
              "aria-relevant": 0,
              // Drag-and-Drop Attributes
              "aria-dropeffect": 0,
              "aria-grabbed": 0,
              // Relationship Attributes
              "aria-activedescendant": 0,
              "aria-colcount": 0,
              "aria-colindex": 0,
              "aria-colspan": 0,
              "aria-controls": 0,
              "aria-describedby": 0,
              "aria-errormessage": 0,
              "aria-flowto": 0,
              "aria-labelledby": 0,
              "aria-owns": 0,
              "aria-posinset": 0,
              "aria-rowcount": 0,
              "aria-rowindex": 0,
              "aria-rowspan": 0,
              "aria-setsize": 0
            };

            var warnedProperties = {};
            var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
            var rARIACamel = new RegExp(
              "^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$"
            );

            var hasOwnProperty = Object.prototype.hasOwnProperty;

            function getStackAddendum() {
              var stack = ReactDebugCurrentFrame.getStackAddendum();
              return stack != null ? stack : "";
            }

            function validateProperty(tagName, name) {
              if (
                hasOwnProperty.call(warnedProperties, name) &&
                warnedProperties[name]
              ) {
                return true;
              }

              if (rARIACamel.test(name)) {
                var ariaName = "aria-" + name.slice(4).toLowerCase();
                var correctName = ariaProperties.hasOwnProperty(ariaName)
                  ? ariaName
                  : null;

                // If this is an aria-* attribute, but is not listed in the known DOM
                // DOM properties, then it is an invalid aria-* attribute.
                if (correctName == null) {
                  warning(
                    false,
                    "Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s",
                    name,
                    getStackAddendum()
                  );
                  warnedProperties[name] = true;
                  return true;
                }
                // aria-* attributes should be lowercase; suggest the lowercase version.
                if (name !== correctName) {
                  warning(
                    false,
                    "Invalid ARIA attribute `%s`. Did you mean `%s`?%s",
                    name,
                    correctName,
                    getStackAddendum()
                  );
                  warnedProperties[name] = true;
                  return true;
                }
              }

              if (rARIA.test(name)) {
                var lowerCasedName = name.toLowerCase();
                var standardName = ariaProperties.hasOwnProperty(lowerCasedName)
                  ? lowerCasedName
                  : null;

                // If this is an aria-* attribute, but is not listed in the known DOM
                // DOM properties, then it is an invalid aria-* attribute.
                if (standardName == null) {
                  warnedProperties[name] = true;
                  return false;
                }
                // aria-* attributes should be lowercase; suggest the lowercase version.
                if (name !== standardName) {
                  warning(
                    false,
                    "Unknown ARIA attribute `%s`. Did you mean `%s`?%s",
                    name,
                    standardName,
                    getStackAddendum()
                  );
                  warnedProperties[name] = true;
                  return true;
                }
              }

              return true;
            }

            function warnInvalidARIAProps(type, props) {
              var invalidProps = [];

              for (var key in props) {
                var isValid = validateProperty(type, key);
                if (!isValid) {
                  invalidProps.push(key);
                }
              }

              var unknownPropString = invalidProps
                .map(function(prop) {
                  return "`" + prop + "`";
                })
                .join(", ");

              if (invalidProps.length === 1) {
                warning(
                  false,
                  "Invalid aria prop %s on <%s> tag. " +
                    "For details, see https://fb.me/invalid-aria-prop%s",
                  unknownPropString,
                  type,
                  getStackAddendum()
                );
              } else if (invalidProps.length > 1) {
                warning(
                  false,
                  "Invalid aria props %s on <%s> tag. " +
                    "For details, see https://fb.me/invalid-aria-prop%s",
                  unknownPropString,
                  type,
                  getStackAddendum()
                );
              }
            }

            function validateProperties(type, props) {
              if (isCustomComponent(type, props)) {
                return;
              }
              warnInvalidARIAProps(type, props);
            }

            var didWarnValueNull = false;

            function getStackAddendum$1() {
              var stack = ReactDebugCurrentFrame.getStackAddendum();
              return stack != null ? stack : "";
            }

            function validateProperties$1(type, props) {
              if (
                type !== "input" &&
                type !== "textarea" &&
                type !== "select"
              ) {
                return;
              }

              if (props != null && props.value === null && !didWarnValueNull) {
                didWarnValueNull = true;
                if (type === "select" && props.multiple) {
                  warning(
                    false,
                    "`value` prop on `%s` should not be null. " +
                      "Consider using an empty array when `multiple` is set to `true` " +
                      "to clear the component or `undefined` for uncontrolled components.%s",
                    type,
                    getStackAddendum$1()
                  );
                } else {
                  warning(
                    false,
                    "`value` prop on `%s` should not be null. " +
                      "Consider using an empty string to clear the component or `undefined` " +
                      "for uncontrolled components.%s",
                    type,
                    getStackAddendum$1()
                  );
                }
              }
            }

            // When adding attributes to the HTML or SVG whitelist, be sure to
            // also add them to this module to ensure casing and incorrect name
            // warnings.
            var possibleStandardNames = {
              // HTML
              accept: "accept",
              acceptcharset: "acceptCharset",
              "accept-charset": "acceptCharset",
              accesskey: "accessKey",
              action: "action",
              allowfullscreen: "allowFullScreen",
              alt: "alt",
              as: "as",
              async: "async",
              autocapitalize: "autoCapitalize",
              autocomplete: "autoComplete",
              autocorrect: "autoCorrect",
              autofocus: "autoFocus",
              autoplay: "autoPlay",
              autosave: "autoSave",
              capture: "capture",
              cellpadding: "cellPadding",
              cellspacing: "cellSpacing",
              challenge: "challenge",
              charset: "charSet",
              checked: "checked",
              children: "children",
              cite: "cite",
              class: "className",
              classid: "classID",
              classname: "className",
              cols: "cols",
              colspan: "colSpan",
              content: "content",
              contenteditable: "contentEditable",
              contextmenu: "contextMenu",
              controls: "controls",
              controlslist: "controlsList",
              coords: "coords",
              crossorigin: "crossOrigin",
              dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
              data: "data",
              datetime: "dateTime",
              default: "default",
              defaultchecked: "defaultChecked",
              defaultvalue: "defaultValue",
              defer: "defer",
              dir: "dir",
              disabled: "disabled",
              download: "download",
              draggable: "draggable",
              enctype: "encType",
              for: "htmlFor",
              form: "form",
              formmethod: "formMethod",
              formaction: "formAction",
              formenctype: "formEncType",
              formnovalidate: "formNoValidate",
              formtarget: "formTarget",
              frameborder: "frameBorder",
              headers: "headers",
              height: "height",
              hidden: "hidden",
              high: "high",
              href: "href",
              hreflang: "hrefLang",
              htmlfor: "htmlFor",
              httpequiv: "httpEquiv",
              "http-equiv": "httpEquiv",
              icon: "icon",
              id: "id",
              innerhtml: "innerHTML",
              inputmode: "inputMode",
              integrity: "integrity",
              is: "is",
              itemid: "itemID",
              itemprop: "itemProp",
              itemref: "itemRef",
              itemscope: "itemScope",
              itemtype: "itemType",
              keyparams: "keyParams",
              keytype: "keyType",
              kind: "kind",
              label: "label",
              lang: "lang",
              list: "list",
              loop: "loop",
              low: "low",
              manifest: "manifest",
              marginwidth: "marginWidth",
              marginheight: "marginHeight",
              max: "max",
              maxlength: "maxLength",
              media: "media",
              mediagroup: "mediaGroup",
              method: "method",
              min: "min",
              minlength: "minLength",
              multiple: "multiple",
              muted: "muted",
              name: "name",
              nonce: "nonce",
              novalidate: "noValidate",
              open: "open",
              optimum: "optimum",
              pattern: "pattern",
              placeholder: "placeholder",
              playsinline: "playsInline",
              poster: "poster",
              preload: "preload",
              profile: "profile",
              radiogroup: "radioGroup",
              readonly: "readOnly",
              referrerpolicy: "referrerPolicy",
              rel: "rel",
              required: "required",
              reversed: "reversed",
              role: "role",
              rows: "rows",
              rowspan: "rowSpan",
              sandbox: "sandbox",
              scope: "scope",
              scoped: "scoped",
              scrolling: "scrolling",
              seamless: "seamless",
              selected: "selected",
              shape: "shape",
              size: "size",
              sizes: "sizes",
              span: "span",
              spellcheck: "spellCheck",
              src: "src",
              srcdoc: "srcDoc",
              srclang: "srcLang",
              srcset: "srcSet",
              start: "start",
              step: "step",
              style: "style",
              summary: "summary",
              tabindex: "tabIndex",
              target: "target",
              title: "title",
              type: "type",
              usemap: "useMap",
              value: "value",
              width: "width",
              wmode: "wmode",
              wrap: "wrap",

              // SVG
              about: "about",
              accentheight: "accentHeight",
              "accent-height": "accentHeight",
              accumulate: "accumulate",
              additive: "additive",
              alignmentbaseline: "alignmentBaseline",
              "alignment-baseline": "alignmentBaseline",
              allowreorder: "allowReorder",
              alphabetic: "alphabetic",
              amplitude: "amplitude",
              arabicform: "arabicForm",
              "arabic-form": "arabicForm",
              ascent: "ascent",
              attributename: "attributeName",
              attributetype: "attributeType",
              autoreverse: "autoReverse",
              azimuth: "azimuth",
              basefrequency: "baseFrequency",
              baselineshift: "baselineShift",
              "baseline-shift": "baselineShift",
              baseprofile: "baseProfile",
              bbox: "bbox",
              begin: "begin",
              bias: "bias",
              by: "by",
              calcmode: "calcMode",
              capheight: "capHeight",
              "cap-height": "capHeight",
              clip: "clip",
              clippath: "clipPath",
              "clip-path": "clipPath",
              clippathunits: "clipPathUnits",
              cliprule: "clipRule",
              "clip-rule": "clipRule",
              color: "color",
              colorinterpolation: "colorInterpolation",
              "color-interpolation": "colorInterpolation",
              colorinterpolationfilters: "colorInterpolationFilters",
              "color-interpolation-filters": "colorInterpolationFilters",
              colorprofile: "colorProfile",
              "color-profile": "colorProfile",
              colorrendering: "colorRendering",
              "color-rendering": "colorRendering",
              contentscripttype: "contentScriptType",
              contentstyletype: "contentStyleType",
              cursor: "cursor",
              cx: "cx",
              cy: "cy",
              d: "d",
              datatype: "datatype",
              decelerate: "decelerate",
              descent: "descent",
              diffuseconstant: "diffuseConstant",
              direction: "direction",
              display: "display",
              divisor: "divisor",
              dominantbaseline: "dominantBaseline",
              "dominant-baseline": "dominantBaseline",
              dur: "dur",
              dx: "dx",
              dy: "dy",
              edgemode: "edgeMode",
              elevation: "elevation",
              enablebackground: "enableBackground",
              "enable-background": "enableBackground",
              end: "end",
              exponent: "exponent",
              externalresourcesrequired: "externalResourcesRequired",
              fill: "fill",
              fillopacity: "fillOpacity",
              "fill-opacity": "fillOpacity",
              fillrule: "fillRule",
              "fill-rule": "fillRule",
              filter: "filter",
              filterres: "filterRes",
              filterunits: "filterUnits",
              floodopacity: "floodOpacity",
              "flood-opacity": "floodOpacity",
              floodcolor: "floodColor",
              "flood-color": "floodColor",
              focusable: "focusable",
              fontfamily: "fontFamily",
              "font-family": "fontFamily",
              fontsize: "fontSize",
              "font-size": "fontSize",
              fontsizeadjust: "fontSizeAdjust",
              "font-size-adjust": "fontSizeAdjust",
              fontstretch: "fontStretch",
              "font-stretch": "fontStretch",
              fontstyle: "fontStyle",
              "font-style": "fontStyle",
              fontvariant: "fontVariant",
              "font-variant": "fontVariant",
              fontweight: "fontWeight",
              "font-weight": "fontWeight",
              format: "format",
              from: "from",
              fx: "fx",
              fy: "fy",
              g1: "g1",
              g2: "g2",
              glyphname: "glyphName",
              "glyph-name": "glyphName",
              glyphorientationhorizontal: "glyphOrientationHorizontal",
              "glyph-orientation-horizontal": "glyphOrientationHorizontal",
              glyphorientationvertical: "glyphOrientationVertical",
              "glyph-orientation-vertical": "glyphOrientationVertical",
              glyphref: "glyphRef",
              gradienttransform: "gradientTransform",
              gradientunits: "gradientUnits",
              hanging: "hanging",
              horizadvx: "horizAdvX",
              "horiz-adv-x": "horizAdvX",
              horizoriginx: "horizOriginX",
              "horiz-origin-x": "horizOriginX",
              ideographic: "ideographic",
              imagerendering: "imageRendering",
              "image-rendering": "imageRendering",
              in2: "in2",
              in: "in",
              inlist: "inlist",
              intercept: "intercept",
              k1: "k1",
              k2: "k2",
              k3: "k3",
              k4: "k4",
              k: "k",
              kernelmatrix: "kernelMatrix",
              kernelunitlength: "kernelUnitLength",
              kerning: "kerning",
              keypoints: "keyPoints",
              keysplines: "keySplines",
              keytimes: "keyTimes",
              lengthadjust: "lengthAdjust",
              letterspacing: "letterSpacing",
              "letter-spacing": "letterSpacing",
              lightingcolor: "lightingColor",
              "lighting-color": "lightingColor",
              limitingconeangle: "limitingConeAngle",
              local: "local",
              markerend: "markerEnd",
              "marker-end": "markerEnd",
              markerheight: "markerHeight",
              markermid: "markerMid",
              "marker-mid": "markerMid",
              markerstart: "markerStart",
              "marker-start": "markerStart",
              markerunits: "markerUnits",
              markerwidth: "markerWidth",
              mask: "mask",
              maskcontentunits: "maskContentUnits",
              maskunits: "maskUnits",
              mathematical: "mathematical",
              mode: "mode",
              numoctaves: "numOctaves",
              offset: "offset",
              opacity: "opacity",
              operator: "operator",
              order: "order",
              orient: "orient",
              orientation: "orientation",
              origin: "origin",
              overflow: "overflow",
              overlineposition: "overlinePosition",
              "overline-position": "overlinePosition",
              overlinethickness: "overlineThickness",
              "overline-thickness": "overlineThickness",
              paintorder: "paintOrder",
              "paint-order": "paintOrder",
              panose1: "panose1",
              "panose-1": "panose1",
              pathlength: "pathLength",
              patterncontentunits: "patternContentUnits",
              patterntransform: "patternTransform",
              patternunits: "patternUnits",
              pointerevents: "pointerEvents",
              "pointer-events": "pointerEvents",
              points: "points",
              pointsatx: "pointsAtX",
              pointsaty: "pointsAtY",
              pointsatz: "pointsAtZ",
              prefix: "prefix",
              preservealpha: "preserveAlpha",
              preserveaspectratio: "preserveAspectRatio",
              primitiveunits: "primitiveUnits",
              property: "property",
              r: "r",
              radius: "radius",
              refx: "refX",
              refy: "refY",
              renderingintent: "renderingIntent",
              "rendering-intent": "renderingIntent",
              repeatcount: "repeatCount",
              repeatdur: "repeatDur",
              requiredextensions: "requiredExtensions",
              requiredfeatures: "requiredFeatures",
              resource: "resource",
              restart: "restart",
              result: "result",
              results: "results",
              rotate: "rotate",
              rx: "rx",
              ry: "ry",
              scale: "scale",
              security: "security",
              seed: "seed",
              shaperendering: "shapeRendering",
              "shape-rendering": "shapeRendering",
              slope: "slope",
              spacing: "spacing",
              specularconstant: "specularConstant",
              specularexponent: "specularExponent",
              speed: "speed",
              spreadmethod: "spreadMethod",
              startoffset: "startOffset",
              stddeviation: "stdDeviation",
              stemh: "stemh",
              stemv: "stemv",
              stitchtiles: "stitchTiles",
              stopcolor: "stopColor",
              "stop-color": "stopColor",
              stopopacity: "stopOpacity",
              "stop-opacity": "stopOpacity",
              strikethroughposition: "strikethroughPosition",
              "strikethrough-position": "strikethroughPosition",
              strikethroughthickness: "strikethroughThickness",
              "strikethrough-thickness": "strikethroughThickness",
              string: "string",
              stroke: "stroke",
              strokedasharray: "strokeDasharray",
              "stroke-dasharray": "strokeDasharray",
              strokedashoffset: "strokeDashoffset",
              "stroke-dashoffset": "strokeDashoffset",
              strokelinecap: "strokeLinecap",
              "stroke-linecap": "strokeLinecap",
              strokelinejoin: "strokeLinejoin",
              "stroke-linejoin": "strokeLinejoin",
              strokemiterlimit: "strokeMiterlimit",
              "stroke-miterlimit": "strokeMiterlimit",
              strokewidth: "strokeWidth",
              "stroke-width": "strokeWidth",
              strokeopacity: "strokeOpacity",
              "stroke-opacity": "strokeOpacity",
              suppresscontenteditablewarning: "suppressContentEditableWarning",
              suppresshydrationwarning: "suppressHydrationWarning",
              surfacescale: "surfaceScale",
              systemlanguage: "systemLanguage",
              tablevalues: "tableValues",
              targetx: "targetX",
              targety: "targetY",
              textanchor: "textAnchor",
              "text-anchor": "textAnchor",
              textdecoration: "textDecoration",
              "text-decoration": "textDecoration",
              textlength: "textLength",
              textrendering: "textRendering",
              "text-rendering": "textRendering",
              to: "to",
              transform: "transform",
              typeof: "typeof",
              u1: "u1",
              u2: "u2",
              underlineposition: "underlinePosition",
              "underline-position": "underlinePosition",
              underlinethickness: "underlineThickness",
              "underline-thickness": "underlineThickness",
              unicode: "unicode",
              unicodebidi: "unicodeBidi",
              "unicode-bidi": "unicodeBidi",
              unicoderange: "unicodeRange",
              "unicode-range": "unicodeRange",
              unitsperem: "unitsPerEm",
              "units-per-em": "unitsPerEm",
              unselectable: "unselectable",
              valphabetic: "vAlphabetic",
              "v-alphabetic": "vAlphabetic",
              values: "values",
              vectoreffect: "vectorEffect",
              "vector-effect": "vectorEffect",
              version: "version",
              vertadvy: "vertAdvY",
              "vert-adv-y": "vertAdvY",
              vertoriginx: "vertOriginX",
              "vert-origin-x": "vertOriginX",
              vertoriginy: "vertOriginY",
              "vert-origin-y": "vertOriginY",
              vhanging: "vHanging",
              "v-hanging": "vHanging",
              videographic: "vIdeographic",
              "v-ideographic": "vIdeographic",
              viewbox: "viewBox",
              viewtarget: "viewTarget",
              visibility: "visibility",
              vmathematical: "vMathematical",
              "v-mathematical": "vMathematical",
              vocab: "vocab",
              widths: "widths",
              wordspacing: "wordSpacing",
              "word-spacing": "wordSpacing",
              writingmode: "writingMode",
              "writing-mode": "writingMode",
              x1: "x1",
              x2: "x2",
              x: "x",
              xchannelselector: "xChannelSelector",
              xheight: "xHeight",
              "x-height": "xHeight",
              xlinkactuate: "xlinkActuate",
              "xlink:actuate": "xlinkActuate",
              xlinkarcrole: "xlinkArcrole",
              "xlink:arcrole": "xlinkArcrole",
              xlinkhref: "xlinkHref",
              "xlink:href": "xlinkHref",
              xlinkrole: "xlinkRole",
              "xlink:role": "xlinkRole",
              xlinkshow: "xlinkShow",
              "xlink:show": "xlinkShow",
              xlinktitle: "xlinkTitle",
              "xlink:title": "xlinkTitle",
              xlinktype: "xlinkType",
              "xlink:type": "xlinkType",
              xmlbase: "xmlBase",
              "xml:base": "xmlBase",
              xmllang: "xmlLang",
              "xml:lang": "xmlLang",
              xmlns: "xmlns",
              "xml:space": "xmlSpace",
              xmlnsxlink: "xmlnsXlink",
              "xmlns:xlink": "xmlnsXlink",
              xmlspace: "xmlSpace",
              y1: "y1",
              y2: "y2",
              y: "y",
              ychannelselector: "yChannelSelector",
              z: "z",
              zoomandpan: "zoomAndPan"
            };

            function getStackAddendum$2() {
              var stack = ReactDebugCurrentFrame.getStackAddendum();
              return stack != null ? stack : "";
            }

            {
              var warnedProperties$1 = {};
              var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
              var EVENT_NAME_REGEX = /^on./;
              var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
              var rARIA$1 = new RegExp(
                "^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"
              );
              var rARIACamel$1 = new RegExp(
                "^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$"
              );

              var validateProperty$1 = function(
                tagName,
                name,
                value,
                canUseEventSystem
              ) {
                if (
                  hasOwnProperty$1.call(warnedProperties$1, name) &&
                  warnedProperties$1[name]
                ) {
                  return true;
                }

                var lowerCasedName = name.toLowerCase();
                if (
                  lowerCasedName === "onfocusin" ||
                  lowerCasedName === "onfocusout"
                ) {
                  warning(
                    false,
                    "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. " +
                      "All React events are normalized to bubble, so onFocusIn and onFocusOut " +
                      "are not needed/supported by React."
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                // We can't rely on the event system being injected on the server.
                if (canUseEventSystem) {
                  if (registrationNameModules.hasOwnProperty(name)) {
                    return true;
                  }
                  var registrationName = possibleRegistrationNames.hasOwnProperty(
                    lowerCasedName
                  )
                    ? possibleRegistrationNames[lowerCasedName]
                    : null;
                  if (registrationName != null) {
                    warning(
                      false,
                      "Invalid event handler property `%s`. Did you mean `%s`?%s",
                      name,
                      registrationName,
                      getStackAddendum$2()
                    );
                    warnedProperties$1[name] = true;
                    return true;
                  }
                  if (EVENT_NAME_REGEX.test(name)) {
                    warning(
                      false,
                      "Unknown event handler property `%s`. It will be ignored.%s",
                      name,
                      getStackAddendum$2()
                    );
                    warnedProperties$1[name] = true;
                    return true;
                  }
                } else if (EVENT_NAME_REGEX.test(name)) {
                  // If no event plugins have been injected, we are in a server environment.
                  // So we can't tell if the event name is correct for sure, but we can filter
                  // out known bad ones like `onclick`. We can't suggest a specific replacement though.
                  if (INVALID_EVENT_NAME_REGEX.test(name)) {
                    warning(
                      false,
                      "Invalid event handler property `%s`. " +
                        "React events use the camelCase naming convention, for example `onClick`.%s",
                      name,
                      getStackAddendum$2()
                    );
                  }
                  warnedProperties$1[name] = true;
                  return true;
                }

                // Let the ARIA attribute hook validate ARIA attributes
                if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                  return true;
                }

                if (lowerCasedName === "innerhtml") {
                  warning(
                    false,
                    "Directly setting property `innerHTML` is not permitted. " +
                      "For more information, lookup documentation on `dangerouslySetInnerHTML`."
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                if (lowerCasedName === "aria") {
                  warning(
                    false,
                    "The `aria` attribute is reserved for future use in React. " +
                      "Pass individual `aria-` attributes instead."
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                if (
                  lowerCasedName === "is" &&
                  value !== null &&
                  value !== undefined &&
                  typeof value !== "string"
                ) {
                  warning(
                    false,
                    "Received a `%s` for a string attribute `is`. If this is expected, cast " +
                      "the value to a string.%s",
                    typeof value,
                    getStackAddendum$2()
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                if (typeof value === "number" && isNaN(value)) {
                  warning(
                    false,
                    "Received NaN for the `%s` attribute. If this is expected, cast " +
                      "the value to a string.%s",
                    name,
                    getStackAddendum$2()
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                var isReserved = isReservedProp(name);

                // Known attributes should match the casing specified in the property config.
                if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                  var standardName = possibleStandardNames[lowerCasedName];
                  if (standardName !== name) {
                    warning(
                      false,
                      "Invalid DOM property `%s`. Did you mean `%s`?%s",
                      name,
                      standardName,
                      getStackAddendum$2()
                    );
                    warnedProperties$1[name] = true;
                    return true;
                  }
                } else if (!isReserved && name !== lowerCasedName) {
                  // Unknown attributes should have lowercase casing since that's how they
                  // will be cased anyway with server rendering.
                  warning(
                    false,
                    "React does not recognize the `%s` prop on a DOM element. If you " +
                      "intentionally want it to appear in the DOM as a custom " +
                      "attribute, spell it as lowercase `%s` instead. " +
                      "If you accidentally passed it from a parent component, remove " +
                      "it from the DOM element.%s",
                    name,
                    lowerCasedName,
                    getStackAddendum$2()
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }

                if (
                  typeof value === "boolean" &&
                  !shouldAttributeAcceptBooleanValue(name)
                ) {
                  if (value) {
                    warning(
                      false,
                      "Received `%s` for a non-boolean attribute `%s`.\n\n" +
                        "If you want to write it to the DOM, pass a string instead: " +
                        '%s="%s" or %s={value.toString()}.%s',
                      value,
                      name,
                      name,
                      value,
                      name,
                      getStackAddendum$2()
                    );
                  } else {
                    warning(
                      false,
                      "Received `%s` for a non-boolean attribute `%s`.\n\n" +
                        "If you want to write it to the DOM, pass a string instead: " +
                        '%s="%s" or %s={value.toString()}.\n\n' +
                        "If you used to conditionally omit it with %s={condition && value}, " +
                        "pass %s={condition ? value : undefined} instead.%s",
                      value,
                      name,
                      name,
                      value,
                      name,
                      name,
                      name,
                      getStackAddendum$2()
                    );
                  }
                  warnedProperties$1[name] = true;
                  return true;
                }

                // Now that we've validated casing, do not validate
                // data types for reserved props
                if (isReserved) {
                  return true;
                }

                // Warn when a known attribute is a bad type
                if (!shouldSetAttribute(name, value)) {
                  warnedProperties$1[name] = true;
                  return false;
                }

                return true;
              };
            }

            var warnUnknownProperties = function(
              type,
              props,
              canUseEventSystem
            ) {
              var unknownProps = [];
              for (var key in props) {
                var isValid = validateProperty$1(
                  type,
                  key,
                  props[key],
                  canUseEventSystem
                );
                if (!isValid) {
                  unknownProps.push(key);
                }
              }

              var unknownPropString = unknownProps
                .map(function(prop) {
                  return "`" + prop + "`";
                })
                .join(", ");
              if (unknownProps.length === 1) {
                warning(
                  false,
                  "Invalid value for prop %s on <%s> tag. Either remove it from the element, " +
                    "or pass a string or number value to keep it in the DOM. " +
                    "For details, see https://fb.me/react-attribute-behavior%s",
                  unknownPropString,
                  type,
                  getStackAddendum$2()
                );
              } else if (unknownProps.length > 1) {
                warning(
                  false,
                  "Invalid values for props %s on <%s> tag. Either remove them from the element, " +
                    "or pass a string or number value to keep them in the DOM. " +
                    "For details, see https://fb.me/react-attribute-behavior%s",
                  unknownPropString,
                  type,
                  getStackAddendum$2()
                );
              }
            };

            function validateProperties$2(type, props, canUseEventSystem) {
              if (isCustomComponent(type, props)) {
                return;
              }
              warnUnknownProperties(type, props, canUseEventSystem);
            }

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var getCurrentFiberOwnerName$1 =
              ReactDebugCurrentFiber.getCurrentFiberOwnerName;
            var getCurrentFiberStackAddendum$2 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            var didWarnInvalidHydration = false;
            var didWarnShadyDOM = false;

            var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
            var SUPPRESS_CONTENT_EDITABLE_WARNING =
              "suppressContentEditableWarning";
            var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
            var AUTOFOCUS = "autoFocus";
            var CHILDREN = "children";
            var STYLE = "style";
            var HTML = "__html";

            var HTML_NAMESPACE = Namespaces.html;

            var getStack = emptyFunction.thatReturns("");

            {
              getStack = getCurrentFiberStackAddendum$2;

              var warnedUnknownTags = {
                // Chrome is the only major browser not shipping <time>. But as of July
                // 2017 it intends to ship it due to widespread usage. We intentionally
                // *don't* warn for <time> even if it's unrecognized by Chrome because
                // it soon will be, and many apps have been using it anyway.
                time: true,
                // There are working polyfills for <dialog>. Let people use it.
                dialog: true
              };

              var validatePropertiesInDevelopment = function(type, props) {
                validateProperties(type, props);
                validateProperties$1(type, props);
                validateProperties$2(type, props, /* canUseEventSystem */ true);
              };

              // HTML parsing normalizes CR and CRLF to LF.
              // It also can turn \u0000 into \uFFFD inside attributes.
              // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
              // If we have a mismatch, it might be caused by that.
              // We will still patch up in this case but not fire the warning.
              var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
              var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

              var normalizeMarkupForTextOrAttribute = function(markup) {
                var markupString =
                  typeof markup === "string" ? markup : "" + markup;
                return markupString
                  .replace(NORMALIZE_NEWLINES_REGEX, "\n")
                  .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
              };

              var warnForTextDifference = function(serverText, clientText) {
                if (didWarnInvalidHydration) {
                  return;
                }
                var normalizedClientText = normalizeMarkupForTextOrAttribute(
                  clientText
                );
                var normalizedServerText = normalizeMarkupForTextOrAttribute(
                  serverText
                );
                if (normalizedServerText === normalizedClientText) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  'Text content did not match. Server: "%s" Client: "%s"',
                  normalizedServerText,
                  normalizedClientText
                );
              };

              var warnForPropDifference = function(
                propName,
                serverValue,
                clientValue
              ) {
                if (didWarnInvalidHydration) {
                  return;
                }
                var normalizedClientValue = normalizeMarkupForTextOrAttribute(
                  clientValue
                );
                var normalizedServerValue = normalizeMarkupForTextOrAttribute(
                  serverValue
                );
                if (normalizedServerValue === normalizedClientValue) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  "Prop `%s` did not match. Server: %s Client: %s",
                  propName,
                  JSON.stringify(normalizedServerValue),
                  JSON.stringify(normalizedClientValue)
                );
              };

              var warnForExtraAttributes = function(attributeNames) {
                if (didWarnInvalidHydration) {
                  return;
                }
                didWarnInvalidHydration = true;
                var names = [];
                attributeNames.forEach(function(name) {
                  names.push(name);
                });
                warning(false, "Extra attributes from the server: %s", names);
              };

              var warnForInvalidEventListener = function(
                registrationName,
                listener
              ) {
                if (listener === false) {
                  warning(
                    false,
                    "Expected `%s` listener to be a function, instead got `false`.\n\n" +
                      "If you used to conditionally omit it with %s={condition && value}, " +
                      "pass %s={condition ? value : undefined} instead.%s",
                    registrationName,
                    registrationName,
                    registrationName,
                    getCurrentFiberStackAddendum$2()
                  );
                } else {
                  warning(
                    false,
                    "Expected `%s` listener to be a function, instead got a value of `%s` type.%s",
                    registrationName,
                    typeof listener,
                    getCurrentFiberStackAddendum$2()
                  );
                }
              };

              // Parse the HTML and read it back to normalize the HTML string so that it
              // can be used for comparison.
              var normalizeHTML = function(parent, html) {
                // We could have created a separate document here to avoid
                // re-initializing custom elements if they exist. But this breaks
                // how <noscript> is being handled. So we use the same document.
                // See the discussion in https://github.com/facebook/react/pull/11157.
                var testElement =
                  parent.namespaceURI === HTML_NAMESPACE
                    ? parent.ownerDocument.createElement(parent.tagName)
                    : parent.ownerDocument.createElementNS(
                        parent.namespaceURI,
                        parent.tagName
                      );
                testElement.innerHTML = html;
                return testElement.innerHTML;
              };
            }

            function ensureListeningTo(rootContainerElement, registrationName) {
              var isDocumentOrFragment =
                rootContainerElement.nodeType === DOCUMENT_NODE ||
                rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
              var doc = isDocumentOrFragment
                ? rootContainerElement
                : rootContainerElement.ownerDocument;
              listenTo(registrationName, doc);
            }

            function getOwnerDocumentFromRootContainer(rootContainerElement) {
              return rootContainerElement.nodeType === DOCUMENT_NODE
                ? rootContainerElement
                : rootContainerElement.ownerDocument;
            }

            // There are so many media events, it makes sense to just
            // maintain a list rather than create a `trapBubbledEvent` for each
            var mediaEvents = {
              topAbort: "abort",
              topCanPlay: "canplay",
              topCanPlayThrough: "canplaythrough",
              topDurationChange: "durationchange",
              topEmptied: "emptied",
              topEncrypted: "encrypted",
              topEnded: "ended",
              topError: "error",
              topLoadedData: "loadeddata",
              topLoadedMetadata: "loadedmetadata",
              topLoadStart: "loadstart",
              topPause: "pause",
              topPlay: "play",
              topPlaying: "playing",
              topProgress: "progress",
              topRateChange: "ratechange",
              topSeeked: "seeked",
              topSeeking: "seeking",
              topStalled: "stalled",
              topSuspend: "suspend",
              topTimeUpdate: "timeupdate",
              topVolumeChange: "volumechange",
              topWaiting: "waiting"
            };

            function trapClickOnNonInteractiveElement(node) {
              // Mobile Safari does not fire properly bubble click events on
              // non-interactive elements, which means delegated click listeners do not
              // fire. The workaround for this bug involves attaching an empty click
              // listener on the target node.
              // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
              // Just set it using the onclick property so that we don't have to manage any
              // bookkeeping for it. Not sure if we need to clear it when the listener is
              // removed.
              // TODO: Only do this for the relevant Safaris maybe?
              node.onclick = emptyFunction;
            }

            function setInitialDOMProperties(
              tag,
              domElement,
              rootContainerElement,
              nextProps,
              isCustomComponentTag
            ) {
              for (var propKey in nextProps) {
                if (!nextProps.hasOwnProperty(propKey)) {
                  continue;
                }
                var nextProp = nextProps[propKey];
                if (propKey === STYLE) {
                  {
                    if (nextProp) {
                      // Freeze the next style object so that we can assume it won't be
                      // mutated. We have already warned for this in the past.
                      Object.freeze(nextProp);
                    }
                  }
                  // Relies on `updateStylesByID` not mutating `styleUpdates`.
                  setValueForStyles(domElement, nextProp, getStack);
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var nextHtml = nextProp ? nextProp[HTML] : undefined;
                  if (nextHtml != null) {
                    setInnerHTML(domElement, nextHtml);
                  }
                } else if (propKey === CHILDREN) {
                  if (typeof nextProp === "string") {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent =
                      tag !== "textarea" || nextProp !== "";
                    if (canSetTextContent) {
                      setTextContent(domElement, nextProp);
                    }
                  } else if (typeof nextProp === "number") {
                    setTextContent(domElement, "" + nextProp);
                  }
                } else if (
                  propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                  propKey === SUPPRESS_HYDRATION_WARNING$1
                ) {
                  // Noop
                } else if (propKey === AUTOFOCUS) {
                  // We polyfill it separately on the client during commit.
                  // We blacklist it here rather than in the property list because we emit it in SSR.
                } else if (registrationNameModules.hasOwnProperty(propKey)) {
                  if (nextProp != null) {
                    if (true && typeof nextProp !== "function") {
                      warnForInvalidEventListener(propKey, nextProp);
                    }
                    ensureListeningTo(rootContainerElement, propKey);
                  }
                } else if (isCustomComponentTag) {
                  setValueForAttribute(domElement, propKey, nextProp);
                } else if (nextProp != null) {
                  // If we're updating to null or undefined, we should remove the property
                  // from the DOM node instead of inadvertently setting to a string. This
                  // brings us in line with the same behavior we have on initial render.
                  setValueForProperty(domElement, propKey, nextProp);
                }
              }
            }

            function updateDOMProperties(
              domElement,
              updatePayload,
              wasCustomComponentTag,
              isCustomComponentTag
            ) {
              // TODO: Handle wasCustomComponentTag
              for (var i = 0; i < updatePayload.length; i += 2) {
                var propKey = updatePayload[i];
                var propValue = updatePayload[i + 1];
                if (propKey === STYLE) {
                  setValueForStyles(domElement, propValue, getStack);
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  setInnerHTML(domElement, propValue);
                } else if (propKey === CHILDREN) {
                  setTextContent(domElement, propValue);
                } else if (isCustomComponentTag) {
                  if (propValue != null) {
                    setValueForAttribute(domElement, propKey, propValue);
                  } else {
                    deleteValueForAttribute(domElement, propKey);
                  }
                } else if (propValue != null) {
                  setValueForProperty(domElement, propKey, propValue);
                } else {
                  // If we're updating to null or undefined, we should remove the property
                  // from the DOM node instead of inadvertently setting to a string. This
                  // brings us in line with the same behavior we have on initial render.
                  deleteValueForProperty(domElement, propKey);
                }
              }
            }

            function createElement$1(
              type,
              props,
              rootContainerElement,
              parentNamespace
            ) {
              // We create tags in the namespace of their parent container, except HTML
              var ownerDocument = getOwnerDocumentFromRootContainer(
                rootContainerElement
              );
              var domElement;
              var namespaceURI = parentNamespace;
              if (namespaceURI === HTML_NAMESPACE) {
                namespaceURI = getIntrinsicNamespace(type);
              }
              if (namespaceURI === HTML_NAMESPACE) {
                {
                  var isCustomComponentTag = isCustomComponent(type, props);
                  // Should this check be gated by parent namespace? Not sure we want to
                  // allow <SVG> or <mATH>.
                  warning(
                    isCustomComponentTag || type === type.toLowerCase(),
                    "<%s /> is using uppercase HTML. Always use lowercase HTML tags " +
                      "in React.",
                    type
                  );
                }

                if (type === "script") {
                  // Create the script via .innerHTML so its "parser-inserted" flag is
                  // set to true and it does not execute
                  var div = ownerDocument.createElement("div");
                  div.innerHTML = "<script><" + "/script>"; // eslint-disable-line
                  // This is guaranteed to yield a script element.
                  var firstChild = div.firstChild;
                  domElement = div.removeChild(firstChild);
                } else if (typeof props.is === "string") {
                  // $FlowIssue `createElement` should be updated for Web Components
                  domElement = ownerDocument.createElement(type, {
                    is: props.is
                  });
                } else {
                  // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                  // See discussion in https://github.com/facebook/react/pull/6896
                  // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                  domElement = ownerDocument.createElement(type);
                }
              } else {
                domElement = ownerDocument.createElementNS(namespaceURI, type);
              }

              {
                if (namespaceURI === HTML_NAMESPACE) {
                  if (
                    !isCustomComponentTag &&
                    Object.prototype.toString.call(domElement) ===
                      "[object HTMLUnknownElement]" &&
                    !Object.prototype.hasOwnProperty.call(
                      warnedUnknownTags,
                      type
                    )
                  ) {
                    warnedUnknownTags[type] = true;
                    warning(
                      false,
                      "The tag <%s> is unrecognized in this browser. " +
                        "If you meant to render a React component, start its name with " +
                        "an uppercase letter.",
                      type
                    );
                  }
                }
              }

              return domElement;
            }

            function createTextNode$1(text, rootContainerElement) {
              return getOwnerDocumentFromRootContainer(
                rootContainerElement
              ).createTextNode(text);
            }

            function setInitialProperties$1(
              domElement,
              tag,
              rawProps,
              rootContainerElement
            ) {
              var isCustomComponentTag = isCustomComponent(tag, rawProps);
              {
                validatePropertiesInDevelopment(tag, rawProps);
                if (
                  isCustomComponentTag &&
                  !didWarnShadyDOM &&
                  domElement.shadyRoot
                ) {
                  warning(
                    false,
                    "%s is using shady DOM. Using shady DOM with React can " +
                      "cause things to break subtly.",
                    getCurrentFiberOwnerName$1() || "A component"
                  );
                  didWarnShadyDOM = true;
                }
              }

              // TODO: Make sure that we check isMounted before firing any of these events.
              var props;
              switch (tag) {
                case "iframe":
                case "object":
                  trapBubbledEvent("topLoad", "load", domElement);
                  props = rawProps;
                  break;
                case "video":
                case "audio":
                  // Create listener for each media event
                  for (var event in mediaEvents) {
                    if (mediaEvents.hasOwnProperty(event)) {
                      trapBubbledEvent(event, mediaEvents[event], domElement);
                    }
                  }
                  props = rawProps;
                  break;
                case "source":
                  trapBubbledEvent("topError", "error", domElement);
                  props = rawProps;
                  break;
                case "img":
                case "image":
                  trapBubbledEvent("topError", "error", domElement);
                  trapBubbledEvent("topLoad", "load", domElement);
                  props = rawProps;
                  break;
                case "form":
                  trapBubbledEvent("topReset", "reset", domElement);
                  trapBubbledEvent("topSubmit", "submit", domElement);
                  props = rawProps;
                  break;
                case "details":
                  trapBubbledEvent("topToggle", "toggle", domElement);
                  props = rawProps;
                  break;
                case "input":
                  initWrapperState(domElement, rawProps);
                  props = getHostProps(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
                case "option":
                  validateProps(domElement, rawProps);
                  props = getHostProps$1(domElement, rawProps);
                  break;
                case "select":
                  initWrapperState$1(domElement, rawProps);
                  props = getHostProps$2(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
                case "textarea":
                  initWrapperState$2(domElement, rawProps);
                  props = getHostProps$3(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
                default:
                  props = rawProps;
              }

              assertValidProps(tag, props, getStack);

              setInitialDOMProperties(
                tag,
                domElement,
                rootContainerElement,
                props,
                isCustomComponentTag
              );

              switch (tag) {
                case "input":
                  // TODO: Make sure we check if this is still unmounted or do any clean
                  // up necessary since we never stop tracking anymore.
                  track(domElement);
                  postMountWrapper(domElement, rawProps);
                  break;
                case "textarea":
                  // TODO: Make sure we check if this is still unmounted or do any clean
                  // up necessary since we never stop tracking anymore.
                  track(domElement);
                  postMountWrapper$3(domElement, rawProps);
                  break;
                case "option":
                  postMountWrapper$1(domElement, rawProps);
                  break;
                case "select":
                  postMountWrapper$2(domElement, rawProps);
                  break;
                default:
                  if (typeof props.onClick === "function") {
                    // TODO: This cast may not be sound for SVG, MathML or custom elements.
                    trapClickOnNonInteractiveElement(domElement);
                  }
                  break;
              }
            }

            // Calculate the diff between the two objects.
            function diffProperties$1(
              domElement,
              tag,
              lastRawProps,
              nextRawProps,
              rootContainerElement
            ) {
              {
                validatePropertiesInDevelopment(tag, nextRawProps);
              }

              var updatePayload = null;

              var lastProps;
              var nextProps;
              switch (tag) {
                case "input":
                  lastProps = getHostProps(domElement, lastRawProps);
                  nextProps = getHostProps(domElement, nextRawProps);
                  updatePayload = [];
                  break;
                case "option":
                  lastProps = getHostProps$1(domElement, lastRawProps);
                  nextProps = getHostProps$1(domElement, nextRawProps);
                  updatePayload = [];
                  break;
                case "select":
                  lastProps = getHostProps$2(domElement, lastRawProps);
                  nextProps = getHostProps$2(domElement, nextRawProps);
                  updatePayload = [];
                  break;
                case "textarea":
                  lastProps = getHostProps$3(domElement, lastRawProps);
                  nextProps = getHostProps$3(domElement, nextRawProps);
                  updatePayload = [];
                  break;
                default:
                  lastProps = lastRawProps;
                  nextProps = nextRawProps;
                  if (
                    typeof lastProps.onClick !== "function" &&
                    typeof nextProps.onClick === "function"
                  ) {
                    // TODO: This cast may not be sound for SVG, MathML or custom elements.
                    trapClickOnNonInteractiveElement(domElement);
                  }
                  break;
              }

              assertValidProps(tag, nextProps, getStack);

              var propKey;
              var styleName;
              var styleUpdates = null;
              for (propKey in lastProps) {
                if (
                  nextProps.hasOwnProperty(propKey) ||
                  !lastProps.hasOwnProperty(propKey) ||
                  lastProps[propKey] == null
                ) {
                  continue;
                }
                if (propKey === STYLE) {
                  var lastStyle = lastProps[propKey];
                  for (styleName in lastStyle) {
                    if (lastStyle.hasOwnProperty(styleName)) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = "";
                    }
                  }
                } else if (
                  propKey === DANGEROUSLY_SET_INNER_HTML ||
                  propKey === CHILDREN
                ) {
                  // Noop. This is handled by the clear text mechanism.
                } else if (
                  propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                  propKey === SUPPRESS_HYDRATION_WARNING$1
                ) {
                  // Noop
                } else if (propKey === AUTOFOCUS) {
                  // Noop. It doesn't work on updates anyway.
                } else if (registrationNameModules.hasOwnProperty(propKey)) {
                  // This is a special case. If any listener updates we need to ensure
                  // that the "current" fiber pointer gets updated so we need a commit
                  // to update this element.
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                } else {
                  // For all other deleted properties we add it to the queue. We use
                  // the whitelist in the commit phase instead.
                  (updatePayload = updatePayload || []).push(propKey, null);
                }
              }
              for (propKey in nextProps) {
                var nextProp = nextProps[propKey];
                var lastProp =
                  lastProps != null ? lastProps[propKey] : undefined;
                if (
                  !nextProps.hasOwnProperty(propKey) ||
                  nextProp === lastProp ||
                  (nextProp == null && lastProp == null)
                ) {
                  continue;
                }
                if (propKey === STYLE) {
                  {
                    if (nextProp) {
                      // Freeze the next style object so that we can assume it won't be
                      // mutated. We have already warned for this in the past.
                      Object.freeze(nextProp);
                    }
                  }
                  if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for (styleName in lastProp) {
                      if (
                        lastProp.hasOwnProperty(styleName) &&
                        (!nextProp || !nextProp.hasOwnProperty(styleName))
                      ) {
                        if (!styleUpdates) {
                          styleUpdates = {};
                        }
                        styleUpdates[styleName] = "";
                      }
                    }
                    // Update styles that changed since `lastProp`.
                    for (styleName in nextProp) {
                      if (
                        nextProp.hasOwnProperty(styleName) &&
                        lastProp[styleName] !== nextProp[styleName]
                      ) {
                        if (!styleUpdates) {
                          styleUpdates = {};
                        }
                        styleUpdates[styleName] = nextProp[styleName];
                      }
                    }
                  } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                      if (!updatePayload) {
                        updatePayload = [];
                      }
                      updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                  }
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var nextHtml = nextProp ? nextProp[HTML] : undefined;
                  var lastHtml = lastProp ? lastProp[HTML] : undefined;
                  if (nextHtml != null) {
                    if (lastHtml !== nextHtml) {
                      (updatePayload = updatePayload || []).push(
                        propKey,
                        "" + nextHtml
                      );
                    }
                  } else {
                    // TODO: It might be too late to clear this if we have children
                    // inserted already.
                  }
                } else if (propKey === CHILDREN) {
                  if (
                    lastProp !== nextProp &&
                    (typeof nextProp === "string" ||
                      typeof nextProp === "number")
                  ) {
                    (updatePayload = updatePayload || []).push(
                      propKey,
                      "" + nextProp
                    );
                  }
                } else if (
                  propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                  propKey === SUPPRESS_HYDRATION_WARNING$1
                ) {
                  // Noop
                } else if (registrationNameModules.hasOwnProperty(propKey)) {
                  if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (true && typeof nextProp !== "function") {
                      warnForInvalidEventListener(propKey, nextProp);
                    }
                    ensureListeningTo(rootContainerElement, propKey);
                  }
                  if (!updatePayload && lastProp !== nextProp) {
                    // This is a special case. If any listener updates we need to ensure
                    // that the "current" props pointer gets updated so we need a commit
                    // to update this element.
                    updatePayload = [];
                  }
                } else {
                  // For any other property we always add it to the queue and then we
                  // filter it out using the whitelist during the commit.
                  (updatePayload = updatePayload || []).push(propKey, nextProp);
                }
              }
              if (styleUpdates) {
                (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
              }
              return updatePayload;
            }

            // Apply the diff.
            function updateProperties$1(
              domElement,
              updatePayload,
              tag,
              lastRawProps,
              nextRawProps
            ) {
              // Update checked *before* name.
              // In the middle of an update, it is possible to have multiple checked.
              // When a checked radio tries to change name, browser makes another radio's checked false.
              if (
                tag === "input" &&
                nextRawProps.type === "radio" &&
                nextRawProps.name != null
              ) {
                updateChecked(domElement, nextRawProps);
              }

              var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
              var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
              // Apply the diff.
              updateDOMProperties(
                domElement,
                updatePayload,
                wasCustomComponentTag,
                isCustomComponentTag
              );

              // TODO: Ensure that an update gets scheduled if any of the special props
              // changed.
              switch (tag) {
                case "input":
                  // Update the wrapper around inputs *after* updating props. This has to
                  // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                  // raise warnings and prevent the new value from being assigned.
                  updateWrapper(domElement, nextRawProps);
                  break;
                case "textarea":
                  updateWrapper$1(domElement, nextRawProps);
                  break;
                case "select":
                  // <select> value update needs to occur after <option> children
                  // reconciliation
                  postUpdateWrapper(domElement, nextRawProps);
                  break;
              }
            }

            function diffHydratedProperties$1(
              domElement,
              tag,
              rawProps,
              parentNamespace,
              rootContainerElement
            ) {
              {
                var suppressHydrationWarning =
                  rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
                var isCustomComponentTag = isCustomComponent(tag, rawProps);
                validatePropertiesInDevelopment(tag, rawProps);
                if (
                  isCustomComponentTag &&
                  !didWarnShadyDOM &&
                  domElement.shadyRoot
                ) {
                  warning(
                    false,
                    "%s is using shady DOM. Using shady DOM with React can " +
                      "cause things to break subtly.",
                    getCurrentFiberOwnerName$1() || "A component"
                  );
                  didWarnShadyDOM = true;
                }
              }

              // TODO: Make sure that we check isMounted before firing any of these events.
              switch (tag) {
                case "iframe":
                case "object":
                  trapBubbledEvent("topLoad", "load", domElement);
                  break;
                case "video":
                case "audio":
                  // Create listener for each media event
                  for (var event in mediaEvents) {
                    if (mediaEvents.hasOwnProperty(event)) {
                      trapBubbledEvent(event, mediaEvents[event], domElement);
                    }
                  }
                  break;
                case "source":
                  trapBubbledEvent("topError", "error", domElement);
                  break;
                case "img":
                case "image":
                  trapBubbledEvent("topError", "error", domElement);
                  trapBubbledEvent("topLoad", "load", domElement);
                  break;
                case "form":
                  trapBubbledEvent("topReset", "reset", domElement);
                  trapBubbledEvent("topSubmit", "submit", domElement);
                  break;
                case "details":
                  trapBubbledEvent("topToggle", "toggle", domElement);
                  break;
                case "input":
                  initWrapperState(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
                case "option":
                  validateProps(domElement, rawProps);
                  break;
                case "select":
                  initWrapperState$1(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
                case "textarea":
                  initWrapperState$2(domElement, rawProps);
                  trapBubbledEvent("topInvalid", "invalid", domElement);
                  // For controlled components we always need to ensure we're listening
                  // to onChange. Even if there is no listener.
                  ensureListeningTo(rootContainerElement, "onChange");
                  break;
              }

              assertValidProps(tag, rawProps, getStack);

              {
                var extraAttributeNames = new Set();
                var attributes = domElement.attributes;
                for (var i = 0; i < attributes.length; i++) {
                  var name = attributes[i].name.toLowerCase();
                  switch (name) {
                    // Built-in SSR attribute is whitelisted
                    case "data-reactroot":
                      break;
                    // Controlled attributes are not validated
                    // TODO: Only ignore them on controlled tags.
                    case "value":
                      break;
                    case "checked":
                      break;
                    case "selected":
                      break;
                    default:
                      // Intentionally use the original name.
                      // See discussion in https://github.com/facebook/react/pull/10676.
                      extraAttributeNames.add(attributes[i].name);
                  }
                }
              }

              var updatePayload = null;
              for (var propKey in rawProps) {
                if (!rawProps.hasOwnProperty(propKey)) {
                  continue;
                }
                var nextProp = rawProps[propKey];
                if (propKey === CHILDREN) {
                  // For text content children we compare against textContent. This
                  // might match additional HTML that is hidden when we read it using
                  // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                  // satisfies our requirement. Our requirement is not to produce perfect
                  // HTML and attributes. Ideally we should preserve structure but it's
                  // ok not to if the visible content is still enough to indicate what
                  // even listeners these nodes might be wired up to.
                  // TODO: Warn if there is more than a single textNode as a child.
                  // TODO: Should we use domElement.firstChild.nodeValue to compare?
                  if (typeof nextProp === "string") {
                    if (domElement.textContent !== nextProp) {
                      if (true && !suppressHydrationWarning) {
                        warnForTextDifference(domElement.textContent, nextProp);
                      }
                      updatePayload = [CHILDREN, nextProp];
                    }
                  } else if (typeof nextProp === "number") {
                    if (domElement.textContent !== "" + nextProp) {
                      if (true && !suppressHydrationWarning) {
                        warnForTextDifference(domElement.textContent, nextProp);
                      }
                      updatePayload = [CHILDREN, "" + nextProp];
                    }
                  }
                } else if (registrationNameModules.hasOwnProperty(propKey)) {
                  if (nextProp != null) {
                    if (true && typeof nextProp !== "function") {
                      warnForInvalidEventListener(propKey, nextProp);
                    }
                    ensureListeningTo(rootContainerElement, propKey);
                  }
                } else {
                  // Validate that the properties correspond to their expected values.
                  var serverValue;
                  var propertyInfo;
                  if (suppressHydrationWarning) {
                    // Don't bother comparing. We're ignoring all these warnings.
                  } else if (
                    propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                    propKey === SUPPRESS_HYDRATION_WARNING$1 ||
                    // Controlled attributes are not validated
                    // TODO: Only ignore them on controlled tags.
                    propKey === "value" ||
                    propKey === "checked" ||
                    propKey === "selected"
                  ) {
                    // Noop
                  } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var rawHtml = nextProp ? nextProp[HTML] || "" : "";
                    var serverHTML = domElement.innerHTML;
                    var expectedHTML = normalizeHTML(domElement, rawHtml);
                    if (expectedHTML !== serverHTML) {
                      warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                  } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames["delete"](propKey);
                    var expectedStyle = createDangerousStringForStyles(
                      nextProp
                    );
                    serverValue = domElement.getAttribute("style");
                    if (expectedStyle !== serverValue) {
                      warnForPropDifference(
                        propKey,
                        serverValue,
                        expectedStyle
                      );
                    }
                  } else if (isCustomComponentTag) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames["delete"](propKey.toLowerCase());
                    serverValue = getValueForAttribute(
                      domElement,
                      propKey,
                      nextProp
                    );

                    if (nextProp !== serverValue) {
                      warnForPropDifference(propKey, serverValue, nextProp);
                    }
                  } else if (shouldSetAttribute(propKey, nextProp)) {
                    if ((propertyInfo = getPropertyInfo(propKey))) {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames["delete"](propertyInfo.attributeName);
                      serverValue = getValueForProperty(
                        domElement,
                        propKey,
                        nextProp
                      );
                    } else {
                      var ownNamespace = parentNamespace;
                      if (ownNamespace === HTML_NAMESPACE) {
                        ownNamespace = getIntrinsicNamespace(tag);
                      }
                      if (ownNamespace === HTML_NAMESPACE) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames["delete"](propKey.toLowerCase());
                      } else {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames["delete"](propKey);
                      }
                      serverValue = getValueForAttribute(
                        domElement,
                        propKey,
                        nextProp
                      );
                    }

                    if (nextProp !== serverValue) {
                      warnForPropDifference(propKey, serverValue, nextProp);
                    }
                  }
                }
              }

              {
                // $FlowFixMe - Should be inferred as not undefined.
                if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  warnForExtraAttributes(extraAttributeNames);
                }
              }

              switch (tag) {
                case "input":
                  // TODO: Make sure we check if this is still unmounted or do any clean
                  // up necessary since we never stop tracking anymore.
                  track(domElement);
                  postMountWrapper(domElement, rawProps);
                  break;
                case "textarea":
                  // TODO: Make sure we check if this is still unmounted or do any clean
                  // up necessary since we never stop tracking anymore.
                  track(domElement);
                  postMountWrapper$3(domElement, rawProps);
                  break;
                case "select":
                case "option":
                  // For input and textarea we current always set the value property at
                  // post mount to force it to diverge from attributes. However, for
                  // option and select we don't quite do the same thing and select
                  // is not resilient to the DOM state changing so we don't do that here.
                  // TODO: Consider not doing this for input and textarea.
                  break;
                default:
                  if (typeof rawProps.onClick === "function") {
                    // TODO: This cast may not be sound for SVG, MathML or custom elements.
                    trapClickOnNonInteractiveElement(domElement);
                  }
                  break;
              }

              return updatePayload;
            }

            function diffHydratedText$1(textNode, text) {
              var isDifferent = textNode.nodeValue !== text;
              return isDifferent;
            }

            function warnForUnmatchedText$1(textNode, text) {
              {
                warnForTextDifference(textNode.nodeValue, text);
              }
            }

            function warnForDeletedHydratableElement$1(parentNode, child) {
              {
                if (didWarnInvalidHydration) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  "Did not expect server HTML to contain a <%s> in <%s>.",
                  child.nodeName.toLowerCase(),
                  parentNode.nodeName.toLowerCase()
                );
              }
            }

            function warnForDeletedHydratableText$1(parentNode, child) {
              {
                if (didWarnInvalidHydration) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  'Did not expect server HTML to contain the text node "%s" in <%s>.',
                  child.nodeValue,
                  parentNode.nodeName.toLowerCase()
                );
              }
            }

            function warnForInsertedHydratedElement$1(parentNode, tag, props) {
              {
                if (didWarnInvalidHydration) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  "Expected server HTML to contain a matching <%s> in <%s>.",
                  tag,
                  parentNode.nodeName.toLowerCase()
                );
              }
            }

            function warnForInsertedHydratedText$1(parentNode, text) {
              {
                if (text === "") {
                  // We expect to insert empty text nodes since they're not represented in
                  // the HTML.
                  // TODO: Remove this special case if we can just avoid inserting empty
                  // text nodes.
                  return;
                }
                if (didWarnInvalidHydration) {
                  return;
                }
                didWarnInvalidHydration = true;
                warning(
                  false,
                  'Expected server HTML to contain a matching text node for "%s" in <%s>.',
                  text,
                  parentNode.nodeName.toLowerCase()
                );
              }
            }

            function restoreControlledState(domElement, tag, props) {
              switch (tag) {
                case "input":
                  restoreControlledState$1(domElement, props);
                  return;
                case "textarea":
                  restoreControlledState$3(domElement, props);
                  return;
                case "select":
                  restoreControlledState$2(domElement, props);
                  return;
              }
            }

            var ReactDOMFiberComponent = Object.freeze({
              createElement: createElement$1,
              createTextNode: createTextNode$1,
              setInitialProperties: setInitialProperties$1,
              diffProperties: diffProperties$1,
              updateProperties: updateProperties$1,
              diffHydratedProperties: diffHydratedProperties$1,
              diffHydratedText: diffHydratedText$1,
              warnForUnmatchedText: warnForUnmatchedText$1,
              warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
              warnForDeletedHydratableText: warnForDeletedHydratableText$1,
              warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
              warnForInsertedHydratedText: warnForInsertedHydratedText$1,
              restoreControlledState: restoreControlledState
            });

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var getCurrentFiberStackAddendum$6 =
              ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

            var validateDOMNesting = emptyFunction;

            {
              // This validation code was written based on the HTML5 parsing spec:
              // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
              //
              // Note: this does not catch all invalid nesting, nor does it try to (as it's
              // not clear what practical benefit doing so provides); instead, we warn only
              // for cases where the parser will give a parse tree differing from what React
              // intended. For example, <b><div></div></b> is invalid but we don't warn
              // because it still parses correctly; we do warn for other cases like nested
              // <p> tags where the beginning of the second element implicitly closes the
              // first, causing a confusing mess.

              // https://html.spec.whatwg.org/multipage/syntax.html#special
              var specialTags = [
                "address",
                "applet",
                "area",
                "article",
                "aside",
                "base",
                "basefont",
                "bgsound",
                "blockquote",
                "body",
                "br",
                "button",
                "caption",
                "center",
                "col",
                "colgroup",
                "dd",
                "details",
                "dir",
                "div",
                "dl",
                "dt",
                "embed",
                "fieldset",
                "figcaption",
                "figure",
                "footer",
                "form",
                "frame",
                "frameset",
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "head",
                "header",
                "hgroup",
                "hr",
                "html",
                "iframe",
                "img",
                "input",
                "isindex",
                "li",
                "link",
                "listing",
                "main",
                "marquee",
                "menu",
                "menuitem",
                "meta",
                "nav",
                "noembed",
                "noframes",
                "noscript",
                "object",
                "ol",
                "p",
                "param",
                "plaintext",
                "pre",
                "script",
                "section",
                "select",
                "source",
                "style",
                "summary",
                "table",
                "tbody",
                "td",
                "template",
                "textarea",
                "tfoot",
                "th",
                "thead",
                "title",
                "tr",
                "track",
                "ul",
                "wbr",
                "xmp"
              ];

              // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
              var inScopeTags = [
                "applet",
                "caption",
                "html",
                "table",
                "td",
                "th",
                "marquee",
                "object",
                "template",

                // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
                // TODO: Distinguish by namespace here -- for <title>, including it here
                // errs on the side of fewer warnings
                "foreignObject",
                "desc",
                "title"
              ];

              // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
              var buttonScopeTags = inScopeTags.concat(["button"]);

              // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
              var impliedEndTags = [
                "dd",
                "dt",
                "li",
                "option",
                "optgroup",
                "p",
                "rp",
                "rt"
              ];

              var emptyAncestorInfo = {
                current: null,

                formTag: null,
                aTagInScope: null,
                buttonTagInScope: null,
                nobrTagInScope: null,
                pTagInButtonScope: null,

                listItemTagAutoclosing: null,
                dlItemTagAutoclosing: null
              };

              var updatedAncestorInfo$1 = function(oldInfo, tag, instance) {
                var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
                var info = { tag: tag, instance: instance };

                if (inScopeTags.indexOf(tag) !== -1) {
                  ancestorInfo.aTagInScope = null;
                  ancestorInfo.buttonTagInScope = null;
                  ancestorInfo.nobrTagInScope = null;
                }
                if (buttonScopeTags.indexOf(tag) !== -1) {
                  ancestorInfo.pTagInButtonScope = null;
                }

                // See rules for 'li', 'dd', 'dt' start tags in
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
                if (
                  specialTags.indexOf(tag) !== -1 &&
                  tag !== "address" &&
                  tag !== "div" &&
                  tag !== "p"
                ) {
                  ancestorInfo.listItemTagAutoclosing = null;
                  ancestorInfo.dlItemTagAutoclosing = null;
                }

                ancestorInfo.current = info;

                if (tag === "form") {
                  ancestorInfo.formTag = info;
                }
                if (tag === "a") {
                  ancestorInfo.aTagInScope = info;
                }
                if (tag === "button") {
                  ancestorInfo.buttonTagInScope = info;
                }
                if (tag === "nobr") {
                  ancestorInfo.nobrTagInScope = info;
                }
                if (tag === "p") {
                  ancestorInfo.pTagInButtonScope = info;
                }
                if (tag === "li") {
                  ancestorInfo.listItemTagAutoclosing = info;
                }
                if (tag === "dd" || tag === "dt") {
                  ancestorInfo.dlItemTagAutoclosing = info;
                }

                return ancestorInfo;
              };

              /**
               * Returns whether
               */
              var isTagValidWithParent = function(tag, parentTag) {
                // First, let's check if we're in an unusual parsing mode...
                switch (parentTag) {
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
                  case "select":
                    return (
                      tag === "option" || tag === "optgroup" || tag === "#text"
                    );
                  case "optgroup":
                    return tag === "option" || tag === "#text";
                  // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
                  // but
                  case "option":
                    return tag === "#text";
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
                  // No special behavior since these rules fall back to "in body" mode for
                  // all except special table nodes which cause bad parsing behavior anyway.

                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
                  case "tr":
                    return (
                      tag === "th" ||
                      tag === "td" ||
                      tag === "style" ||
                      tag === "script" ||
                      tag === "template"
                    );
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
                  case "tbody":
                  case "thead":
                  case "tfoot":
                    return (
                      tag === "tr" ||
                      tag === "style" ||
                      tag === "script" ||
                      tag === "template"
                    );
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
                  case "colgroup":
                    return tag === "col" || tag === "template";
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
                  case "table":
                    return (
                      tag === "caption" ||
                      tag === "colgroup" ||
                      tag === "tbody" ||
                      tag === "tfoot" ||
                      tag === "thead" ||
                      tag === "style" ||
                      tag === "script" ||
                      tag === "template"
                    );
                  // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
                  case "head":
                    return (
                      tag === "base" ||
                      tag === "basefont" ||
                      tag === "bgsound" ||
                      tag === "link" ||
                      tag === "meta" ||
                      tag === "title" ||
                      tag === "noscript" ||
                      tag === "noframes" ||
                      tag === "style" ||
                      tag === "script" ||
                      tag === "template"
                    );
                  // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
                  case "html":
                    return tag === "head" || tag === "body";
                  case "#document":
                    return tag === "html";
                }

                // Probably in the "in body" parsing mode, so we outlaw only tag combos
                // where the parsing rules cause implicit opens or closes to be added.
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
                switch (tag) {
                  case "h1":
                  case "h2":
                  case "h3":
                  case "h4":
                  case "h5":
                  case "h6":
                    return (
                      parentTag !== "h1" &&
                      parentTag !== "h2" &&
                      parentTag !== "h3" &&
                      parentTag !== "h4" &&
                      parentTag !== "h5" &&
                      parentTag !== "h6"
                    );

                  case "rp":
                  case "rt":
                    return impliedEndTags.indexOf(parentTag) === -1;

                  case "body":
                  case "caption":
                  case "col":
                  case "colgroup":
                  case "frame":
                  case "head":
                  case "html":
                  case "tbody":
                  case "td":
                  case "tfoot":
                  case "th":
                  case "thead":
                  case "tr":
                    // These tags are only valid with a few parents that have special child
                    // parsing rules -- if we're down here, then none of those matched and
                    // so we allow it only if we don't know what the parent is, as all other
                    // cases are invalid.
                    return parentTag == null;
                }

                return true;
              };

              /**
               * Returns whether
               */
              var findInvalidAncestorForTag = function(tag, ancestorInfo) {
                switch (tag) {
                  case "address":
                  case "article":
                  case "aside":
                  case "blockquote":
                  case "center":
                  case "details":
                  case "dialog":
                  case "dir":
                  case "div":
                  case "dl":
                  case "fieldset":
                  case "figcaption":
                  case "figure":
                  case "footer":
                  case "header":
                  case "hgroup":
                  case "main":
                  case "menu":
                  case "nav":
                  case "ol":
                  case "p":
                  case "section":
                  case "summary":
                  case "ul":
                  case "pre":
                  case "listing":
                  case "table":
                  case "hr":
                  case "xmp":
                  case "h1":
                  case "h2":
                  case "h3":
                  case "h4":
                  case "h5":
                  case "h6":
                    return ancestorInfo.pTagInButtonScope;

                  case "form":
                    return (
                      ancestorInfo.formTag || ancestorInfo.pTagInButtonScope
                    );

                  case "li":
                    return ancestorInfo.listItemTagAutoclosing;

                  case "dd":
                  case "dt":
                    return ancestorInfo.dlItemTagAutoclosing;

                  case "button":
                    return ancestorInfo.buttonTagInScope;

                  case "a":
                    // Spec says something about storing a list of markers, but it sounds
                    // equivalent to this check.
                    return ancestorInfo.aTagInScope;

                  case "nobr":
                    return ancestorInfo.nobrTagInScope;
                }

                return null;
              };

              var didWarn = {};

              validateDOMNesting = function(childTag, childText, ancestorInfo) {
                ancestorInfo = ancestorInfo || emptyAncestorInfo;
                var parentInfo = ancestorInfo.current;
                var parentTag = parentInfo && parentInfo.tag;

                if (childText != null) {
                  warning(
                    childTag == null,
                    "validateDOMNesting: when childText is passed, childTag should be null"
                  );
                  childTag = "#text";
                }

                var invalidParent = isTagValidWithParent(childTag, parentTag)
                  ? null
                  : parentInfo;
                var invalidAncestor = invalidParent
                  ? null
                  : findInvalidAncestorForTag(childTag, ancestorInfo);
                var invalidParentOrAncestor = invalidParent || invalidAncestor;
                if (!invalidParentOrAncestor) {
                  return;
                }

                var ancestorTag = invalidParentOrAncestor.tag;
                var addendum = getCurrentFiberStackAddendum$6();

                var warnKey =
                  !!invalidParent +
                  "|" +
                  childTag +
                  "|" +
                  ancestorTag +
                  "|" +
                  addendum;
                if (didWarn[warnKey]) {
                  return;
                }
                didWarn[warnKey] = true;

                var tagDisplayName = childTag;
                var whitespaceInfo = "";
                if (childTag === "#text") {
                  if (/\S/.test(childText)) {
                    tagDisplayName = "Text nodes";
                  } else {
                    tagDisplayName = "Whitespace text nodes";
                    whitespaceInfo =
                      " Make sure you don't have any extra whitespace between tags on " +
                      "each line of your source code.";
                  }
                } else {
                  tagDisplayName = "<" + childTag + ">";
                }

                if (invalidParent) {
                  var info = "";
                  if (ancestorTag === "table" && childTag === "tr") {
                    info +=
                      " Add a <tbody> to your code to match the DOM tree generated by " +
                      "the browser.";
                  }
                  warning(
                    false,
                    "validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s",
                    tagDisplayName,
                    ancestorTag,
                    whitespaceInfo,
                    info,
                    addendum
                  );
                } else {
                  warning(
                    false,
                    "validateDOMNesting(...): %s cannot appear as a descendant of " +
                      "<%s>.%s",
                    tagDisplayName,
                    ancestorTag,
                    addendum
                  );
                }
              };

              // TODO: turn this into a named export
              validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;

              // For testing
              validateDOMNesting.isTagValidInContext = function(
                tag,
                ancestorInfo
              ) {
                ancestorInfo = ancestorInfo || emptyAncestorInfo;
                var parentInfo = ancestorInfo.current;
                var parentTag = parentInfo && parentInfo.tag;
                return (
                  isTagValidWithParent(tag, parentTag) &&
                  !findInvalidAncestorForTag(tag, ancestorInfo)
                );
              };
            }

            var validateDOMNesting$1 = validateDOMNesting;

            // TODO: direct imports like some-package/src/* are bad. Fix me.
            var createElement = createElement$1;
            var createTextNode = createTextNode$1;
            var setInitialProperties = setInitialProperties$1;
            var diffProperties = diffProperties$1;
            var updateProperties = updateProperties$1;
            var diffHydratedProperties = diffHydratedProperties$1;
            var diffHydratedText = diffHydratedText$1;
            var warnForUnmatchedText = warnForUnmatchedText$1;
            var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
            var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
            var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
            var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
            var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
            var precacheFiberNode = precacheFiberNode$1;
            var updateFiberProps = updateFiberProps$1;

            {
              var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
              if (
                typeof Map !== "function" ||
                Map.prototype == null ||
                typeof Map.prototype.forEach !== "function" ||
                typeof Set !== "function" ||
                Set.prototype == null ||
                typeof Set.prototype.clear !== "function" ||
                typeof Set.prototype.forEach !== "function"
              ) {
                warning(
                  false,
                  "React depends on Map and Set built-in types. Make sure that you load a " +
                    "polyfill in older browsers. http://fb.me/react-polyfills"
                );
              }
            }

            injection$3.injectFiberControlledHostComponent(
              ReactDOMFiberComponent
            );

            var eventsEnabled = null;
            var selectionInformation = null;

            /**
             * True if the supplied DOM node is a valid node element.
             *
             * @param {?DOMElement} node The candidate DOM node.
             * @return {boolean} True if the DOM is a valid DOM node.
             * @internal
             */
            function isValidContainer(node) {
              return !!(
                node &&
                (node.nodeType === ELEMENT_NODE ||
                  node.nodeType === DOCUMENT_NODE ||
                  node.nodeType === DOCUMENT_FRAGMENT_NODE ||
                  (node.nodeType === COMMENT_NODE &&
                    node.nodeValue === " react-mount-point-unstable "))
              );
            }

            function getReactRootElementInContainer(container) {
              if (!container) {
                return null;
              }

              if (container.nodeType === DOCUMENT_NODE) {
                return container.documentElement;
              } else {
                return container.firstChild;
              }
            }

            function shouldHydrateDueToLegacyHeuristic(container) {
              var rootElement = getReactRootElementInContainer(container);
              return !!(
                rootElement &&
                rootElement.nodeType === ELEMENT_NODE &&
                rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)
              );
            }

            function shouldAutoFocusHostComponent(type, props) {
              switch (type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  return !!props.autoFocus;
              }
              return false;
            }

            var DOMRenderer = reactReconciler({
              getRootHostContext: function(rootContainerInstance) {
                var type = void 0;
                var namespace = void 0;
                var nodeType = rootContainerInstance.nodeType;
                switch (nodeType) {
                  case DOCUMENT_NODE:
                  case DOCUMENT_FRAGMENT_NODE: {
                    type =
                      nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                    var root = rootContainerInstance.documentElement;
                    namespace = root
                      ? root.namespaceURI
                      : getChildNamespace(null, "");
                    break;
                  }
                  default: {
                    var container =
                      nodeType === COMMENT_NODE
                        ? rootContainerInstance.parentNode
                        : rootContainerInstance;
                    var ownNamespace = container.namespaceURI || null;
                    type = container.tagName;
                    namespace = getChildNamespace(ownNamespace, type);
                    break;
                  }
                }
                {
                  var validatedTag = type.toLowerCase();
                  var _ancestorInfo = updatedAncestorInfo(
                    null,
                    validatedTag,
                    null
                  );
                  return { namespace: namespace, ancestorInfo: _ancestorInfo };
                }
                return namespace;
              },
              getChildHostContext: function(parentHostContext, type) {
                {
                  var parentHostContextDev = parentHostContext;
                  var _namespace = getChildNamespace(
                    parentHostContextDev.namespace,
                    type
                  );
                  var _ancestorInfo2 = updatedAncestorInfo(
                    parentHostContextDev.ancestorInfo,
                    type,
                    null
                  );
                  return {
                    namespace: _namespace,
                    ancestorInfo: _ancestorInfo2
                  };
                }
                var parentNamespace = parentHostContext;
                return getChildNamespace(parentNamespace, type);
              },
              getPublicInstance: function(instance) {
                return instance;
              },
              prepareForCommit: function() {
                eventsEnabled = isEnabled();
                selectionInformation = getSelectionInformation();
                setEnabled(false);
              },
              resetAfterCommit: function() {
                restoreSelection(selectionInformation);
                selectionInformation = null;
                setEnabled(eventsEnabled);
                eventsEnabled = null;
              },
              createInstance: function(
                type,
                props,
                rootContainerInstance,
                hostContext,
                internalInstanceHandle
              ) {
                var parentNamespace = void 0;
                {
                  // TODO: take namespace into account when validating.
                  var hostContextDev = hostContext;
                  validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
                  if (
                    typeof props.children === "string" ||
                    typeof props.children === "number"
                  ) {
                    var string = "" + props.children;
                    var ownAncestorInfo = updatedAncestorInfo(
                      hostContextDev.ancestorInfo,
                      type,
                      null
                    );
                    validateDOMNesting$1(null, string, ownAncestorInfo);
                  }
                  parentNamespace = hostContextDev.namespace;
                }
                var domElement = createElement(
                  type,
                  props,
                  rootContainerInstance,
                  parentNamespace
                );
                precacheFiberNode(internalInstanceHandle, domElement);
                updateFiberProps(domElement, props);
                return domElement;
              },
              appendInitialChild: function(parentInstance, child) {
                parentInstance.appendChild(child);
              },
              finalizeInitialChildren: function(
                domElement,
                type,
                props,
                rootContainerInstance
              ) {
                setInitialProperties(
                  domElement,
                  type,
                  props,
                  rootContainerInstance
                );
                return shouldAutoFocusHostComponent(type, props);
              },
              prepareUpdate: function(
                domElement,
                type,
                oldProps,
                newProps,
                rootContainerInstance,
                hostContext
              ) {
                {
                  var hostContextDev = hostContext;
                  if (
                    typeof newProps.children !== typeof oldProps.children &&
                    (typeof newProps.children === "string" ||
                      typeof newProps.children === "number")
                  ) {
                    var string = "" + newProps.children;
                    var ownAncestorInfo = updatedAncestorInfo(
                      hostContextDev.ancestorInfo,
                      type,
                      null
                    );
                    validateDOMNesting$1(null, string, ownAncestorInfo);
                  }
                }
                return diffProperties(
                  domElement,
                  type,
                  oldProps,
                  newProps,
                  rootContainerInstance
                );
              },
              shouldSetTextContent: function(type, props) {
                return (
                  type === "textarea" ||
                  typeof props.children === "string" ||
                  typeof props.children === "number" ||
                  (typeof props.dangerouslySetInnerHTML === "object" &&
                    props.dangerouslySetInnerHTML !== null &&
                    typeof props.dangerouslySetInnerHTML.__html === "string")
                );
              },
              shouldDeprioritizeSubtree: function(type, props) {
                return !!props.hidden;
              },
              createTextInstance: function(
                text,
                rootContainerInstance,
                hostContext,
                internalInstanceHandle
              ) {
                {
                  var hostContextDev = hostContext;
                  validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
                }
                var textNode = createTextNode(text, rootContainerInstance);
                precacheFiberNode(internalInstanceHandle, textNode);
                return textNode;
              },

              now: now,

              mutation: {
                commitMount: function(
                  domElement,
                  type,
                  newProps,
                  internalInstanceHandle
                ) {
                  domElement.focus();
                },
                commitUpdate: function(
                  domElement,
                  updatePayload,
                  type,
                  oldProps,
                  newProps,
                  internalInstanceHandle
                ) {
                  // Update the props handle so that we know which props are the ones with
                  // with current event handlers.
                  updateFiberProps(domElement, newProps);
                  // Apply the diff to the DOM node.
                  updateProperties(
                    domElement,
                    updatePayload,
                    type,
                    oldProps,
                    newProps
                  );
                },
                resetTextContent: function(domElement) {
                  domElement.textContent = "";
                },
                commitTextUpdate: function(textInstance, oldText, newText) {
                  textInstance.nodeValue = newText;
                },
                appendChild: function(parentInstance, child) {
                  parentInstance.appendChild(child);
                },
                appendChildToContainer: function(container, child) {
                  if (container.nodeType === COMMENT_NODE) {
                    container.parentNode.insertBefore(child, container);
                  } else {
                    container.appendChild(child);
                  }
                },
                insertBefore: function(parentInstance, child, beforeChild) {
                  parentInstance.insertBefore(child, beforeChild);
                },
                insertInContainerBefore: function(
                  container,
                  child,
                  beforeChild
                ) {
                  if (container.nodeType === COMMENT_NODE) {
                    container.parentNode.insertBefore(child, beforeChild);
                  } else {
                    container.insertBefore(child, beforeChild);
                  }
                },
                removeChild: function(parentInstance, child) {
                  parentInstance.removeChild(child);
                },
                removeChildFromContainer: function(container, child) {
                  if (container.nodeType === COMMENT_NODE) {
                    container.parentNode.removeChild(child);
                  } else {
                    container.removeChild(child);
                  }
                }
              },

              hydration: {
                canHydrateInstance: function(instance, type, props) {
                  if (
                    instance.nodeType !== ELEMENT_NODE ||
                    type.toLowerCase() !== instance.nodeName.toLowerCase()
                  ) {
                    return null;
                  }
                  // This has now been refined to an element node.
                  return instance;
                },
                canHydrateTextInstance: function(instance, text) {
                  if (text === "" || instance.nodeType !== TEXT_NODE) {
                    // Empty strings are not parsed by HTML so there won't be a correct match here.
                    return null;
                  }
                  // This has now been refined to a text node.
                  return instance;
                },
                getNextHydratableSibling: function(instance) {
                  var node = instance.nextSibling;
                  // Skip non-hydratable nodes.
                  while (
                    node &&
                    node.nodeType !== ELEMENT_NODE &&
                    node.nodeType !== TEXT_NODE
                  ) {
                    node = node.nextSibling;
                  }
                  return node;
                },
                getFirstHydratableChild: function(parentInstance) {
                  var next = parentInstance.firstChild;
                  // Skip non-hydratable nodes.
                  while (
                    next &&
                    next.nodeType !== ELEMENT_NODE &&
                    next.nodeType !== TEXT_NODE
                  ) {
                    next = next.nextSibling;
                  }
                  return next;
                },
                hydrateInstance: function(
                  instance,
                  type,
                  props,
                  rootContainerInstance,
                  hostContext,
                  internalInstanceHandle
                ) {
                  precacheFiberNode(internalInstanceHandle, instance);
                  // TODO: Possibly defer this until the commit phase where all the events
                  // get attached.
                  updateFiberProps(instance, props);
                  var parentNamespace = void 0;
                  {
                    var hostContextDev = hostContext;
                    parentNamespace = hostContextDev.namespace;
                  }
                  return diffHydratedProperties(
                    instance,
                    type,
                    props,
                    parentNamespace,
                    rootContainerInstance
                  );
                },
                hydrateTextInstance: function(
                  textInstance,
                  text,
                  internalInstanceHandle
                ) {
                  precacheFiberNode(internalInstanceHandle, textInstance);
                  return diffHydratedText(textInstance, text);
                },
                didNotMatchHydratedContainerTextInstance: function(
                  parentContainer,
                  textInstance,
                  text
                ) {
                  {
                    warnForUnmatchedText(textInstance, text);
                  }
                },
                didNotMatchHydratedTextInstance: function(
                  parentType,
                  parentProps,
                  parentInstance,
                  textInstance,
                  text
                ) {
                  if (
                    true &&
                    parentProps[SUPPRESS_HYDRATION_WARNING] !== true
                  ) {
                    warnForUnmatchedText(textInstance, text);
                  }
                },
                didNotHydrateContainerInstance: function(
                  parentContainer,
                  instance
                ) {
                  {
                    if (instance.nodeType === 1) {
                      warnForDeletedHydratableElement(
                        parentContainer,
                        instance
                      );
                    } else {
                      warnForDeletedHydratableText(parentContainer, instance);
                    }
                  }
                },
                didNotHydrateInstance: function(
                  parentType,
                  parentProps,
                  parentInstance,
                  instance
                ) {
                  if (
                    true &&
                    parentProps[SUPPRESS_HYDRATION_WARNING] !== true
                  ) {
                    if (instance.nodeType === 1) {
                      warnForDeletedHydratableElement(parentInstance, instance);
                    } else {
                      warnForDeletedHydratableText(parentInstance, instance);
                    }
                  }
                },
                didNotFindHydratableContainerInstance: function(
                  parentContainer,
                  type,
                  props
                ) {
                  {
                    warnForInsertedHydratedElement(
                      parentContainer,
                      type,
                      props
                    );
                  }
                },
                didNotFindHydratableContainerTextInstance: function(
                  parentContainer,
                  text
                ) {
                  {
                    warnForInsertedHydratedText(parentContainer, text);
                  }
                },
                didNotFindHydratableInstance: function(
                  parentType,
                  parentProps,
                  parentInstance,
                  type,
                  props
                ) {
                  if (
                    true &&
                    parentProps[SUPPRESS_HYDRATION_WARNING] !== true
                  ) {
                    warnForInsertedHydratedElement(parentInstance, type, props);
                  }
                },
                didNotFindHydratableTextInstance: function(
                  parentType,
                  parentProps,
                  parentInstance,
                  text
                ) {
                  if (
                    true &&
                    parentProps[SUPPRESS_HYDRATION_WARNING] !== true
                  ) {
                    warnForInsertedHydratedText(parentInstance, text);
                  }
                }
              },

              scheduleDeferredCallback: rIC,
              cancelDeferredCallback: cIC,

              useSyncScheduling: !enableAsyncSchedulingByDefaultInReactDOM
            });

            injection$4.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

            var warnedAboutHydrateAPI = false;

            function renderSubtreeIntoContainer(
              parentComponent,
              children,
              container,
              forceHydrate,
              callback
            ) {
              !isValidContainer(container)
                ? invariant(false, "Target container is not a DOM element.")
                : void 0;

              {
                if (
                  container._reactRootContainer &&
                  container.nodeType !== COMMENT_NODE
                ) {
                  var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(
                    container._reactRootContainer.current
                  );
                  if (hostInstance) {
                    warning(
                      hostInstance.parentNode === container,
                      "render(...): It looks like the React-rendered content of this " +
                        "container was removed without using React. This is not " +
                        "supported and will cause errors. Instead, call " +
                        "ReactDOM.unmountComponentAtNode to empty a container."
                    );
                  }
                }

                var isRootRenderedBySomeReact = !!container._reactRootContainer;
                var rootEl = getReactRootElementInContainer(container);
                var hasNonRootReactChild = !!(
                  rootEl && getInstanceFromNode$1(rootEl)
                );

                warning(
                  !hasNonRootReactChild || isRootRenderedBySomeReact,
                  "render(...): Replacing React-rendered children with a new root " +
                    "component. If you intended to update the children of this node, " +
                    "you should instead have the existing children update their state " +
                    "and render the new components instead of calling ReactDOM.render."
                );

                warning(
                  container.nodeType !== ELEMENT_NODE ||
                    !container.tagName ||
                    container.tagName.toUpperCase() !== "BODY",
                  "render(): Rendering components directly into document.body is " +
                    "discouraged, since its children are often manipulated by third-party " +
                    "scripts and browser extensions. This may lead to subtle " +
                    "reconciliation issues. Try rendering into a container element created " +
                    "for your app."
                );
              }

              var root = container._reactRootContainer;
              if (!root) {
                var shouldHydrate =
                  forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
                // First clear any existing content.
                if (!shouldHydrate) {
                  var warned = false;
                  var rootSibling = void 0;
                  while ((rootSibling = container.lastChild)) {
                    {
                      if (
                        !warned &&
                        rootSibling.nodeType === ELEMENT_NODE &&
                        rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)
                      ) {
                        warned = true;
                        warning(
                          false,
                          "render(): Target node has markup rendered by React, but there " +
                            "are unrelated nodes as well. This is most commonly caused by " +
                            "white-space inserted around server-rendered markup."
                        );
                      }
                    }
                    container.removeChild(rootSibling);
                  }
                }
                {
                  if (
                    shouldHydrate &&
                    !forceHydrate &&
                    !warnedAboutHydrateAPI
                  ) {
                    warnedAboutHydrateAPI = true;
                    lowPriorityWarning$1(
                      false,
                      "render(): Calling ReactDOM.render() to hydrate server-rendered markup " +
                        "will stop working in React v17. Replace the ReactDOM.render() call " +
                        "with ReactDOM.hydrate() if you want React to attach to the server HTML."
                    );
                  }
                }
                var newRoot = DOMRenderer.createContainer(
                  container,
                  shouldHydrate
                );
                root = container._reactRootContainer = newRoot;
                // Initial mount should not be batched.
                DOMRenderer.unbatchedUpdates(function() {
                  DOMRenderer.updateContainer(
                    children,
                    newRoot,
                    parentComponent,
                    callback
                  );
                });
              } else {
                DOMRenderer.updateContainer(
                  children,
                  root,
                  parentComponent,
                  callback
                );
              }
              return DOMRenderer.getPublicRootInstance(root);
            }

            function createPortal(children, container) {
              var key =
                arguments.length > 2 && arguments[2] !== undefined
                  ? arguments[2]
                  : null;

              !isValidContainer(container)
                ? invariant(false, "Target container is not a DOM element.")
                : void 0;
              // TODO: pass ReactDOM portal implementation as third argument
              return createPortal$1(children, container, null, key);
            }

            function ReactRoot(container, hydrate) {
              var root = DOMRenderer.createContainer(container, hydrate);
              this._reactRootContainer = root;
            }
            ReactRoot.prototype.render = function(children, callback) {
              var root = this._reactRootContainer;
              DOMRenderer.updateContainer(children, root, null, callback);
            };
            ReactRoot.prototype.unmount = function(callback) {
              var root = this._reactRootContainer;
              DOMRenderer.updateContainer(null, root, null, callback);
            };

            var ReactDOM = {
              createPortal: createPortal,

              findDOMNode: function(componentOrElement) {
                {
                  var owner = ReactCurrentOwner.current;
                  if (owner !== null) {
                    var warnedAboutRefsInRender =
                      owner.stateNode._warnedAboutRefsInRender;
                    warning(
                      warnedAboutRefsInRender,
                      "%s is accessing findDOMNode inside its render(). " +
                        "render() should be a pure function of props and state. It should " +
                        "never access something that requires stale data from the previous " +
                        "render, such as refs. Move this logic to componentDidMount and " +
                        "componentDidUpdate instead.",
                      getComponentName(owner) || "A component"
                    );
                    owner.stateNode._warnedAboutRefsInRender = true;
                  }
                }
                if (componentOrElement == null) {
                  return null;
                }
                if (componentOrElement.nodeType === ELEMENT_NODE) {
                  return componentOrElement;
                }

                var inst = get(componentOrElement);
                if (inst) {
                  return DOMRenderer.findHostInstance(inst);
                }

                if (typeof componentOrElement.render === "function") {
                  invariant(
                    false,
                    "Unable to find node on an unmounted component."
                  );
                } else {
                  invariant(
                    false,
                    "Element appears to be neither ReactComponent nor DOMNode. Keys: %s",
                    Object.keys(componentOrElement)
                  );
                }
              },
              hydrate: function(element, container, callback) {
                // TODO: throw or warn if we couldn't hydrate?
                return renderSubtreeIntoContainer(
                  null,
                  element,
                  container,
                  true,
                  callback
                );
              },
              render: function(element, container, callback) {
                return renderSubtreeIntoContainer(
                  null,
                  element,
                  container,
                  false,
                  callback
                );
              },
              unstable_renderSubtreeIntoContainer: function(
                parentComponent,
                element,
                containerNode,
                callback
              ) {
                !(parentComponent != null && has(parentComponent))
                  ? invariant(
                      false,
                      "parentComponent must be a valid React Component"
                    )
                  : void 0;
                return renderSubtreeIntoContainer(
                  parentComponent,
                  element,
                  containerNode,
                  false,
                  callback
                );
              },
              unmountComponentAtNode: function(container) {
                !isValidContainer(container)
                  ? invariant(
                      false,
                      "unmountComponentAtNode(...): Target container is not a DOM element."
                    )
                  : void 0;

                if (container._reactRootContainer) {
                  {
                    var rootEl = getReactRootElementInContainer(container);
                    var renderedByDifferentReact =
                      rootEl && !getInstanceFromNode$1(rootEl);
                    warning(
                      !renderedByDifferentReact,
                      "unmountComponentAtNode(): The node you're attempting to unmount " +
                        "was rendered by another copy of React."
                    );
                  }

                  // Unmount should not be batched.
                  DOMRenderer.unbatchedUpdates(function() {
                    renderSubtreeIntoContainer(
                      null,
                      null,
                      container,
                      false,
                      function() {
                        container._reactRootContainer = null;
                      }
                    );
                  });
                  // If you call unmountComponentAtNode twice in quick succession, you'll
                  // get `true` twice. That's probably fine?
                  return true;
                } else {
                  {
                    var _rootEl = getReactRootElementInContainer(container);
                    var hasNonRootReactChild = !!(
                      _rootEl && getInstanceFromNode$1(_rootEl)
                    );

                    // Check if the container itself is a React root node.
                    var isContainerReactRoot =
                      container.nodeType === 1 &&
                      isValidContainer(container.parentNode) &&
                      !!container.parentNode._reactRootContainer;

                    warning(
                      !hasNonRootReactChild,
                      "unmountComponentAtNode(): The node you're attempting to unmount " +
                        "was rendered by React and is not a top-level container. %s",
                      isContainerReactRoot
                        ? "You may have accidentally passed in a React root node instead " +
                          "of its container."
                        : "Instead, have the parent component update its state and " +
                          "rerender in order to remove this component."
                    );
                  }

                  return false;
                }
              },

              // Temporary alias since we already shipped React 16 RC with it.
              // TODO: remove in React 17.
              unstable_createPortal: createPortal,

              unstable_batchedUpdates: batchedUpdates,

              unstable_deferredUpdates: DOMRenderer.deferredUpdates,

              flushSync: DOMRenderer.flushSync,

              __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                // For TapEventPlugin which is popular in open source
                EventPluginHub: EventPluginHub,
                // Used by test-utils
                EventPluginRegistry: EventPluginRegistry,
                EventPropagators: EventPropagators,
                ReactControlledComponent: ReactControlledComponent,
                ReactDOMComponentTree: ReactDOMComponentTree,
                ReactDOMEventListener: ReactDOMEventListener
              }
            };

            if (enableCreateRoot) {
              ReactDOM.createRoot = function createRoot(container, options) {
                var hydrate = options != null && options.hydrate === true;
                return new ReactRoot(container, hydrate);
              };
            }

            var foundDevTools = DOMRenderer.injectIntoDevTools({
              findFiberByHostInstance: getClosestInstanceFromNode,
              bundleType: 1,
              version: ReactVersion,
              rendererPackageName: "react-dom"
            });

            {
              if (
                !foundDevTools &&
                ExecutionEnvironment.canUseDOM &&
                window.top === window.self
              ) {
                // If we're in Chrome or Firefox, provide a download link if not installed.
                if (
                  (navigator.userAgent.indexOf("Chrome") > -1 &&
                    navigator.userAgent.indexOf("Edge") === -1) ||
                  navigator.userAgent.indexOf("Firefox") > -1
                ) {
                  var protocol = window.location.protocol;
                  // Don't warn in exotic cases like chrome-extension://.
                  if (/^(https?|file):$/.test(protocol)) {
                    console.info(
                      "%cDownload the React DevTools " +
                        "for a better development experience: " +
                        "https://fb.me/react-devtools" +
                        (protocol === "file:"
                          ? "\nYou might need to use a local HTTP server (instead of file://): " +
                            "https://fb.me/react-devtools-faq"
                          : ""),
                      "font-weight:bold"
                    );
                  }
                }
              }
            }

            var ReactDOM$2 = Object.freeze({
              default: ReactDOM
            });

            var ReactDOM$3 = (ReactDOM$2 && ReactDOM) || ReactDOM$2;

            // TODO: decide on the top-level export form.
            // This is hacky but makes it work with both Rollup and Jest.
            var reactDom = ReactDOM$3["default"]
              ? ReactDOM$3["default"]
              : ReactDOM$3;

            module.exports = reactDom;
          })();
        }

        /***/
      },

    /***/ "./node_modules/react-dom/index.js":
      /*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
      /*! dynamic exports provided */
      /*! exports used: default */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        function checkDCE() {
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
          if (
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" ||
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function"
          ) {
            return;
          }
          if (true) {
            // This branch is unreachable because this function is only called
            // in production, but the condition is true only in development.
            // Therefore if the branch is still here, dead code elimination wasn't
            // properly applied.
            // Don't change the message. React DevTools relies on it. Also make sure
            // this message doesn't occur elsewhere in this function, or it will cause
            // a false positive.
            throw new Error("^_^");
          }
          try {
            // Verify that the code above has been dead code eliminated (DCE'd).
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
          } catch (err) {
            // DevTools shouldn't crash React, no matter what.
            // We should still report in case we break this code.
            console.error(err);
          }
        }

        if (false) {
          // DCE check should happen before ReactDOM bundle executes so that
          // DevTools can report bad minification during injection.
          checkDCE();
          module.exports = require("./cjs/react-dom.production.min.js");
        } else {
          module.exports = __webpack_require__(
            /*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js"
          );
        }

        /***/
      },

    /***/ "./node_modules/react-error-overlay/lib/index.js":
      /*!*******************************************************!*\
  !*** ./node_modules/react-error-overlay/lib/index.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        (function webpackUniversalModuleDefinition(root, factory) {
          if (true) module.exports = factory();
          else if (typeof define === "function" && define.amd)
            define([], factory);
          else if (typeof exports === "object")
            exports["ReactErrorOverlay"] = factory();
          else root["ReactErrorOverlay"] = factory();
        })(this, function() {
          return /******/ (function(modules) {
            // webpackBootstrap
            /******/ // The module cache
            /******/ var installedModules = {}; // The require function
            /******/
            /******/ /******/ function __webpack_require__(moduleId) {
              /******/
              /******/ // Check if module is in cache
              /******/ if (installedModules[moduleId]) {
                /******/ return installedModules[moduleId].exports;
                /******/
              } // Create a new module (and put it into the cache)
              /******/ /******/ var module = (installedModules[moduleId] = {
                /******/ i: moduleId,
                /******/ l: false,
                /******/ exports: {}
                /******/
              }); // Execute the module function
              /******/
              /******/ /******/ modules[moduleId].call(
                module.exports,
                module,
                module.exports,
                __webpack_require__
              ); // Flag the module as loaded
              /******/
              /******/ /******/ module.l = true; // Return the exports of the module
              /******/
              /******/ /******/ return module.exports;
              /******/
            } // expose the modules object (__webpack_modules__)
            /******/
            /******/
            /******/ /******/ __webpack_require__.m = modules; // expose the module cache
            /******/
            /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
            /******/
            /******/ /******/ __webpack_require__.d = function(
              exports,
              name,
              getter
            ) {
              /******/ if (!__webpack_require__.o(exports, name)) {
                /******/ Object.defineProperty(exports, name, {
                  /******/ configurable: false,
                  /******/ enumerable: true,
                  /******/ get: getter
                  /******/
                });
                /******/
              }
              /******/
            }; // getDefaultExport function for compatibility with non-harmony modules
            /******/
            /******/ /******/ __webpack_require__.n = function(module) {
              /******/ var getter =
                module && module.__esModule
                  ? /******/ function getDefault() {
                      return module["default"];
                    }
                  : /******/ function getModuleExports() {
                      return module;
                    };
              /******/ __webpack_require__.d(getter, "a", getter);
              /******/ return getter;
              /******/
            }; // Object.prototype.hasOwnProperty.call
            /******/
            /******/ /******/ __webpack_require__.o = function(
              object,
              property
            ) {
              return Object.prototype.hasOwnProperty.call(object, property);
            }; // __webpack_public_path__
            /******/
            /******/ /******/ __webpack_require__.p = ""; // Load entry module and return exports
            /******/
            /******/ /******/ return __webpack_require__(
              (__webpack_require__.s = 9)
            );
            /******/
          })(
            /************************************************************************/
            /******/ [
              /* 0 */
              /***/ function(module, exports) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                /**
                 * This is a helper function for getting values from parameter/options
                 * objects.
                 *
                 * @param args The object we are extracting values from
                 * @param name The name of the property we are getting.
                 * @param defaultValue An optional value to return if the property is missing
                 * from the object. If this is not specified and the property is missing, an
                 * error will be thrown.
                 */
                function getArg(aArgs, aName, aDefaultValue) {
                  if (aName in aArgs) {
                    return aArgs[aName];
                  } else if (arguments.length === 3) {
                    return aDefaultValue;
                  } else {
                    throw new Error('"' + aName + '" is a required argument.');
                  }
                }
                exports.getArg = getArg;

                var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
                var dataUrlRegexp = /^data:.+\,.+$/;

                function urlParse(aUrl) {
                  var match = aUrl.match(urlRegexp);
                  if (!match) {
                    return null;
                  }
                  return {
                    scheme: match[1],
                    auth: match[2],
                    host: match[3],
                    port: match[4],
                    path: match[5]
                  };
                }
                exports.urlParse = urlParse;

                function urlGenerate(aParsedUrl) {
                  var url = "";
                  if (aParsedUrl.scheme) {
                    url += aParsedUrl.scheme + ":";
                  }
                  url += "//";
                  if (aParsedUrl.auth) {
                    url += aParsedUrl.auth + "@";
                  }
                  if (aParsedUrl.host) {
                    url += aParsedUrl.host;
                  }
                  if (aParsedUrl.port) {
                    url += ":" + aParsedUrl.port;
                  }
                  if (aParsedUrl.path) {
                    url += aParsedUrl.path;
                  }
                  return url;
                }
                exports.urlGenerate = urlGenerate;

                /**
                 * Normalizes a path, or the path portion of a URL:
                 *
                 * - Replaces consecutive slashes with one slash.
                 * - Removes unnecessary '.' parts.
                 * - Removes unnecessary '<dir>/..' parts.
                 *
                 * Based on code in the Node.js 'path' core module.
                 *
                 * @param aPath The path or url to normalize.
                 */
                function normalize(aPath) {
                  var path = aPath;
                  var url = urlParse(aPath);
                  if (url) {
                    if (!url.path) {
                      return aPath;
                    }
                    path = url.path;
                  }
                  var isAbsolute = exports.isAbsolute(path);

                  var parts = path.split(/\/+/);
                  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
                    part = parts[i];
                    if (part === ".") {
                      parts.splice(i, 1);
                    } else if (part === "..") {
                      up++;
                    } else if (up > 0) {
                      if (part === "") {
                        // The first part is blank if the path is absolute. Trying to go
                        // above the root is a no-op. Therefore we can remove all '..' parts
                        // directly after the root.
                        parts.splice(i + 1, up);
                        up = 0;
                      } else {
                        parts.splice(i, 2);
                        up--;
                      }
                    }
                  }
                  path = parts.join("/");

                  if (path === "") {
                    path = isAbsolute ? "/" : ".";
                  }

                  if (url) {
                    url.path = path;
                    return urlGenerate(url);
                  }
                  return path;
                }
                exports.normalize = normalize;

                /**
                 * Joins two paths/URLs.
                 *
                 * @param aRoot The root path or URL.
                 * @param aPath The path or URL to be joined with the root.
                 *
                 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
                 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
                 *   first.
                 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
                 *   is updated with the result and aRoot is returned. Otherwise the result
                 *   is returned.
                 *   - If aPath is absolute, the result is aPath.
                 *   - Otherwise the two paths are joined with a slash.
                 * - Joining for example 'http://' and 'www.example.com' is also supported.
                 */
                function join(aRoot, aPath) {
                  if (aRoot === "") {
                    aRoot = ".";
                  }
                  if (aPath === "") {
                    aPath = ".";
                  }
                  var aPathUrl = urlParse(aPath);
                  var aRootUrl = urlParse(aRoot);
                  if (aRootUrl) {
                    aRoot = aRootUrl.path || "/";
                  }

                  // `join(foo, '//www.example.org')`
                  if (aPathUrl && !aPathUrl.scheme) {
                    if (aRootUrl) {
                      aPathUrl.scheme = aRootUrl.scheme;
                    }
                    return urlGenerate(aPathUrl);
                  }

                  if (aPathUrl || aPath.match(dataUrlRegexp)) {
                    return aPath;
                  }

                  // `join('http://', 'www.example.com')`
                  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
                    aRootUrl.host = aPath;
                    return urlGenerate(aRootUrl);
                  }

                  var joined =
                    aPath.charAt(0) === "/"
                      ? aPath
                      : normalize(aRoot.replace(/\/+$/, "") + "/" + aPath);

                  if (aRootUrl) {
                    aRootUrl.path = joined;
                    return urlGenerate(aRootUrl);
                  }
                  return joined;
                }
                exports.join = join;

                exports.isAbsolute = function(aPath) {
                  return aPath.charAt(0) === "/" || !!aPath.match(urlRegexp);
                };

                /**
                 * Make a path relative to a URL or another path.
                 *
                 * @param aRoot The root path or URL.
                 * @param aPath The path or URL to be made relative to aRoot.
                 */
                function relative(aRoot, aPath) {
                  if (aRoot === "") {
                    aRoot = ".";
                  }

                  aRoot = aRoot.replace(/\/$/, "");

                  // It is possible for the path to be above the root. In this case, simply
                  // checking whether the root is a prefix of the path won't work. Instead, we
                  // need to remove components from the root one by one, until either we find
                  // a prefix that fits, or we run out of components to remove.
                  var level = 0;
                  while (aPath.indexOf(aRoot + "/") !== 0) {
                    var index = aRoot.lastIndexOf("/");
                    if (index < 0) {
                      return aPath;
                    }

                    // If the only part of the root that is left is the scheme (i.e. http://,
                    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
                    // have exhausted all components, so the path is not relative to the root.
                    aRoot = aRoot.slice(0, index);
                    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
                      return aPath;
                    }

                    ++level;
                  }

                  // Make sure we add a "../" for each component we removed from the root.
                  return (
                    Array(level + 1).join("../") +
                    aPath.substr(aRoot.length + 1)
                  );
                }
                exports.relative = relative;

                var supportsNullProto = (function() {
                  var obj = Object.create(null);
                  return !("__proto__" in obj);
                })();

                function identity(s) {
                  return s;
                }

                /**
                 * Because behavior goes wacky when you set `__proto__` on objects, we
                 * have to prefix all the strings in our set with an arbitrary character.
                 *
                 * See https://github.com/mozilla/source-map/pull/31 and
                 * https://github.com/mozilla/source-map/issues/30
                 *
                 * @param String aStr
                 */
                function toSetString(aStr) {
                  if (isProtoString(aStr)) {
                    return "$" + aStr;
                  }

                  return aStr;
                }
                exports.toSetString = supportsNullProto
                  ? identity
                  : toSetString;

                function fromSetString(aStr) {
                  if (isProtoString(aStr)) {
                    return aStr.slice(1);
                  }

                  return aStr;
                }
                exports.fromSetString = supportsNullProto
                  ? identity
                  : fromSetString;

                function isProtoString(s) {
                  if (!s) {
                    return false;
                  }

                  var length = s.length;

                  if (length < 9 /* "__proto__".length */) {
                    return false;
                  }

                  if (
                    s.charCodeAt(length - 1) !== 95 /* '_' */ ||
                    s.charCodeAt(length - 2) !== 95 /* '_' */ ||
                    s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
                    s.charCodeAt(length - 4) !== 116 /* 't' */ ||
                    s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
                    s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
                    s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
                    s.charCodeAt(length - 8) !== 95 /* '_' */ ||
                    s.charCodeAt(length - 9) !== 95 /* '_' */
                  ) {
                    return false;
                  }

                  for (var i = length - 10; i >= 0; i--) {
                    if (s.charCodeAt(i) !== 36 /* '$' */) {
                      return false;
                    }
                  }

                  return true;
                }

                /**
                 * Comparator between two mappings where the original positions are compared.
                 *
                 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
                 * mappings with the same original source/line/column, but different generated
                 * line and column the same. Useful when searching for a mapping with a
                 * stubbed out mapping.
                 */
                function compareByOriginalPositions(
                  mappingA,
                  mappingB,
                  onlyCompareOriginal
                ) {
                  var cmp = mappingA.source - mappingB.source;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalLine - mappingB.originalLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalColumn - mappingB.originalColumn;
                  if (cmp !== 0 || onlyCompareOriginal) {
                    return cmp;
                  }

                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.generatedLine - mappingB.generatedLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  return mappingA.name - mappingB.name;
                }
                exports.compareByOriginalPositions = compareByOriginalPositions;

                /**
                 * Comparator between two mappings with deflated source and name indices where
                 * the generated positions are compared.
                 *
                 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
                 * mappings with the same generated line and column, but different
                 * source/name/original line and column the same. Useful when searching for a
                 * mapping with a stubbed out mapping.
                 */
                function compareByGeneratedPositionsDeflated(
                  mappingA,
                  mappingB,
                  onlyCompareGenerated
                ) {
                  var cmp = mappingA.generatedLine - mappingB.generatedLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
                  if (cmp !== 0 || onlyCompareGenerated) {
                    return cmp;
                  }

                  cmp = mappingA.source - mappingB.source;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalLine - mappingB.originalLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalColumn - mappingB.originalColumn;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  return mappingA.name - mappingB.name;
                }
                exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

                function strcmp(aStr1, aStr2) {
                  if (aStr1 === aStr2) {
                    return 0;
                  }

                  if (aStr1 > aStr2) {
                    return 1;
                  }

                  return -1;
                }

                /**
                 * Comparator between two mappings with inflated source and name strings where
                 * the generated positions are compared.
                 */
                function compareByGeneratedPositionsInflated(
                  mappingA,
                  mappingB
                ) {
                  var cmp = mappingA.generatedLine - mappingB.generatedLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = strcmp(mappingA.source, mappingB.source);
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalLine - mappingB.originalLine;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  cmp = mappingA.originalColumn - mappingB.originalColumn;
                  if (cmp !== 0) {
                    return cmp;
                  }

                  return strcmp(mappingA.name, mappingB.name);
                }
                exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

                /***/
              },
              /* 1 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* unused harmony export StackFrame */
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return ScriptLine;
                  }
                );
                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ("value" in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError("Cannot call a class as a function");
                  }
                }

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                /** A container holding a script line. */
                var ScriptLine =
                  /** The content (or value) of this line of source. */
                  function ScriptLine(lineNumber, content) {
                    var highlight =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : false;

                    _classCallCheck(this, ScriptLine);

                    this.lineNumber = lineNumber;
                    this.content = content;
                    this.highlight = highlight;
                  };
                /** Whether or not this line should be highlighted. Particularly useful for error reporting with context. */

                /** The line number of this line of source. */

                /**
                 * A representation of a stack frame.
                 */

                var StackFrame = (function() {
                  function StackFrame() {
                    var functionName =
                      arguments.length > 0 && arguments[0] !== undefined
                        ? arguments[0]
                        : null;
                    var fileName =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : null;
                    var lineNumber =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : null;
                    var columnNumber =
                      arguments.length > 3 && arguments[3] !== undefined
                        ? arguments[3]
                        : null;
                    var scriptCode =
                      arguments.length > 4 && arguments[4] !== undefined
                        ? arguments[4]
                        : null;
                    var sourceFunctionName =
                      arguments.length > 5 && arguments[5] !== undefined
                        ? arguments[5]
                        : null;
                    var sourceFileName =
                      arguments.length > 6 && arguments[6] !== undefined
                        ? arguments[6]
                        : null;
                    var sourceLineNumber =
                      arguments.length > 7 && arguments[7] !== undefined
                        ? arguments[7]
                        : null;
                    var sourceColumnNumber =
                      arguments.length > 8 && arguments[8] !== undefined
                        ? arguments[8]
                        : null;
                    var sourceScriptCode =
                      arguments.length > 9 && arguments[9] !== undefined
                        ? arguments[9]
                        : null;

                    _classCallCheck(this, StackFrame);

                    if (functionName && functionName.indexOf("Object.") === 0) {
                      functionName = functionName.slice("Object.".length);
                    }
                    if (
                      // Chrome has a bug with inferring function.name:
                      // https://github.com/facebookincubator/create-react-app/issues/2097
                      // Let's ignore a meaningless name we get for top-level modules.
                      functionName === "friendlySyntaxErrorLabel" ||
                      functionName === "exports.__esModule" ||
                      functionName === "<anonymous>" ||
                      !functionName
                    ) {
                      functionName = null;
                    }
                    this.functionName = functionName;

                    this.fileName = fileName;
                    this.lineNumber = lineNumber;
                    this.columnNumber = columnNumber;

                    this._originalFunctionName = sourceFunctionName;
                    this._originalFileName = sourceFileName;
                    this._originalLineNumber = sourceLineNumber;
                    this._originalColumnNumber = sourceColumnNumber;

                    this._scriptCode = scriptCode;
                    this._originalScriptCode = sourceScriptCode;
                  }

                  /**
                   * Returns the name of this function.
                   */

                  _createClass(StackFrame, [
                    {
                      key: "getFunctionName",
                      value: function getFunctionName() {
                        return this.functionName || "(anonymous function)";
                      }

                      /**
                       * Returns the source of the frame.
                       * This contains the file name, line number, and column number when available.
                       */
                    },
                    {
                      key: "getSource",
                      value: function getSource() {
                        var str = "";
                        if (this.fileName != null) {
                          str += this.fileName + ":";
                        }
                        if (this.lineNumber != null) {
                          str += this.lineNumber + ":";
                        }
                        if (this.columnNumber != null) {
                          str += this.columnNumber + ":";
                        }
                        return str.slice(0, -1);
                      }

                      /**
                       * Returns a pretty version of this stack frame.
                       */
                    },
                    {
                      key: "toString",
                      value: function toString() {
                        var functionName = this.getFunctionName();
                        var source = this.getSource();
                        return (
                          "" +
                          functionName +
                          (source ? " (" + source + ")" : "")
                        );
                      }
                    }
                  ]);

                  return StackFrame;
                })();

                /* harmony default export */ __webpack_exports__[
                  "b"
                ] = StackFrame;

                /***/
              },
              /* 2 */
              /***/ function(module, exports, __webpack_require__) {
                module.exports = __webpack_require__(19);

                /***/
              },
              /* 3 */
              /***/ function(module, exports) {
                // shim for using process in browser
                var process = (module.exports = {});

                // cached from whatever global is present so that test runners that stub it
                // don't break things.  But we need to wrap it in a try catch in case it is
                // wrapped in strict mode code which doesn't define any globals.  It's inside a
                // function because try/catches deoptimize in certain engines.

                var cachedSetTimeout;
                var cachedClearTimeout;

                function defaultSetTimout() {
                  throw new Error("setTimeout has not been defined");
                }
                function defaultClearTimeout() {
                  throw new Error("clearTimeout has not been defined");
                }
                (function() {
                  try {
                    if (typeof setTimeout === "function") {
                      cachedSetTimeout = setTimeout;
                    } else {
                      cachedSetTimeout = defaultSetTimout;
                    }
                  } catch (e) {
                    cachedSetTimeout = defaultSetTimout;
                  }
                  try {
                    if (typeof clearTimeout === "function") {
                      cachedClearTimeout = clearTimeout;
                    } else {
                      cachedClearTimeout = defaultClearTimeout;
                    }
                  } catch (e) {
                    cachedClearTimeout = defaultClearTimeout;
                  }
                })();
                function runTimeout(fun) {
                  if (cachedSetTimeout === setTimeout) {
                    //normal enviroments in sane situations
                    return setTimeout(fun, 0);
                  }
                  // if setTimeout wasn't available but was latter defined
                  if (
                    (cachedSetTimeout === defaultSetTimout ||
                      !cachedSetTimeout) &&
                    setTimeout
                  ) {
                    cachedSetTimeout = setTimeout;
                    return setTimeout(fun, 0);
                  }
                  try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedSetTimeout(fun, 0);
                  } catch (e) {
                    try {
                      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                      return cachedSetTimeout.call(null, fun, 0);
                    } catch (e) {
                      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                      return cachedSetTimeout.call(this, fun, 0);
                    }
                  }
                }
                function runClearTimeout(marker) {
                  if (cachedClearTimeout === clearTimeout) {
                    //normal enviroments in sane situations
                    return clearTimeout(marker);
                  }
                  // if clearTimeout wasn't available but was latter defined
                  if (
                    (cachedClearTimeout === defaultClearTimeout ||
                      !cachedClearTimeout) &&
                    clearTimeout
                  ) {
                    cachedClearTimeout = clearTimeout;
                    return clearTimeout(marker);
                  }
                  try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedClearTimeout(marker);
                  } catch (e) {
                    try {
                      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                      return cachedClearTimeout.call(null, marker);
                    } catch (e) {
                      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                      return cachedClearTimeout.call(this, marker);
                    }
                  }
                }
                var queue = [];
                var draining = false;
                var currentQueue;
                var queueIndex = -1;

                function cleanUpNextTick() {
                  if (!draining || !currentQueue) {
                    return;
                  }
                  draining = false;
                  if (currentQueue.length) {
                    queue = currentQueue.concat(queue);
                  } else {
                    queueIndex = -1;
                  }
                  if (queue.length) {
                    drainQueue();
                  }
                }

                function drainQueue() {
                  if (draining) {
                    return;
                  }
                  var timeout = runTimeout(cleanUpNextTick);
                  draining = true;

                  var len = queue.length;
                  while (len) {
                    currentQueue = queue;
                    queue = [];
                    while (++queueIndex < len) {
                      if (currentQueue) {
                        currentQueue[queueIndex].run();
                      }
                    }
                    queueIndex = -1;
                    len = queue.length;
                  }
                  currentQueue = null;
                  draining = false;
                  runClearTimeout(timeout);
                }

                process.nextTick = function(fun) {
                  var args = new Array(arguments.length - 1);
                  if (arguments.length > 1) {
                    for (var i = 1; i < arguments.length; i++) {
                      args[i - 1] = arguments[i];
                    }
                  }
                  queue.push(new Item(fun, args));
                  if (queue.length === 1 && !draining) {
                    runTimeout(drainQueue);
                  }
                };

                // v8 likes predictible objects
                function Item(fun, array) {
                  this.fun = fun;
                  this.array = array;
                }
                Item.prototype.run = function() {
                  this.fun.apply(null, this.array);
                };
                process.title = "browser";
                process.browser = true;
                process.env = {};
                process.argv = [];
                process.version = ""; // empty string to avoid regexp issues
                process.versions = {};

                function noop() {}

                process.on = noop;
                process.addListener = noop;
                process.once = noop;
                process.off = noop;
                process.removeListener = noop;
                process.removeAllListeners = noop;
                process.emit = noop;
                process.prependListener = noop;
                process.prependOnceListener = noop;

                process.listeners = function(name) {
                  return [];
                };

                process.binding = function(name) {
                  throw new Error("process.binding is not supported");
                };

                process.cwd = function() {
                  return "/";
                };
                process.chdir = function(dir) {
                  throw new Error("process.chdir is not supported");
                };
                process.umask = function() {
                  return 0;
                };

                /***/
              },
              /* 4 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* unused harmony export extractSourceMapUrl */
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return getSourceMap;
                  }
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(
                  2
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_source_map__ = __webpack_require__(
                  21
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_source_map___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_1_source_map__
                );

                var _createClass = (function() {
                  function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                      var descriptor = props[i];
                      descriptor.enumerable = descriptor.enumerable || false;
                      descriptor.configurable = true;
                      if ("value" in descriptor) descriptor.writable = true;
                      Object.defineProperty(target, descriptor.key, descriptor);
                    }
                  }
                  return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                      defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                  };
                })();

                /**
                 * Returns an instance of <code>{@link SourceMap}</code> for a given fileUri and fileContents.
                 * @param {string} fileUri The URI of the source file.
                 * @param {string} fileContents The contents of the source file.
                 */
                var getSourceMap = (function() {
                  var _ref = _asyncToGenerator(
                    /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                      function _callee(fileUri, fileContents) {
                        var sm, base64, match2, index, url, obj;
                        return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  _context.next = 2;
                                  return extractSourceMapUrl(
                                    fileUri,
                                    fileContents
                                  );

                                case 2:
                                  sm = _context.sent;

                                  if (!(sm.indexOf("data:") === 0)) {
                                    _context.next = 14;
                                    break;
                                  }

                                  base64 = /^data:application\/json;([\w=:"-]+;)*base64,/;
                                  match2 = sm.match(base64);

                                  if (match2) {
                                    _context.next = 8;
                                    break;
                                  }

                                  throw new Error(
                                    "Sorry, non-base64 inline source-map encoding is not supported."
                                  );

                                case 8:
                                  sm = sm.substring(match2[0].length);
                                  sm = window.atob(sm);
                                  sm = JSON.parse(sm);
                                  return _context.abrupt(
                                    "return",
                                    new SourceMap(
                                      new __WEBPACK_IMPORTED_MODULE_1_source_map__[
                                        "SourceMapConsumer"
                                      ](sm)
                                    )
                                  );

                                case 14:
                                  index = fileUri.lastIndexOf("/");
                                  url = fileUri.substring(0, index + 1) + sm;
                                  _context.next = 18;
                                  return fetch(url).then(function(res) {
                                    return res.json();
                                  });

                                case 18:
                                  obj = _context.sent;
                                  return _context.abrupt(
                                    "return",
                                    new SourceMap(
                                      new __WEBPACK_IMPORTED_MODULE_1_source_map__[
                                        "SourceMapConsumer"
                                      ](obj)
                                    )
                                  );

                                case 20:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this
                        );
                      }
                    )
                  );

                  return function getSourceMap(_x, _x2) {
                    return _ref.apply(this, arguments);
                  };
                })();

                function _asyncToGenerator(fn) {
                  return function() {
                    var gen = fn.apply(this, arguments);
                    return new Promise(function(resolve, reject) {
                      function step(key, arg) {
                        try {
                          var info = gen[key](arg);
                          var value = info.value;
                        } catch (error) {
                          reject(error);
                          return;
                        }
                        if (info.done) {
                          resolve(value);
                        } else {
                          return Promise.resolve(value).then(
                            function(value) {
                              step("next", value);
                            },
                            function(err) {
                              step("throw", err);
                            }
                          );
                        }
                      }
                      return step("next");
                    });
                  };
                }

                function _classCallCheck(instance, Constructor) {
                  if (!(instance instanceof Constructor)) {
                    throw new TypeError("Cannot call a class as a function");
                  }
                }

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                /**
                 * A wrapped instance of a <code>{@link https://github.com/mozilla/source-map SourceMapConsumer}</code>.
                 *
                 * This exposes methods which will be indifferent to changes made in <code>{@link https://github.com/mozilla/source-map source-map}</code>.
                 */

                var SourceMap = (function() {
                  function SourceMap(sourceMap) {
                    _classCallCheck(this, SourceMap);

                    this.__source_map = sourceMap;
                  }

                  /**
                   * Returns the original code position for a generated code position.
                   * @param {number} line The line of the generated code position.
                   * @param {number} column The column of the generated code position.
                   */

                  _createClass(SourceMap, [
                    {
                      key: "getOriginalPosition",
                      value: function getOriginalPosition(line, column) {
                        var _source_map$original = this.__source_map.originalPositionFor(
                            {
                              line: line,
                              column: column
                            }
                          ),
                          l = _source_map$original.line,
                          c = _source_map$original.column,
                          s = _source_map$original.source;

                        return { line: l, column: c, source: s };
                      }

                      /**
                       * Returns the generated code position for an original position.
                       * @param {string} source The source file of the original code position.
                       * @param {number} line The line of the original code position.
                       * @param {number} column The column of the original code position.
                       */
                    },
                    {
                      key: "getGeneratedPosition",
                      value: function getGeneratedPosition(
                        source,
                        line,
                        column
                      ) {
                        var _source_map$generate = this.__source_map.generatedPositionFor(
                            {
                              source: source,
                              line: line,
                              column: column
                            }
                          ),
                          l = _source_map$generate.line,
                          c = _source_map$generate.column;

                        return {
                          line: l,
                          column: c
                        };
                      }

                      /**
                       * Returns the code for a given source file name.
                       * @param {string} sourceName The name of the source file.
                       */
                    },
                    {
                      key: "getSource",
                      value: function getSource(sourceName) {
                        return this.__source_map.sourceContentFor(sourceName);
                      }
                    },
                    {
                      key: "getSources",
                      value: function getSources() {
                        return this.__source_map.sources;
                      }
                    }
                  ]);

                  return SourceMap;
                })();

                function extractSourceMapUrl(fileUri, fileContents) {
                  var regex = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm;
                  var match = null;
                  for (;;) {
                    var next = regex.exec(fileContents);
                    if (next == null) {
                      break;
                    }
                    match = next;
                  }
                  if (!(match && match[1])) {
                    return Promise.reject(
                      "Cannot find a source map directive for " + fileUri + "."
                    );
                  }
                  return Promise.resolve(match[1].toString());
                }

                /* unused harmony default export */ var _unused_webpack_default_export = getSourceMap;

                /***/
              },
              /* 5 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var base64VLQ = __webpack_require__(6);
                var util = __webpack_require__(0);
                var ArraySet = __webpack_require__(7).ArraySet;
                var MappingList = __webpack_require__(23).MappingList;

                /**
                 * An instance of the SourceMapGenerator represents a source map which is
                 * being built incrementally. You may pass an object with the following
                 * properties:
                 *
                 *   - file: The filename of the generated source.
                 *   - sourceRoot: A root for all relative URLs in this source map.
                 */
                function SourceMapGenerator(aArgs) {
                  if (!aArgs) {
                    aArgs = {};
                  }
                  this._file = util.getArg(aArgs, "file", null);
                  this._sourceRoot = util.getArg(aArgs, "sourceRoot", null);
                  this._skipValidation = util.getArg(
                    aArgs,
                    "skipValidation",
                    false
                  );
                  this._sources = new ArraySet();
                  this._names = new ArraySet();
                  this._mappings = new MappingList();
                  this._sourcesContents = null;
                }

                SourceMapGenerator.prototype._version = 3;

                /**
                 * Creates a new SourceMapGenerator based on a SourceMapConsumer
                 *
                 * @param aSourceMapConsumer The SourceMap.
                 */
                SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(
                  aSourceMapConsumer
                ) {
                  var sourceRoot = aSourceMapConsumer.sourceRoot;
                  var generator = new SourceMapGenerator({
                    file: aSourceMapConsumer.file,
                    sourceRoot: sourceRoot
                  });
                  aSourceMapConsumer.eachMapping(function(mapping) {
                    var newMapping = {
                      generated: {
                        line: mapping.generatedLine,
                        column: mapping.generatedColumn
                      }
                    };

                    if (mapping.source != null) {
                      newMapping.source = mapping.source;
                      if (sourceRoot != null) {
                        newMapping.source = util.relative(
                          sourceRoot,
                          newMapping.source
                        );
                      }

                      newMapping.original = {
                        line: mapping.originalLine,
                        column: mapping.originalColumn
                      };

                      if (mapping.name != null) {
                        newMapping.name = mapping.name;
                      }
                    }

                    generator.addMapping(newMapping);
                  });
                  aSourceMapConsumer.sources.forEach(function(sourceFile) {
                    var content = aSourceMapConsumer.sourceContentFor(
                      sourceFile
                    );
                    if (content != null) {
                      generator.setSourceContent(sourceFile, content);
                    }
                  });
                  return generator;
                };

                /**
                 * Add a single mapping from original source line and column to the generated
                 * source's line and column for this source map being created. The mapping
                 * object should have the following properties:
                 *
                 *   - generated: An object with the generated line and column positions.
                 *   - original: An object with the original line and column positions.
                 *   - source: The original source file (relative to the sourceRoot).
                 *   - name: An optional original token name for this mapping.
                 */
                SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(
                  aArgs
                ) {
                  var generated = util.getArg(aArgs, "generated");
                  var original = util.getArg(aArgs, "original", null);
                  var source = util.getArg(aArgs, "source", null);
                  var name = util.getArg(aArgs, "name", null);

                  if (!this._skipValidation) {
                    this._validateMapping(generated, original, source, name);
                  }

                  if (source != null) {
                    source = String(source);
                    if (!this._sources.has(source)) {
                      this._sources.add(source);
                    }
                  }

                  if (name != null) {
                    name = String(name);
                    if (!this._names.has(name)) {
                      this._names.add(name);
                    }
                  }

                  this._mappings.add({
                    generatedLine: generated.line,
                    generatedColumn: generated.column,
                    originalLine: original != null && original.line,
                    originalColumn: original != null && original.column,
                    source: source,
                    name: name
                  });
                };

                /**
                 * Set the source content for a source file.
                 */
                SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(
                  aSourceFile,
                  aSourceContent
                ) {
                  var source = aSourceFile;
                  if (this._sourceRoot != null) {
                    source = util.relative(this._sourceRoot, source);
                  }

                  if (aSourceContent != null) {
                    // Add the source content to the _sourcesContents map.
                    // Create a new _sourcesContents map if the property is null.
                    if (!this._sourcesContents) {
                      this._sourcesContents = Object.create(null);
                    }
                    this._sourcesContents[
                      util.toSetString(source)
                    ] = aSourceContent;
                  } else if (this._sourcesContents) {
                    // Remove the source file from the _sourcesContents map.
                    // If the _sourcesContents map is empty, set the property to null.
                    delete this._sourcesContents[util.toSetString(source)];
                    if (Object.keys(this._sourcesContents).length === 0) {
                      this._sourcesContents = null;
                    }
                  }
                };

                /**
                 * Applies the mappings of a sub-source-map for a specific source file to the
                 * source map being generated. Each mapping to the supplied source file is
                 * rewritten using the supplied source map. Note: The resolution for the
                 * resulting mappings is the minimium of this map and the supplied map.
                 *
                 * @param aSourceMapConsumer The source map to be applied.
                 * @param aSourceFile Optional. The filename of the source file.
                 *        If omitted, SourceMapConsumer's file property will be used.
                 * @param aSourceMapPath Optional. The dirname of the path to the source map
                 *        to be applied. If relative, it is relative to the SourceMapConsumer.
                 *        This parameter is needed when the two source maps aren't in the same
                 *        directory, and the source map to be applied contains relative source
                 *        paths. If so, those relative source paths need to be rewritten
                 *        relative to the SourceMapGenerator.
                 */
                SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(
                  aSourceMapConsumer,
                  aSourceFile,
                  aSourceMapPath
                ) {
                  var sourceFile = aSourceFile;
                  // If aSourceFile is omitted, we will use the file property of the SourceMap
                  if (aSourceFile == null) {
                    if (aSourceMapConsumer.file == null) {
                      throw new Error(
                        "SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, " +
                          'or the source map\'s "file" property. Both were omitted.'
                      );
                    }
                    sourceFile = aSourceMapConsumer.file;
                  }
                  var sourceRoot = this._sourceRoot;
                  // Make "sourceFile" relative if an absolute Url is passed.
                  if (sourceRoot != null) {
                    sourceFile = util.relative(sourceRoot, sourceFile);
                  }
                  // Applying the SourceMap can add and remove items from the sources and
                  // the names array.
                  var newSources = new ArraySet();
                  var newNames = new ArraySet();

                  // Find mappings for the "sourceFile"
                  this._mappings.unsortedForEach(function(mapping) {
                    if (
                      mapping.source === sourceFile &&
                      mapping.originalLine != null
                    ) {
                      // Check if it can be mapped by the source map, then update the mapping.
                      var original = aSourceMapConsumer.originalPositionFor({
                        line: mapping.originalLine,
                        column: mapping.originalColumn
                      });
                      if (original.source != null) {
                        // Copy mapping
                        mapping.source = original.source;
                        if (aSourceMapPath != null) {
                          mapping.source = util.join(
                            aSourceMapPath,
                            mapping.source
                          );
                        }
                        if (sourceRoot != null) {
                          mapping.source = util.relative(
                            sourceRoot,
                            mapping.source
                          );
                        }
                        mapping.originalLine = original.line;
                        mapping.originalColumn = original.column;
                        if (original.name != null) {
                          mapping.name = original.name;
                        }
                      }
                    }

                    var source = mapping.source;
                    if (source != null && !newSources.has(source)) {
                      newSources.add(source);
                    }

                    var name = mapping.name;
                    if (name != null && !newNames.has(name)) {
                      newNames.add(name);
                    }
                  }, this);
                  this._sources = newSources;
                  this._names = newNames;

                  // Copy sourcesContents of applied map.
                  aSourceMapConsumer.sources.forEach(function(sourceFile) {
                    var content = aSourceMapConsumer.sourceContentFor(
                      sourceFile
                    );
                    if (content != null) {
                      if (aSourceMapPath != null) {
                        sourceFile = util.join(aSourceMapPath, sourceFile);
                      }
                      if (sourceRoot != null) {
                        sourceFile = util.relative(sourceRoot, sourceFile);
                      }
                      this.setSourceContent(sourceFile, content);
                    }
                  }, this);
                };

                /**
                 * A mapping can have one of the three levels of data:
                 *
                 *   1. Just the generated position.
                 *   2. The Generated position, original position, and original source.
                 *   3. Generated and original position, original source, as well as a name
                 *      token.
                 *
                 * To maintain consistency, we validate that any new mapping being added falls
                 * in to one of these categories.
                 */
                SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(
                  aGenerated,
                  aOriginal,
                  aSource,
                  aName
                ) {
                  if (
                    aGenerated &&
                    "line" in aGenerated &&
                    "column" in aGenerated &&
                    aGenerated.line > 0 &&
                    aGenerated.column >= 0 &&
                    !aOriginal &&
                    !aSource &&
                    !aName
                  ) {
                    // Case 1.
                    return;
                  } else if (
                    aGenerated &&
                    "line" in aGenerated &&
                    "column" in aGenerated &&
                    aOriginal &&
                    "line" in aOriginal &&
                    "column" in aOriginal &&
                    aGenerated.line > 0 &&
                    aGenerated.column >= 0 &&
                    aOriginal.line > 0 &&
                    aOriginal.column >= 0 &&
                    aSource
                  ) {
                    // Cases 2 and 3.
                    return;
                  } else {
                    throw new Error(
                      "Invalid mapping: " +
                        JSON.stringify({
                          generated: aGenerated,
                          source: aSource,
                          original: aOriginal,
                          name: aName
                        })
                    );
                  }
                };

                /**
                 * Serialize the accumulated mappings in to the stream of base 64 VLQs
                 * specified by the source map format.
                 */
                SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {
                  var previousGeneratedColumn = 0;
                  var previousGeneratedLine = 1;
                  var previousOriginalColumn = 0;
                  var previousOriginalLine = 0;
                  var previousName = 0;
                  var previousSource = 0;
                  var result = "";
                  var next;
                  var mapping;
                  var nameIdx;
                  var sourceIdx;

                  var mappings = this._mappings.toArray();
                  for (var i = 0, len = mappings.length; i < len; i++) {
                    mapping = mappings[i];
                    next = "";

                    if (mapping.generatedLine !== previousGeneratedLine) {
                      previousGeneratedColumn = 0;
                      while (mapping.generatedLine !== previousGeneratedLine) {
                        next += ";";
                        previousGeneratedLine++;
                      }
                    } else {
                      if (i > 0) {
                        if (
                          !util.compareByGeneratedPositionsInflated(
                            mapping,
                            mappings[i - 1]
                          )
                        ) {
                          continue;
                        }
                        next += ",";
                      }
                    }

                    next += base64VLQ.encode(
                      mapping.generatedColumn - previousGeneratedColumn
                    );
                    previousGeneratedColumn = mapping.generatedColumn;

                    if (mapping.source != null) {
                      sourceIdx = this._sources.indexOf(mapping.source);
                      next += base64VLQ.encode(sourceIdx - previousSource);
                      previousSource = sourceIdx;

                      // lines are stored 0-based in SourceMap spec version 3
                      next += base64VLQ.encode(
                        mapping.originalLine - 1 - previousOriginalLine
                      );
                      previousOriginalLine = mapping.originalLine - 1;

                      next += base64VLQ.encode(
                        mapping.originalColumn - previousOriginalColumn
                      );
                      previousOriginalColumn = mapping.originalColumn;

                      if (mapping.name != null) {
                        nameIdx = this._names.indexOf(mapping.name);
                        next += base64VLQ.encode(nameIdx - previousName);
                        previousName = nameIdx;
                      }
                    }

                    result += next;
                  }

                  return result;
                };

                SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(
                  aSources,
                  aSourceRoot
                ) {
                  return aSources.map(function(source) {
                    if (!this._sourcesContents) {
                      return null;
                    }
                    if (aSourceRoot != null) {
                      source = util.relative(aSourceRoot, source);
                    }
                    var key = util.toSetString(source);
                    return Object.prototype.hasOwnProperty.call(
                      this._sourcesContents,
                      key
                    )
                      ? this._sourcesContents[key]
                      : null;
                  }, this);
                };

                /**
                 * Externalize the source map.
                 */
                SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {
                  var map = {
                    version: this._version,
                    sources: this._sources.toArray(),
                    names: this._names.toArray(),
                    mappings: this._serializeMappings()
                  };
                  if (this._file != null) {
                    map.file = this._file;
                  }
                  if (this._sourceRoot != null) {
                    map.sourceRoot = this._sourceRoot;
                  }
                  if (this._sourcesContents) {
                    map.sourcesContent = this._generateSourcesContent(
                      map.sources,
                      map.sourceRoot
                    );
                  }

                  return map;
                };

                /**
                 * Render the source map being generated to a string.
                 */
                SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {
                  return JSON.stringify(this.toJSON());
                };

                exports.SourceMapGenerator = SourceMapGenerator;

                /***/
              },
              /* 6 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

                var base64 = __webpack_require__(22);

                // A single base 64 digit can contain 6 bits of data. For the base 64 variable
                // length quantities we use in the source map spec, the first bit is the sign,
                // the next four bits are the actual value, and the 6th bit is the
                // continuation bit. The continuation bit tells us whether there are more
                // digits in this value following this digit.
                //
                //   Continuation
                //   |    Sign
                //   |    |
                //   V    V
                //   101011

                var VLQ_BASE_SHIFT = 5;

                // binary: 100000
                var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

                // binary: 011111
                var VLQ_BASE_MASK = VLQ_BASE - 1;

                // binary: 100000
                var VLQ_CONTINUATION_BIT = VLQ_BASE;

                /**
                 * Converts from a two-complement value to a value where the sign bit is
                 * placed in the least significant bit.  For example, as decimals:
                 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
                 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
                 */
                function toVLQSigned(aValue) {
                  return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
                }

                /**
                 * Converts to a two-complement value from a value where the sign bit is
                 * placed in the least significant bit.  For example, as decimals:
                 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
                 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
                 */
                function fromVLQSigned(aValue) {
                  var isNegative = (aValue & 1) === 1;
                  var shifted = aValue >> 1;
                  return isNegative ? -shifted : shifted;
                }

                /**
                 * Returns the base 64 VLQ encoded value.
                 */
                exports.encode = function base64VLQ_encode(aValue) {
                  var encoded = "";
                  var digit;

                  var vlq = toVLQSigned(aValue);

                  do {
                    digit = vlq & VLQ_BASE_MASK;
                    vlq >>>= VLQ_BASE_SHIFT;
                    if (vlq > 0) {
                      // There are still more digits in this value, so we must make sure the
                      // continuation bit is marked.
                      digit |= VLQ_CONTINUATION_BIT;
                    }
                    encoded += base64.encode(digit);
                  } while (vlq > 0);

                  return encoded;
                };

                /**
                 * Decodes the next base 64 VLQ value from the given string and returns the
                 * value and the rest of the string via the out parameter.
                 */
                exports.decode = function base64VLQ_decode(
                  aStr,
                  aIndex,
                  aOutParam
                ) {
                  var strLen = aStr.length;
                  var result = 0;
                  var shift = 0;
                  var continuation, digit;

                  do {
                    if (aIndex >= strLen) {
                      throw new Error(
                        "Expected more digits in base 64 VLQ value."
                      );
                    }

                    digit = base64.decode(aStr.charCodeAt(aIndex++));
                    if (digit === -1) {
                      throw new Error(
                        "Invalid base64 digit: " + aStr.charAt(aIndex - 1)
                      );
                    }

                    continuation = !!(digit & VLQ_CONTINUATION_BIT);
                    digit &= VLQ_BASE_MASK;
                    result = result + (digit << shift);
                    shift += VLQ_BASE_SHIFT;
                  } while (continuation);

                  aOutParam.value = fromVLQSigned(result);
                  aOutParam.rest = aIndex;
                };

                /***/
              },
              /* 7 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var util = __webpack_require__(0);
                var has = Object.prototype.hasOwnProperty;

                /**
                 * A data structure which is a combination of an array and a set. Adding a new
                 * member is O(1), testing for membership is O(1), and finding the index of an
                 * element is O(1). Removing elements from the set is not supported. Only
                 * strings are supported for membership.
                 */
                function ArraySet() {
                  this._array = [];
                  this._set = Object.create(null);
                }

                /**
                 * Static method for creating ArraySet instances from an existing array.
                 */
                ArraySet.fromArray = function ArraySet_fromArray(
                  aArray,
                  aAllowDuplicates
                ) {
                  var set = new ArraySet();
                  for (var i = 0, len = aArray.length; i < len; i++) {
                    set.add(aArray[i], aAllowDuplicates);
                  }
                  return set;
                };

                /**
                 * Return how many unique items are in this ArraySet. If duplicates have been
                 * added, than those do not count towards the size.
                 *
                 * @returns Number
                 */
                ArraySet.prototype.size = function ArraySet_size() {
                  return Object.getOwnPropertyNames(this._set).length;
                };

                /**
                 * Add the given string to this set.
                 *
                 * @param String aStr
                 */
                ArraySet.prototype.add = function ArraySet_add(
                  aStr,
                  aAllowDuplicates
                ) {
                  var sStr = util.toSetString(aStr);
                  var isDuplicate = has.call(this._set, sStr);
                  var idx = this._array.length;
                  if (!isDuplicate || aAllowDuplicates) {
                    this._array.push(aStr);
                  }
                  if (!isDuplicate) {
                    this._set[sStr] = idx;
                  }
                };

                /**
                 * Is the given string a member of this set?
                 *
                 * @param String aStr
                 */
                ArraySet.prototype.has = function ArraySet_has(aStr) {
                  var sStr = util.toSetString(aStr);
                  return has.call(this._set, sStr);
                };

                /**
                 * What is the index of the given string in the array?
                 *
                 * @param String aStr
                 */
                ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
                  var sStr = util.toSetString(aStr);
                  if (has.call(this._set, sStr)) {
                    return this._set[sStr];
                  }
                  throw new Error('"' + aStr + '" is not in the set.');
                };

                /**
                 * What is the element at the given index?
                 *
                 * @param Number aIdx
                 */
                ArraySet.prototype.at = function ArraySet_at(aIdx) {
                  if (aIdx >= 0 && aIdx < this._array.length) {
                    return this._array[aIdx];
                  }
                  throw new Error("No element indexed by " + aIdx);
                };

                /**
                 * Returns the array representation of this set (which has the proper indices
                 * indicated by indexOf). Note that this is a copy of the internal array used
                 * for storing the members so that no one can mess with internal state.
                 */
                ArraySet.prototype.toArray = function ArraySet_toArray() {
                  return this._array.slice();
                };

                exports.ArraySet = ArraySet;

                /***/
              },
              /* 8 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return getLinesAround;
                  }
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stack_frame__ = __webpack_require__(
                  1
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                /**
                 *
                 * @param {number} line The line number to provide context around.
                 * @param {number} count The number of lines you'd like for context.
                 * @param {string[] | string} lines The source code.
                 */
                function getLinesAround(line, count, lines) {
                  if (typeof lines === "string") {
                    lines = lines.split("\n");
                  }
                  var result = [];
                  for (
                    var index = Math.max(0, line - 1 - count);
                    index <= Math.min(lines.length - 1, line - 1 + count);
                    ++index
                  ) {
                    result.push(
                      new __WEBPACK_IMPORTED_MODULE_0__stack_frame__[
                        "a" /* ScriptLine */
                      ](index + 1, lines[index], index === line - 1)
                    );
                  }
                  return result;
                }

                /* unused harmony default export */ var _unused_webpack_default_export = getLinesAround;

                /***/
              },
              /* 9 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                  value: true
                });
                /* WEBPACK VAR INJECTION */ (function(process) {
                  /* harmony export (immutable) */ __webpack_exports__[
                    "setEditorHandler"
                  ] = setEditorHandler;
                  /* harmony export (immutable) */ __webpack_exports__[
                    "reportBuildError"
                  ] = reportBuildError;
                  /* harmony export (immutable) */ __webpack_exports__[
                    "dismissBuildError"
                  ] = dismissBuildError;
                  /* harmony export (immutable) */ __webpack_exports__[
                    "startReportingRuntimeErrors"
                  ] = startReportingRuntimeErrors;
                  /* harmony export (immutable) */ __webpack_exports__[
                    "stopReportingRuntimeErrors"
                  ] = stopReportingRuntimeErrors;
                  /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__listenToRuntimeErrors__ = __webpack_require__(
                    10
                  );
                  /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styles__ = __webpack_require__(
                    31
                  );
                  /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_dom_css__ = __webpack_require__(
                    32
                  );
                  /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_iframeScript__ = __webpack_require__(
                    33
                  );
                  /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_iframeScript___default = __webpack_require__.n(
                    __WEBPACK_IMPORTED_MODULE_3_iframeScript__
                  );
                  /**
                   * Copyright (c) 2015-present, Facebook, Inc.
                   *
                   * This source code is licensed under the MIT license found in the
                   * LICENSE file in the root directory of this source tree.
                   */

                  // Importing iframe-bundle generated in the pre build step as
                  // a text using webpack raw-loader. See webpack.config.js file.
                  // $FlowFixMe

                  var iframe = null;
                  var isLoadingIframe = false;
                  var isIframeReady = false;

                  var editorHandler = null;
                  var currentBuildError = null;
                  var currentRuntimeErrorRecords = [];
                  var currentRuntimeErrorOptions = null;
                  var stopListeningToRuntimeErrors = null;

                  function setEditorHandler(handler) {
                    editorHandler = handler;
                    if (iframe) {
                      update();
                    }
                  }

                  function reportBuildError(error) {
                    currentBuildError = error;
                    update();
                  }

                  function dismissBuildError() {
                    currentBuildError = null;
                    update();
                  }

                  function startReportingRuntimeErrors(options) {
                    if (stopListeningToRuntimeErrors !== null) {
                      throw new Error("Already listening");
                    }
                    if (options.launchEditorEndpoint) {
                      console.warn(
                        "Warning: `startReportingRuntimeErrors` doesn’t accept " +
                          "`launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` " +
                          "instead with your own implementation to open errors in editor "
                      );
                    }
                    currentRuntimeErrorOptions = options;
                    Object(
                      __WEBPACK_IMPORTED_MODULE_0__listenToRuntimeErrors__[
                        "a" /* listenToRuntimeErrors */
                      ]
                    )(function(errorRecord) {
                      try {
                        if (typeof options.onError === "function") {
                          options.onError.call(null);
                        }
                      } finally {
                        handleRuntimeError(errorRecord);
                      }
                    }, options.filename);
                  }

                  function handleRuntimeError(errorRecord) {
                    if (
                      currentRuntimeErrorRecords.some(function(_ref) {
                        var error = _ref.error;
                        return error === errorRecord.error;
                      })
                    ) {
                      // Deduplicate identical errors.
                      // This fixes https://github.com/facebookincubator/create-react-app/issues/3011.
                      return;
                    }
                    currentRuntimeErrorRecords = currentRuntimeErrorRecords.concat(
                      [errorRecord]
                    );
                    update();
                  }

                  function dismissRuntimeErrors() {
                    currentRuntimeErrorRecords = [];
                    update();
                  }

                  function stopReportingRuntimeErrors() {
                    if (stopListeningToRuntimeErrors === null) {
                      throw new Error("Not currently listening");
                    }
                    currentRuntimeErrorOptions = null;
                    try {
                      stopListeningToRuntimeErrors();
                    } finally {
                      stopListeningToRuntimeErrors = null;
                    }
                  }

                  function update() {
                    // Loading iframe can be either sync or async depending on the browser.
                    if (isLoadingIframe) {
                      // Iframe is loading.
                      // First render will happen soon--don't need to do anything.
                      return;
                    }
                    if (isIframeReady) {
                      // Iframe is ready.
                      // Just update it.
                      updateIframeContent();
                      return;
                    }
                    // We need to schedule the first render.
                    isLoadingIframe = true;
                    var loadingIframe = window.document.createElement("iframe");
                    Object(
                      __WEBPACK_IMPORTED_MODULE_2__utils_dom_css__[
                        "a" /* applyStyles */
                      ]
                    )(
                      loadingIframe,
                      __WEBPACK_IMPORTED_MODULE_1__styles__[
                        "a" /* iframeStyle */
                      ]
                    );
                    loadingIframe.onload = function() {
                      var iframeDocument = loadingIframe.contentDocument;
                      if (
                        iframeDocument != null &&
                        iframeDocument.body != null
                      ) {
                        iframe = loadingIframe;
                        var script = loadingIframe.contentWindow.document.createElement(
                          "script"
                        );
                        script.type = "text/javascript";
                        script.innerHTML =
                          __WEBPACK_IMPORTED_MODULE_3_iframeScript___default.a;
                        iframeDocument.body.appendChild(script);
                      }
                    };
                    var appDocument = window.document;
                    appDocument.body.appendChild(loadingIframe);
                  }

                  function updateIframeContent() {
                    if (!currentRuntimeErrorOptions) {
                      throw new Error("Expected options to be injected.");
                    }

                    if (!iframe) {
                      throw new Error("Iframe has not been created yet.");
                    }

                    var isRendered = iframe.contentWindow.updateContent({
                      currentBuildError: currentBuildError,
                      currentRuntimeErrorRecords: currentRuntimeErrorRecords,
                      dismissRuntimeErrors: dismissRuntimeErrors,
                      editorHandler: editorHandler
                    });

                    if (!isRendered) {
                      window.document.body.removeChild(iframe);
                      iframe = null;
                      isIframeReady = false;
                    }
                  }

                  window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ =
                    window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ || {};
                  window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady = function iframeReady() {
                    isIframeReady = true;
                    isLoadingIframe = false;
                    updateIframeContent();
                  };

                  if (process.env.NODE_ENV === "production") {
                    console.warn(
                      "react-error-overlay is not meant for use in production. You should " +
                        "ensure it is not included in your build to reduce bundle size."
                    );
                  }
                  /* WEBPACK VAR INJECTION */
                }.call(__webpack_exports__, __webpack_require__(3)));

                /***/
              },
              /* 10 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (immutable) */ __webpack_exports__[
                  "a"
                ] = listenToRuntimeErrors;
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__effects_unhandledError__ = __webpack_require__(
                  11
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__effects_unhandledRejection__ = __webpack_require__(
                  12
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__effects_stackTraceLimit__ = __webpack_require__(
                  13
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__effects_proxyConsole__ = __webpack_require__(
                  14
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_warnings__ = __webpack_require__(
                  15
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_getStackFrames__ = __webpack_require__(
                  16
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var CONTEXT_SIZE = 3;

                function listenToRuntimeErrors(crash) {
                  var filename =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : "/static/js/bundle.js";

                  function crashWithFrames(error) {
                    var unhandledRejection =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : false;

                    Object(
                      __WEBPACK_IMPORTED_MODULE_5__utils_getStackFrames__[
                        "a" /* default */
                      ]
                    )(error, unhandledRejection, CONTEXT_SIZE)
                      .then(function(stackFrames) {
                        if (stackFrames == null) {
                          return;
                        }
                        crash({
                          error: error,
                          unhandledRejection: unhandledRejection,
                          contextSize: CONTEXT_SIZE,
                          stackFrames: stackFrames
                        });
                      })
                      .catch(function(e) {
                        console.log(
                          "Could not get the stack frames of error:",
                          e
                        );
                      });
                  }
                  Object(
                    __WEBPACK_IMPORTED_MODULE_0__effects_unhandledError__[
                      "a" /* register */
                    ]
                  )(window, function(error) {
                    return crashWithFrames(error, false);
                  });
                  Object(
                    __WEBPACK_IMPORTED_MODULE_1__effects_unhandledRejection__[
                      "a" /* register */
                    ]
                  )(window, function(error) {
                    return crashWithFrames(error, true);
                  });
                  Object(
                    __WEBPACK_IMPORTED_MODULE_2__effects_stackTraceLimit__[
                      "a" /* register */
                    ]
                  )();
                  Object(
                    __WEBPACK_IMPORTED_MODULE_3__effects_proxyConsole__[
                      "b" /* registerReactStack */
                    ]
                  )();
                  Object(
                    __WEBPACK_IMPORTED_MODULE_3__effects_proxyConsole__[
                      "a" /* permanentRegister */
                    ]
                  )("error", function(warning, stack) {
                    var data = Object(
                      __WEBPACK_IMPORTED_MODULE_4__utils_warnings__[
                        "a" /* massage */
                      ]
                    )(warning, stack);
                    crashWithFrames(
                      // $FlowFixMe
                      {
                        message: data.message,
                        stack: data.stack,
                        __unmap_source: filename
                      },
                      false
                    );
                  });

                  return function stopListening() {
                    Object(
                      __WEBPACK_IMPORTED_MODULE_2__effects_stackTraceLimit__[
                        "b" /* unregister */
                      ]
                    )();
                    Object(
                      __WEBPACK_IMPORTED_MODULE_1__effects_unhandledRejection__[
                        "b" /* unregister */
                      ]
                    )(window);
                    Object(
                      __WEBPACK_IMPORTED_MODULE_0__effects_unhandledError__[
                        "b" /* unregister */
                      ]
                    )(window);
                    Object(
                      __WEBPACK_IMPORTED_MODULE_3__effects_proxyConsole__[
                        "c" /* unregisterReactStack */
                      ]
                    )();
                  };
                }

                /***/
              },
              /* 11 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return registerUnhandledError;
                  }
                );
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "b",
                  function() {
                    return unregisterUnhandledError;
                  }
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var boundErrorHandler = null;

                function errorHandler(callback, e) {
                  if (!e.error) {
                    return;
                  }
                  // $FlowFixMe
                  var error = e.error;

                  if (error instanceof Error) {
                    callback(error);
                  } else {
                    // A non-error was thrown, we don't have a trace. :(
                    // Look in your browser's devtools for more information
                    callback(new Error(error));
                  }
                }

                function registerUnhandledError(target, callback) {
                  if (boundErrorHandler !== null) {
                    return;
                  }
                  boundErrorHandler = errorHandler.bind(undefined, callback);
                  target.addEventListener("error", boundErrorHandler);
                }

                function unregisterUnhandledError(target) {
                  if (boundErrorHandler === null) {
                    return;
                  }
                  target.removeEventListener("error", boundErrorHandler);
                  boundErrorHandler = null;
                }

                /***/
              },
              /* 12 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return registerUnhandledRejection;
                  }
                );
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "b",
                  function() {
                    return unregisterUnhandledRejection;
                  }
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var boundRejectionHandler = null;

                function rejectionHandler(callback, e) {
                  if (e == null || e.reason == null) {
                    return callback(new Error("Unknown"));
                  }
                  var reason = e.reason;

                  if (reason instanceof Error) {
                    return callback(reason);
                  }
                  // A non-error was rejected, we don't have a trace :(
                  // Look in your browser's devtools for more information
                  return callback(new Error(reason));
                }

                function registerUnhandledRejection(target, callback) {
                  if (boundRejectionHandler !== null) {
                    return;
                  }
                  boundRejectionHandler = rejectionHandler.bind(
                    undefined,
                    callback
                  );
                  // $FlowFixMe
                  target.addEventListener(
                    "unhandledrejection",
                    boundRejectionHandler
                  );
                }

                function unregisterUnhandledRejection(target) {
                  if (boundRejectionHandler === null) {
                    return;
                  }
                  // $FlowFixMe
                  target.removeEventListener(
                    "unhandledrejection",
                    boundRejectionHandler
                  );
                  boundRejectionHandler = null;
                }

                /***/
              },
              /* 13 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return registerStackTraceLimit;
                  }
                );
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "b",
                  function() {
                    return unregisterStackTraceLimit;
                  }
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var stackTraceRegistered = false;
                // Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
                var restoreStackTraceValue = 10;

                var MAX_STACK_LENGTH = 50;

                function registerStackTraceLimit() {
                  var limit =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : MAX_STACK_LENGTH;

                  if (stackTraceRegistered) {
                    return;
                  }
                  try {
                    restoreStackTraceValue = Error.stackTraceLimit;
                    Error.stackTraceLimit = limit;
                    stackTraceRegistered = true;
                  } catch (e) {
                    // Not all browsers support this so we don't care if it errors
                  }
                }

                function unregisterStackTraceLimit() {
                  if (!stackTraceRegistered) {
                    return;
                  }
                  try {
                    Error.stackTraceLimit = restoreStackTraceValue;
                    stackTraceRegistered = false;
                  } catch (e) {
                    // Not all browsers support this so we don't care if it errors
                  }
                }

                /***/
              },
              /* 14 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return permanentRegister;
                  }
                );
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "b",
                  function() {
                    return registerReactStack;
                  }
                );
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "c",
                  function() {
                    return unregisterReactStack;
                  }
                );

                var reactFrameStack = []; /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                // This is a stripped down barebones version of this proposal:
                // https://gist.github.com/sebmarkbage/bdefa100f19345229d526d0fdd22830f
                // We're implementing just enough to get the invalid element type warnings
                // to display the component stack in React 15.6+:
                // https://github.com/facebook/react/pull/9679
                /// TODO: a more comprehensive implementation.

                var registerReactStack = function registerReactStack() {
                  if (typeof console !== "undefined") {
                    // $FlowFixMe
                    console.reactStack = function(frames) {
                      return reactFrameStack.push(frames);
                    };
                    // $FlowFixMe
                    console.reactStackEnd = function(frames) {
                      return reactFrameStack.pop();
                    };
                  }
                };

                var unregisterReactStack = function unregisterReactStack() {
                  if (typeof console !== "undefined") {
                    // $FlowFixMe
                    console.reactStack = undefined;
                    // $FlowFixMe
                    console.reactStackEnd = undefined;
                  }
                };

                var permanentRegister = function proxyConsole(type, callback) {
                  if (typeof console !== "undefined") {
                    var orig = console[type];
                    if (typeof orig === "function") {
                      console[
                        type
                      ] = function __stack_frame_overlay_proxy_console__() {
                        try {
                          var _message = arguments[0];
                          if (
                            typeof _message === "string" &&
                            reactFrameStack.length > 0
                          ) {
                            callback(
                              _message,
                              reactFrameStack[reactFrameStack.length - 1]
                            );
                          }
                        } catch (err) {
                          // Warnings must never crash. Rethrow with a clean stack.
                          setTimeout(function() {
                            throw err;
                          });
                        }
                        return orig.apply(this, arguments);
                      };
                    }
                  }
                };

                /***/
              },
              /* 15 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return massage;
                  }
                );

                function stripInlineStacktrace(message) {
                  return message
                    .split("\n")
                    .filter(function(line) {
                      return !line.match(/^\s*in/);
                    })
                    .join("\n"); // "  in Foo"
                } /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                function massage(warning, frames) {
                  var message = stripInlineStacktrace(warning);

                  // Reassemble the stack with full filenames provided by React
                  var stack = "";
                  var lastFilename = void 0;
                  var lastLineNumber = void 0;
                  for (var index = 0; index < frames.length; ++index) {
                    var _frames$index = frames[index],
                      fileName = _frames$index.fileName,
                      lineNumber = _frames$index.lineNumber;

                    if (fileName == null || lineNumber == null) {
                      continue;
                    }

                    // TODO: instead, collapse them in the UI
                    if (
                      fileName === lastFilename &&
                      typeof lineNumber === "number" &&
                      typeof lastLineNumber === "number" &&
                      Math.abs(lineNumber - lastLineNumber) < 3
                    ) {
                      continue;
                    }
                    lastFilename = fileName;
                    lastLineNumber = lineNumber;

                    var name = frames[index].name;

                    name = name || "(anonymous function)";
                    stack +=
                      "in " +
                      name +
                      " (at " +
                      fileName +
                      ":" +
                      lineNumber +
                      ")\n";
                  }

                  return { message: message, stack: stack };
                }

                /***/
              },
              /* 16 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* unused harmony export getStackFrames */
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parser__ = __webpack_require__(
                  17
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mapper__ = __webpack_require__(
                  18
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__unmapper__ = __webpack_require__(
                  29
                );

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                function getStackFrames(error) {
                  var unhandledRejection =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : false;
                  var contextSize =
                    arguments.length > 2 && arguments[2] !== undefined
                      ? arguments[2]
                      : 3;

                  var parsedFrames = Object(
                    __WEBPACK_IMPORTED_MODULE_0__parser__["a" /* parse */]
                  )(error);
                  var enhancedFramesPromise = void 0;
                  if (error.__unmap_source) {
                    enhancedFramesPromise = Object(
                      __WEBPACK_IMPORTED_MODULE_2__unmapper__["a" /* unmap */]
                    )(
                      // $FlowFixMe
                      error.__unmap_source,
                      parsedFrames,
                      contextSize
                    );
                  } else {
                    enhancedFramesPromise = Object(
                      __WEBPACK_IMPORTED_MODULE_1__mapper__["a" /* map */]
                    )(parsedFrames, contextSize);
                  }
                  return enhancedFramesPromise.then(function(enhancedFrames) {
                    if (
                      enhancedFrames
                        .map(function(f) {
                          return f._originalFileName;
                        })
                        .filter(function(f) {
                          return f != null && f.indexOf("node_modules") === -1;
                        }).length === 0
                    ) {
                      return null;
                    }
                    return enhancedFrames.filter(function(_ref) {
                      var functionName = _ref.functionName;
                      return (
                        functionName == null ||
                        functionName.indexOf(
                          "__stack_frame_overlay_proxy_console__"
                        ) === -1
                      );
                    });
                  });
                }

                /* harmony default export */ __webpack_exports__[
                  "a"
                ] = getStackFrames;

                /***/
              },
              /* 17 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return parseError;
                  }
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stack_frame__ = __webpack_require__(
                  1
                );
                function _toConsumableArray(arr) {
                  if (Array.isArray(arr)) {
                    for (
                      var i = 0, arr2 = Array(arr.length);
                      i < arr.length;
                      i++
                    ) {
                      arr2[i] = arr[i];
                    }
                    return arr2;
                  } else {
                    return Array.from(arr);
                  }
                }

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;

                function extractLocation(token) {
                  return regexExtractLocation
                    .exec(token)
                    .slice(1)
                    .map(function(v) {
                      var p = Number(v);
                      if (!isNaN(p)) {
                        return p;
                      }
                      return v;
                    });
                }

                var regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
                var regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;

                function parseStack(stack) {
                  var frames = stack
                    .filter(function(e) {
                      return (
                        regexValidFrame_Chrome.test(e) ||
                        regexValidFrame_FireFox.test(e)
                      );
                    })
                    .map(function(e) {
                      if (regexValidFrame_FireFox.test(e)) {
                        // Strip eval, we don't care about it
                        var isEval = false;
                        if (/ > (eval|Function)/.test(e)) {
                          e = e.replace(
                            / line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g,
                            ":$1"
                          );
                          isEval = true;
                        }
                        var data = e.split(/[@]/g);
                        var last = data.pop();
                        return new (Function.prototype.bind.apply(
                          __WEBPACK_IMPORTED_MODULE_0__stack_frame__[
                            "b" /* default */
                          ],
                          [null].concat(
                            [data.join("@") || (isEval ? "eval" : null)],
                            _toConsumableArray(extractLocation(last))
                          )
                        ))();
                      } else {
                        // Strip eval, we don't care about it
                        if (e.indexOf("(eval ") !== -1) {
                          e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, "");
                        }
                        if (e.indexOf("(at ") !== -1) {
                          e = e.replace(/\(at /, "(");
                        }
                        var _data = e
                          .trim()
                          .split(/\s+/g)
                          .slice(1);
                        var _last = _data.pop();
                        return new (Function.prototype.bind.apply(
                          __WEBPACK_IMPORTED_MODULE_0__stack_frame__[
                            "b" /* default */
                          ],
                          [null].concat(
                            [_data.join(" ") || null],
                            _toConsumableArray(extractLocation(_last))
                          )
                        ))();
                      }
                    });
                  return frames;
                }

                /**
                 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
                 * @alias parse
                 */
                function parseError(error) {
                  if (error == null) {
                    throw new Error("You cannot pass a null object.");
                  }
                  if (typeof error === "string") {
                    return parseStack(error.split("\n"));
                  }
                  if (Array.isArray(error)) {
                    return parseStack(error);
                  }
                  if (typeof error.stack === "string") {
                    return parseStack(error.stack.split("\n"));
                  }
                  throw new Error(
                    "The error you provided does not contain a stack trace."
                  );
                }

                /* unused harmony default export */ var _unused_webpack_default_export = parseError;

                /***/
              },
              /* 18 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return map;
                  }
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(
                  2
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stack_frame__ = __webpack_require__(
                  1
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getSourceMap__ = __webpack_require__(
                  4
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getLinesAround__ = __webpack_require__(
                  8
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_settle_promise__ = __webpack_require__(
                  28
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_settle_promise___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_4_settle_promise__
                );

                /**
                 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
                 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
                 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
                 */
                var map = (function() {
                  var _ref = _asyncToGenerator(
                    /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                      function _callee2(frames) {
                        var _this = this;

                        var contextLines =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : 3;
                        var cache, files;
                        return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                          function _callee2$(_context2) {
                            while (1) {
                              switch ((_context2.prev = _context2.next)) {
                                case 0:
                                  cache = {};
                                  files = [];

                                  frames.forEach(function(frame) {
                                    var fileName = frame.fileName;

                                    if (fileName == null) {
                                      return;
                                    }
                                    if (files.indexOf(fileName) !== -1) {
                                      return;
                                    }
                                    files.push(fileName);
                                  });
                                  _context2.next = 5;
                                  return Object(
                                    __WEBPACK_IMPORTED_MODULE_4_settle_promise__[
                                      "settle"
                                    ]
                                  )(
                                    files.map(
                                      (function() {
                                        var _ref2 = _asyncToGenerator(
                                          /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                                            function _callee(fileName) {
                                              var fileSource, map;
                                              return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                                                function _callee$(_context) {
                                                  while (1) {
                                                    switch ((_context.prev =
                                                      _context.next)) {
                                                      case 0:
                                                        _context.next = 2;
                                                        return fetch(
                                                          fileName
                                                        ).then(function(r) {
                                                          return r.text();
                                                        });

                                                      case 2:
                                                        fileSource =
                                                          _context.sent;
                                                        _context.next = 5;
                                                        return Object(
                                                          __WEBPACK_IMPORTED_MODULE_2__getSourceMap__[
                                                            "a" /* getSourceMap */
                                                          ]
                                                        )(fileName, fileSource);

                                                      case 5:
                                                        map = _context.sent;

                                                        cache[fileName] = {
                                                          fileSource: fileSource,
                                                          map: map
                                                        };

                                                      case 7:
                                                      case "end":
                                                        return _context.stop();
                                                    }
                                                  }
                                                },
                                                _callee,
                                                _this
                                              );
                                            }
                                          )
                                        );

                                        return function(_x3) {
                                          return _ref2.apply(this, arguments);
                                        };
                                      })()
                                    )
                                  );

                                case 5:
                                  return _context2.abrupt(
                                    "return",
                                    frames.map(function(frame) {
                                      var functionName = frame.functionName,
                                        fileName = frame.fileName,
                                        lineNumber = frame.lineNumber,
                                        columnNumber = frame.columnNumber;

                                      var _ref3 = cache[fileName] || {},
                                        map = _ref3.map,
                                        fileSource = _ref3.fileSource;

                                      if (map == null || lineNumber == null) {
                                        return frame;
                                      }

                                      var _map$getOriginalPosit = map.getOriginalPosition(
                                          lineNumber,
                                          columnNumber
                                        ),
                                        source = _map$getOriginalPosit.source,
                                        line = _map$getOriginalPosit.line,
                                        column = _map$getOriginalPosit.column;

                                      var originalSource =
                                        source == null
                                          ? []
                                          : map.getSource(source);
                                      return new __WEBPACK_IMPORTED_MODULE_1__stack_frame__[
                                        "b" /* default */
                                      ](functionName, fileName, lineNumber, columnNumber, Object(__WEBPACK_IMPORTED_MODULE_3__getLinesAround__["a" /* getLinesAround */])(lineNumber, contextLines, fileSource), functionName, source, line, column, Object(__WEBPACK_IMPORTED_MODULE_3__getLinesAround__["a" /* getLinesAround */])(line, contextLines, originalSource));
                                    })
                                  );

                                case 6:
                                case "end":
                                  return _context2.stop();
                              }
                            }
                          },
                          _callee2,
                          this
                        );
                      }
                    )
                  );

                  return function map(_x2) {
                    return _ref.apply(this, arguments);
                  };
                })();

                function _asyncToGenerator(fn) {
                  return function() {
                    var gen = fn.apply(this, arguments);
                    return new Promise(function(resolve, reject) {
                      function step(key, arg) {
                        try {
                          var info = gen[key](arg);
                          var value = info.value;
                        } catch (error) {
                          reject(error);
                          return;
                        }
                        if (info.done) {
                          resolve(value);
                        } else {
                          return Promise.resolve(value).then(
                            function(value) {
                              step("next", value);
                            },
                            function(err) {
                              step("throw", err);
                            }
                          );
                        }
                      }
                      return step("next");
                    });
                  };
                }

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                /* unused harmony default export */ var _unused_webpack_default_export = map;

                /***/
              },
              /* 19 */
              /***/ function(module, exports, __webpack_require__) {
                // This method of obtaining a reference to the global object needs to be
                // kept identical to the way it is obtained in runtime.js
                var g =
                  (function() {
                    return this;
                  })() || Function("return this")();

                // Use `getOwnPropertyNames` because not all browsers support calling
                // `hasOwnProperty` on the global `self` object in a worker. See #183.
                var hadRuntime =
                  g.regeneratorRuntime &&
                  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >=
                    0;

                // Save the old regeneratorRuntime in case it needs to be restored later.
                var oldRuntime = hadRuntime && g.regeneratorRuntime;

                // Force reevalutation of runtime.js.
                g.regeneratorRuntime = undefined;

                module.exports = __webpack_require__(20);

                if (hadRuntime) {
                  // Restore the original runtime.
                  g.regeneratorRuntime = oldRuntime;
                } else {
                  // Remove the global property added by runtime.js.
                  try {
                    delete g.regeneratorRuntime;
                  } catch (e) {
                    g.regeneratorRuntime = undefined;
                  }
                }

                /***/
              },
              /* 20 */
              /***/ function(module, exports) {
                /**
                 * Copyright (c) 2014, Facebook, Inc.
                 * All rights reserved.
                 *
                 * This source code is licensed under the BSD-style license found in the
                 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
                 * additional grant of patent rights can be found in the PATENTS file in
                 * the same directory.
                 */

                !(function(global) {
                  "use strict";

                  var Op = Object.prototype;
                  var hasOwn = Op.hasOwnProperty;
                  var undefined; // More compressible than void 0.
                  var $Symbol = typeof Symbol === "function" ? Symbol : {};
                  var iteratorSymbol = $Symbol.iterator || "@@iterator";
                  var asyncIteratorSymbol =
                    $Symbol.asyncIterator || "@@asyncIterator";
                  var toStringTagSymbol =
                    $Symbol.toStringTag || "@@toStringTag";

                  var inModule = typeof module === "object";
                  var runtime = global.regeneratorRuntime;
                  if (runtime) {
                    if (inModule) {
                      // If regeneratorRuntime is defined globally and we're in a module,
                      // make the exports object identical to regeneratorRuntime.
                      module.exports = runtime;
                    }
                    // Don't bother evaluating the rest of this file if the runtime was
                    // already defined globally.
                    return;
                  }

                  // Define the runtime globally (as expected by generated code) as either
                  // module.exports (if we're in a module) or a new, empty object.
                  runtime = global.regeneratorRuntime = inModule
                    ? module.exports
                    : {};

                  function wrap(innerFn, outerFn, self, tryLocsList) {
                    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
                    var protoGenerator =
                      outerFn && outerFn.prototype instanceof Generator
                        ? outerFn
                        : Generator;
                    var generator = Object.create(protoGenerator.prototype);
                    var context = new Context(tryLocsList || []);

                    // The ._invoke method unifies the implementations of the .next,
                    // .throw, and .return methods.
                    generator._invoke = makeInvokeMethod(
                      innerFn,
                      self,
                      context
                    );

                    return generator;
                  }
                  runtime.wrap = wrap;

                  // Try/catch helper to minimize deoptimizations. Returns a completion
                  // record like context.tryEntries[i].completion. This interface could
                  // have been (and was previously) designed to take a closure to be
                  // invoked without arguments, but in all the cases we care about we
                  // already have an existing method we want to call, so there's no need
                  // to create a new function object. We can even get away with assuming
                  // the method takes exactly one argument, since that happens to be true
                  // in every case, so we don't have to touch the arguments object. The
                  // only additional allocation required is the completion record, which
                  // has a stable shape and so hopefully should be cheap to allocate.
                  function tryCatch(fn, obj, arg) {
                    try {
                      return { type: "normal", arg: fn.call(obj, arg) };
                    } catch (err) {
                      return { type: "throw", arg: err };
                    }
                  }

                  var GenStateSuspendedStart = "suspendedStart";
                  var GenStateSuspendedYield = "suspendedYield";
                  var GenStateExecuting = "executing";
                  var GenStateCompleted = "completed";

                  // Returning this object from the innerFn has the same effect as
                  // breaking out of the dispatch switch statement.
                  var ContinueSentinel = {};

                  // Dummy constructor functions that we use as the .constructor and
                  // .constructor.prototype properties for functions that return Generator
                  // objects. For full spec compliance, you may wish to configure your
                  // minifier not to mangle the names of these two functions.
                  function Generator() {}
                  function GeneratorFunction() {}
                  function GeneratorFunctionPrototype() {}

                  // This is a polyfill for %IteratorPrototype% for environments that
                  // don't natively support it.
                  var IteratorPrototype = {};
                  IteratorPrototype[iteratorSymbol] = function() {
                    return this;
                  };

                  var getProto = Object.getPrototypeOf;
                  var NativeIteratorPrototype =
                    getProto && getProto(getProto(values([])));
                  if (
                    NativeIteratorPrototype &&
                    NativeIteratorPrototype !== Op &&
                    hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
                  ) {
                    // This environment has a native %IteratorPrototype%; use it instead
                    // of the polyfill.
                    IteratorPrototype = NativeIteratorPrototype;
                  }

                  var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
                    IteratorPrototype
                  ));
                  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
                  GeneratorFunctionPrototype.constructor = GeneratorFunction;
                  GeneratorFunctionPrototype[
                    toStringTagSymbol
                  ] = GeneratorFunction.displayName = "GeneratorFunction";

                  // Helper for defining the .next, .throw, and .return methods of the
                  // Iterator interface in terms of a single ._invoke method.
                  function defineIteratorMethods(prototype) {
                    ["next", "throw", "return"].forEach(function(method) {
                      prototype[method] = function(arg) {
                        return this._invoke(method, arg);
                      };
                    });
                  }

                  runtime.isGeneratorFunction = function(genFun) {
                    var ctor =
                      typeof genFun === "function" && genFun.constructor;
                    return ctor
                      ? ctor === GeneratorFunction ||
                          // For the native GeneratorFunction constructor, the best we can
                          // do is to check its .name property.
                          (ctor.displayName || ctor.name) ===
                            "GeneratorFunction"
                      : false;
                  };

                  runtime.mark = function(genFun) {
                    if (Object.setPrototypeOf) {
                      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                    } else {
                      genFun.__proto__ = GeneratorFunctionPrototype;
                      if (!(toStringTagSymbol in genFun)) {
                        genFun[toStringTagSymbol] = "GeneratorFunction";
                      }
                    }
                    genFun.prototype = Object.create(Gp);
                    return genFun;
                  };

                  // Within the body of any async function, `await x` is transformed to
                  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
                  // `hasOwn.call(value, "__await")` to determine if the yielded value is
                  // meant to be awaited.
                  runtime.awrap = function(arg) {
                    return { __await: arg };
                  };

                  function AsyncIterator(generator) {
                    function invoke(method, arg, resolve, reject) {
                      var record = tryCatch(generator[method], generator, arg);
                      if (record.type === "throw") {
                        reject(record.arg);
                      } else {
                        var result = record.arg;
                        var value = result.value;
                        if (
                          value &&
                          typeof value === "object" &&
                          hasOwn.call(value, "__await")
                        ) {
                          return Promise.resolve(value.__await).then(
                            function(value) {
                              invoke("next", value, resolve, reject);
                            },
                            function(err) {
                              invoke("throw", err, resolve, reject);
                            }
                          );
                        }

                        return Promise.resolve(value).then(function(unwrapped) {
                          // When a yielded Promise is resolved, its final value becomes
                          // the .value of the Promise<{value,done}> result for the
                          // current iteration. If the Promise is rejected, however, the
                          // result for this iteration will be rejected with the same
                          // reason. Note that rejections of yielded Promises are not
                          // thrown back into the generator function, as is the case
                          // when an awaited Promise is rejected. This difference in
                          // behavior between yield and await is important, because it
                          // allows the consumer to decide what to do with the yielded
                          // rejection (swallow it and continue, manually .throw it back
                          // into the generator, abandon iteration, whatever). With
                          // await, by contrast, there is no opportunity to examine the
                          // rejection reason outside the generator function, so the
                          // only option is to throw it from the await expression, and
                          // let the generator function handle the exception.
                          result.value = unwrapped;
                          resolve(result);
                        }, reject);
                      }
                    }

                    var previousPromise;

                    function enqueue(method, arg) {
                      function callInvokeWithMethodAndArg() {
                        return new Promise(function(resolve, reject) {
                          invoke(method, arg, resolve, reject);
                        });
                      }

                      return (previousPromise =
                        // If enqueue has been called before, then we want to wait until
                        // all previous Promises have been resolved before calling invoke,
                        // so that results are always delivered in the correct order. If
                        // enqueue has not been called before, then it is important to
                        // call invoke immediately, without waiting on a callback to fire,
                        // so that the async generator function has the opportunity to do
                        // any necessary setup in a predictable way. This predictability
                        // is why the Promise constructor synchronously invokes its
                        // executor callback, and why async functions synchronously
                        // execute code before the first await. Since we implement simple
                        // async functions in terms of async generators, it is especially
                        // important to get this right, even though it requires care.
                        previousPromise
                          ? previousPromise.then(
                              callInvokeWithMethodAndArg,
                              // Avoid propagating failures to Promises returned by later
                              // invocations of the iterator.
                              callInvokeWithMethodAndArg
                            )
                          : callInvokeWithMethodAndArg());
                    }

                    // Define the unified helper method that is used to implement .next,
                    // .throw, and .return (see defineIteratorMethods).
                    this._invoke = enqueue;
                  }

                  defineIteratorMethods(AsyncIterator.prototype);
                  AsyncIterator.prototype[asyncIteratorSymbol] = function() {
                    return this;
                  };
                  runtime.AsyncIterator = AsyncIterator;

                  // Note that simple async functions are implemented on top of
                  // AsyncIterator objects; they just return a Promise for the value of
                  // the final result produced by the iterator.
                  runtime.async = function(
                    innerFn,
                    outerFn,
                    self,
                    tryLocsList
                  ) {
                    var iter = new AsyncIterator(
                      wrap(innerFn, outerFn, self, tryLocsList)
                    );

                    return runtime.isGeneratorFunction(outerFn)
                      ? iter // If outerFn is a generator, return the full iterator.
                      : iter.next().then(function(result) {
                          return result.done ? result.value : iter.next();
                        });
                  };

                  function makeInvokeMethod(innerFn, self, context) {
                    var state = GenStateSuspendedStart;

                    return function invoke(method, arg) {
                      if (state === GenStateExecuting) {
                        throw new Error("Generator is already running");
                      }

                      if (state === GenStateCompleted) {
                        if (method === "throw") {
                          throw arg;
                        }

                        // Be forgiving, per 25.3.3.3.3 of the spec:
                        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                        return doneResult();
                      }

                      context.method = method;
                      context.arg = arg;

                      while (true) {
                        var delegate = context.delegate;
                        if (delegate) {
                          var delegateResult = maybeInvokeDelegate(
                            delegate,
                            context
                          );
                          if (delegateResult) {
                            if (delegateResult === ContinueSentinel) continue;
                            return delegateResult;
                          }
                        }

                        if (context.method === "next") {
                          // Setting context._sent for legacy support of Babel's
                          // function.sent implementation.
                          context.sent = context._sent = context.arg;
                        } else if (context.method === "throw") {
                          if (state === GenStateSuspendedStart) {
                            state = GenStateCompleted;
                            throw context.arg;
                          }

                          context.dispatchException(context.arg);
                        } else if (context.method === "return") {
                          context.abrupt("return", context.arg);
                        }

                        state = GenStateExecuting;

                        var record = tryCatch(innerFn, self, context);
                        if (record.type === "normal") {
                          // If an exception is thrown from innerFn, we leave state ===
                          // GenStateExecuting and loop back for another invocation.
                          state = context.done
                            ? GenStateCompleted
                            : GenStateSuspendedYield;

                          if (record.arg === ContinueSentinel) {
                            continue;
                          }

                          return {
                            value: record.arg,
                            done: context.done
                          };
                        } else if (record.type === "throw") {
                          state = GenStateCompleted;
                          // Dispatch the exception by looping back around to the
                          // context.dispatchException(context.arg) call above.
                          context.method = "throw";
                          context.arg = record.arg;
                        }
                      }
                    };
                  }

                  // Call delegate.iterator[context.method](context.arg) and handle the
                  // result, either by returning a { value, done } result from the
                  // delegate iterator, or by modifying context.method and context.arg,
                  // setting context.delegate to null, and returning the ContinueSentinel.
                  function maybeInvokeDelegate(delegate, context) {
                    var method = delegate.iterator[context.method];
                    if (method === undefined) {
                      // A .throw or .return when the delegate iterator has no .throw
                      // method always terminates the yield* loop.
                      context.delegate = null;

                      if (context.method === "throw") {
                        if (delegate.iterator.return) {
                          // If the delegate iterator has a return method, give it a
                          // chance to clean up.
                          context.method = "return";
                          context.arg = undefined;
                          maybeInvokeDelegate(delegate, context);

                          if (context.method === "throw") {
                            // If maybeInvokeDelegate(context) changed context.method from
                            // "return" to "throw", let that override the TypeError below.
                            return ContinueSentinel;
                          }
                        }

                        context.method = "throw";
                        context.arg = new TypeError(
                          "The iterator does not provide a 'throw' method"
                        );
                      }

                      return ContinueSentinel;
                    }

                    var record = tryCatch(
                      method,
                      delegate.iterator,
                      context.arg
                    );

                    if (record.type === "throw") {
                      context.method = "throw";
                      context.arg = record.arg;
                      context.delegate = null;
                      return ContinueSentinel;
                    }

                    var info = record.arg;

                    if (!info) {
                      context.method = "throw";
                      context.arg = new TypeError(
                        "iterator result is not an object"
                      );
                      context.delegate = null;
                      return ContinueSentinel;
                    }

                    if (info.done) {
                      // Assign the result of the finished delegate to the temporary
                      // variable specified by delegate.resultName (see delegateYield).
                      context[delegate.resultName] = info.value;

                      // Resume execution at the desired location (see delegateYield).
                      context.next = delegate.nextLoc;

                      // If context.method was "throw" but the delegate handled the
                      // exception, let the outer generator proceed normally. If
                      // context.method was "next", forget context.arg since it has been
                      // "consumed" by the delegate iterator. If context.method was
                      // "return", allow the original .return call to continue in the
                      // outer generator.
                      if (context.method !== "return") {
                        context.method = "next";
                        context.arg = undefined;
                      }
                    } else {
                      // Re-yield the result returned by the delegate method.
                      return info;
                    }

                    // The delegate iterator is finished, so forget it and continue with
                    // the outer generator.
                    context.delegate = null;
                    return ContinueSentinel;
                  }

                  // Define Generator.prototype.{next,throw,return} in terms of the
                  // unified ._invoke helper method.
                  defineIteratorMethods(Gp);

                  Gp[toStringTagSymbol] = "Generator";

                  // A Generator should always return itself as the iterator object when the
                  // @@iterator function is called on it. Some browsers' implementations of the
                  // iterator prototype chain incorrectly implement this, causing the Generator
                  // object to not be returned from this call. This ensures that doesn't happen.
                  // See https://github.com/facebook/regenerator/issues/274 for more details.
                  Gp[iteratorSymbol] = function() {
                    return this;
                  };

                  Gp.toString = function() {
                    return "[object Generator]";
                  };

                  function pushTryEntry(locs) {
                    var entry = { tryLoc: locs[0] };

                    if (1 in locs) {
                      entry.catchLoc = locs[1];
                    }

                    if (2 in locs) {
                      entry.finallyLoc = locs[2];
                      entry.afterLoc = locs[3];
                    }

                    this.tryEntries.push(entry);
                  }

                  function resetTryEntry(entry) {
                    var record = entry.completion || {};
                    record.type = "normal";
                    delete record.arg;
                    entry.completion = record;
                  }

                  function Context(tryLocsList) {
                    // The root entry object (effectively a try statement without a catch
                    // or a finally block) gives us a place to store values thrown from
                    // locations where there is no enclosing try statement.
                    this.tryEntries = [{ tryLoc: "root" }];
                    tryLocsList.forEach(pushTryEntry, this);
                    this.reset(true);
                  }

                  runtime.keys = function(object) {
                    var keys = [];
                    for (var key in object) {
                      keys.push(key);
                    }
                    keys.reverse();

                    // Rather than returning an object with a next method, we keep
                    // things simple and return the next function itself.
                    return function next() {
                      while (keys.length) {
                        var key = keys.pop();
                        if (key in object) {
                          next.value = key;
                          next.done = false;
                          return next;
                        }
                      }

                      // To avoid creating an additional object, we just hang the .value
                      // and .done properties off the next function object itself. This
                      // also ensures that the minifier will not anonymize the function.
                      next.done = true;
                      return next;
                    };
                  };

                  function values(iterable) {
                    if (iterable) {
                      var iteratorMethod = iterable[iteratorSymbol];
                      if (iteratorMethod) {
                        return iteratorMethod.call(iterable);
                      }

                      if (typeof iterable.next === "function") {
                        return iterable;
                      }

                      if (!isNaN(iterable.length)) {
                        var i = -1,
                          next = function next() {
                            while (++i < iterable.length) {
                              if (hasOwn.call(iterable, i)) {
                                next.value = iterable[i];
                                next.done = false;
                                return next;
                              }
                            }

                            next.value = undefined;
                            next.done = true;

                            return next;
                          };

                        return (next.next = next);
                      }
                    }

                    // Return an iterator with no values.
                    return { next: doneResult };
                  }
                  runtime.values = values;

                  function doneResult() {
                    return { value: undefined, done: true };
                  }

                  Context.prototype = {
                    constructor: Context,

                    reset: function(skipTempReset) {
                      this.prev = 0;
                      this.next = 0;
                      // Resetting context._sent for legacy support of Babel's
                      // function.sent implementation.
                      this.sent = this._sent = undefined;
                      this.done = false;
                      this.delegate = null;

                      this.method = "next";
                      this.arg = undefined;

                      this.tryEntries.forEach(resetTryEntry);

                      if (!skipTempReset) {
                        for (var name in this) {
                          // Not sure about the optimal order of these conditions:
                          if (
                            name.charAt(0) === "t" &&
                            hasOwn.call(this, name) &&
                            !isNaN(+name.slice(1))
                          ) {
                            this[name] = undefined;
                          }
                        }
                      }
                    },

                    stop: function() {
                      this.done = true;

                      var rootEntry = this.tryEntries[0];
                      var rootRecord = rootEntry.completion;
                      if (rootRecord.type === "throw") {
                        throw rootRecord.arg;
                      }

                      return this.rval;
                    },

                    dispatchException: function(exception) {
                      if (this.done) {
                        throw exception;
                      }

                      var context = this;
                      function handle(loc, caught) {
                        record.type = "throw";
                        record.arg = exception;
                        context.next = loc;

                        if (caught) {
                          // If the dispatched exception was caught by a catch block,
                          // then let that catch block handle the exception normally.
                          context.method = "next";
                          context.arg = undefined;
                        }

                        return !!caught;
                      }

                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        var record = entry.completion;

                        if (entry.tryLoc === "root") {
                          // Exception thrown outside of any try block that could handle
                          // it, so set the completion value of the entire function to
                          // throw the exception.
                          return handle("end");
                        }

                        if (entry.tryLoc <= this.prev) {
                          var hasCatch = hasOwn.call(entry, "catchLoc");
                          var hasFinally = hasOwn.call(entry, "finallyLoc");

                          if (hasCatch && hasFinally) {
                            if (this.prev < entry.catchLoc) {
                              return handle(entry.catchLoc, true);
                            } else if (this.prev < entry.finallyLoc) {
                              return handle(entry.finallyLoc);
                            }
                          } else if (hasCatch) {
                            if (this.prev < entry.catchLoc) {
                              return handle(entry.catchLoc, true);
                            }
                          } else if (hasFinally) {
                            if (this.prev < entry.finallyLoc) {
                              return handle(entry.finallyLoc);
                            }
                          } else {
                            throw new Error(
                              "try statement without catch or finally"
                            );
                          }
                        }
                      }
                    },

                    abrupt: function(type, arg) {
                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (
                          entry.tryLoc <= this.prev &&
                          hasOwn.call(entry, "finallyLoc") &&
                          this.prev < entry.finallyLoc
                        ) {
                          var finallyEntry = entry;
                          break;
                        }
                      }

                      if (
                        finallyEntry &&
                        (type === "break" || type === "continue") &&
                        finallyEntry.tryLoc <= arg &&
                        arg <= finallyEntry.finallyLoc
                      ) {
                        // Ignore the finally entry if control is not jumping to a
                        // location outside the try/catch block.
                        finallyEntry = null;
                      }

                      var record = finallyEntry ? finallyEntry.completion : {};
                      record.type = type;
                      record.arg = arg;

                      if (finallyEntry) {
                        this.method = "next";
                        this.next = finallyEntry.finallyLoc;
                        return ContinueSentinel;
                      }

                      return this.complete(record);
                    },

                    complete: function(record, afterLoc) {
                      if (record.type === "throw") {
                        throw record.arg;
                      }

                      if (
                        record.type === "break" ||
                        record.type === "continue"
                      ) {
                        this.next = record.arg;
                      } else if (record.type === "return") {
                        this.rval = this.arg = record.arg;
                        this.method = "return";
                        this.next = "end";
                      } else if (record.type === "normal" && afterLoc) {
                        this.next = afterLoc;
                      }

                      return ContinueSentinel;
                    },

                    finish: function(finallyLoc) {
                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) {
                          this.complete(entry.completion, entry.afterLoc);
                          resetTryEntry(entry);
                          return ContinueSentinel;
                        }
                      }
                    },

                    catch: function(tryLoc) {
                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                          var record = entry.completion;
                          if (record.type === "throw") {
                            var thrown = record.arg;
                            resetTryEntry(entry);
                          }
                          return thrown;
                        }
                      }

                      // The context.catch method must only be called with a location
                      // argument that corresponds to a known catch block.
                      throw new Error("illegal catch attempt");
                    },

                    delegateYield: function(iterable, resultName, nextLoc) {
                      this.delegate = {
                        iterator: values(iterable),
                        resultName: resultName,
                        nextLoc: nextLoc
                      };

                      if (this.method === "next") {
                        // Deliberately forget the last sent value so that we don't
                        // accidentally pass it on to the delegate.
                        this.arg = undefined;
                      }

                      return ContinueSentinel;
                    }
                  };
                })(
                  // In sloppy mode, unbound `this` refers to the global object, fallback to
                  // Function constructor if we're in global strict mode. That is sadly a form
                  // of indirect eval which violates Content Security Policy.
                  (function() {
                    return this;
                  })() || Function("return this")()
                );

                /***/
              },
              /* 21 */
              /***/ function(module, exports, __webpack_require__) {
                /*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
                exports.SourceMapGenerator = __webpack_require__(
                  5
                ).SourceMapGenerator;
                exports.SourceMapConsumer = __webpack_require__(
                  24
                ).SourceMapConsumer;
                exports.SourceNode = __webpack_require__(27).SourceNode;

                /***/
              },
              /* 22 */
              /***/ function(module, exports) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var intToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
                  ""
                );

                /**
                 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
                 */
                exports.encode = function(number) {
                  if (0 <= number && number < intToCharMap.length) {
                    return intToCharMap[number];
                  }
                  throw new TypeError("Must be between 0 and 63: " + number);
                };

                /**
                 * Decode a single base 64 character code digit to an integer. Returns -1 on
                 * failure.
                 */
                exports.decode = function(charCode) {
                  var bigA = 65; // 'A'
                  var bigZ = 90; // 'Z'

                  var littleA = 97; // 'a'
                  var littleZ = 122; // 'z'

                  var zero = 48; // '0'
                  var nine = 57; // '9'

                  var plus = 43; // '+'
                  var slash = 47; // '/'

                  var littleOffset = 26;
                  var numberOffset = 52;

                  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
                  if (bigA <= charCode && charCode <= bigZ) {
                    return charCode - bigA;
                  }

                  // 26 - 51: abcdefghijklmnopqrstuvwxyz
                  if (littleA <= charCode && charCode <= littleZ) {
                    return charCode - littleA + littleOffset;
                  }

                  // 52 - 61: 0123456789
                  if (zero <= charCode && charCode <= nine) {
                    return charCode - zero + numberOffset;
                  }

                  // 62: +
                  if (charCode == plus) {
                    return 62;
                  }

                  // 63: /
                  if (charCode == slash) {
                    return 63;
                  }

                  // Invalid base64 digit.
                  return -1;
                };

                /***/
              },
              /* 23 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var util = __webpack_require__(0);

                /**
                 * Determine whether mappingB is after mappingA with respect to generated
                 * position.
                 */
                function generatedPositionAfter(mappingA, mappingB) {
                  // Optimized for most common case
                  var lineA = mappingA.generatedLine;
                  var lineB = mappingB.generatedLine;
                  var columnA = mappingA.generatedColumn;
                  var columnB = mappingB.generatedColumn;
                  return (
                    lineB > lineA ||
                    (lineB == lineA && columnB >= columnA) ||
                    util.compareByGeneratedPositionsInflated(
                      mappingA,
                      mappingB
                    ) <= 0
                  );
                }

                /**
                 * A data structure to provide a sorted view of accumulated mappings in a
                 * performance conscious manner. It trades a neglibable overhead in general
                 * case for a large speedup in case of mappings being added in order.
                 */
                function MappingList() {
                  this._array = [];
                  this._sorted = true;
                  // Serves as infimum
                  this._last = { generatedLine: -1, generatedColumn: 0 };
                }

                /**
                 * Iterate through internal items. This method takes the same arguments that
                 * `Array.prototype.forEach` takes.
                 *
                 * NOTE: The order of the mappings is NOT guaranteed.
                 */
                MappingList.prototype.unsortedForEach = function MappingList_forEach(
                  aCallback,
                  aThisArg
                ) {
                  this._array.forEach(aCallback, aThisArg);
                };

                /**
                 * Add the given source mapping.
                 *
                 * @param Object aMapping
                 */
                MappingList.prototype.add = function MappingList_add(aMapping) {
                  if (generatedPositionAfter(this._last, aMapping)) {
                    this._last = aMapping;
                    this._array.push(aMapping);
                  } else {
                    this._sorted = false;
                    this._array.push(aMapping);
                  }
                };

                /**
                 * Returns the flat, sorted array of mappings. The mappings are sorted by
                 * generated position.
                 *
                 * WARNING: This method returns internal data without copying, for
                 * performance. The return value must NOT be mutated, and should be treated as
                 * an immutable borrow. If you want to take ownership, you must make your own
                 * copy.
                 */
                MappingList.prototype.toArray = function MappingList_toArray() {
                  if (!this._sorted) {
                    this._array.sort(util.compareByGeneratedPositionsInflated);
                    this._sorted = true;
                  }
                  return this._array;
                };

                exports.MappingList = MappingList;

                /***/
              },
              /* 24 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var util = __webpack_require__(0);
                var binarySearch = __webpack_require__(25);
                var ArraySet = __webpack_require__(7).ArraySet;
                var base64VLQ = __webpack_require__(6);
                var quickSort = __webpack_require__(26).quickSort;

                function SourceMapConsumer(aSourceMap) {
                  var sourceMap = aSourceMap;
                  if (typeof aSourceMap === "string") {
                    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ""));
                  }

                  return sourceMap.sections != null
                    ? new IndexedSourceMapConsumer(sourceMap)
                    : new BasicSourceMapConsumer(sourceMap);
                }

                SourceMapConsumer.fromSourceMap = function(aSourceMap) {
                  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
                };

                /**
                 * The version of the source mapping spec that we are consuming.
                 */
                SourceMapConsumer.prototype._version = 3;

                // `__generatedMappings` and `__originalMappings` are arrays that hold the
                // parsed mapping coordinates from the source map's "mappings" attribute. They
                // are lazily instantiated, accessed via the `_generatedMappings` and
                // `_originalMappings` getters respectively, and we only parse the mappings
                // and create these arrays once queried for a source location. We jump through
                // these hoops because there can be many thousands of mappings, and parsing
                // them is expensive, so we only want to do it if we must.
                //
                // Each object in the arrays is of the form:
                //
                //     {
                //       generatedLine: The line number in the generated code,
                //       generatedColumn: The column number in the generated code,
                //       source: The path to the original source file that generated this
                //               chunk of code,
                //       originalLine: The line number in the original source that
                //                     corresponds to this chunk of generated code,
                //       originalColumn: The column number in the original source that
                //                       corresponds to this chunk of generated code,
                //       name: The name of the original symbol which generated this chunk of
                //             code.
                //     }
                //
                // All properties except for `generatedLine` and `generatedColumn` can be
                // `null`.
                //
                // `_generatedMappings` is ordered by the generated positions.
                //
                // `_originalMappings` is ordered by the original positions.

                SourceMapConsumer.prototype.__generatedMappings = null;
                Object.defineProperty(
                  SourceMapConsumer.prototype,
                  "_generatedMappings",
                  {
                    get: function() {
                      if (!this.__generatedMappings) {
                        this._parseMappings(this._mappings, this.sourceRoot);
                      }

                      return this.__generatedMappings;
                    }
                  }
                );

                SourceMapConsumer.prototype.__originalMappings = null;
                Object.defineProperty(
                  SourceMapConsumer.prototype,
                  "_originalMappings",
                  {
                    get: function() {
                      if (!this.__originalMappings) {
                        this._parseMappings(this._mappings, this.sourceRoot);
                      }

                      return this.__originalMappings;
                    }
                  }
                );

                SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(
                  aStr,
                  index
                ) {
                  var c = aStr.charAt(index);
                  return c === ";" || c === ",";
                };

                /**
                 * Parse the mappings in a string in to a data structure which we can easily
                 * query (the ordered arrays in the `this.__generatedMappings` and
                 * `this.__originalMappings` properties).
                 */
                SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(
                  aStr,
                  aSourceRoot
                ) {
                  throw new Error("Subclasses must implement _parseMappings");
                };

                SourceMapConsumer.GENERATED_ORDER = 1;
                SourceMapConsumer.ORIGINAL_ORDER = 2;

                SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
                SourceMapConsumer.LEAST_UPPER_BOUND = 2;

                /**
                 * Iterate over each mapping between an original source/line/column and a
                 * generated line/column in this source map.
                 *
                 * @param Function aCallback
                 *        The function that is called with each mapping.
                 * @param Object aContext
                 *        Optional. If specified, this object will be the value of `this` every
                 *        time that `aCallback` is called.
                 * @param aOrder
                 *        Either `SourceMapConsumer.GENERATED_ORDER` or
                 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
                 *        iterate over the mappings sorted by the generated file's line/column
                 *        order or the original's source/line/column order, respectively. Defaults to
                 *        `SourceMapConsumer.GENERATED_ORDER`.
                 */
                SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(
                  aCallback,
                  aContext,
                  aOrder
                ) {
                  var context = aContext || null;
                  var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

                  var mappings;
                  switch (order) {
                    case SourceMapConsumer.GENERATED_ORDER:
                      mappings = this._generatedMappings;
                      break;
                    case SourceMapConsumer.ORIGINAL_ORDER:
                      mappings = this._originalMappings;
                      break;
                    default:
                      throw new Error("Unknown order of iteration.");
                  }

                  var sourceRoot = this.sourceRoot;
                  mappings
                    .map(function(mapping) {
                      var source =
                        mapping.source === null
                          ? null
                          : this._sources.at(mapping.source);
                      if (source != null && sourceRoot != null) {
                        source = util.join(sourceRoot, source);
                      }
                      return {
                        source: source,
                        generatedLine: mapping.generatedLine,
                        generatedColumn: mapping.generatedColumn,
                        originalLine: mapping.originalLine,
                        originalColumn: mapping.originalColumn,
                        name:
                          mapping.name === null
                            ? null
                            : this._names.at(mapping.name)
                      };
                    }, this)
                    .forEach(aCallback, context);
                };

                /**
                 * Returns all generated line and column information for the original source,
                 * line, and column provided. If no column is provided, returns all mappings
                 * corresponding to a either the line we are searching for or the next
                 * closest line that has any mappings. Otherwise, returns all mappings
                 * corresponding to the given line and either the column we are searching for
                 * or the next closest column that has any offsets.
                 *
                 * The only argument is an object with the following properties:
                 *
                 *   - source: The filename of the original source.
                 *   - line: The line number in the original source.
                 *   - column: Optional. the column number in the original source.
                 *
                 * and an array of objects is returned, each with the following properties:
                 *
                 *   - line: The line number in the generated source, or null.
                 *   - column: The column number in the generated source, or null.
                 */
                SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(
                  aArgs
                ) {
                  var line = util.getArg(aArgs, "line");

                  // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
                  // returns the index of the closest mapping less than the needle. By
                  // setting needle.originalColumn to 0, we thus find the last mapping for
                  // the given line, provided such a mapping exists.
                  var needle = {
                    source: util.getArg(aArgs, "source"),
                    originalLine: line,
                    originalColumn: util.getArg(aArgs, "column", 0)
                  };

                  if (this.sourceRoot != null) {
                    needle.source = util.relative(
                      this.sourceRoot,
                      needle.source
                    );
                  }
                  if (!this._sources.has(needle.source)) {
                    return [];
                  }
                  needle.source = this._sources.indexOf(needle.source);

                  var mappings = [];

                  var index = this._findMapping(
                    needle,
                    this._originalMappings,
                    "originalLine",
                    "originalColumn",
                    util.compareByOriginalPositions,
                    binarySearch.LEAST_UPPER_BOUND
                  );
                  if (index >= 0) {
                    var mapping = this._originalMappings[index];

                    if (aArgs.column === undefined) {
                      var originalLine = mapping.originalLine;

                      // Iterate until either we run out of mappings, or we run into
                      // a mapping for a different line than the one we found. Since
                      // mappings are sorted, this is guaranteed to find all mappings for
                      // the line we found.
                      while (mapping && mapping.originalLine === originalLine) {
                        mappings.push({
                          line: util.getArg(mapping, "generatedLine", null),
                          column: util.getArg(mapping, "generatedColumn", null),
                          lastColumn: util.getArg(
                            mapping,
                            "lastGeneratedColumn",
                            null
                          )
                        });

                        mapping = this._originalMappings[++index];
                      }
                    } else {
                      var originalColumn = mapping.originalColumn;

                      // Iterate until either we run out of mappings, or we run into
                      // a mapping for a different line than the one we were searching for.
                      // Since mappings are sorted, this is guaranteed to find all mappings for
                      // the line we are searching for.
                      while (
                        mapping &&
                        mapping.originalLine === line &&
                        mapping.originalColumn == originalColumn
                      ) {
                        mappings.push({
                          line: util.getArg(mapping, "generatedLine", null),
                          column: util.getArg(mapping, "generatedColumn", null),
                          lastColumn: util.getArg(
                            mapping,
                            "lastGeneratedColumn",
                            null
                          )
                        });

                        mapping = this._originalMappings[++index];
                      }
                    }
                  }

                  return mappings;
                };

                exports.SourceMapConsumer = SourceMapConsumer;

                /**
                 * A BasicSourceMapConsumer instance represents a parsed source map which we can
                 * query for information about the original file positions by giving it a file
                 * position in the generated source.
                 *
                 * The only parameter is the raw source map (either as a JSON string, or
                 * already parsed to an object). According to the spec, source maps have the
                 * following attributes:
                 *
                 *   - version: Which version of the source map spec this map is following.
                 *   - sources: An array of URLs to the original source files.
                 *   - names: An array of identifiers which can be referrenced by individual mappings.
                 *   - sourceRoot: Optional. The URL root from which all sources are relative.
                 *   - sourcesContent: Optional. An array of contents of the original source files.
                 *   - mappings: A string of base64 VLQs which contain the actual mappings.
                 *   - file: Optional. The generated file this source map is associated with.
                 *
                 * Here is an example source map, taken from the source map spec[0]:
                 *
                 *     {
                 *       version : 3,
                 *       file: "out.js",
                 *       sourceRoot : "",
                 *       sources: ["foo.js", "bar.js"],
                 *       names: ["src", "maps", "are", "fun"],
                 *       mappings: "AA,AB;;ABCDE;"
                 *     }
                 *
                 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
                 */
                function BasicSourceMapConsumer(aSourceMap) {
                  var sourceMap = aSourceMap;
                  if (typeof aSourceMap === "string") {
                    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ""));
                  }

                  var version = util.getArg(sourceMap, "version");
                  var sources = util.getArg(sourceMap, "sources");
                  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
                  // requires the array) to play nice here.
                  var names = util.getArg(sourceMap, "names", []);
                  var sourceRoot = util.getArg(sourceMap, "sourceRoot", null);
                  var sourcesContent = util.getArg(
                    sourceMap,
                    "sourcesContent",
                    null
                  );
                  var mappings = util.getArg(sourceMap, "mappings");
                  var file = util.getArg(sourceMap, "file", null);

                  // Once again, Sass deviates from the spec and supplies the version as a
                  // string rather than a number, so we use loose equality checking here.
                  if (version != this._version) {
                    throw new Error("Unsupported version: " + version);
                  }

                  sources = sources
                    .map(String)
                    // Some source maps produce relative source paths like "./foo.js" instead of
                    // "foo.js".  Normalize these first so that future comparisons will succeed.
                    // See bugzil.la/1090768.
                    .map(util.normalize)
                    // Always ensure that absolute sources are internally stored relative to
                    // the source root, if the source root is absolute. Not doing this would
                    // be particularly problematic when the source root is a prefix of the
                    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
                    .map(function(source) {
                      return sourceRoot &&
                        util.isAbsolute(sourceRoot) &&
                        util.isAbsolute(source)
                        ? util.relative(sourceRoot, source)
                        : source;
                    });

                  // Pass `true` below to allow duplicate names and sources. While source maps
                  // are intended to be compressed and deduplicated, the TypeScript compiler
                  // sometimes generates source maps with duplicates in them. See Github issue
                  // #72 and bugzil.la/889492.
                  this._names = ArraySet.fromArray(names.map(String), true);
                  this._sources = ArraySet.fromArray(sources, true);

                  this.sourceRoot = sourceRoot;
                  this.sourcesContent = sourcesContent;
                  this._mappings = mappings;
                  this.file = file;
                }

                BasicSourceMapConsumer.prototype = Object.create(
                  SourceMapConsumer.prototype
                );
                BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

                /**
                 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
                 *
                 * @param SourceMapGenerator aSourceMap
                 *        The source map that will be consumed.
                 * @returns BasicSourceMapConsumer
                 */
                BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(
                  aSourceMap
                ) {
                  var smc = Object.create(BasicSourceMapConsumer.prototype);

                  var names = (smc._names = ArraySet.fromArray(
                    aSourceMap._names.toArray(),
                    true
                  ));
                  var sources = (smc._sources = ArraySet.fromArray(
                    aSourceMap._sources.toArray(),
                    true
                  ));
                  smc.sourceRoot = aSourceMap._sourceRoot;
                  smc.sourcesContent = aSourceMap._generateSourcesContent(
                    smc._sources.toArray(),
                    smc.sourceRoot
                  );
                  smc.file = aSourceMap._file;

                  // Because we are modifying the entries (by converting string sources and
                  // names to indices into the sources and names ArraySets), we have to make
                  // a copy of the entry or else bad things happen. Shared mutable state
                  // strikes again! See github issue #191.

                  var generatedMappings = aSourceMap._mappings
                    .toArray()
                    .slice();
                  var destGeneratedMappings = (smc.__generatedMappings = []);
                  var destOriginalMappings = (smc.__originalMappings = []);

                  for (
                    var i = 0, length = generatedMappings.length;
                    i < length;
                    i++
                  ) {
                    var srcMapping = generatedMappings[i];
                    var destMapping = new Mapping();
                    destMapping.generatedLine = srcMapping.generatedLine;
                    destMapping.generatedColumn = srcMapping.generatedColumn;

                    if (srcMapping.source) {
                      destMapping.source = sources.indexOf(srcMapping.source);
                      destMapping.originalLine = srcMapping.originalLine;
                      destMapping.originalColumn = srcMapping.originalColumn;

                      if (srcMapping.name) {
                        destMapping.name = names.indexOf(srcMapping.name);
                      }

                      destOriginalMappings.push(destMapping);
                    }

                    destGeneratedMappings.push(destMapping);
                  }

                  quickSort(
                    smc.__originalMappings,
                    util.compareByOriginalPositions
                  );

                  return smc;
                };

                /**
                 * The version of the source mapping spec that we are consuming.
                 */
                BasicSourceMapConsumer.prototype._version = 3;

                /**
                 * The list of original sources.
                 */
                Object.defineProperty(
                  BasicSourceMapConsumer.prototype,
                  "sources",
                  {
                    get: function() {
                      return this._sources.toArray().map(function(s) {
                        return this.sourceRoot != null
                          ? util.join(this.sourceRoot, s)
                          : s;
                      }, this);
                    }
                  }
                );

                /**
                 * Provide the JIT with a nice shape / hidden class.
                 */
                function Mapping() {
                  this.generatedLine = 0;
                  this.generatedColumn = 0;
                  this.source = null;
                  this.originalLine = null;
                  this.originalColumn = null;
                  this.name = null;
                }

                /**
                 * Parse the mappings in a string in to a data structure which we can easily
                 * query (the ordered arrays in the `this.__generatedMappings` and
                 * `this.__originalMappings` properties).
                 */
                BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(
                  aStr,
                  aSourceRoot
                ) {
                  var generatedLine = 1;
                  var previousGeneratedColumn = 0;
                  var previousOriginalLine = 0;
                  var previousOriginalColumn = 0;
                  var previousSource = 0;
                  var previousName = 0;
                  var length = aStr.length;
                  var index = 0;
                  var cachedSegments = {};
                  var temp = {};
                  var originalMappings = [];
                  var generatedMappings = [];
                  var mapping, str, segment, end, value;

                  while (index < length) {
                    if (aStr.charAt(index) === ";") {
                      generatedLine++;
                      index++;
                      previousGeneratedColumn = 0;
                    } else if (aStr.charAt(index) === ",") {
                      index++;
                    } else {
                      mapping = new Mapping();
                      mapping.generatedLine = generatedLine;

                      // Because each offset is encoded relative to the previous one,
                      // many segments often have the same encoding. We can exploit this
                      // fact by caching the parsed variable length fields of each segment,
                      // allowing us to avoid a second parse if we encounter the same
                      // segment again.
                      for (end = index; end < length; end++) {
                        if (this._charIsMappingSeparator(aStr, end)) {
                          break;
                        }
                      }
                      str = aStr.slice(index, end);

                      segment = cachedSegments[str];
                      if (segment) {
                        index += str.length;
                      } else {
                        segment = [];
                        while (index < end) {
                          base64VLQ.decode(aStr, index, temp);
                          value = temp.value;
                          index = temp.rest;
                          segment.push(value);
                        }

                        if (segment.length === 2) {
                          throw new Error(
                            "Found a source, but no line and column"
                          );
                        }

                        if (segment.length === 3) {
                          throw new Error(
                            "Found a source and line, but no column"
                          );
                        }

                        cachedSegments[str] = segment;
                      }

                      // Generated column.
                      mapping.generatedColumn =
                        previousGeneratedColumn + segment[0];
                      previousGeneratedColumn = mapping.generatedColumn;

                      if (segment.length > 1) {
                        // Original source.
                        mapping.source = previousSource + segment[1];
                        previousSource += segment[1];

                        // Original line.
                        mapping.originalLine =
                          previousOriginalLine + segment[2];
                        previousOriginalLine = mapping.originalLine;
                        // Lines are stored 0-based
                        mapping.originalLine += 1;

                        // Original column.
                        mapping.originalColumn =
                          previousOriginalColumn + segment[3];
                        previousOriginalColumn = mapping.originalColumn;

                        if (segment.length > 4) {
                          // Original name.
                          mapping.name = previousName + segment[4];
                          previousName += segment[4];
                        }
                      }

                      generatedMappings.push(mapping);
                      if (typeof mapping.originalLine === "number") {
                        originalMappings.push(mapping);
                      }
                    }
                  }

                  quickSort(
                    generatedMappings,
                    util.compareByGeneratedPositionsDeflated
                  );
                  this.__generatedMappings = generatedMappings;

                  quickSort(originalMappings, util.compareByOriginalPositions);
                  this.__originalMappings = originalMappings;
                };

                /**
                 * Find the mapping that best matches the hypothetical "needle" mapping that
                 * we are searching for in the given "haystack" of mappings.
                 */
                BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(
                  aNeedle,
                  aMappings,
                  aLineName,
                  aColumnName,
                  aComparator,
                  aBias
                ) {
                  // To return the position we are searching for, we must first find the
                  // mapping for the given position and then return the opposite position it
                  // points to. Because the mappings are sorted, we can use binary search to
                  // find the best mapping.

                  if (aNeedle[aLineName] <= 0) {
                    throw new TypeError(
                      "Line must be greater than or equal to 1, got " +
                        aNeedle[aLineName]
                    );
                  }
                  if (aNeedle[aColumnName] < 0) {
                    throw new TypeError(
                      "Column must be greater than or equal to 0, got " +
                        aNeedle[aColumnName]
                    );
                  }

                  return binarySearch.search(
                    aNeedle,
                    aMappings,
                    aComparator,
                    aBias
                  );
                };

                /**
                 * Compute the last column for each generated mapping. The last column is
                 * inclusive.
                 */
                BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {
                  for (
                    var index = 0;
                    index < this._generatedMappings.length;
                    ++index
                  ) {
                    var mapping = this._generatedMappings[index];

                    // Mappings do not contain a field for the last generated columnt. We
                    // can come up with an optimistic estimate, however, by assuming that
                    // mappings are contiguous (i.e. given two consecutive mappings, the
                    // first mapping ends where the second one starts).
                    if (index + 1 < this._generatedMappings.length) {
                      var nextMapping = this._generatedMappings[index + 1];

                      if (mapping.generatedLine === nextMapping.generatedLine) {
                        mapping.lastGeneratedColumn =
                          nextMapping.generatedColumn - 1;
                        continue;
                      }
                    }

                    // The last mapping for each line spans the entire line.
                    mapping.lastGeneratedColumn = Infinity;
                  }
                };

                /**
                 * Returns the original source, line, and column information for the generated
                 * source's line and column positions provided. The only argument is an object
                 * with the following properties:
                 *
                 *   - line: The line number in the generated source.
                 *   - column: The column number in the generated source.
                 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
                 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
                 *     closest element that is smaller than or greater than the one we are
                 *     searching for, respectively, if the exact element cannot be found.
                 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
                 *
                 * and an object is returned with the following properties:
                 *
                 *   - source: The original source file, or null.
                 *   - line: The line number in the original source, or null.
                 *   - column: The column number in the original source, or null.
                 *   - name: The original identifier, or null.
                 */
                BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(
                  aArgs
                ) {
                  var needle = {
                    generatedLine: util.getArg(aArgs, "line"),
                    generatedColumn: util.getArg(aArgs, "column")
                  };

                  var index = this._findMapping(
                    needle,
                    this._generatedMappings,
                    "generatedLine",
                    "generatedColumn",
                    util.compareByGeneratedPositionsDeflated,
                    util.getArg(
                      aArgs,
                      "bias",
                      SourceMapConsumer.GREATEST_LOWER_BOUND
                    )
                  );

                  if (index >= 0) {
                    var mapping = this._generatedMappings[index];

                    if (mapping.generatedLine === needle.generatedLine) {
                      var source = util.getArg(mapping, "source", null);
                      if (source !== null) {
                        source = this._sources.at(source);
                        if (this.sourceRoot != null) {
                          source = util.join(this.sourceRoot, source);
                        }
                      }
                      var name = util.getArg(mapping, "name", null);
                      if (name !== null) {
                        name = this._names.at(name);
                      }
                      return {
                        source: source,
                        line: util.getArg(mapping, "originalLine", null),
                        column: util.getArg(mapping, "originalColumn", null),
                        name: name
                      };
                    }
                  }

                  return {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                  };
                };

                /**
                 * Return true if we have the source content for every source in the source
                 * map, false otherwise.
                 */
                BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {
                  if (!this.sourcesContent) {
                    return false;
                  }
                  return (
                    this.sourcesContent.length >= this._sources.size() &&
                    !this.sourcesContent.some(function(sc) {
                      return sc == null;
                    })
                  );
                };

                /**
                 * Returns the original source content. The only argument is the url of the
                 * original source file. Returns null if no original source content is
                 * available.
                 */
                BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(
                  aSource,
                  nullOnMissing
                ) {
                  if (!this.sourcesContent) {
                    return null;
                  }

                  if (this.sourceRoot != null) {
                    aSource = util.relative(this.sourceRoot, aSource);
                  }

                  if (this._sources.has(aSource)) {
                    return this.sourcesContent[this._sources.indexOf(aSource)];
                  }

                  var url;
                  if (
                    this.sourceRoot != null &&
                    (url = util.urlParse(this.sourceRoot))
                  ) {
                    // XXX: file:// URIs and absolute paths lead to unexpected behavior for
                    // many users. We can help them out when they expect file:// URIs to
                    // behave like it would if they were running a local HTTP server. See
                    // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
                    var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
                    if (
                      url.scheme == "file" &&
                      this._sources.has(fileUriAbsPath)
                    ) {
                      return this.sourcesContent[
                        this._sources.indexOf(fileUriAbsPath)
                      ];
                    }

                    if (
                      (!url.path || url.path == "/") &&
                      this._sources.has("/" + aSource)
                    ) {
                      return this.sourcesContent[
                        this._sources.indexOf("/" + aSource)
                      ];
                    }
                  }

                  // This function is used recursively from
                  // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
                  // don't want to throw if we can't find the source - we just want to
                  // return null, so we provide a flag to exit gracefully.
                  if (nullOnMissing) {
                    return null;
                  } else {
                    throw new Error(
                      '"' + aSource + '" is not in the SourceMap.'
                    );
                  }
                };

                /**
                 * Returns the generated line and column information for the original source,
                 * line, and column positions provided. The only argument is an object with
                 * the following properties:
                 *
                 *   - source: The filename of the original source.
                 *   - line: The line number in the original source.
                 *   - column: The column number in the original source.
                 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
                 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
                 *     closest element that is smaller than or greater than the one we are
                 *     searching for, respectively, if the exact element cannot be found.
                 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
                 *
                 * and an object is returned with the following properties:
                 *
                 *   - line: The line number in the generated source, or null.
                 *   - column: The column number in the generated source, or null.
                 */
                BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(
                  aArgs
                ) {
                  var source = util.getArg(aArgs, "source");
                  if (this.sourceRoot != null) {
                    source = util.relative(this.sourceRoot, source);
                  }
                  if (!this._sources.has(source)) {
                    return {
                      line: null,
                      column: null,
                      lastColumn: null
                    };
                  }
                  source = this._sources.indexOf(source);

                  var needle = {
                    source: source,
                    originalLine: util.getArg(aArgs, "line"),
                    originalColumn: util.getArg(aArgs, "column")
                  };

                  var index = this._findMapping(
                    needle,
                    this._originalMappings,
                    "originalLine",
                    "originalColumn",
                    util.compareByOriginalPositions,
                    util.getArg(
                      aArgs,
                      "bias",
                      SourceMapConsumer.GREATEST_LOWER_BOUND
                    )
                  );

                  if (index >= 0) {
                    var mapping = this._originalMappings[index];

                    if (mapping.source === needle.source) {
                      return {
                        line: util.getArg(mapping, "generatedLine", null),
                        column: util.getArg(mapping, "generatedColumn", null),
                        lastColumn: util.getArg(
                          mapping,
                          "lastGeneratedColumn",
                          null
                        )
                      };
                    }
                  }

                  return {
                    line: null,
                    column: null,
                    lastColumn: null
                  };
                };

                exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

                /**
                 * An IndexedSourceMapConsumer instance represents a parsed source map which
                 * we can query for information. It differs from BasicSourceMapConsumer in
                 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
                 * input.
                 *
                 * The only parameter is a raw source map (either as a JSON string, or already
                 * parsed to an object). According to the spec for indexed source maps, they
                 * have the following attributes:
                 *
                 *   - version: Which version of the source map spec this map is following.
                 *   - file: Optional. The generated file this source map is associated with.
                 *   - sections: A list of section definitions.
                 *
                 * Each value under the "sections" field has two fields:
                 *   - offset: The offset into the original specified at which this section
                 *       begins to apply, defined as an object with a "line" and "column"
                 *       field.
                 *   - map: A source map definition. This source map could also be indexed,
                 *       but doesn't have to be.
                 *
                 * Instead of the "map" field, it's also possible to have a "url" field
                 * specifying a URL to retrieve a source map from, but that's currently
                 * unsupported.
                 *
                 * Here's an example source map, taken from the source map spec[0], but
                 * modified to omit a section which uses the "url" field.
                 *
                 *  {
                 *    version : 3,
                 *    file: "app.js",
                 *    sections: [{
                 *      offset: {line:100, column:10},
                 *      map: {
                 *        version : 3,
                 *        file: "section.js",
                 *        sources: ["foo.js", "bar.js"],
                 *        names: ["src", "maps", "are", "fun"],
                 *        mappings: "AAAA,E;;ABCDE;"
                 *      }
                 *    }],
                 *  }
                 *
                 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
                 */
                function IndexedSourceMapConsumer(aSourceMap) {
                  var sourceMap = aSourceMap;
                  if (typeof aSourceMap === "string") {
                    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ""));
                  }

                  var version = util.getArg(sourceMap, "version");
                  var sections = util.getArg(sourceMap, "sections");

                  if (version != this._version) {
                    throw new Error("Unsupported version: " + version);
                  }

                  this._sources = new ArraySet();
                  this._names = new ArraySet();

                  var lastOffset = {
                    line: -1,
                    column: 0
                  };
                  this._sections = sections.map(function(s) {
                    if (s.url) {
                      // The url field will require support for asynchronicity.
                      // See https://github.com/mozilla/source-map/issues/16
                      throw new Error(
                        "Support for url field in sections not implemented."
                      );
                    }
                    var offset = util.getArg(s, "offset");
                    var offsetLine = util.getArg(offset, "line");
                    var offsetColumn = util.getArg(offset, "column");

                    if (
                      offsetLine < lastOffset.line ||
                      (offsetLine === lastOffset.line &&
                        offsetColumn < lastOffset.column)
                    ) {
                      throw new Error(
                        "Section offsets must be ordered and non-overlapping."
                      );
                    }
                    lastOffset = offset;

                    return {
                      generatedOffset: {
                        // The offset fields are 0-based, but we use 1-based indices when
                        // encoding/decoding from VLQ.
                        generatedLine: offsetLine + 1,
                        generatedColumn: offsetColumn + 1
                      },
                      consumer: new SourceMapConsumer(util.getArg(s, "map"))
                    };
                  });
                }

                IndexedSourceMapConsumer.prototype = Object.create(
                  SourceMapConsumer.prototype
                );
                IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

                /**
                 * The version of the source mapping spec that we are consuming.
                 */
                IndexedSourceMapConsumer.prototype._version = 3;

                /**
                 * The list of original sources.
                 */
                Object.defineProperty(
                  IndexedSourceMapConsumer.prototype,
                  "sources",
                  {
                    get: function() {
                      var sources = [];
                      for (var i = 0; i < this._sections.length; i++) {
                        for (
                          var j = 0;
                          j < this._sections[i].consumer.sources.length;
                          j++
                        ) {
                          sources.push(this._sections[i].consumer.sources[j]);
                        }
                      }
                      return sources;
                    }
                  }
                );

                /**
                 * Returns the original source, line, and column information for the generated
                 * source's line and column positions provided. The only argument is an object
                 * with the following properties:
                 *
                 *   - line: The line number in the generated source.
                 *   - column: The column number in the generated source.
                 *
                 * and an object is returned with the following properties:
                 *
                 *   - source: The original source file, or null.
                 *   - line: The line number in the original source, or null.
                 *   - column: The column number in the original source, or null.
                 *   - name: The original identifier, or null.
                 */
                IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(
                  aArgs
                ) {
                  var needle = {
                    generatedLine: util.getArg(aArgs, "line"),
                    generatedColumn: util.getArg(aArgs, "column")
                  };

                  // Find the section containing the generated position we're trying to map
                  // to an original position.
                  var sectionIndex = binarySearch.search(
                    needle,
                    this._sections,
                    function(needle, section) {
                      var cmp =
                        needle.generatedLine -
                        section.generatedOffset.generatedLine;
                      if (cmp) {
                        return cmp;
                      }

                      return (
                        needle.generatedColumn -
                        section.generatedOffset.generatedColumn
                      );
                    }
                  );
                  var section = this._sections[sectionIndex];

                  if (!section) {
                    return {
                      source: null,
                      line: null,
                      column: null,
                      name: null
                    };
                  }

                  return section.consumer.originalPositionFor({
                    line:
                      needle.generatedLine -
                      (section.generatedOffset.generatedLine - 1),
                    column:
                      needle.generatedColumn -
                      (section.generatedOffset.generatedLine ===
                      needle.generatedLine
                        ? section.generatedOffset.generatedColumn - 1
                        : 0),
                    bias: aArgs.bias
                  });
                };

                /**
                 * Return true if we have the source content for every source in the source
                 * map, false otherwise.
                 */
                IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {
                  return this._sections.every(function(s) {
                    return s.consumer.hasContentsOfAllSources();
                  });
                };

                /**
                 * Returns the original source content. The only argument is the url of the
                 * original source file. Returns null if no original source content is
                 * available.
                 */
                IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(
                  aSource,
                  nullOnMissing
                ) {
                  for (var i = 0; i < this._sections.length; i++) {
                    var section = this._sections[i];

                    var content = section.consumer.sourceContentFor(
                      aSource,
                      true
                    );
                    if (content) {
                      return content;
                    }
                  }
                  if (nullOnMissing) {
                    return null;
                  } else {
                    throw new Error(
                      '"' + aSource + '" is not in the SourceMap.'
                    );
                  }
                };

                /**
                 * Returns the generated line and column information for the original source,
                 * line, and column positions provided. The only argument is an object with
                 * the following properties:
                 *
                 *   - source: The filename of the original source.
                 *   - line: The line number in the original source.
                 *   - column: The column number in the original source.
                 *
                 * and an object is returned with the following properties:
                 *
                 *   - line: The line number in the generated source, or null.
                 *   - column: The column number in the generated source, or null.
                 */
                IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(
                  aArgs
                ) {
                  for (var i = 0; i < this._sections.length; i++) {
                    var section = this._sections[i];

                    // Only consider this section if the requested source is in the list of
                    // sources of the consumer.
                    if (
                      section.consumer.sources.indexOf(
                        util.getArg(aArgs, "source")
                      ) === -1
                    ) {
                      continue;
                    }
                    var generatedPosition = section.consumer.generatedPositionFor(
                      aArgs
                    );
                    if (generatedPosition) {
                      var ret = {
                        line:
                          generatedPosition.line +
                          (section.generatedOffset.generatedLine - 1),
                        column:
                          generatedPosition.column +
                          (section.generatedOffset.generatedLine ===
                          generatedPosition.line
                            ? section.generatedOffset.generatedColumn - 1
                            : 0)
                      };
                      return ret;
                    }
                  }

                  return {
                    line: null,
                    column: null
                  };
                };

                /**
                 * Parse the mappings in a string in to a data structure which we can easily
                 * query (the ordered arrays in the `this.__generatedMappings` and
                 * `this.__originalMappings` properties).
                 */
                IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(
                  aStr,
                  aSourceRoot
                ) {
                  this.__generatedMappings = [];
                  this.__originalMappings = [];
                  for (var i = 0; i < this._sections.length; i++) {
                    var section = this._sections[i];
                    var sectionMappings = section.consumer._generatedMappings;
                    for (var j = 0; j < sectionMappings.length; j++) {
                      var mapping = sectionMappings[j];

                      var source = section.consumer._sources.at(mapping.source);
                      if (section.consumer.sourceRoot !== null) {
                        source = util.join(section.consumer.sourceRoot, source);
                      }
                      this._sources.add(source);
                      source = this._sources.indexOf(source);

                      var name = section.consumer._names.at(mapping.name);
                      this._names.add(name);
                      name = this._names.indexOf(name);

                      // The mappings coming from the consumer for the section have
                      // generated positions relative to the start of the section, so we
                      // need to offset them to be relative to the start of the concatenated
                      // generated file.
                      var adjustedMapping = {
                        source: source,
                        generatedLine:
                          mapping.generatedLine +
                          (section.generatedOffset.generatedLine - 1),
                        generatedColumn:
                          mapping.generatedColumn +
                          (section.generatedOffset.generatedLine ===
                          mapping.generatedLine
                            ? section.generatedOffset.generatedColumn - 1
                            : 0),
                        originalLine: mapping.originalLine,
                        originalColumn: mapping.originalColumn,
                        name: name
                      };

                      this.__generatedMappings.push(adjustedMapping);
                      if (typeof adjustedMapping.originalLine === "number") {
                        this.__originalMappings.push(adjustedMapping);
                      }
                    }
                  }

                  quickSort(
                    this.__generatedMappings,
                    util.compareByGeneratedPositionsDeflated
                  );
                  quickSort(
                    this.__originalMappings,
                    util.compareByOriginalPositions
                  );
                };

                exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;

                /***/
              },
              /* 25 */
              /***/ function(module, exports) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                exports.GREATEST_LOWER_BOUND = 1;
                exports.LEAST_UPPER_BOUND = 2;

                /**
                 * Recursive implementation of binary search.
                 *
                 * @param aLow Indices here and lower do not contain the needle.
                 * @param aHigh Indices here and higher do not contain the needle.
                 * @param aNeedle The element being searched for.
                 * @param aHaystack The non-empty array being searched.
                 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
                 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
                 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
                 *     closest element that is smaller than or greater than the one we are
                 *     searching for, respectively, if the exact element cannot be found.
                 */
                function recursiveSearch(
                  aLow,
                  aHigh,
                  aNeedle,
                  aHaystack,
                  aCompare,
                  aBias
                ) {
                  // This function terminates when one of the following is true:
                  //
                  //   1. We find the exact element we are looking for.
                  //
                  //   2. We did not find the exact element, but we can return the index of
                  //      the next-closest element.
                  //
                  //   3. We did not find the exact element, and there is no next-closest
                  //      element than the one we are searching for, so we return -1.
                  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
                  var cmp = aCompare(aNeedle, aHaystack[mid], true);
                  if (cmp === 0) {
                    // Found the element we are looking for.
                    return mid;
                  } else if (cmp > 0) {
                    // Our needle is greater than aHaystack[mid].
                    if (aHigh - mid > 1) {
                      // The element is in the upper half.
                      return recursiveSearch(
                        mid,
                        aHigh,
                        aNeedle,
                        aHaystack,
                        aCompare,
                        aBias
                      );
                    }

                    // The exact needle element was not found in this haystack. Determine if
                    // we are in termination case (3) or (2) and return the appropriate thing.
                    if (aBias == exports.LEAST_UPPER_BOUND) {
                      return aHigh < aHaystack.length ? aHigh : -1;
                    } else {
                      return mid;
                    }
                  } else {
                    // Our needle is less than aHaystack[mid].
                    if (mid - aLow > 1) {
                      // The element is in the lower half.
                      return recursiveSearch(
                        aLow,
                        mid,
                        aNeedle,
                        aHaystack,
                        aCompare,
                        aBias
                      );
                    }

                    // we are in termination case (3) or (2) and return the appropriate thing.
                    if (aBias == exports.LEAST_UPPER_BOUND) {
                      return mid;
                    } else {
                      return aLow < 0 ? -1 : aLow;
                    }
                  }
                }

                /**
                 * This is an implementation of binary search which will always try and return
                 * the index of the closest element if there is no exact hit. This is because
                 * mappings between original and generated line/col pairs are single points,
                 * and there is an implicit region between each of them, so a miss just means
                 * that you aren't on the very start of a region.
                 *
                 * @param aNeedle The element you are looking for.
                 * @param aHaystack The array that is being searched.
                 * @param aCompare A function which takes the needle and an element in the
                 *     array and returns -1, 0, or 1 depending on whether the needle is less
                 *     than, equal to, or greater than the element, respectively.
                 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
                 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
                 *     closest element that is smaller than or greater than the one we are
                 *     searching for, respectively, if the exact element cannot be found.
                 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
                 */
                exports.search = function search(
                  aNeedle,
                  aHaystack,
                  aCompare,
                  aBias
                ) {
                  if (aHaystack.length === 0) {
                    return -1;
                  }

                  var index = recursiveSearch(
                    -1,
                    aHaystack.length,
                    aNeedle,
                    aHaystack,
                    aCompare,
                    aBias || exports.GREATEST_LOWER_BOUND
                  );
                  if (index < 0) {
                    return -1;
                  }

                  // We have found either the exact element, or the next-closest element than
                  // the one we are searching for. However, there may be more than one such
                  // element. Make sure we always return the smallest of these.
                  while (index - 1 >= 0) {
                    if (
                      aCompare(aHaystack[index], aHaystack[index - 1], true) !==
                      0
                    ) {
                      break;
                    }
                    --index;
                  }

                  return index;
                };

                /***/
              },
              /* 26 */
              /***/ function(module, exports) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                // It turns out that some (most?) JavaScript engines don't self-host
                // `Array.prototype.sort`. This makes sense because C++ will likely remain
                // faster than JS when doing raw CPU-intensive sorting. However, when using a
                // custom comparator function, calling back and forth between the VM's C++ and
                // JIT'd JS is rather slow *and* loses JIT type information, resulting in
                // worse generated code for the comparator function than would be optimal. In
                // fact, when sorting with a comparator, these costs outweigh the benefits of
                // sorting in C++. By using our own JS-implemented Quick Sort (below), we get
                // a ~3500ms mean speed-up in `bench/bench.html`.

                /**
                 * Swap the elements indexed by `x` and `y` in the array `ary`.
                 *
                 * @param {Array} ary
                 *        The array.
                 * @param {Number} x
                 *        The index of the first item.
                 * @param {Number} y
                 *        The index of the second item.
                 */
                function swap(ary, x, y) {
                  var temp = ary[x];
                  ary[x] = ary[y];
                  ary[y] = temp;
                }

                /**
                 * Returns a random integer within the range `low .. high` inclusive.
                 *
                 * @param {Number} low
                 *        The lower bound on the range.
                 * @param {Number} high
                 *        The upper bound on the range.
                 */
                function randomIntInRange(low, high) {
                  return Math.round(low + Math.random() * (high - low));
                }

                /**
                 * The Quick Sort algorithm.
                 *
                 * @param {Array} ary
                 *        An array to sort.
                 * @param {function} comparator
                 *        Function to use to compare two items.
                 * @param {Number} p
                 *        Start index of the array
                 * @param {Number} r
                 *        End index of the array
                 */
                function doQuickSort(ary, comparator, p, r) {
                  // If our lower bound is less than our upper bound, we (1) partition the
                  // array into two pieces and (2) recurse on each half. If it is not, this is
                  // the empty array and our base case.

                  if (p < r) {
                    // (1) Partitioning.
                    //
                    // The partitioning chooses a pivot between `p` and `r` and moves all
                    // elements that are less than or equal to the pivot to the before it, and
                    // all the elements that are greater than it after it. The effect is that
                    // once partition is done, the pivot is in the exact place it will be when
                    // the array is put in sorted order, and it will not need to be moved
                    // again. This runs in O(n) time.

                    // Always choose a random pivot so that an input array which is reverse
                    // sorted does not cause O(n^2) running time.
                    var pivotIndex = randomIntInRange(p, r);
                    var i = p - 1;

                    swap(ary, pivotIndex, r);
                    var pivot = ary[r];

                    // Immediately after `j` is incremented in this loop, the following hold
                    // true:
                    //
                    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
                    //
                    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
                    for (var j = p; j < r; j++) {
                      if (comparator(ary[j], pivot) <= 0) {
                        i += 1;
                        swap(ary, i, j);
                      }
                    }

                    swap(ary, i + 1, j);
                    var q = i + 1;

                    // (2) Recurse on each half.

                    doQuickSort(ary, comparator, p, q - 1);
                    doQuickSort(ary, comparator, q + 1, r);
                  }
                }

                /**
                 * Sort the given array in-place with the given comparator function.
                 *
                 * @param {Array} ary
                 *        An array to sort.
                 * @param {function} comparator
                 *        Function to use to compare two items.
                 */
                exports.quickSort = function(ary, comparator) {
                  doQuickSort(ary, comparator, 0, ary.length - 1);
                };

                /***/
              },
              /* 27 */
              /***/ function(module, exports, __webpack_require__) {
                /* -*- Mode: js; js-indent-level: 2; -*- */
                /*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

                var SourceMapGenerator = __webpack_require__(5)
                  .SourceMapGenerator;
                var util = __webpack_require__(0);

                // Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
                // operating systems these days (capturing the result).
                var REGEX_NEWLINE = /(\r?\n)/;

                // Newline character code for charCodeAt() comparisons
                var NEWLINE_CODE = 10;

                // Private symbol for identifying `SourceNode`s when multiple versions of
                // the source-map library are loaded. This MUST NOT CHANGE across
                // versions!
                var isSourceNode = "$$$isSourceNode$$$";

                /**
                 * SourceNodes provide a way to abstract over interpolating/concatenating
                 * snippets of generated JavaScript source code while maintaining the line and
                 * column information associated with the original source code.
                 *
                 * @param aLine The original line number.
                 * @param aColumn The original column number.
                 * @param aSource The original source's filename.
                 * @param aChunks Optional. An array of strings which are snippets of
                 *        generated JS, or other SourceNodes.
                 * @param aName The original identifier.
                 */
                function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
                  this.children = [];
                  this.sourceContents = {};
                  this.line = aLine == null ? null : aLine;
                  this.column = aColumn == null ? null : aColumn;
                  this.source = aSource == null ? null : aSource;
                  this.name = aName == null ? null : aName;
                  this[isSourceNode] = true;
                  if (aChunks != null) this.add(aChunks);
                }

                /**
                 * Creates a SourceNode from generated code and a SourceMapConsumer.
                 *
                 * @param aGeneratedCode The generated code
                 * @param aSourceMapConsumer The SourceMap for the generated code
                 * @param aRelativePath Optional. The path that relative sources in the
                 *        SourceMapConsumer should be relative to.
                 */
                SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(
                  aGeneratedCode,
                  aSourceMapConsumer,
                  aRelativePath
                ) {
                  // The SourceNode we want to fill with the generated code
                  // and the SourceMap
                  var node = new SourceNode();

                  // All even indices of this array are one line of the generated code,
                  // while all odd indices are the newlines between two adjacent lines
                  // (since `REGEX_NEWLINE` captures its match).
                  // Processed fragments are removed from this array, by calling `shiftNextLine`.
                  var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
                  var shiftNextLine = function() {
                    var lineContents = remainingLines.shift();
                    // The last line of a file might not have a newline.
                    var newLine = remainingLines.shift() || "";
                    return lineContents + newLine;
                  };

                  // We need to remember the position of "remainingLines"
                  var lastGeneratedLine = 1,
                    lastGeneratedColumn = 0;

                  // The generate SourceNodes we need a code range.
                  // To extract it current and last mapping is used.
                  // Here we store the last mapping.
                  var lastMapping = null;

                  aSourceMapConsumer.eachMapping(function(mapping) {
                    if (lastMapping !== null) {
                      // We add the code from "lastMapping" to "mapping":
                      // First check if there is a new line in between.
                      if (lastGeneratedLine < mapping.generatedLine) {
                        // Associate first line with "lastMapping"
                        addMappingWithCode(lastMapping, shiftNextLine());
                        lastGeneratedLine++;
                        lastGeneratedColumn = 0;
                        // The remaining code is added without mapping
                      } else {
                        // There is no new line in between.
                        // Associate the code between "lastGeneratedColumn" and
                        // "mapping.generatedColumn" with "lastMapping"
                        var nextLine = remainingLines[0];
                        var code = nextLine.substr(
                          0,
                          mapping.generatedColumn - lastGeneratedColumn
                        );
                        remainingLines[0] = nextLine.substr(
                          mapping.generatedColumn - lastGeneratedColumn
                        );
                        lastGeneratedColumn = mapping.generatedColumn;
                        addMappingWithCode(lastMapping, code);
                        // No more remaining code, continue
                        lastMapping = mapping;
                        return;
                      }
                    }
                    // We add the generated code until the first mapping
                    // to the SourceNode without any mapping.
                    // Each line is added as separate string.
                    while (lastGeneratedLine < mapping.generatedLine) {
                      node.add(shiftNextLine());
                      lastGeneratedLine++;
                    }
                    if (lastGeneratedColumn < mapping.generatedColumn) {
                      var nextLine = remainingLines[0];
                      node.add(nextLine.substr(0, mapping.generatedColumn));
                      remainingLines[0] = nextLine.substr(
                        mapping.generatedColumn
                      );
                      lastGeneratedColumn = mapping.generatedColumn;
                    }
                    lastMapping = mapping;
                  }, this);
                  // We have processed all mappings.
                  if (remainingLines.length > 0) {
                    if (lastMapping) {
                      // Associate the remaining code in the current line with "lastMapping"
                      addMappingWithCode(lastMapping, shiftNextLine());
                    }
                    // and add the remaining lines without any mapping
                    node.add(remainingLines.join(""));
                  }

                  // Copy sourcesContent into SourceNode
                  aSourceMapConsumer.sources.forEach(function(sourceFile) {
                    var content = aSourceMapConsumer.sourceContentFor(
                      sourceFile
                    );
                    if (content != null) {
                      if (aRelativePath != null) {
                        sourceFile = util.join(aRelativePath, sourceFile);
                      }
                      node.setSourceContent(sourceFile, content);
                    }
                  });

                  return node;

                  function addMappingWithCode(mapping, code) {
                    if (mapping === null || mapping.source === undefined) {
                      node.add(code);
                    } else {
                      var source = aRelativePath
                        ? util.join(aRelativePath, mapping.source)
                        : mapping.source;
                      node.add(
                        new SourceNode(
                          mapping.originalLine,
                          mapping.originalColumn,
                          source,
                          code,
                          mapping.name
                        )
                      );
                    }
                  }
                };

                /**
                 * Add a chunk of generated JS to this source node.
                 *
                 * @param aChunk A string snippet of generated JS code, another instance of
                 *        SourceNode, or an array where each member is one of those things.
                 */
                SourceNode.prototype.add = function SourceNode_add(aChunk) {
                  if (Array.isArray(aChunk)) {
                    aChunk.forEach(function(chunk) {
                      this.add(chunk);
                    }, this);
                  } else if (
                    aChunk[isSourceNode] ||
                    typeof aChunk === "string"
                  ) {
                    if (aChunk) {
                      this.children.push(aChunk);
                    }
                  } else {
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        aChunk
                    );
                  }
                  return this;
                };

                /**
                 * Add a chunk of generated JS to the beginning of this source node.
                 *
                 * @param aChunk A string snippet of generated JS code, another instance of
                 *        SourceNode, or an array where each member is one of those things.
                 */
                SourceNode.prototype.prepend = function SourceNode_prepend(
                  aChunk
                ) {
                  if (Array.isArray(aChunk)) {
                    for (var i = aChunk.length - 1; i >= 0; i--) {
                      this.prepend(aChunk[i]);
                    }
                  } else if (
                    aChunk[isSourceNode] ||
                    typeof aChunk === "string"
                  ) {
                    this.children.unshift(aChunk);
                  } else {
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        aChunk
                    );
                  }
                  return this;
                };

                /**
                 * Walk over the tree of JS snippets in this node and its children. The
                 * walking function is called once for each snippet of JS and is passed that
                 * snippet and the its original associated source's line/column location.
                 *
                 * @param aFn The traversal function.
                 */
                SourceNode.prototype.walk = function SourceNode_walk(aFn) {
                  var chunk;
                  for (var i = 0, len = this.children.length; i < len; i++) {
                    chunk = this.children[i];
                    if (chunk[isSourceNode]) {
                      chunk.walk(aFn);
                    } else {
                      if (chunk !== "") {
                        aFn(chunk, {
                          source: this.source,
                          line: this.line,
                          column: this.column,
                          name: this.name
                        });
                      }
                    }
                  }
                };

                /**
                 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
                 * each of `this.children`.
                 *
                 * @param aSep The separator.
                 */
                SourceNode.prototype.join = function SourceNode_join(aSep) {
                  var newChildren;
                  var i;
                  var len = this.children.length;
                  if (len > 0) {
                    newChildren = [];
                    for (i = 0; i < len - 1; i++) {
                      newChildren.push(this.children[i]);
                      newChildren.push(aSep);
                    }
                    newChildren.push(this.children[i]);
                    this.children = newChildren;
                  }
                  return this;
                };

                /**
                 * Call String.prototype.replace on the very right-most source snippet. Useful
                 * for trimming whitespace from the end of a source node, etc.
                 *
                 * @param aPattern The pattern to replace.
                 * @param aReplacement The thing to replace the pattern with.
                 */
                SourceNode.prototype.replaceRight = function SourceNode_replaceRight(
                  aPattern,
                  aReplacement
                ) {
                  var lastChild = this.children[this.children.length - 1];
                  if (lastChild[isSourceNode]) {
                    lastChild.replaceRight(aPattern, aReplacement);
                  } else if (typeof lastChild === "string") {
                    this.children[this.children.length - 1] = lastChild.replace(
                      aPattern,
                      aReplacement
                    );
                  } else {
                    this.children.push("".replace(aPattern, aReplacement));
                  }
                  return this;
                };

                /**
                 * Set the source content for a source file. This will be added to the SourceMapGenerator
                 * in the sourcesContent field.
                 *
                 * @param aSourceFile The filename of the source file
                 * @param aSourceContent The content of the source file
                 */
                SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(
                  aSourceFile,
                  aSourceContent
                ) {
                  this.sourceContents[
                    util.toSetString(aSourceFile)
                  ] = aSourceContent;
                };

                /**
                 * Walk over the tree of SourceNodes. The walking function is called for each
                 * source file content and is passed the filename and source content.
                 *
                 * @param aFn The traversal function.
                 */
                SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(
                  aFn
                ) {
                  for (var i = 0, len = this.children.length; i < len; i++) {
                    if (this.children[i][isSourceNode]) {
                      this.children[i].walkSourceContents(aFn);
                    }
                  }

                  var sources = Object.keys(this.sourceContents);
                  for (var i = 0, len = sources.length; i < len; i++) {
                    aFn(
                      util.fromSetString(sources[i]),
                      this.sourceContents[sources[i]]
                    );
                  }
                };

                /**
                 * Return the string representation of this source node. Walks over the tree
                 * and concatenates all the various snippets together to one string.
                 */
                SourceNode.prototype.toString = function SourceNode_toString() {
                  var str = "";
                  this.walk(function(chunk) {
                    str += chunk;
                  });
                  return str;
                };

                /**
                 * Returns the string representation of this source node along with a source
                 * map.
                 */
                SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(
                  aArgs
                ) {
                  var generated = {
                    code: "",
                    line: 1,
                    column: 0
                  };
                  var map = new SourceMapGenerator(aArgs);
                  var sourceMappingActive = false;
                  var lastOriginalSource = null;
                  var lastOriginalLine = null;
                  var lastOriginalColumn = null;
                  var lastOriginalName = null;
                  this.walk(function(chunk, original) {
                    generated.code += chunk;
                    if (
                      original.source !== null &&
                      original.line !== null &&
                      original.column !== null
                    ) {
                      if (
                        lastOriginalSource !== original.source ||
                        lastOriginalLine !== original.line ||
                        lastOriginalColumn !== original.column ||
                        lastOriginalName !== original.name
                      ) {
                        map.addMapping({
                          source: original.source,
                          original: {
                            line: original.line,
                            column: original.column
                          },
                          generated: {
                            line: generated.line,
                            column: generated.column
                          },
                          name: original.name
                        });
                      }
                      lastOriginalSource = original.source;
                      lastOriginalLine = original.line;
                      lastOriginalColumn = original.column;
                      lastOriginalName = original.name;
                      sourceMappingActive = true;
                    } else if (sourceMappingActive) {
                      map.addMapping({
                        generated: {
                          line: generated.line,
                          column: generated.column
                        }
                      });
                      lastOriginalSource = null;
                      sourceMappingActive = false;
                    }
                    for (
                      var idx = 0, length = chunk.length;
                      idx < length;
                      idx++
                    ) {
                      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
                        generated.line++;
                        generated.column = 0;
                        // Mappings end at eol
                        if (idx + 1 === length) {
                          lastOriginalSource = null;
                          sourceMappingActive = false;
                        } else if (sourceMappingActive) {
                          map.addMapping({
                            source: original.source,
                            original: {
                              line: original.line,
                              column: original.column
                            },
                            generated: {
                              line: generated.line,
                              column: generated.column
                            },
                            name: original.name
                          });
                        }
                      } else {
                        generated.column++;
                      }
                    }
                  });
                  this.walkSourceContents(function(sourceFile, sourceContent) {
                    map.setSourceContent(sourceFile, sourceContent);
                  });

                  return { code: generated.code, map: map };
                };

                exports.SourceNode = SourceNode;

                /***/
              },
              /* 28 */
              /***/ function(module, exports, __webpack_require__) {
                "use strict";

                Object.defineProperty(exports, "__esModule", {
                  value: true
                });
                function settle(val) {
                  if (!Array.isArray(val)) val = [val];
                  return Promise.all(
                    val.map(function(p) {
                      return p
                        .then(function(value) {
                          return {
                            isFulfilled: true,
                            isRejected: false,
                            value: value
                          };
                        })
                        .catch(function(reason) {
                          return {
                            isFulfilled: false,
                            isRejected: true,
                            reason: reason
                          };
                        });
                    })
                  );
                }

                exports.settle = settle;
                exports.default = settle;

                /***/
              },
              /* 29 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return unmap;
                  }
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(
                  2
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stack_frame__ = __webpack_require__(
                  1
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getSourceMap__ = __webpack_require__(
                  4
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getLinesAround__ = __webpack_require__(
                  8
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_path__ = __webpack_require__(
                  30
                );
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_path___default = __webpack_require__.n(
                  __WEBPACK_IMPORTED_MODULE_4_path__
                );

                var _typeof =
                  typeof Symbol === "function" &&
                  typeof Symbol.iterator === "symbol"
                    ? function(obj) {
                        return typeof obj;
                      }
                    : function(obj) {
                        return obj &&
                          typeof Symbol === "function" &&
                          obj.constructor === Symbol &&
                          obj !== Symbol.prototype
                          ? "symbol"
                          : typeof obj;
                      };

                /**
                 * Turns a set of mapped <code>StackFrame</code>s back into their generated code position and enhances them with code.
                 * @param {string} fileUri The URI of the <code>bundle.js</code> file.
                 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which are already mapped and missing their generated positions.
                 * @param {number} [fileContents=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
                 */
                var unmap = (function() {
                  var _ref = _asyncToGenerator(
                    /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                      function _callee(_fileUri, frames) {
                        var contextLines =
                          arguments.length > 2 && arguments[2] !== undefined
                            ? arguments[2]
                            : 3;
                        var fileContents, fileUri, map;
                        return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  fileContents =
                                    (typeof _fileUri === "undefined"
                                      ? "undefined"
                                      : _typeof(_fileUri)) === "object"
                                      ? _fileUri.contents
                                      : null;
                                  fileUri =
                                    (typeof _fileUri === "undefined"
                                      ? "undefined"
                                      : _typeof(_fileUri)) === "object"
                                      ? _fileUri.uri
                                      : _fileUri;

                                  if (!(fileContents == null)) {
                                    _context.next = 6;
                                    break;
                                  }

                                  _context.next = 5;
                                  return fetch(fileUri).then(function(res) {
                                    return res.text();
                                  });

                                case 5:
                                  fileContents = _context.sent;

                                case 6:
                                  _context.next = 8;
                                  return Object(
                                    __WEBPACK_IMPORTED_MODULE_2__getSourceMap__[
                                      "a" /* getSourceMap */
                                    ]
                                  )(fileUri, fileContents);

                                case 8:
                                  map = _context.sent;
                                  return _context.abrupt(
                                    "return",
                                    frames.map(function(frame) {
                                      var functionName = frame.functionName,
                                        lineNumber = frame.lineNumber,
                                        columnNumber = frame.columnNumber,
                                        _originalLineNumber =
                                          frame._originalLineNumber;

                                      if (_originalLineNumber != null) {
                                        return frame;
                                      }
                                      var fileName = frame.fileName;

                                      if (fileName) {
                                        // The web version of this module only provides POSIX support, so Windows
                                        // paths like C:\foo\\baz\..\\bar\ cannot be normalized.
                                        // A simple solution to this is to replace all `\` with `/`, then
                                        // normalize afterwards.
                                        fileName = __WEBPACK_IMPORTED_MODULE_4_path___default.a.normalize(
                                          fileName.replace(/[\\]+/g, "/")
                                        );
                                      }
                                      if (fileName == null) {
                                        return frame;
                                      }
                                      var fN = fileName;
                                      var source = map
                                        .getSources()
                                        // Prepare path for normalization; see comment above for reasoning.
                                        .map(function(s) {
                                          return s.replace(/[\\]+/g, "/");
                                        })
                                        .filter(function(p) {
                                          p = __WEBPACK_IMPORTED_MODULE_4_path___default.a.normalize(
                                            p
                                          );
                                          var i = p.lastIndexOf(fN);
                                          return (
                                            i !== -1 &&
                                            i === p.length - fN.length
                                          );
                                        })
                                        .map(function(p) {
                                          return {
                                            token: p,
                                            seps: count(
                                              __WEBPACK_IMPORTED_MODULE_4_path___default
                                                .a.sep,
                                              __WEBPACK_IMPORTED_MODULE_4_path___default.a.normalize(
                                                p
                                              )
                                            ),
                                            penalties:
                                              count("node_modules", p) +
                                              count("~", p)
                                          };
                                        })
                                        .sort(function(a, b) {
                                          var s = Math.sign(a.seps - b.seps);
                                          if (s !== 0) {
                                            return s;
                                          }
                                          return Math.sign(
                                            a.penalties - b.penalties
                                          );
                                        });
                                      if (
                                        source.length < 1 ||
                                        lineNumber == null
                                      ) {
                                        return new __WEBPACK_IMPORTED_MODULE_1__stack_frame__[
                                          "b" /* default */
                                        ](
                                          null,
                                          null,
                                          null,
                                          null,
                                          null,
                                          functionName,
                                          fN,
                                          lineNumber,
                                          columnNumber,
                                          null
                                        );
                                      }
                                      var sourceT = source[0].token;

                                      var _map$getGeneratedPosi = map.getGeneratedPosition(
                                          sourceT,
                                          lineNumber,
                                          // $FlowFixMe
                                          columnNumber
                                        ),
                                        line = _map$getGeneratedPosi.line,
                                        column = _map$getGeneratedPosi.column;

                                      var originalSource = map.getSource(
                                        sourceT
                                      );
                                      return new __WEBPACK_IMPORTED_MODULE_1__stack_frame__[
                                        "b" /* default */
                                      ](functionName, fileUri, line, column || null, Object(__WEBPACK_IMPORTED_MODULE_3__getLinesAround__["a" /* getLinesAround */])(line, contextLines, fileContents || []), functionName, fN, lineNumber, columnNumber, Object(__WEBPACK_IMPORTED_MODULE_3__getLinesAround__["a" /* getLinesAround */])(lineNumber, contextLines, originalSource));
                                    })
                                  );

                                case 10:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this
                        );
                      }
                    )
                  );

                  return function unmap(_x2, _x3) {
                    return _ref.apply(this, arguments);
                  };
                })();

                function _asyncToGenerator(fn) {
                  return function() {
                    var gen = fn.apply(this, arguments);
                    return new Promise(function(resolve, reject) {
                      function step(key, arg) {
                        try {
                          var info = gen[key](arg);
                          var value = info.value;
                        } catch (error) {
                          reject(error);
                          return;
                        }
                        if (info.done) {
                          resolve(value);
                        } else {
                          return Promise.resolve(value).then(
                            function(value) {
                              step("next", value);
                            },
                            function(err) {
                              step("throw", err);
                            }
                          );
                        }
                      }
                      return step("next");
                    });
                  };
                }

                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                function count(search, string) {
                  // Count starts at -1 becuse a do-while loop always runs at least once
                  var count = -1,
                    index = -1;
                  do {
                    // First call or the while case evaluated true, meaning we have to make
                    // count 0 or we found a character
                    ++count;
                    // Find the index of our search string, starting after the previous index
                    index = string.indexOf(search, index + 1);
                  } while (index !== -1);
                  return count;
                }

                /* unused harmony default export */ var _unused_webpack_default_export = unmap;

                /***/
              },
              /* 30 */
              /***/ function(module, exports, __webpack_require__) {
                /* WEBPACK VAR INJECTION */ (function(process) {
                  // Copyright Joyent, Inc. and other Node contributors.
                  //
                  // Permission is hereby granted, free of charge, to any person obtaining a
                  // copy of this software and associated documentation files (the
                  // "Software"), to deal in the Software without restriction, including
                  // without limitation the rights to use, copy, modify, merge, publish,
                  // distribute, sublicense, and/or sell copies of the Software, and to permit
                  // persons to whom the Software is furnished to do so, subject to the
                  // following conditions:
                  //
                  // The above copyright notice and this permission notice shall be included
                  // in all copies or substantial portions of the Software.
                  //
                  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
                  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
                  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
                  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
                  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
                  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
                  // USE OR OTHER DEALINGS IN THE SOFTWARE.

                  // resolves . and .. elements in a path array with directory names there
                  // must be no slashes, empty elements, or device names (c:\) in the array
                  // (so also no leading and trailing slashes - it does not distinguish
                  // relative and absolute paths)
                  function normalizeArray(parts, allowAboveRoot) {
                    // if the path tries to go above the root, `up` ends up > 0
                    var up = 0;
                    for (var i = parts.length - 1; i >= 0; i--) {
                      var last = parts[i];
                      if (last === ".") {
                        parts.splice(i, 1);
                      } else if (last === "..") {
                        parts.splice(i, 1);
                        up++;
                      } else if (up) {
                        parts.splice(i, 1);
                        up--;
                      }
                    }

                    // if the path is allowed to go above the root, restore leading ..s
                    if (allowAboveRoot) {
                      for (; up--; up) {
                        parts.unshift("..");
                      }
                    }

                    return parts;
                  }

                  // Split a filename into [root, dir, basename, ext], unix version
                  // 'root' is just a slash, or nothing.
                  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
                  var splitPath = function(filename) {
                    return splitPathRe.exec(filename).slice(1);
                  };

                  // path.resolve([from ...], to)
                  // posix version
                  exports.resolve = function() {
                    var resolvedPath = "",
                      resolvedAbsolute = false;

                    for (
                      var i = arguments.length - 1;
                      i >= -1 && !resolvedAbsolute;
                      i--
                    ) {
                      var path = i >= 0 ? arguments[i] : process.cwd();

                      // Skip empty and invalid entries
                      if (typeof path !== "string") {
                        throw new TypeError(
                          "Arguments to path.resolve must be strings"
                        );
                      } else if (!path) {
                        continue;
                      }

                      resolvedPath = path + "/" + resolvedPath;
                      resolvedAbsolute = path.charAt(0) === "/";
                    }

                    // At this point the path should be resolved to a full absolute path, but
                    // handle relative paths to be safe (might happen when process.cwd() fails)

                    // Normalize the path
                    resolvedPath = normalizeArray(
                      filter(resolvedPath.split("/"), function(p) {
                        return !!p;
                      }),
                      !resolvedAbsolute
                    ).join("/");

                    return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
                  };

                  // path.normalize(path)
                  // posix version
                  exports.normalize = function(path) {
                    var isAbsolute = exports.isAbsolute(path),
                      trailingSlash = substr(path, -1) === "/";

                    // Normalize the path
                    path = normalizeArray(
                      filter(path.split("/"), function(p) {
                        return !!p;
                      }),
                      !isAbsolute
                    ).join("/");

                    if (!path && !isAbsolute) {
                      path = ".";
                    }
                    if (path && trailingSlash) {
                      path += "/";
                    }

                    return (isAbsolute ? "/" : "") + path;
                  };

                  // posix version
                  exports.isAbsolute = function(path) {
                    return path.charAt(0) === "/";
                  };

                  // posix version
                  exports.join = function() {
                    var paths = Array.prototype.slice.call(arguments, 0);
                    return exports.normalize(
                      filter(paths, function(p, index) {
                        if (typeof p !== "string") {
                          throw new TypeError(
                            "Arguments to path.join must be strings"
                          );
                        }
                        return p;
                      }).join("/")
                    );
                  };

                  // path.relative(from, to)
                  // posix version
                  exports.relative = function(from, to) {
                    from = exports.resolve(from).substr(1);
                    to = exports.resolve(to).substr(1);

                    function trim(arr) {
                      var start = 0;
                      for (; start < arr.length; start++) {
                        if (arr[start] !== "") break;
                      }

                      var end = arr.length - 1;
                      for (; end >= 0; end--) {
                        if (arr[end] !== "") break;
                      }

                      if (start > end) return [];
                      return arr.slice(start, end - start + 1);
                    }

                    var fromParts = trim(from.split("/"));
                    var toParts = trim(to.split("/"));

                    var length = Math.min(fromParts.length, toParts.length);
                    var samePartsLength = length;
                    for (var i = 0; i < length; i++) {
                      if (fromParts[i] !== toParts[i]) {
                        samePartsLength = i;
                        break;
                      }
                    }

                    var outputParts = [];
                    for (var i = samePartsLength; i < fromParts.length; i++) {
                      outputParts.push("..");
                    }

                    outputParts = outputParts.concat(
                      toParts.slice(samePartsLength)
                    );

                    return outputParts.join("/");
                  };

                  exports.sep = "/";
                  exports.delimiter = ":";

                  exports.dirname = function(path) {
                    var result = splitPath(path),
                      root = result[0],
                      dir = result[1];

                    if (!root && !dir) {
                      // No dirname whatsoever
                      return ".";
                    }

                    if (dir) {
                      // It has a dirname, strip trailing slash
                      dir = dir.substr(0, dir.length - 1);
                    }

                    return root + dir;
                  };

                  exports.basename = function(path, ext) {
                    var f = splitPath(path)[2];
                    // TODO: make this comparison case-insensitive on windows?
                    if (ext && f.substr(-1 * ext.length) === ext) {
                      f = f.substr(0, f.length - ext.length);
                    }
                    return f;
                  };

                  exports.extname = function(path) {
                    return splitPath(path)[3];
                  };

                  function filter(xs, f) {
                    if (xs.filter) return xs.filter(f);
                    var res = [];
                    for (var i = 0; i < xs.length; i++) {
                      if (f(xs[i], i, xs)) res.push(xs[i]);
                    }
                    return res;
                  }

                  // String.prototype.substr - negative index don't work in IE8
                  var substr =
                    "ab".substr(-1) === "b"
                      ? function(str, start, len) {
                          return str.substr(start, len);
                        }
                      : function(str, start, len) {
                          if (start < 0) start = str.length + start;
                          return str.substr(start, len);
                        };

                  /* WEBPACK VAR INJECTION */
                }.call(exports, __webpack_require__(3)));

                /***/
              },
              /* 31 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return iframeStyle;
                  }
                );
                /* unused harmony export overlayStyle */
                /* unused harmony export primaryErrorStyle */
                /* unused harmony export secondaryErrorStyle */
                /* unused harmony export black */
                /* unused harmony export darkGray */
                /* unused harmony export red */
                /* unused harmony export redTransparent */
                /* unused harmony export yellowTransparent */
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var black = "#293238",
                  darkGray = "#878e91",
                  red = "#ce1126",
                  redTransparent = "rgba(206, 17, 38, 0.05)",
                  lightRed = "#fccfcf",
                  yellow = "#fbf5b4",
                  yellowTransparent = "rgba(251, 245, 180, 0.3)",
                  white = "#ffffff";

                var iframeStyle = {
                  position: "fixed",
                  top: "0",
                  left: "0",
                  width: "100%",
                  height: "100%",
                  border: "none",
                  "z-index": 2147483647
                };

                var overlayStyle = {
                  width: "100%",
                  height: "100%",
                  "box-sizing": "border-box",
                  "text-align": "center",
                  "background-color": white
                };

                var primaryErrorStyle = {
                  "background-color": lightRed
                };

                var secondaryErrorStyle = {
                  "background-color": yellow
                };

                /***/
              },
              /* 32 */
              /***/ function(module, __webpack_exports__, __webpack_require__) {
                "use strict";
                /* unused harmony export getHead */
                /* unused harmony export injectCss */
                /* unused harmony export removeCss */
                /* harmony export (binding) */ __webpack_require__.d(
                  __webpack_exports__,
                  "a",
                  function() {
                    return applyStyles;
                  }
                );
                /**
                 * Copyright (c) 2015-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                var injectedCount = 0;
                var injectedCache = {};

                function getHead(document) {
                  return (
                    document.head || document.getElementsByTagName("head")[0]
                  );
                }

                function injectCss(document, css) {
                  var head = getHead(document);
                  var style = document.createElement("style");
                  style.type = "text/css";
                  style.appendChild(document.createTextNode(css));
                  head.appendChild(style);

                  injectedCache[++injectedCount] = style;
                  return injectedCount;
                }

                function removeCss(document, ref) {
                  if (injectedCache[ref] == null) {
                    return;
                  }
                  var head = getHead(document);
                  head.removeChild(injectedCache[ref]);
                  delete injectedCache[ref];
                }

                function applyStyles(element, styles) {
                  element.setAttribute("style", "");
                  for (var key in styles) {
                    if (!styles.hasOwnProperty(key)) {
                      continue;
                    }
                    // $FlowFixMe
                    element.style[key] = styles[key];
                  }
                }

                /***/
              },
              /* 33 */
              /***/ function(module, exports) {
                module.exports =
                  '!function(e){function t(r){if(n[r])return n[r].exports;var u=n[r]={i:r,l:!1,exports:{}};return e[r].call(u.exports,u,u.exports,t),u.l=!0,u.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=18)}([function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";n.d(t,"c",function(){return l}),n.d(t,"d",function(){return s}),n.d(t,"g",function(){return c}),n.d(t,"a",function(){return r}),n.d(t,"b",function(){return u}),n.d(t,"e",function(){return o}),n.d(t,"f",function(){return a}),n.d(t,"h",function(){return i});var r="#293238",u="#878e91",o="#ce1126",a="rgba(206, 17, 38, 0.05)",i="rgba(251, 245, 180, 0.3)",l={width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":"#ffffff"},s={"background-color":"#fccfcf"},c={"background-color":"#fbf5b4"}},function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}var u=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=r(e),s=1;s<arguments.length;s++){n=Object(arguments[s]);for(var c in n)o.call(n,c)&&(l[c]=n[c]);if(u){i=u(n);for(var p=0;p<i.length;p++)a.call(n,i[p])&&(l[i[p]]=n[i[p]])}}return l}},function(e,t,n){"use strict";function r(e){return function(){return e}}var u=function(){};u.thatReturns=r,u.thatReturnsFalse=r(!1),u.thatReturnsTrue=r(!0),u.thatReturnsNull=r(null),u.thatReturnsThis=function(){return this},u.thatReturnsArgument=function(e){return e},e.exports=u},function(e,t,n){"use strict";function r(){}function u(e){try{return e.then}catch(e){return m=e,C}}function o(e,t){try{return e(t)}catch(e){return m=e,C}}function a(e,t,n){try{e(t,n)}catch(e){return m=e,C}}function i(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._75=0,this._83=0,this._18=null,this._38=null,e!==r&&h(e,this)}function l(e,t,n){return new e.constructor(function(u,o){var a=new i(r);a.then(u,o),s(e,new D(t,n,a))})}function s(e,t){for(;3===e._83;)e=e._18;if(i._47&&i._47(e),0===e._83)return 0===e._75?(e._75=1,void(e._38=t)):1===e._75?(e._75=2,void(e._38=[e._38,t])):void e._38.push(t);c(e,t)}function c(e,t){g(function(){var n=1===e._83?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._83?p(t.promise,e._18):f(t.promise,e._18));var r=o(n,e._18);r===C?f(t.promise,m):p(t.promise,r)})}function p(e,t){if(t===e)return f(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var n=u(t);if(n===C)return f(e,m);if(n===e.then&&t instanceof i)return e._83=3,e._18=t,void d(e);if("function"===typeof n)return void h(n.bind(t),e)}e._83=1,e._18=t,d(e)}function f(e,t){e._83=2,e._18=t,i._71&&i._71(e,t),d(e)}function d(e){if(1===e._75&&(s(e,e._38),e._38=null),2===e._75){for(var t=0;t<e._38.length;t++)s(e,e._38[t]);e._38=null}}function D(e,t,n){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=n}function h(e,t){var n=!1,r=a(e,function(e){n||(n=!0,p(t,e))},function(e){n||(n=!0,f(t,e))});n||r!==C||(n=!0,f(t,m))}var g=n(21),m=null,C={};e.exports=i,i._47=null,i._71=null,i._44=r,i.prototype.then=function(e,t){if(this.constructor!==i)return l(this,e,t);var n=new i(r);return s(this,new D(e,t,n)),n}},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r,o,a,i,l){if(u(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],p=0;s=new Error(t.replace(/%s/g,function(){return c[p++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}var u=function(e){};e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(1),s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c={position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:l.a},p=function(e){function t(){var e,n,o,a;r(this,t);for(var i=arguments.length,l=Array(i),s=0;s<i;s++)l[s]=arguments[s];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.iframeWindow=null,o.getIframeWindow=function(e){if(e){var t=e.ownerDocument;o.iframeWindow=t.defaultView}},o.onKeyDown=function(e){var t=o.props.shortcutHandler;t&&t(e.key)},a=n,u(o,a)}return o(t,e),s(t,[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.onKeyDown),this.iframeWindow&&this.iframeWindow.addEventListener("keydown",this.onKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.onKeyDown),this.iframeWindow&&this.iframeWindow.removeEventListener("keydown",this.onKeyDown)}},{key:"render",value:function(){return i.a.createElement("div",{style:c,ref:this.getIframeWindow},this.props.children)}}]),t}(a.Component);t.a=p},function(e,t,n){"use strict";function r(e){return o.a.createElement("div",{style:i},e.line1,o.a.createElement("br",null),e.line2)}var u=n(0),o=n.n(u),a=n(1),i={fontFamily:"sans-serif",color:a.b,marginTop:"0.5rem",flex:"0 0 auto"};t.a=r},function(e,t,n){"use strict";function r(e){return o.a.createElement("div",{style:i},e.headerText)}var u=n(0),o=n.n(u),a=n(1),i={fontSize:"2em",fontFamily:"sans-serif",color:a.e,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"};t.a=r},function(e,t,n){"use strict";function r(e){var t=e.main?l:s,n={__html:e.codeHTML};return o.a.createElement("pre",{style:t},o.a.createElement("code",{style:c,dangerouslySetInnerHTML:n}))}var u=n(0),o=n.n(u),a=n(1),i={display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},l=Object.assign({},i,{backgroundColor:a.f}),s=Object.assign({},i,{backgroundColor:a.h}),c={fontFamily:"Consolas, Menlo, monospace"};t.a=r},function(e,t,n){"use strict";function r(e){for(var t=(new o.a).ansiToJson(i.encode(e),{use_classes:!0}),n="",r=!1,u=0;u<t.length;++u)for(var a=t[u],c=a.content,p=a.fg,f=c.split("\\n"),d=0;d<f.length;++d){r||(n+=\'<span data-ansi-line="true">\',r=!0);var D=f[d].replace("\\r",""),h=l[s[p]];null!=h?n+=\'<span style="color: #\'+h+\';">\'+D+"</span>":(null!=p&&console.log("Missing color mapping: ",p),n+="<span>"+D+"</span>"),d<f.length-1&&(n+="</span>",r=!1,n+="<br/>")}return r&&(n+="</span>",r=!1),n}var u=n(12),o=n.n(u),a=n(36),i=(n.n(a),new a.AllHtmlEntities),l={reset:["333333","transparent"],black:"333333",red:"881280",green:"1155cc",yellow:"881280",blue:"994500",magenta:"994500",cyan:"c80000",gray:"6e6e6e",lightgrey:"f5f5f5",darkgrey:"6e6e6e"},s={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};t.a=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],a=function(){function e(){r(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return u(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,n){return(new e).ansiToHtml(t,n)}},{key:"ansiToJson",value:function(t,n){return(new e).ansiToJson(t,n)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),u(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(o[e][t].color);for(var n=[0,95,135,175,215,255],r=function(e,t,r){return n[e]+", "+n[t]+", "+n[r]},u=0;u<6;++u)for(var a=0;a<6;++a)for(var i=0;i<6;++i)this.PALETTE_COLORS.push(r(u,a,i));for(var l=8,s=0;s<24;++s,l+=10)this.PALETTE_COLORS.push(r(l,l,l))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""})}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,function(e){return\'<a href="\'+e+\'">\'+e+"</a>"})}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return t=t||{},t.json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,n){var r=this,u=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map(function(e){return r.processChunk(e,t,n)});if(t&&t.json){var l=u.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter(function(e){return!e.isEmpty()})),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,n){t="undefined"==typeof t?{}:t;var r=t.use_classes="undefined"!=typeof t.use_classes&&t.use_classes,u=t.key=r?"class":"color",a={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!a.content}},i=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!i)return a;var l=(a.content=i[4],i[2].split(";"));if(""!==i[1]||"m"!==i[3])return a;if(!n)return a;var s=this;for(s.decoration=null;l.length>0;){var c=l.shift(),p=parseInt(c);if(isNaN(p)||0===p)s.fg=s.bg=s.decoration=null;else if(1===p)s.decoration="bold";else if(2===p)s.decoration="dim";else if(3==p)s.decoration="italic";else if(4==p)s.decoration="underline";else if(5==p)s.decoration="blink";else if(7===p)s.decoration="reverse";else if(8===p)s.decoration="hidden";else if(9===p)s.decoration="strikethrough";else if(39==p)s.fg=null;else if(49==p)s.bg=null;else if(p>=30&&p<38)s.fg=o[0][p%10][u];else if(p>=90&&p<98)s.fg=o[1][p%10][u];else if(p>=40&&p<48)s.bg=o[0][p%10][u];else if(p>=100&&p<108)s.bg=o[1][p%10][u];else if(38===p||48===p){var f=38===p;if(l.length>=1){var d=l.shift();if("5"===d&&l.length>=1){var D=parseInt(l.shift());if(D>=0&&D<=255)if(r){var h=D>=16?"ansi-palette-"+D:o[D>7?1:0][D%8].class;f?s.fg=h:s.bg=h}else this.PALETTE_COLORS||s.setupPalette(),f?s.fg=this.PALETTE_COLORS[D]:s.bg=this.PALETTE_COLORS[D]}else if("2"===d&&l.length>=3){var g=parseInt(l.shift()),m=parseInt(l.shift()),C=parseInt(l.shift());if(g>=0&&g<=255&&m>=0&&m<=255&&C>=0&&C<=255){var E=g+", "+m+", "+C;r?f?(s.fg="ansi-truecolor",s.fg_truecolor=E):(s.bg="ansi-truecolor",s.bg_truecolor=E):f?s.fg=E:s.bg=E}}}}}if(null===s.fg&&null===s.bg&&null===s.decoration)return a;return a.fg=s.fg,a.bg=s.bg,a.fg_truecolor=s.fg_truecolor,a.bg_truecolor=s.bg_truecolor,a.decoration=s.decoration,a.was_processed=!0,a}},{key:"processChunk",value:function(e,t,n){var r=this;t=t||{};var u=this.processChunkJson(e,t,n);if(t.json)return u;if(u.isEmpty())return"";if(!u.was_processed)return u.content;var o=t.use_classes,a=[],i=[],l={},s=function(e){var t=[],n=void 0;for(n in e)e.hasOwnProperty(n)&&t.push("data-"+n+\'="\'+r.escapeForHtml(e[n])+\'"\');return t.length>0?" "+t.join(" "):""};return u.fg&&(o?(i.push(u.fg+"-fg"),null!==u.fg_truecolor&&(l["ansi-truecolor-fg"]=u.fg_truecolor,u.fg_truecolor=null)):a.push("color:rgb("+u.fg+")")),u.bg&&(o?(i.push(u.bg+"-bg"),null!==u.bg_truecolor&&(l["ansi-truecolor-bg"]=u.bg_truecolor,u.bg_truecolor=null)):a.push("background-color:rgb("+u.bg+")")),u.decoration&&(o?i.push("ansi-"+u.decoration):"bold"===u.decoration?a.push("font-weight:bold"):"dim"===u.decoration?a.push("opacity:0.5"):"italic"===u.decoration?a.push("font-style:italic"):"reverse"===u.decoration?a.push("filter:invert(100%)"):"hidden"===u.decoration?a.push("visibility:hidden"):"strikethrough"===u.decoration?a.push("text-decoration:line-through"):a.push("text-decoration:"+u.decoration)),o?\'<span class="\'+i.join(" ")+\'"\'+s(l)+">"+u.content+"</span>":\'<span style="\'+a.join(";")+\'"\'+s(l)+">"+u.content+"</span>"}}]),e}();e.exports=a},function(e,t){function n(){}var r=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],u={},o={};!function(e,t){for(var n=r.length,u=[];n--;){var o,a=r[n],i=a[0],l=a[1],s=l[0],c=s<32||s>126||62===s||60===s||38===s||34===s||39===s;if(c&&(o=t[s]=t[s]||{}),l[1]){var p=l[1];e[i]=String.fromCharCode(s)+String.fromCharCode(p),u.push(c&&(o[p]=i))}else e[i]=String.fromCharCode(s),u.push(c&&(o[""]=i))}}(u,o),n.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,function(e,t){var n;if("#"===t.charAt(0)){var r="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(r)||r<-32768||r>65535||(n=String.fromCharCode(r))}else n=u[t];return n||e}):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=o[e.charCodeAt(r)];if(u){var a=u[e.charCodeAt(r+1)];if(a?r++:a=u[""],a){n+="&"+a+";",r++;continue}}n+=e.charAt(r),r++}return n},n.encode=function(e){return(new n).encode(e)},n.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r),a=o[u];if(a){var i=a[e.charCodeAt(r+1)];if(i?r++:i=a[""],i){n+="&"+i+";",r++;continue}}n+=u<32||u>126?"&#"+u+";":e.charAt(r),r++}return n},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},e.exports=n},function(e,t,n){"use strict";function r(e,t){e.setAttribute("style","");for(var n in t)t.hasOwnProperty(n)&&(e.style[n]=t[n])}n.d(t,"a",function(){return r})},function(e,t){!function(){"use strict";function t(e){return 48<=e&&e<=57}function n(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70}function r(e){return e>=48&&e<=55}function u(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&d.indexOf(e)>=0}function o(e){return 10===e||13===e||8232===e||8233===e}function a(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}function i(e){return e<128?D[e]:f.NonAsciiIdentifierStart.test(a(e))}function l(e){return e<128?h[e]:f.NonAsciiIdentifierPart.test(a(e))}function s(e){return e<128?D[e]:p.NonAsciiIdentifierStart.test(a(e))}function c(e){return e<128?h[e]:p.NonAsciiIdentifierPart.test(a(e))}var p,f,d,D,h,g;for(f={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/},p={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDD0-\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF01-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/},d=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],D=new Array(128),g=0;g<128;++g)D[g]=g>=97&&g<=122||g>=65&&g<=90||36===g||95===g;for(h=new Array(128),g=0;g<128;++g)h[g]=g>=97&&g<=122||g>=65&&g<=90||g>=48&&g<=57||36===g||95===g;e.exports={isDecimalDigit:t,isHexDigit:n,isOctalDigit:r,isWhiteSpace:u,isLineTerminator:o,isIdentifierStartES5:i,isIdentifierPartES5:l,isIdentifierStartES6:s,isIdentifierPartES6:c}}()},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function u(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function o(e){if(p===clearTimeout)return clearTimeout(e);if((p===r||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(e);try{return p(e)}catch(t){try{return p.call(null,e)}catch(t){return p.call(this,e)}}}function a(){h&&d&&(h=!1,d.length?D=d.concat(D):g=-1,D.length&&i())}function i(){if(!h){var e=u(a);h=!0;for(var t=D.length;t;){for(d=D,D=[];++g<t;)d&&d[g].run();g=-1,t=D.length}d=null,h=!1,o(e)}}function l(e,t){this.fun=e,this.array=t}function s(){}var c,p,f=e.exports={};!function(){try{c="function"===typeof setTimeout?setTimeout:n}catch(e){c=n}try{p="function"===typeof clearTimeout?clearTimeout:r}catch(e){p=r}}();var d,D=[],h=!1,g=-1;f.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];D.push(new l(e,t)),1!==D.length||h||u(i)},l.prototype.run=function(){this.fun.apply(null,this.array)},f.title="browser",f.browser=!0,f.env={},f.argv=[],f.version="",f.versions={},f.on=s,f.addListener=s,f.once=s,f.off=s,f.removeListener=s,f.removeAllListeners=s,f.emit=s,f.prependListener=s,f.prependOnceListener=s,f.listeners=function(e){return[]},f.binding=function(e){throw new Error("process.binding is not supported")},f.cwd=function(){return"/"},f.chdir=function(e){throw new Error("process.chdir is not supported")},f.umask=function(){return 0}},function(e,t,n){"use strict";e.exports=function(){return/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g}},function(e,t,n){"use strict";function r(e){var t=e.currentBuildError,n=e.currentRuntimeErrorRecords,r=e.dismissRuntimeErrors,u=e.editorHandler;return t?a.a.createElement(s.a,{error:t,editorHandler:u}):n.length>0?a.a.createElement(c.a,{errorRecords:n,close:r,editorHandler:u}):null}Object.defineProperty(t,"__esModule",{value:!0});var u=n(19),o=(n.n(u),n(0)),a=n.n(o),i=n(25),l=n.n(i),s=n(35),c=n(40),p=n(1),f=n(14),d=null;window.updateContent=function(e){var t=r(e);return null===t?(l.a.unmountComponentAtNode(d),!1):(l.a.render(t,d),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",d=document.createElement("div"),Object(f.a)(d,p.c),document.body.appendChild(d),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()},function(e,t,n){"undefined"===typeof Promise&&(n(20).enable(),window.Promise=n(23)),Object.assign=n(2)},function(e,t,n){"use strict";function r(){s=!1,i._47=null,i._71=null}function u(e){function t(t){(e.allRejections||a(p[t].error,e.whitelist||l))&&(p[t].displayId=c++,e.onUnhandled?(p[t].logged=!0,e.onUnhandled(p[t].displayId,p[t].error)):(p[t].logged=!0,o(p[t].displayId,p[t].error)))}function n(t){p[t].logged&&(e.onHandled?e.onHandled(p[t].displayId,p[t].error):p[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+p[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+p[t].displayId+".")))}e=e||{},s&&r(),s=!0;var u=0,c=0,p={};i._47=function(e){2===e._83&&p[e._56]&&(p[e._56].logged?n(e._56):clearTimeout(p[e._56].timeout),delete p[e._56])},i._71=function(e,n){0===e._75&&(e._56=u++,p[e._56]={displayId:null,error:n,timeout:setTimeout(t.bind(null,e._56),a(n,l)?100:2e3),logged:!1})}}function o(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach(function(e){console.warn("  "+e)})}function a(e,t){return t.some(function(t){return e instanceof t})}var i=n(4),l=[ReferenceError,TypeError,RangeError],s=!1;t.disable=r,t.enable=u},function(e,t,n){"use strict";(function(t){function n(e){a.length||(o(),i=!0),a[a.length]=e}function r(){for(;l<a.length;){var e=l;if(l+=1,a[e].call(),l>s){for(var t=0,n=a.length-l;t<n;t++)a[t]=a[t+l];a.length-=l,l=0}}a.length=0,l=0,i=!1}function u(e){return function(){function t(){clearTimeout(n),clearInterval(r),e()}var n=setTimeout(t,0),r=setInterval(t,50)}}e.exports=n;var o,a=[],i=!1,l=0,s=1024,c="undefined"!==typeof t?t:self,p=c.MutationObserver||c.WebKitMutationObserver;o="function"===typeof p?function(e){var t=1,n=new p(e),r=document.createTextNode("");return n.observe(r,{characterData:!0}),function(){t=-t,r.data=t}}(r):u(r),n.requestFlush=o,n.makeRequestCallFromTimer=u}).call(t,n(22))},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"===typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e){var t=new u(u._44);return t._83=1,t._18=e,t}var u=n(4);e.exports=u;var o=r(!0),a=r(!1),i=r(null),l=r(void 0),s=r(0),c=r("");u.resolve=function(e){if(e instanceof u)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return s;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new u(t.bind(e))}catch(e){return new u(function(t,n){n(e)})}return r(e)},u.all=function(e){var t=Array.prototype.slice.call(e);return new u(function(e,n){function r(a,i){if(i&&("object"===typeof i||"function"===typeof i)){if(i instanceof u&&i.then===u.prototype.then){for(;3===i._83;)i=i._18;return 1===i._83?r(a,i._18):(2===i._83&&n(i._18),void i.then(function(e){r(a,e)},n))}var l=i.then;if("function"===typeof l){return void new u(l.bind(i)).then(function(e){r(a,e)},n)}}t[a]=i,0===--o&&e(t)}if(0===t.length)return e([]);for(var o=t.length,a=0;a<t.length;a++)r(a,t[a])})},u.reject=function(e){return new u(function(t,n){n(e)})},u.race=function(e){return new u(function(t,n){e.forEach(function(e){u.resolve(e).then(t,n)})})},u.prototype.catch=function(e){return this.then(null,e)}},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function u(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||A}function o(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||A}function a(){}function i(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||A}function l(e,t,n,r,u,o,a){return{$$typeof:w,type:e,key:t,ref:n,props:a,_owner:o}}function s(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function c(e,t,n,r){if(P.length){var u=P.pop();return u.result=e,u.keyPrefix=t,u.func=n,u.context=r,u.count=0,u}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function p(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function f(e,t,n,u){var o=typeof e;if("undefined"!==o&&"boolean"!==o||(e=null),null===e||"string"===o||"number"===o||"object"===o&&e.$$typeof===T)return n(u,e,""===t?"."+d(e,0):t),1;var a=0;if(t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){o=e[i];var l=t+d(o,i);a+=f(o,l,n,u)}else if("function"===typeof(l=x&&e[x]||e["@@iterator"]))for(e=l.call(e),i=0;!(o=e.next()).done;)o=o.value,l=t+d(o,i++),a+=f(o,l,n,u);else"object"===o&&(n=""+e,r("31","[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function d(e,t){return"object"===typeof e&&null!==e&&null!=e.key?s(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function h(e,t,n){var r=e.result,u=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?g(e,r,n,E.thatReturnsArgument):null!=e&&(l.isValidElement(e)&&(e=l.cloneAndReplaceKey(e,u+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(S,"$&/")+"/")+n)),r.push(e))}function g(e,t,n,r,u){var o="";null!=n&&(o=(""+n).replace(S,"$&/")+"/"),t=c(t,o,r,u),null==e||f(e,"",h,t),p(t)}var m=n(2),C=n(5);n(6);var E=n(3),A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};u.prototype.isReactComponent={},u.prototype.setState=function(e,t){"object"!==typeof e&&"function"!==typeof e&&null!=e&&r("85"),this.updater.enqueueSetState(this,e,t,"setState")},u.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},a.prototype=u.prototype;var F=o.prototype=new a;F.constructor=o,m(F,u.prototype),F.isPureReactComponent=!0;var b=i.prototype=new a;b.constructor=i,m(b,u.prototype),b.unstable_isAsyncReactComponent=!0,b.render=function(){return this.props.children};var y={Component:u,PureComponent:o,AsyncComponent:i},v={current:null},B=Object.prototype.hasOwnProperty,w="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,k={key:!0,ref:!0,__self:!0,__source:!0};l.createElement=function(e,t,n){var r,u={},o=null,a=null,i=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(o=""+t.key),i=void 0===t.__self?null:t.__self,s=void 0===t.__source?null:t.__source,t)B.call(t,r)&&!k.hasOwnProperty(r)&&(u[r]=t[r]);var c=arguments.length-2;if(1===c)u.children=n;else if(1<c){for(var p=Array(c),f=0;f<c;f++)p[f]=arguments[f+2];u.children=p}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===u[r]&&(u[r]=c[r]);return l(e,o,a,i,s,v.current,u)},l.createFactory=function(e){var t=l.createElement.bind(null,e);return t.type=e,t},l.cloneAndReplaceKey=function(e,t){return l(e.type,t,e.ref,e._self,e._source,e._owner,e.props)},l.cloneElement=function(e,t,n){var r=m({},e.props),u=e.key,o=e.ref,a=e._self,i=e._source,s=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,s=v.current),void 0!==t.key&&(u=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(p in t)B.call(t,p)&&!k.hasOwnProperty(p)&&(r[p]=void 0===t[p]&&void 0!==c?c[p]:t[p])}var p=arguments.length-2;if(1===p)r.children=n;else if(1<p){c=Array(p);for(var f=0;f<p;f++)c[f]=arguments[f+2];r.children=c}return l(e.type,u,o,a,i,s,r)},l.isValidElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===w};var x="function"===typeof Symbol&&Symbol.iterator,T="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,S=/\\/+/g,P=[],N={forEach:function(e,t,n){if(null==e)return e;t=c(null,null,t,n),null==e||f(e,"",D,t),p(t)},map:function(e,t,n){if(null==e)return e;var r=[];return g(e,r,null,t,n),r},count:function(e){return null==e?0:f(e,"",E.thatReturnsNull,null)},toArray:function(e){var t=[];return g(e,t,null,E.thatReturnsArgument),t}};e.exports={Children:{map:N.map,forEach:N.forEach,count:N.count,toArray:N.toArray,only:function(e){return l.isValidElement(e)||r("143"),e}},Component:y.Component,PureComponent:y.PureComponent,unstable_AsyncComponent:y.AsyncComponent,createElement:l.createElement,cloneElement:l.cloneElement,isValidElement:l.isValidElement,createFactory:l.createFactory,version:"16.0.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:v,assign:m}}},function(e,t,n){"use strict";function r(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n(26)},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function u(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function o(){if(xt)for(var e in Tt){var t=Tt[e],n=xt.indexOf(e);if(-1<n||r("96",e),!St.plugins[n]){t.extractEvents||r("97",e),St.plugins[n]=t,n=t.eventTypes;for(var u in n){var o=void 0,i=n[u],l=t,s=u;St.eventNameDispatchConfigs.hasOwnProperty(s)&&r("99",s),St.eventNameDispatchConfigs[s]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&a(c[o],l,s);o=!0}else i.registrationName?(a(i.registrationName,l,s),o=!0):o=!1;o||r("98",u,e)}}}}function a(e,t,n){St.registrationNameModules[e]&&r("100",e),St.registrationNameModules[e]=t,St.registrationNameDependencies[e]=t.eventTypes[n].dependencies}function i(e,t){return(e&t)===t}function l(e){for(var t;t=e._renderedComponent;)e=t;return e}function s(e,t){e=l(e),e._hostNode=t,t[zt]=e}function c(e,t){if(!(e._flags&Vt.hasCachedChildNodes)){var n=e._renderedChildren;t=t.firstChild;var u;e:for(u in n)if(n.hasOwnProperty(u)){var o=n[u],a=l(o)._domID;if(0!==a){for(;null!==t;t=t.nextSibling){var i=t,c=a;if(i.nodeType===Ht&&i.getAttribute(jt)===""+c||i.nodeType===qt&&i.nodeValue===" react-text: "+c+" "||i.nodeType===qt&&i.nodeValue===" react-empty: "+c+" "){s(o,t);continue e}}r("32",a)}}e._flags|=Vt.hasCachedChildNodes}}function p(e){if(e[zt])return e[zt];for(var t=[];!e[zt];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=e[zt];if(n.tag===Ut||n.tag===Mt)return n;for(;e&&(n=e[zt]);e=t.pop()){var r=n;t.length&&c(n,e)}return r}function f(e){if("function"===typeof e.getName)return e.getName();if("number"===typeof e.tag){if("string"===typeof(e=e.type))return e;if("function"===typeof e)return e.displayName||e.name}return null}function d(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if((t.effectTag&nn)!==tn)return 1;for(;t.return;)if(t=t.return,(t.effectTag&nn)!==tn)return 1}return t.tag===Jt?2:3}function D(e){2!==d(e)&&r("188")}function h(e){var t=e.alternate;if(!t)return t=d(e),3===t&&r("188"),1===t?null:e;for(var n=e,u=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return D(o),e;if(i===u)return D(o),t;i=i.sibling}r("188")}if(n.return!==u.return)n=o,u=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,u=a;break}if(l===u){i=!0,u=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,u=o;break}if(l===u){i=!0,u=a,n=o;break}l=l.sibling}i||r("189")}}n.alternate!==u&&r("190")}return n.tag!==Jt&&r("188"),n.stateNode.current===n?e:t}function g(e,t,n,r,u,o,a,i,l){un._hasCaughtError=!1,un._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){un._caughtError=e,un._hasCaughtError=!0}}function m(){if(un._hasRethrowError){var e=un._rethrowError;throw un._rethrowError=null,un._hasRethrowError=!1,e}}function C(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=an.getNodeFromInstance(r),on.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function E(e){if(e=ln.getInstanceFromNode(e))if("number"===typeof e.tag){sn&&"function"===typeof sn.restoreControlledState||r("194");var t=ln.getFiberCurrentPropsFromNode(e.stateNode);sn.restoreControlledState(e.stateNode,e.type,t)}else"function"!==typeof e.restoreControlledState&&r("195"),e.restoreControlledState()}function A(e,t,n,r,u,o){return e(t,n,r,u,o)}function F(e,t){return e(t)}function b(e,t){return F(e,t)}function y(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===hn?e.parentNode:e}function v(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n=t;if("number"===typeof n.tag){for(;n.return;)n=n.return;n=n.tag!==gn?null:n.stateNode.containerInfo}else{for(;n._hostParent;)n=n._hostParent;n=Gt.getNodeFromInstance(n).parentNode}if(!n)break;e.ancestors.push(t),t=Gt.getClosestInstanceFromNode(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],Cn._handleTopLevel(e.topLevelType,t,e.nativeEvent,y(e.nativeEvent))}function B(e,t){return null==t&&r("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function w(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function k(e,t){e&&(ln.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))}function x(e){return k(e,!0)}function T(e){return k(e,!1)}function S(e,t,n){switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":return!(!n.disabled||"button"!==t&&"input"!==t&&"select"!==t&&"textarea"!==t);default:return!1}}function P(e,t){if(!gt.canUseDOM||t&&!("addEventListener"in document))return!1;t="on"+e;var n=t in document;return n||(n=document.createElement("div"),n.setAttribute(t,"return;"),n="function"===typeof n[t]),!n&&wt&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function N(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function _(e){if(yn[e])return yn[e];if(!bn[e])return e;var t,n=bn[e];for(t in n)if(n.hasOwnProperty(t)&&t in vn)return yn[e]=n[t];return""}function O(e){return Object.prototype.hasOwnProperty.call(e,xn)||(e[xn]=kn++,wn[e[xn]]={}),wn[e[xn]]}function I(e){return!!Hn.hasOwnProperty(e)||!Mn.hasOwnProperty(e)&&(Un.test(e)?Hn[e]=!0:(Mn[e]=!0,!1))}function R(){return null}function L(e){var t="";return ht.Children.forEach(e,function(e){null==e||"string"!==typeof e&&"number"!==typeof e||(t+=e)}),t}function U(e,t,n){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r)}else{for(n=""+n,t=null,r=0;r<e.length;r++){if(e[r].value===n)return void(e[r].selected=!0);null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function M(e,t){t&&(Jn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&r("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&r("60"),"object"===typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||r("61")),null!=t.style&&"object"!==typeof t.style&&r("62",""))}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"===typeof n.get&&"function"===typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}function j(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function V(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===rr)return void(n.nodeValue=t)}e.textContent=t}function W(e,t){ir(t,e.nodeType===or||e.nodeType===ar?e:e.ownerDocument)}function z(e,t){return e!==Nr&&e!==Pr||t!==Nr&&t!==Pr?e===Sr&&t!==Sr?-255:e!==Sr&&t===Sr?255:e-t:0}function K(){return{first:null,last:null,hasForceUpdate:!1,callbackList:null}}function G(e,t,n,r){null!==n?n.next=t:(t.next=e.first,e.first=t),null!==r?t.next=r:e.last=t}function Y(e,t){t=t.priorityLevel;var n=null;if(null!==e.last&&0>=z(e.last.priorityLevel,t))n=e.last;else for(e=e.first;null!==e&&0>=z(e.priorityLevel,t);)n=e,e=e.next;return n}function $(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=K()),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=K()):e=null,Ir=r,Rr=e!==r?e:null;var u=Ir;n=Rr;var o=Y(u,t),a=null!==o?o.next:u.first;return null===n?(G(u,t,o,a),null):(r=Y(n,t),e=null!==r?r.next:n.first,G(u,t,o,a),a===e&&null!==a||o===r&&null!==o?(null===r&&(n.first=t),null===e&&(n.last=null),null):(t={priorityLevel:t.priorityLevel,partialState:t.partialState,callback:t.callback,isReplace:t.isReplace,isForced:t.isForced,isTopLevelUnmount:t.isTopLevelUnmount,next:null},G(n,t,r,e),t))}function Q(e,t,n,r){return e=e.partialState,"function"===typeof e?e.call(t,n,r):e}function X(e,t,n){e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=n}function J(e){return e.tag===jr&&null!=e.type.childContextTypes}function Z(e,t){var n=e.stateNode,u=e.type.childContextTypes;if("function"!==typeof n.getChildContext)return t;n=n.getChildContext();for(var o in n)o in u||r("108",f(e)||"Unknown",o);return mt({},t,n)}function ee(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=su,this.lastEffect=this.firstEffect=this.nextEffect=null,this.pendingWorkPriority=iu,this.alternate=null}function te(e,t,n){var u=void 0;return"function"===typeof e?(u=e.prototype&&e.prototype.isReactComponent?new ee(Zr,t,n):new ee(Jr,t,n),u.type=e):"string"===typeof e?(u=new ee(tu,t,n),u.type=e):"object"===typeof e&&null!==e&&"number"===typeof e.tag?u=e:r("130",null==e?e:typeof e,""),u}function ne(e){return null===e||"undefined"===typeof e?null:(e=Hu&&e[Hu]||e["@@iterator"],"function"===typeof e?e:null)}function re(e,t){var n=t.ref;if(null!==n&&"function"!==typeof n){if(t._owner){t=t._owner;var u=void 0;t&&("number"===typeof t.tag?(t.tag!==Pu&&r("110"),u=t.stateNode):u=t.getPublicInstance()),u||r("147",n);var o=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===o?e.ref:(e=function(e){var t=u.refs===At?u.refs={}:u.refs;null===e?delete t[o]:t[o]=e},e._stringRef=o,e)}"string"!==typeof n&&r("148"),t._owner||r("149",n)}return n}function ue(e,t){"textarea"!==e.type&&r("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function oe(e,t){function n(n,r){if(t){if(!e){if(null===r.alternate)return;r=r.alternate}var u=n.lastEffect;null!==u?(u.nextEffect=r,n.lastEffect=r):n.firstEffect=n.lastEffect=r,r.nextEffect=null,r.effectTag=Mu}}function u(e,r){if(!t)return null;for(;null!==r;)n(e,r),r=r.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(t,n){return e?(t=bu(t,n),t.index=0,t.sibling=null,t):(t.pendingWorkPriority=n,t.effectTag=Lu,t.index=0,t.sibling=null,t)}function i(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index,r<n?(e.effectTag=Uu,n):r):(e.effectTag=Uu,n):n}function l(e){return t&&null===e.alternate&&(e.effectTag=Uu),e}function s(e,t,n,r){return null===t||t.tag!==Nu?(n=Bu(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function c(e,t,n,r){return null===t||t.type!==n.type?(r=yu(n,e.internalContextTag,r),r.ref=re(t,n),r.return=e,r):(r=a(t,r),r.ref=re(t,n),r.pendingProps=n.props,r.return=e,r)}function p(e,t,n,r){return null===t||t.tag!==Ou?(n=wu(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function f(e,t,n,r){return null===t||t.tag!==Iu?(t=ku(n,e.internalContextTag,r),t.type=n.value,t.return=e,t):(t=a(t,r),t.type=n.value,t.return=e,t)}function d(e,t,n,r){return null===t||t.tag!==_u||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(n=xu(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n.children||[],t.return=e,t)}function D(e,t,n,r){return null===t||t.tag!==Ru?(n=vu(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function h(e,t,n){if("string"===typeof t||"number"===typeof t)return t=Bu(""+t,e.internalContextTag,n),t.return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case qu:return n=yu(t,e.internalContextTag,n),n.ref=re(null,t),n.return=e,n;case Eu:return t=wu(t,e.internalContextTag,n),t.return=e,t;case Au:return n=ku(t,e.internalContextTag,n),n.type=t.value,n.return=e,n;case Fu:return t=xu(t,e.internalContextTag,n),t.return=e,t}if(Tu(t)||ne(t))return t=vu(t,e.internalContextTag,n),t.return=e,t;ue(e,t)}return null}function g(e,t,n,r){var u=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==u?null:s(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case qu:return n.key===u?c(e,t,n,r):null;case Eu:return n.key===u?p(e,t,n,r):null;case Au:return null===u?f(e,t,n,r):null;case Fu:return n.key===u?d(e,t,n,r):null}if(Tu(n)||ne(n))return null!==u?null:D(e,t,n,r);ue(e,n)}return null}function m(e,t,n,r,u){if("string"===typeof r||"number"===typeof r)return e=e.get(n)||null,s(t,e,""+r,u);if("object"===typeof r&&null!==r){switch(r.$$typeof){case qu:return e=e.get(null===r.key?n:r.key)||null,c(t,e,r,u);case Eu:return e=e.get(null===r.key?n:r.key)||null,p(t,e,r,u);case Au:return e=e.get(n)||null,f(t,e,r,u);case Fu:return e=e.get(null===r.key?n:r.key)||null,d(t,e,r,u)}if(Tu(r)||ne(r))return e=e.get(n)||null,D(t,e,r,u);ue(t,r)}return null}function C(e,r,a,l){for(var s=null,c=null,p=r,f=r=0,d=null;null!==p&&f<a.length;f++){p.index>f?(d=p,p=null):d=p.sibling;var D=g(e,p,a[f],l);if(null===D){null===p&&(p=d);break}t&&p&&null===D.alternate&&n(e,p),r=i(D,r,f),null===c?s=D:c.sibling=D,c=D,p=d}if(f===a.length)return u(e,p),s;if(null===p){for(;f<a.length;f++)(p=h(e,a[f],l))&&(r=i(p,r,f),null===c?s=p:c.sibling=p,c=p);return s}for(p=o(e,p);f<a.length;f++)(d=m(p,e,f,a[f],l))&&(t&&null!==d.alternate&&p.delete(null===d.key?f:d.key),r=i(d,r,f),null===c?s=d:c.sibling=d,c=d);return t&&p.forEach(function(t){return n(e,t)}),s}function E(e,a,l,s){var c=ne(l);"function"!==typeof c&&r("150"),null==(l=c.call(l))&&r("151");for(var p=c=null,f=a,d=a=0,D=null,C=l.next();null!==f&&!C.done;d++,C=l.next()){f.index>d?(D=f,f=null):D=f.sibling;var E=g(e,f,C.value,s);if(null===E){f||(f=D);break}t&&f&&null===E.alternate&&n(e,f),a=i(E,a,d),null===p?c=E:p.sibling=E,p=E,f=D}if(C.done)return u(e,f),c;if(null===f){for(;!C.done;d++,C=l.next())null!==(C=h(e,C.value,s))&&(a=i(C,a,d),null===p?c=C:p.sibling=C,p=C);return c}for(f=o(e,f);!C.done;d++,C=l.next())null!==(C=m(f,e,d,C.value,s))&&(t&&null!==C.alternate&&f.delete(null===C.key?d:C.key),a=i(C,a,d),null===p?c=C:p.sibling=C,p=C);return t&&f.forEach(function(t){return n(e,t)}),c}return function(e,t,o,i){var s="object"===typeof o&&null!==o;if(s)switch(o.$$typeof){case qu:e:{var c=o.key;for(s=t;null!==s;){if(s.key===c){if(s.type===o.type){u(e,s.sibling),t=a(s,i),t.ref=re(s,o),t.pendingProps=o.props,t.return=e,e=t;break e}u(e,s);break}n(e,s),s=s.sibling}i=yu(o,e.internalContextTag,i),i.ref=re(t,o),i.return=e,e=i}return l(e);case Eu:e:{for(s=o.key;null!==t;){if(t.key===s){if(t.tag===Ou){u(e,t.sibling),t=a(t,i),t.pendingProps=o,t.return=e,e=t;break e}u(e,t);break}n(e,t),t=t.sibling}o=wu(o,e.internalContextTag,i),o.return=e,e=o}return l(e);case Au:e:{if(null!==t){if(t.tag===Iu){u(e,t.sibling),t=a(t,i),t.type=o.value,t.return=e,e=t;break e}u(e,t)}t=ku(o,e.internalContextTag,i),t.type=o.value,t.return=e,e=t}return l(e);case Fu:e:{for(s=o.key;null!==t;){if(t.key===s){if(t.tag===_u&&t.stateNode.containerInfo===o.containerInfo&&t.stateNode.implementation===o.implementation){u(e,t.sibling),t=a(t,i),t.pendingProps=o.children||[],t.return=e,e=t;break e}u(e,t);break}n(e,t),t=t.sibling}o=xu(o,e.internalContextTag,i),o.return=e,e=o}return l(e)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==t&&t.tag===Nu?(u(e,t.sibling),t=a(t,i),t.pendingProps=o,t.return=e,e=t):(u(e,t),o=Bu(o,e.internalContextTag,i),o.return=e,e=o),l(e);if(Tu(o))return C(e,t,o,i);if(ne(o))return E(e,t,o,i);if(s&&ue(e,o),"undefined"===typeof o)switch(e.tag){case Pu:case Su:o=e.type,r("152",o.displayName||o.name||"Component")}return u(e,t)}}function ae(e,t,n,u){function o(e,t){t.updater=a,e.stateNode=t,Yt.set(t,e)}var a={isMounted:ro,enqueueSetState:function(n,r,u){n=Yt.get(n);var o=t(n,!1);Ju(n,r,void 0===u?null:u,o),e(n,o)},enqueueReplaceState:function(n,r,u){n=Yt.get(n);var o=t(n,!1);Zu(n,r,void 0===u?null:u,o),e(n,o)},enqueueForceUpdate:function(n,r){n=Yt.get(n);var u=t(n,!1);eo(n,void 0===r?null:r,u),e(n,u)}};return{adoptClassInstance:o,constructClassInstance:function(e,t){var n=e.type,r=Qu(e),u=Xu(e),a=u?$u(e,r):At;return t=new n(t,a),o(e,t),u&&Yu(e,r,a),t},mountClassInstance:function(e,t){var n=e.alternate,u=e.stateNode,o=u.state||null,i=e.pendingProps;i||r("158");var l=Qu(e);u.props=i,u.state=o,u.refs=At,u.context=$u(e,l),kr.enableAsyncSubtreeAPI&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=Gu),"function"===typeof u.componentWillMount&&(l=u.state,u.componentWillMount(),l!==u.state&&a.enqueueReplaceState(u,u.state,null),null!==(l=e.updateQueue)&&(u.state=to(n,e,l,u,o,i,t))),"function"===typeof u.componentDidMount&&(e.effectTag|=Ku)},updateClassInstance:function(e,t,o){var i=t.stateNode;i.props=t.memoizedProps,i.state=t.memoizedState;var l=t.memoizedProps,s=t.pendingProps;s||null==(s=l)&&r("159");var c=i.context,p=Qu(t);if(p=$u(t,p),"function"!==typeof i.componentWillReceiveProps||l===s&&c===p||(c=i.state,i.componentWillReceiveProps(s,p),i.state!==c&&a.enqueueReplaceState(i,i.state,null)),c=t.memoizedState,o=null!==t.updateQueue?to(e,t,t.updateQueue,i,c,s,o):c,!(l!==s||c!==o||no()||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=Ku),!1;var f=s;if(null===l||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)f=!0;else{var d=t.stateNode,D=t.type;f="function"===typeof d.shouldComponentUpdate?d.shouldComponentUpdate(f,o,p):!D.prototype||!D.prototype.isPureReactComponent||(!Ft(l,f)||!Ft(c,o))}return f?("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(s,o,p),"function"===typeof i.componentDidUpdate&&(t.effectTag|=Ku)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=Ku),n(t,s),u(t,o)),i.props=s,i.state=o,i.context=p,f}}}function ie(e,t,n,u,o){function a(e,t,n){i(e,t,n,t.pendingWorkPriority)}function i(e,t,n,r){t.child=null===e?uo(t,t.child,n,r):e.child===t.child?oo(t,t.child,n,r):ao(t,t.child,n,r)}function l(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=_o)}function s(e,t,n,r){if(l(e,t),!n)return r&&ho(t,!1),p(e,t);n=t.stateNode,Oo.current=t;var u=n.render();return t.effectTag|=To,a(e,t,u),t.memoizedState=n.state,t.memoizedProps=n.props,r&&ho(t,!0),t.child}function c(e){var t=e.stateNode;t.pendingContext?Do(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Do(e,t.context,!1),m(e,t.containerInfo)}function p(e,t){return io(e,t),t.child}function f(e,t){switch(t.tag){case Eo:c(t);break;case Co:fo(t);break;case bo:m(t,t.stateNode.containerInfo)}return null}var d=e.shouldSetTextContent,D=e.useSyncScheduling,h=e.shouldDeprioritizeSubtree,g=t.pushHostContext,m=t.pushHostContainer,C=n.enterHydrationState,E=n.resetHydrationState,A=n.tryToClaimNextHydratableInstance;e=ae(u,o,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t});var F=e.adoptClassInstance,b=e.constructClassInstance,y=e.mountClassInstance,v=e.updateClassInstance;return{beginWork:function(e,t,n){if(t.pendingWorkPriority===ko||t.pendingWorkPriority>n)return f(e,t);switch(t.tag){case go:null!==e&&r("155");var u=t.type,o=t.pendingProps,i=co(t);return i=so(t,i),u=u(o,i),t.effectTag|=To,"object"===typeof u&&null!==u&&"function"===typeof u.render?(t.tag=Co,o=fo(t),F(t,u),y(t,n),t=s(e,t,!0,o)):(t.tag=mo,a(e,t,u),t.memoizedProps=o,t=t.child),t;case mo:e:{if(o=t.type,n=t.pendingProps,u=t.memoizedProps,po())null===n&&(n=u);else if(null===n||u===n){t=p(e,t);break e}u=co(t),u=so(t,u),o=o(n,u),t.effectTag|=To,a(e,t,o),t.memoizedProps=n,t=t.child}return t;case Co:return o=fo(t),u=void 0,null===e?t.stateNode?r("153"):(b(t,t.pendingProps),y(t,n),u=!0):u=v(e,t,n),s(e,t,u,o);case Eo:return c(t),u=t.updateQueue,null!==u?(o=t.memoizedState,u=lo(e,t,u,null,o,null,n),o===u?(E(),t=p(e,t)):(o=u.element,null!==e&&null!==e.child||!C(t)?(E(),a(e,t,o)):(t.effectTag|=So,t.child=uo(t,t.child,o,n)),t.memoizedState=u,t=t.child)):(E(),t=p(e,t)),t;case Ao:g(t),null===e&&A(t),o=t.type;var B=t.memoizedProps;return u=t.pendingProps,null===u&&null===(u=B)&&r("154"),i=null!==e?e.memoizedProps:null,po()||null!==u&&B!==u?(B=u.children,d(o,u)?B=null:i&&d(o,i)&&(t.effectTag|=Po),l(e,t),n!==xo&&!D&&h(o,u)?(t.pendingWorkPriority=xo,t=null):(a(e,t,B),t.memoizedProps=u,t=t.child)):t=p(e,t),t;case Fo:return null===e&&A(t),e=t.pendingProps,null===e&&(e=t.memoizedProps),t.memoizedProps=e,null;case vo:t.tag=yo;case yo:return n=t.pendingProps,po()?null===n&&null===(n=e&&e.memoizedProps)&&r("154"):null!==n&&t.memoizedProps!==n||(n=t.memoizedProps),o=n.children,u=t.pendingWorkPriority,t.stateNode=null===e?uo(t,t.stateNode,o,u):e.child===t.child?oo(t,t.stateNode,o,u):ao(t,t.stateNode,o,u),t.memoizedProps=n,t.stateNode;case Bo:return null;case bo:e:{if(m(t,t.stateNode.containerInfo),n=t.pendingWorkPriority,o=t.pendingProps,po())null===o&&null==(o=e&&e.memoizedProps)&&r("154");else if(null===o||t.memoizedProps===o){t=p(e,t);break e}null===e?t.child=ao(t,t.child,o,n):a(e,t,o),t.memoizedProps=o,t=t.child}return t;case wo:e:{if(n=t.pendingProps,po())null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=p(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:r("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case Co:fo(t);break;case Eo:c(t);break;default:r("157")}return t.effectTag|=No,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),t.pendingWorkPriority===ko||t.pendingWorkPriority>n?f(e,t):(t.firstEffect=null,t.lastEffect=null,i(e,t,null,n),t.tag===Co&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}function le(e,t,n){var u=e.createInstance,o=e.createTextInstance,a=e.appendInitialChild,i=e.finalizeInitialChildren,l=e.prepareUpdate,s=t.getRootHostContainer,c=t.popHostContext,p=t.getHostContext,f=t.popHostContainer,d=n.prepareToHydrateHostInstance,D=n.prepareToHydrateHostTextInstance,h=n.popHydrationState;return{completeWork:function(e,t,n){var g=t.pendingProps;switch(null===g?g=t.memoizedProps:t.pendingWorkPriority===Jo&&n!==Jo||(t.pendingProps=null),t.tag){case Mo:return null;case Ho:return Ro(t),null;case qo:return f(t),Lo(t),g=t.stateNode,g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),null!==e&&null!==e.child||(h(t),t.effectTag&=~$o),null;case jo:c(t),n=s();var m=t.type;if(null!==e&&null!=t.stateNode){var C=e.memoizedProps,E=t.stateNode,A=p();g=l(E,m,C,g,n,A),(t.updateQueue=g)&&(t.effectTag|=Xo),e.ref!==t.ref&&(t.effectTag|=Qo)}else{if(!g)return null===t.stateNode&&r("166"),null;if(e=p(),h(t))d(t,n,e)&&(t.effectTag|=Xo);else{e=u(m,g,n,e,t);e:for(C=t.child;null!==C;){if(C.tag===jo||C.tag===Vo)a(e,C.stateNode);else if(C.tag!==Wo&&null!==C.child){C=C.child;continue}if(C===t)break e;for(;null===C.sibling;){if(null===C.return||C.return===t)break e;C=C.return}C=C.sibling}i(e,m,g,n)&&(t.effectTag|=Xo),t.stateNode=e}null!==t.ref&&(t.effectTag|=Qo)}return null;case Vo:if(e&&null!=t.stateNode)e.memoizedProps!==g&&(t.effectTag|=Xo);else{if("string"!==typeof g)return null===t.stateNode&&r("166"),null;e=s(),n=p(),h(t)?D(t)&&(t.effectTag|=Xo):t.stateNode=o(g,e,n,t)}return null;case zo:(g=t.memoizedProps)||r("165"),t.tag=Ko,n=[];e:for((m=t.stateNode)&&(m.return=t);null!==m;){if(m.tag===jo||m.tag===Vo||m.tag===Wo)r("164");else if(m.tag===Go)n.push(m.type);else if(null!==m.child){m.child.return=m,m=m.child;continue}for(;null===m.sibling;){if(null===m.return||m.return===t)break e;m=m.return}m.sibling.return=m.return,m=m.sibling}return m=g.handler,g=m(g.props,n),t.child=Io(t,null!==e?e.child:null,g,t.pendingWorkPriority),t.child;case Ko:return t.tag=zo,null;case Go:case Yo:return null;case Wo:return t.effectTag|=Xo,f(t),null;case Uo:r("167");default:r("156")}}}}function se(e){return function(t){try{return e(t)}catch(e){}}}function ce(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function u(e){return e.tag===ua||e.tag===ra||e.tag===aa}function o(e){for(var t=e;;)if(i(t),null!==t.child&&t.tag!==aa)t.child.return=t,t=t.child;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function a(e){for(var t=e,n=!1,u=void 0,a=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&r("160"),n.tag){case ua:u=n.stateNode,a=!1;break e;case ra:case aa:u=n.stateNode.containerInfo,a=!0;break e}n=n.return}n=!0}if(t.tag===ua||t.tag===oa)o(t),a?m(u,t.stateNode):g(u,t.stateNode);else if(t.tag===aa?u=t.stateNode.containerInfo:i(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,t.tag===aa&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function i(e){switch("function"===typeof sa&&sa(e),e.tag){case na:n(e);var r=e.stateNode;if("function"===typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case ua:n(e);break;case ia:o(e.stateNode);break;case aa:a(e)}}var l=e.commitMount,s=e.commitUpdate,c=e.resetTextContent,p=e.commitTextUpdate,f=e.appendChild,d=e.appendChildToContainer,D=e.insertBefore,h=e.insertInContainerBefore,g=e.removeChild,m=e.removeChildFromContainer,C=e.getPublicInstance;return{commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(u(t)){var n=t;break e}t=t.return}r("160"),n=void 0}var o=t=void 0;switch(n.tag){case ua:t=n.stateNode,o=!1;break;case ra:case aa:t=n.stateNode.containerInfo,o=!0;break;default:r("161")}n.effectTag&da&&(c(t),n.effectTag&=~da);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||u(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;n.tag!==ua&&n.tag!==oa;){if(n.effectTag&ca)continue t;if(null===n.child||n.tag===aa)continue t;n.child.return=n,n=n.child}if(!(n.effectTag&ca)){n=n.stateNode;break e}}for(var a=e;;){if(a.tag===ua||a.tag===oa)n?o?h(t,a.stateNode,n):D(t,a.stateNode,n):o?d(t,a.stateNode):f(t,a.stateNode);else if(a.tag!==aa&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;a=a.return}a.sibling.return=a.return,a=a.sibling}},commitDeletion:function(e){a(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case na:break;case ua:var n=t.stateNode;if(null!=n){var u=t.memoizedProps;e=null!==e?e.memoizedProps:u;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&s(n,a,o,e,u,t)}break;case oa:null===t.stateNode&&r("162"),n=t.memoizedProps,p(t.stateNode,null!==e?e.memoizedProps:n,n);break;case ra:case aa:break;default:r("163")}},commitLifeCycles:function(e,t){switch(t.tag){case na:var n=t.stateNode;if(t.effectTag&pa)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var u=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(u,e)}t.effectTag&fa&&null!==t.updateQueue&&la(t,t.updateQueue,n);break;case ra:e=t.updateQueue,null!==e&&la(t,e,t.child&&t.child.stateNode);break;case ua:n=t.stateNode,null===e&&t.effectTag&pa&&l(n,t.type,t.memoizedProps,t);break;case oa:case aa:break;default:r("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case ua:t(C(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}function pe(e){function t(e){return e===ma&&r("174"),e}var n=e.getChildHostContext,u=e.getRootHostContext,o=Da(ma),a=Da(ma),i=Da(ma);return{getHostContext:function(){return t(o.current)},getRootHostContainer:function(){return t(i.current)},popHostContainer:function(e){ha(o,e),ha(a,e),ha(i,e)},popHostContext:function(e){a.current===e&&(ha(o,e),ha(a,e))},pushHostContainer:function(e,t){ga(i,t,e),t=u(t),ga(a,e,e),ga(o,t,e)},pushHostContext:function(e){var r=t(i.current),u=t(o.current);r=n(u,e.type,r),u!==r&&(ga(a,e,e),ga(o,r,e))},resetHostContainer:function(){o.current=ma,i.current=ma}}}function fe(e){function t(e,t){var n=ya();n.stateNode=t,n.return=e,n.effectTag=Fa,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case Ca:return a(t,e.type,e.pendingProps);case Ea:return i(t,e.pendingProps);default:return!1}}function u(e){for(e=e.return;null!==e&&e.tag!==Ca&&e.tag!==Aa;)e=e.return;D=e}var o=e.shouldSetTextContent,a=e.canHydrateInstance,i=e.canHydrateTextInstance,l=e.getNextHydratableSibling,s=e.getFirstHydratableChild,c=e.hydrateInstance,p=e.hydrateTextInstance,f=e.didNotHydrateInstance,d=e.didNotFindHydratableInstance;if(e=e.didNotFindHydratableTextInstance,!(a&&i&&l&&s&&c&&p&&f&&d&&e))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){r("175")},prepareToHydrateHostTextInstance:function(){r("176")},popHydrationState:function(){return!1}};var D=null,h=null,g=!1;return{enterHydrationState:function(e){return h=s(e.stateNode.containerInfo),D=e,g=!0},resetHydrationState:function(){h=D=null,g=!1},tryToClaimNextHydratableInstance:function(e){if(g){var r=h;if(r){if(!n(e,r)){if(!(r=l(r))||!n(e,r))return e.effectTag|=ba,g=!1,void(D=e);t(D,h)}e.stateNode=r,D=e,h=s(r)}else e.effectTag|=ba,g=!1,D=e}},prepareToHydrateHostInstance:function(e,t,n){return t=c(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return p(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==D)return!1;if(!g)return u(e),g=!0,!1;var n=e.type;if(e.tag!==Ca||"head"!==n&&"body"!==n&&!o(n,e.memoizedProps))for(n=h;n;)t(e,n),n=l(n);return u(e),h=D?l(e.stateNode):null,!0}}}function de(e){function t(){for(;null!==K&&K.current.pendingWorkPriority===Sa;){K.isScheduled=!1;var e=K.nextScheduledRoot;if(K.nextScheduledRoot=null,K===G)return G=K=null,V=Sa,null;K=e}e=K;for(var t=null,n=Sa;null!==e;)e.current.pendingWorkPriority!==Sa&&(n===Sa||n>e.current.pendingWorkPriority)&&(n=e.current.pendingWorkPriority,t=e),e=e.nextScheduledRoot;null!==t?(V=n,Ba(),Xa(),b(),j=ka(t.current,n),t!==ue&&(re=0,ue=t)):(V=Sa,ue=j=null)}function n(n){ee=!0,z=null;var u=n.stateNode;if(u.current===n&&r("177"),V!==Pa&&V!==Na||re++,wa.current=null,n.effectTag>La)if(null!==n.lastEffect){n.lastEffect.nextEffect=n;var o=n.firstEffect}else o=n;else o=n.firstEffect;for(I(),W=o;null!==W;){var a=!1,i=void 0;try{for(;null!==W;){var l=W.effectTag;if(l&ja&&e.resetTextContent(W.stateNode),l&za){var s=W.alternate;null!==s&&N(s)}switch(l&~(Va|Wa|ja|za|La)){case Ua:k(W),W.effectTag&=~Ua;break;case Ha:k(W),W.effectTag&=~Ua,T(W.alternate,W);break;case Ma:T(W.alternate,W);break;case qa:te=!0,x(W),te=!1}W=W.nextEffect}}catch(e){a=!0,i=e}a&&(null===W&&r("178"),p(W,i),null!==W&&(W=W.nextEffect))}for(R(),u.current=n,W=o;null!==W;){u=!1,o=void 0;try{for(;null!==W;){var c=W.effectTag;if(c&(Ma|Va)&&S(W.alternate,W),c&za&&P(W),c&Wa)switch(a=W,i=void 0,null!==$&&(i=$.get(a),$.delete(a),null==i&&null!==a.alternate&&(a=a.alternate,i=$.get(a),$.delete(a))),null==i&&r("184"),a.tag){case $a:a.stateNode.componentDidCatch(i.error,{componentStack:i.componentStack});break;case Ka:null===J&&(J=i.error);break;default:r("157")}var f=W.nextEffect;W.nextEffect=null,W=f}}catch(e){u=!0,o=e}u&&(null===W&&r("178"),p(W,o),null!==W&&(W=W.nextEffect))}ee=!1,"function"===typeof Ta&&Ta(n.stateNode),X&&(X.forEach(m),X=null),t()}function u(e){for(;;){var t=w(e.alternate,e,V),n=e.return,r=e.sibling,u=e;if(!(u.pendingWorkPriority!==Sa&&u.pendingWorkPriority>V)){for(var o=Qa(u),a=u.child;null!==a;)o=xa(o,a.pendingWorkPriority),a=a.sibling;u.pendingWorkPriority=o}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),e.effectTag>La&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){z=e;break}e=n}return null}function o(e){var t=v(e.alternate,e,V);return null===t&&(t=u(e)),wa.current=null,t}function a(e){var t=B(e.alternate,e,V);return null===t&&(t=u(e)),wa.current=null,t}function i(e){c(Ia,e)}function l(){if(null!==$&&0<$.size&&V===Na)for(;null!==j;){var e=j;if(null===(j=null!==$&&($.has(e)||null!==e.alternate&&$.has(e.alternate))?a(j):o(j))&&(null===z&&r("179"),L=Na,n(z),L=V,null===$||0===$.size||V!==Na))break}}function s(e,u){if(null!==z?(L=Na,n(z),l()):null===j&&t(),!(V===Sa||V>e)){L=V;e:for(;;){if(V<=Na)for(;null!==j&&!(null===(j=o(j))&&(null===z&&r("179"),L=Na,n(z),L=V,l(),V===Sa||V>e||V>Na)););else if(null!==u)for(;null!==j&&!M;)if(1<u.timeRemaining()){if(null===(j=o(j)))if(null===z&&r("179"),1<u.timeRemaining()){if(L=Na,n(z),L=V,l(),V===Sa||V>e||V<_a)break}else M=!0}else M=!0;switch(V){case Pa:case Na:if(V<=e)continue e;break e;case _a:case Oa:case Ia:if(null===u)break e;if(!M&&V<=e)continue e;break e;case Sa:break e;default:r("181")}}}}function c(e,t){U&&r("182"),U=!0;var n=L,u=!1,o=null;try{s(e,t)}catch(e){u=!0,o=e}for(;u;){if(Z){J=o;break}var l=j;if(null===l)Z=!0;else{var c=p(l,o);if(null===c&&r("183"),!Z){try{u=c,o=e,c=t;for(var f=u;null!==l;){switch(l.tag){case $a:va(l);break;case Ga:F(l);break;case Ka:A(l);break;case Ya:A(l)}if(l===f||l.alternate===f)break;l=l.return}j=a(u),s(o,c)}catch(e){u=!0,o=e;continue}break}}}if(L=n,null!==t&&(Y=!1),V>Na&&!Y&&(_(i),Y=!0),e=J,Z=M=U=!1,ue=Q=$=J=null,re=0,null!==e)throw e}function p(e,t){var n=wa.current=null,r=!1,u=!1,o=null;if(e.tag===Ka)n=e,d(e)&&(Z=!0);else for(var a=e.return;null!==a&&null===n;){if(a.tag===$a?"function"===typeof a.stateNode.componentDidCatch&&(r=!0,o=f(a),n=a,u=!0):a.tag===Ka&&(n=a),d(a)){if(te||null!==X&&(X.has(a)||null!==a.alternate&&X.has(a.alternate)))return null;n=null,u=!1}a=a.return}if(null!==n){null===Q&&(Q=new Set),Q.add(n);var i="";a=e;do{e:switch(a.tag){case fu:case du:case Du:case hu:var l=a._debugOwner,s=a._debugSource,c=f(a),p=null;l&&(p=f(l)),l=s,c="\\n    in "+(c||"Unknown")+(l?" (at "+l.fileName.replace(/^.*[\\\\\\/]/,"")+":"+l.lineNumber+")":p?" (created by "+p+")":"");break e;default:c=""}i+=c,a=a.return}while(a);a=i,e=f(e),null===$&&($=new Map),t={componentName:e,componentStack:a,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:o,willRetry:u},$.set(n,t);try{console.error(t.error)}catch(e){console.error(e)}return ee?(null===X&&(X=new Set),X.add(n)):m(n),n}return null===J&&(J=t),null}function d(e){return null!==Q&&(Q.has(e)||null!==e.alternate&&Q.has(e.alternate))}function D(e,t){return h(e,t,!1)}function h(e,t){re>ne&&(Z=!0,r("185")),!U&&t<=V&&(j=null);for(var n=!0;null!==e&&n;){if(n=!1,(e.pendingWorkPriority===Sa||e.pendingWorkPriority>t)&&(n=!0,e.pendingWorkPriority=t),null!==e.alternate&&(e.alternate.pendingWorkPriority===Sa||e.alternate.pendingWorkPriority>t)&&(n=!0,e.alternate.pendingWorkPriority=t),null===e.return){if(e.tag!==Ka)break;var u=e.stateNode;if(t===Sa||u.isScheduled||(u.isScheduled=!0,G?G.nextScheduledRoot=u:K=u,G=u),!U)switch(t){case Pa:q?c(Pa,null):c(Na,null);break;case Na:H||r("186");break;default:Y||(_(i),Y=!0)}}e=e.return}}function g(e,t){var n=L;return n===Sa&&(n=!O||e.internalContextTag&Ra||t?Oa:Pa),n===Pa&&(U||H)?Na:n}function m(e){h(e,Na,!0)}var C=pe(e),E=fe(e),A=C.popHostContainer,F=C.popHostContext,b=C.resetHostContainer,y=ie(e,C,E,D,g),v=y.beginWork,B=y.beginFailedWork,w=le(e,C,E).completeWork;C=ce(e,p);var k=C.commitPlacement,x=C.commitDeletion,T=C.commitWork,S=C.commitLifeCycles,P=C.commitAttachRef,N=C.commitDetachRef,_=e.scheduleDeferredCallback,O=e.useSyncScheduling,I=e.prepareForCommit,R=e.resetAfterCommit,L=Sa,U=!1,M=!1,H=!1,q=!1,j=null,V=Sa,W=null,z=null,K=null,G=null,Y=!1,$=null,Q=null,X=null,J=null,Z=!1,ee=!1,te=!1,ne=1e3,re=0,ue=null;return{scheduleUpdate:D,getPriorityContext:g,batchedUpdates:function(e,t){var n=H;H=!0;try{return e(t)}finally{H=n,U||H||c(Na,null)}},unbatchedUpdates:function(e){var t=q,n=H;q=H,H=!1;try{return e()}finally{H=n,q=t}},flushSync:function(e){var t=H,n=L;H=!0,L=Pa;try{return e()}finally{H=t,L=n,U&&r("187"),c(Na,null)}},deferredUpdates:function(e){var t=L;L=Oa;try{return e()}finally{L=t}}}}function De(){r("196")}function he(e){return e?(e=Yt.get(e),"number"===typeof e.tag?De(e):e._processChildContext(e._context)):At}function ge(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function me(e,t){var n=ge(e);e=0;for(var r;n;){if(n.nodeType===oi){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ge(n)}}function Ce(){return!ai&&gt.canUseDOM&&(ai="textContent"in document.documentElement?"textContent":"innerText"),ai}function Ee(){r("211")}function Ae(){r("212")}function Fe(e){if(null==e)return null;if(e.nodeType===pi)return e;var t=Yt.get(e);if(t)return"number"===typeof t.tag?Ee(t):Ae(t);"function"===typeof e.render?r("188"):r("213",Object.keys(e))}function be(e){if(void 0!==e._hostParent)return e._hostParent;if("number"===typeof e.tag){do{e=e.return}while(e&&e.tag!==fi);if(e)return e}return null}function ye(e,t){for(var n=0,r=e;r;r=be(r))n++;r=0;for(var u=t;u;u=be(u))r++;for(;0<n-r;)e=be(e),n--;for(;0<r-n;)t=be(t),r--;for(;n--;){if(e===t||e===t.alternate)return e;e=be(e),t=be(t)}return null}function ve(e,t,n){(t=Di(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=B(n._dispatchListeners,t),n._dispatchInstances=B(n._dispatchInstances,e))}function Be(e){e&&e.dispatchConfig.phasedRegistrationNames&&di.traverseTwoPhase(e._targetInst,ve,e)}function we(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;t=t?di.getParentInstance(t):null,di.traverseTwoPhase(t,ve,e)}}function ke(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Di(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=B(n._dispatchListeners,t),n._dispatchInstances=B(n._dispatchInstances,e))}function xe(e){e&&e.dispatchConfig.registrationName&&ke(e._targetInst,null,e)}function Te(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var u in e)e.hasOwnProperty(u)&&((t=e[u])?this[u]=t(n):"target"===u?this.target=r:this[u]=n[u]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Et.thatReturnsTrue:Et.thatReturnsFalse,this.isPropagationStopped=Et.thatReturnsFalse,this}function Se(e,t,n,r){if(this.eventPool.length){var u=this.eventPool.pop();return this.call(u,e,t,n,r),u}return new this(e,t,n,r)}function Pe(e){e instanceof this||r("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ne(e){e.eventPool=[],e.getPooled=Se,e.release=Pe}function _e(e,t,n,r){return Te.call(this,e,t,n,r)}function Oe(e,t,n,r){return Te.call(this,e,t,n,r)}function Ie(e,t){switch(e){case"topKeyUp":return-1!==Fi.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function Re(e){return e=e.detail,"object"===typeof e&&"data"in e?e.data:null}function Le(e,t){switch(e){case"topCompositionEnd":return Re(t);case"topKeyPress":return 32!==t.which?null:(Si=!0,xi);case"topTextInput":return e=t.data,e===xi&&Si?null:e;default:return null}}function Ue(e,t){if(Pi)return"topCompositionEnd"===e||!bi&&Ie(e,t)?(e=Ci.getData(),Ci.reset(),Pi=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return ki?null:t.data;default:return null}}function Me(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!_i[e.type]:"textarea"===t}function He(e,t,n){return e=Te.getPooled(Oi.change,e,t,n),e.type="change",fn.enqueueStateRestore(n),hi.accumulateTwoPhaseDispatches(e),e}function qe(e){Fn.enqueueEvents(e),Fn.processEventQueue(!1)}function je(e){var t=Gt.getNodeFromInstance(e);if(Zn.updateValueIfChanged(t))return e}function Ve(e,t){if("topChange"===e)return t}function We(){Ii&&(Ii.detachEvent("onpropertychange",ze),Ri=Ii=null)}function ze(e){"value"===e.propertyName&&je(Ri)&&(e=He(Ri,e,y(e)),Dn.batchedUpdates(qe,e))}function Ke(e,t,n){"topFocus"===e?(We(),Ii=t,Ri=n,Ii.attachEvent("onpropertychange",ze)):"topBlur"===e&&We()}function Ge(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return je(Ri)}function Ye(e,t){if("topClick"===e)return je(t)}function $e(e,t){if("topInput"===e||"topChange"===e)return je(t)}function Qe(e,t,n,r){return Te.call(this,e,t,n,r)}function Xe(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mi[e])&&!!t[e]}function Je(){return Xe}function Ze(e,t,n,r){return Te.call(this,e,t,n,r)}function et(e,t){if(Yi||null==zi||zi!==vt())return null;var n=zi;return"selectionStart"in n&&ci.hasSelectionCapabilities(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?(n=window.getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}):n=void 0,Gi&&Ft(Gi,n)?null:(Gi=n,e=Te.getPooled(Wi.select,Ki,e,t),e.type="select",e.target=zi,hi.accumulateTwoPhaseDispatches(e),e)}function tt(e,t,n,r){return Te.call(this,e,t,n,r)}function nt(e,t,n,r){return Te.call(this,e,t,n,r)}function rt(e,t,n,r){return Te.call(this,e,t,n,r)}function ut(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}function ot(e,t,n,r){return Te.call(this,e,t,n,r)}function at(e,t,n,r){return Te.call(this,e,t,n,r)}function it(e,t,n,r){return Te.call(this,e,t,n,r)}function lt(e,t,n,r){return Te.call(this,e,t,n,r)}function st(e,t,n,r){return Te.call(this,e,t,n,r)}function ct(e){return e[1].toUpperCase()}function pt(e){return!(!e||e.nodeType!==dl&&e.nodeType!==gl&&e.nodeType!==ml&&(e.nodeType!==hl||" react-mount-point-unstable "!==e.nodeValue))}function ft(e){return!(!(e=e?e.nodeType===gl?e.documentElement:e.firstChild:null)||e.nodeType!==dl||!e.hasAttribute(Cl))}function dt(e,t,n,u,o){pt(n)||r("200");var a=n._reactRootContainer;if(a)Il.updateContainer(t,a,e,o);else{if(!u&&!ft(n))for(u=void 0;u=n.lastChild;)n.removeChild(u);var i=Il.createContainer(n);a=n._reactRootContainer=i,Il.unbatchedUpdates(function(){Il.updateContainer(t,i,e,o)})}return Il.getPublicRootInstance(a)}function Dt(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return pt(t)||r("200"),Cu.createPortal(e,t,null,n)}var ht=n(0);n(6);var gt=n(27),mt=n(2),Ct=n(28),Et=n(3),At=n(5),Ft=n(29),bt=n(30),yt=n(33),vt=n(34);ht||r("227");var Bt,wt,kt={Namespaces:{html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},getIntrinsicNamespace:u,getChildNamespace:function(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?u(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}},xt=null,Tt={},St={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){xt&&r("101"),xt=Array.prototype.slice.call(e),o()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var u=e[t];Tt.hasOwnProperty(t)&&Tt[t]===u||(Tt[t]&&r("102",t),Tt[t]=u,n=!0)}n&&o()}},Pt=St,Nt={children:!0,dangerouslySetInnerHTML:!0,autoFocus:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,style:!0},_t={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=_t,n=e.Properties||{},u=e.DOMAttributeNamespaces||{},o=e.DOMAttributeNames||{};e=e.DOMMutationMethods||{};for(var a in n){Ot.properties.hasOwnProperty(a)&&r("48",a);var l=a.toLowerCase(),s=n[a];l={attributeName:l,attributeNamespace:null,propertyName:a,mutationMethod:null,mustUseProperty:i(s,t.MUST_USE_PROPERTY),hasBooleanValue:i(s,t.HAS_BOOLEAN_VALUE),hasNumericValue:i(s,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:i(s,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:i(s,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:i(s,t.HAS_STRING_BOOLEAN_VALUE)},1>=l.hasBooleanValue+l.hasNumericValue+l.hasOverloadedBooleanValue||r("50",a),o.hasOwnProperty(a)&&(l.attributeName=o[a]),u.hasOwnProperty(a)&&(l.attributeNamespace=u[a]),e.hasOwnProperty(a)&&(l.mutationMethod=e[a]),Ot.properties[a]=l}}},Ot={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD",ATTRIBUTE_NAME_CHAR:":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040",properties:{},shouldSetAttribute:function(e,t){if(Ot.isReservedProp(e)||!("o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return Ot.shouldAttributeAcceptBooleanValue(e);case"undefined":case"number":case"string":case"object":return!0;default:return!1}},getPropertyInfo:function(e){return Ot.properties.hasOwnProperty(e)?Ot.properties[e]:null},shouldAttributeAcceptBooleanValue:function(e){if(Ot.isReservedProp(e))return!0;var t=Ot.getPropertyInfo(e);return t?t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:"data-"===(e=e.toLowerCase().slice(0,5))||"aria-"===e},isReservedProp:function(e){return Nt.hasOwnProperty(e)},injection:_t},It=Ot,Rt={IndeterminateComponent:0,FunctionalComponent:1,ClassComponent:2,HostRoot:3,HostPortal:4,HostComponent:5,HostText:6,CoroutineComponent:7,CoroutineHandlerPhase:8,YieldComponent:9,Fragment:10},Lt={ELEMENT_NODE:1,TEXT_NODE:3,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_FRAGMENT_NODE:11},Ut=Rt.HostComponent,Mt=Rt.HostText,Ht=Lt.ELEMENT_NODE,qt=Lt.COMMENT_NODE,jt=It.ID_ATTRIBUTE_NAME,Vt={hasCachedChildNodes:1},Wt=Math.random().toString(36).slice(2),zt="__reactInternalInstance$"+Wt,Kt="__reactEventHandlers$"+Wt,Gt={getClosestInstanceFromNode:p,getInstanceFromNode:function(e){var t=e[zt];return t?t.tag===Ut||t.tag===Mt?t:t._hostNode===e?t:null:(t=p(e),null!=t&&t._hostNode===e?t:null)},getNodeFromInstance:function(e){if(e.tag===Ut||e.tag===Mt)return e.stateNode;if(void 0===e._hostNode&&r("33"),e._hostNode)return e._hostNode;for(var t=[];!e._hostNode;)t.push(e),e._hostParent||r("34"),e=e._hostParent;for(;t.length;e=t.pop())c(e,e._hostNode);return e._hostNode},precacheChildNodes:c,precacheNode:s,uncacheNode:function(e){var t=e._hostNode;t&&(delete t[zt],e._hostNode=null)},precacheFiberNode:function(e,t){t[zt]=e},getFiberCurrentPropsFromNode:function(e){return e[Kt]||null},updateFiberProps:function(e,t){e[Kt]=t}},Yt={remove:function(e){e._reactInternalFiber=void 0},get:function(e){return e._reactInternalFiber},has:function(e){return void 0!==e._reactInternalFiber},set:function(e,t){e._reactInternalFiber=t}},$t={ReactCurrentOwner:ht.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner},Qt={NoEffect:0,PerformedWork:1,Placement:2,Update:4,PlacementAndUpdate:6,Deletion:8,ContentReset:16,Callback:32,Err:64,Ref:128},Xt=Rt.HostComponent,Jt=Rt.HostRoot,Zt=Rt.HostPortal,en=Rt.HostText,tn=Qt.NoEffect,nn=Qt.Placement,rn={isFiberMounted:function(e){return 2===d(e)},isMounted:function(e){return!!(e=Yt.get(e))&&2===d(e)},findCurrentFiberUsingSlowPath:h,findCurrentHostFiber:function(e){if(!(e=h(e)))return null;for(var t=e;;){if(t.tag===Xt||t.tag===en)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null},findCurrentHostFiberWithNoPortals:function(e){if(!(e=h(e)))return null;for(var t=e;;){if(t.tag===Xt||t.tag===en)return t;if(t.child&&t.tag!==Zt)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}},un={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!==typeof e.invokeGuardedCallback&&r("197"),g=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,u,o,a,i,l){g.apply(un,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,u,o,a,i,l){if(un.invokeGuardedCallback.apply(this,arguments),un.hasCaughtError()){var s=un.clearCaughtError();un._hasRethrowError||(un._hasRethrowError=!0,un._rethrowError=s)}},rethrowCaughtError:function(){return m.apply(un,arguments)},hasCaughtError:function(){return un._hasCaughtError},clearCaughtError:function(){if(un._hasCaughtError){var e=un._caughtError;return un._caughtError=null,un._hasCaughtError=!1,e}r("198")}},on=un,an={isEndish:function(e){return"topMouseUp"===e||"topTouchEnd"===e||"topTouchCancel"===e},isMoveish:function(e){return"topMouseMove"===e||"topTouchMove"===e},isStartish:function(e){return"topMouseDown"===e||"topTouchStart"===e},executeDirectDispatch:function(e){var t=e._dispatchListeners,n=e._dispatchInstances;return Array.isArray(t)&&r("103"),e.currentTarget=t?an.getNodeFromInstance(n):null,t=t?t(e):null,e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,t},executeDispatchesInOrder:function(e,t){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var u=0;u<n.length&&!e.isPropagationStopped();u++)C(e,t,n[u],r[u]);else n&&C(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null},executeDispatchesInOrderStopAtTrue:function(e){e:{var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r])){t=n[r];break e}}else if(t&&t(e,n)){t=n;break e}t=null}return e._dispatchInstances=null,e._dispatchListeners=null,t},hasDispatches:function(e){return!!e._dispatchListeners},getFiberCurrentPropsFromNode:function(e){return Bt.getFiberCurrentPropsFromNode(e)},getInstanceFromNode:function(e){return Bt.getInstanceFromNode(e)},getNodeFromInstance:function(e){return Bt.getNodeFromInstance(e)},injection:{injectComponentTree:function(e){Bt=e}}},ln=an,sn=null,cn=null,pn=null,fn={injection:{injectFiberControlledHostComponent:function(e){sn=e}},enqueueStateRestore:function(e){cn?pn?pn.push(e):pn=[e]:cn=e},restoreStateIfNeeded:function(){if(cn){var e=cn,t=pn;if(pn=cn=null,E(e),t)for(e=0;e<t.length;e++)E(t[e])}}},dn=!1,Dn={batchedUpdates:function(e,t){if(dn)return A(b,e,t);dn=!0;try{return A(b,e,t)}finally{dn=!1,fn.restoreStateIfNeeded()}},injection:{injectStackBatchedUpdates:function(e){A=e},injectFiberBatchedUpdates:function(e){F=e}}},hn=Lt.TEXT_NODE,gn=Rt.HostRoot,mn=[],Cn={_enabled:!0,_handleTopLevel:null,setHandleTopLevel:function(e){Cn._handleTopLevel=e},setEnabled:function(e){Cn._enabled=!!e},isEnabled:function(){return Cn._enabled},trapBubbledEvent:function(e,t,n){return n?Ct.listen(n,t,Cn.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){return n?Ct.capture(n,t,Cn.dispatchEvent.bind(null,e)):null},dispatchEvent:function(e,t){if(Cn._enabled){var n=y(t);if(n=Gt.getClosestInstanceFromNode(n),null===n||"number"!==typeof n.tag||rn.isFiberMounted(n)||(n=null),mn.length){var r=mn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Dn.batchedUpdates(v,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>mn.length&&mn.push(e)}}}},En=Cn,An=null,Fn={injection:{injectEventPluginOrder:Pt.injectEventPluginOrder,injectEventPluginsByName:Pt.injectEventPluginsByName},getListener:function(e,t){if("number"===typeof e.tag){var n=e.stateNode;if(!n)return null;var u=ln.getFiberCurrentPropsFromNode(n);if(!u)return null;if(n=u[t],S(t,e.type,u))return null}else{if("string"===typeof(u=e._currentElement)||"number"===typeof u||!e._rootNodeID)return null;if(e=u.props,n=e[t],S(t,u.type,e))return null}return n&&"function"!==typeof n&&r("231",t,typeof n),n},extractEvents:function(e,t,n,r){for(var u,o=Pt.plugins,a=0;a<o.length;a++){var i=o[a];i&&(i=i.extractEvents(e,t,n,r))&&(u=B(u,i))}return u},enqueueEvents:function(e){e&&(An=B(An,e))},processEventQueue:function(e){var t=An;An=null,e?w(t,x):w(t,T),An&&r("95"),on.rethrowCaughtError()}};gt.canUseDOM&&(wt=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var bn={animationend:N("Animation","AnimationEnd"),animationiteration:N("Animation","AnimationIteration"),animationstart:N("Animation","AnimationStart"),transitionend:N("Transition","TransitionEnd")},yn={},vn={};gt.canUseDOM&&(vn=document.createElement("div").style,"AnimationEvent"in window||(delete bn.animationend.animation,delete bn.animationiteration.animation,delete bn.animationstart.animation),"TransitionEvent"in window||delete bn.transitionend.transition);var Bn={topAbort:"abort",topAnimationEnd:_("animationend")||"animationend",topAnimationIteration:_("animationiteration")||"animationiteration",topAnimationStart:_("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:_("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},wn={},kn=0,xn="_reactListenersID"+(""+Math.random()).slice(2),Tn=mt({},{handleTopLevel:function(e,t,n,r){e=Fn.extractEvents(e,t,n,r),Fn.enqueueEvents(e),Fn.processEventQueue(!1)}},{setEnabled:function(e){En&&En.setEnabled(e)},isEnabled:function(){return!(!En||!En.isEnabled())},listenTo:function(e,t){var n=O(t);e=Pt.registrationNameDependencies[e];for(var r=0;r<e.length;r++){var u=e[r];n.hasOwnProperty(u)&&n[u]||("topWheel"===u?P("wheel")?En.trapBubbledEvent("topWheel","wheel",t):P("mousewheel")?En.trapBubbledEvent("topWheel","mousewheel",t):En.trapBubbledEvent("topWheel","DOMMouseScroll",t):"topScroll"===u?En.trapCapturedEvent("topScroll","scroll",t):"topFocus"===u||"topBlur"===u?(En.trapCapturedEvent("topFocus","focus",t),En.trapCapturedEvent("topBlur","blur",t),n.topBlur=!0,n.topFocus=!0):"topCancel"===u?(P("cancel",!0)&&En.trapCapturedEvent("topCancel","cancel",t),n.topCancel=!0):"topClose"===u?(P("close",!0)&&En.trapCapturedEvent("topClose","close",t),n.topClose=!0):Bn.hasOwnProperty(u)&&En.trapBubbledEvent(u,Bn[u],t),n[u]=!0)}},isListeningToAllDependencies:function(e,t){t=O(t),e=Pt.registrationNameDependencies[e];for(var n=0;n<e.length;n++){var r=e[n];if(!t.hasOwnProperty(r)||!t[r])return!1}return!0},trapBubbledEvent:function(e,t,n){return En.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return En.trapCapturedEvent(e,t,n)}}),Sn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Pn=["Webkit","ms","Moz","O"];Object.keys(Sn).forEach(function(e){Pn.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Sn[t]=Sn[e]})});var Nn={isUnitlessNumber:Sn,shorthandPropertyExpansions:{background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}}},_n=Nn.isUnitlessNumber,On=!1;if(gt.canUseDOM){var In=document.createElement("div").style;try{In.font=""}catch(e){On=!0}}var Rn,Ln={createDangerousStringForStyles:function(){},setValueForStyles:function(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),u=n,o=t[n];if(u=null==o||"boolean"===typeof o||""===o?"":r||"number"!==typeof o||0===o||_n.hasOwnProperty(u)&&_n[u]?(""+o).trim():o+"px","float"===n&&(n="cssFloat"),r)e.setProperty(n,u);else if(u)e[n]=u;else if(r=On&&Nn.shorthandPropertyExpansions[n])for(var a in r)e[a]="";else e[n]=""}}},Un=new RegExp("^["+It.ATTRIBUTE_NAME_START_CHAR+"]["+It.ATTRIBUTE_NAME_CHAR+"]*$"),Mn={},Hn={},qn={setAttributeForID:function(e,t){e.setAttribute(It.ID_ATTRIBUTE_NAME,t)},setAttributeForRoot:function(e){e.setAttribute(It.ROOT_ATTRIBUTE_NAME,"")},getValueForProperty:function(){},getValueForAttribute:function(){},setValueForProperty:function(e,t,n){var r=It.getPropertyInfo(t);if(r&&It.shouldSetAttribute(t,n)){var u=r.mutationMethod;u?u(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?qn.deleteValueForProperty(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(u=r.attributeNamespace)?e.setAttributeNS(u,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else qn.setValueForAttribute(e,t,It.shouldSetAttribute(t,n)?n:null)},setValueForAttribute:function(e,t,n){I(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))},deleteValueForAttribute:function(e,t){e.removeAttribute(t)},deleteValueForProperty:function(e,t){var n=It.getPropertyInfo(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}},jn=qn,Vn=$t.ReactDebugCurrentFrame,Wn={current:null,phase:null,resetCurrentFiber:function(){Vn.getCurrentStack=null,Wn.current=null,Wn.phase=null},setCurrentFiber:function(e,t){Vn.getCurrentStack=R,Wn.current=e,Wn.phase=t},getCurrentFiberOwnerName:function(){return null},getCurrentFiberStackAddendum:R},zn=Wn,Kn={getHostProps:function(e,t){var n=t.value,r=t.checked;return mt({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})},initWrapperState:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}},updateWrapper:function(e,t){var n=t.checked;null!=n&&jn.setValueForProperty(e,"checked",n||!1),n=t.value,null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(t=parseFloat(e.value)||0,(n!=t||n==t&&e.value!=n)&&(e.value=""+n)):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))},postMountWrapper:function(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}t=e.name,""!==t&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)},restoreControlledState:function(e,t){Kn.updateWrapper(e,t);var n=t.name;if("radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(n=t.querySelectorAll("input[name="+JSON.stringify(""+n)+\'][type="radio"]\'),t=0;t<n.length;t++){var u=n[t];if(u!==e&&u.form===e.form){var o=Gt.getFiberCurrentPropsFromNode(u);o||r("90"),Kn.updateWrapper(u,o)}}}}},Gn=Kn,Yn={validateProps:function(){},postMountWrapper:function(e,t){null!=t.value&&e.setAttribute("value",t.value)},getHostProps:function(e,t){return e=mt({children:void 0},t),(t=L(t.children))&&(e.children=t),e}},$n={getHostProps:function(e,t){return mt({},t,{value:void 0})},initWrapperState:function(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}},postMountWrapper:function(e,t){e.multiple=!!t.multiple;var n=t.value;null!=n?U(e,!!t.multiple,n):null!=t.defaultValue&&U(e,!!t.multiple,t.defaultValue)},postUpdateWrapper:function(e,t){e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!t.multiple;var r=t.value;null!=r?U(e,!!t.multiple,r):n!==!!t.multiple&&(null!=t.defaultValue?U(e,!!t.multiple,t.defaultValue):U(e,!!t.multiple,t.multiple?[]:""))},restoreControlledState:function(e,t){var n=t.value;null!=n&&U(e,!!t.multiple,n)}},Qn={getHostProps:function(e,t){return null!=t.dangerouslySetInnerHTML&&r("91"),mt({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})},initWrapperState:function(e,t){var n=t.value,u=n;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&r("92"),Array.isArray(t)&&(1>=t.length||r("93"),t=t[0]),n=""+t),null==n&&(n=""),u=n),e._wrapperState={initialValue:""+u}},updateWrapper:function(e,t){var n=t.value;null!=n&&(n=""+n,n!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)},postMountWrapper:function(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)},restoreControlledState:function(e,t){Qn.updateWrapper(e,t)}},Xn=Qn,Jn=mt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),Zn={_getTrackerFromNode:function(e){return e._valueTracker},track:function(e){e._valueTracker||(e._valueTracker=q(e))},updateValueIfChanged:function(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)},stopTracking:function(e){(e=e._valueTracker)&&e.stopTracking()}},er=kt.Namespaces,tr=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,u){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==er.svg||"innerHTML"in e)e.innerHTML=t;else for(Rn=Rn||document.createElement("div"),Rn.innerHTML="<svg>"+t+"</svg>",t=Rn.firstChild;t.firstChild;)e.appendChild(t.firstChild)}),nr=/["\'&<>]/,rr=Lt.TEXT_NODE;gt.canUseDOM&&("textContent"in document.documentElement||(V=function(e,t){if(e.nodeType===rr)e.nodeValue=t;else{if("boolean"===typeof t||"number"===typeof t)t=""+t;else{t=""+t;var n=nr.exec(t);if(n){var r,u="",o=0;for(r=n.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#x27;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}o!==r&&(u+=t.substring(o,r)),o=r+1,u+=n}t=o!==r?u+t.substring(o,r):u}}tr(e,t)}}));var ur=V,or=(zn.getCurrentFiberOwnerName,Lt.DOCUMENT_NODE),ar=Lt.DOCUMENT_FRAGMENT_NODE,ir=Tn.listenTo,lr=Pt.registrationNameModules,sr=kt.Namespaces.html,cr=kt.getIntrinsicNamespace,pr={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},fr={createElement:function(e,t,n,r){return n=n.nodeType===or?n:n.ownerDocument,r===sr&&(r=cr(e)),r===sr?"script"===e?(e=n.createElement("div"),e.innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):e="string"===typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e},createTextNode:function(e,t){return(t.nodeType===or?t:t.ownerDocument).createTextNode(e)},setInitialProperties:function(e,t,n,r){var u=j(t,n);switch(t){case"iframe":case"object":Tn.trapBubbledEvent("topLoad","load",e);var o=n;break;case"video":case"audio":for(o in pr)pr.hasOwnProperty(o)&&Tn.trapBubbledEvent(o,pr[o],e);o=n;break;case"source":Tn.trapBubbledEvent("topError","error",e),o=n;break;case"img":case"image":Tn.trapBubbledEvent("topError","error",e),Tn.trapBubbledEvent("topLoad","load",e),o=n;break;case"form":Tn.trapBubbledEvent("topReset","reset",e),Tn.trapBubbledEvent("topSubmit","submit",e),o=n;break;case"details":Tn.trapBubbledEvent("topToggle","toggle",e),o=n;break;case"input":Gn.initWrapperState(e,n),o=Gn.getHostProps(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(r,"onChange");break;case"option":Yn.validateProps(e,n),o=Yn.getHostProps(e,n);break;case"select":$n.initWrapperState(e,n),o=$n.getHostProps(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(r,"onChange");break;case"textarea":Xn.initWrapperState(e,n),o=Xn.getHostProps(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(r,"onChange");break;default:o=n}M(t,o);var a,i=o;for(a in i)if(i.hasOwnProperty(a)){var l=i[a];"style"===a?Ln.setValueForStyles(e,l):"dangerouslySetInnerHTML"===a?null!=(l=l?l.__html:void 0)&&tr(e,l):"children"===a?"string"===typeof l?ur(e,l):"number"===typeof l&&ur(e,""+l):"suppressContentEditableWarning"!==a&&(lr.hasOwnProperty(a)?null!=l&&W(r,a):u?jn.setValueForAttribute(e,a,l):null!=l&&jn.setValueForProperty(e,a,l))}switch(t){case"input":Zn.track(e),Gn.postMountWrapper(e,n);break;case"textarea":Zn.track(e),Xn.postMountWrapper(e,n);break;case"option":Yn.postMountWrapper(e,n);break;case"select":$n.postMountWrapper(e,n);break;default:"function"===typeof o.onClick&&(e.onclick=Et)}},diffProperties:function(e,t,n,r,u){var o=null;switch(t){case"input":n=Gn.getHostProps(e,n),r=Gn.getHostProps(e,r),o=[];break;case"option":n=Yn.getHostProps(e,n),r=Yn.getHostProps(e,r),o=[];break;case"select":n=$n.getHostProps(e,n),r=$n.getHostProps(e,r),o=[];break;case"textarea":n=Xn.getHostProps(e,n),r=Xn.getHostProps(e,r),o=[];break;default:"function"!==typeof n.onClick&&"function"===typeof r.onClick&&(e.onclick=Et)}M(t,r);var a,i;e=null;for(a in n)if(!r.hasOwnProperty(a)&&n.hasOwnProperty(a)&&null!=n[a])if("style"===a)for(i in t=n[a])t.hasOwnProperty(i)&&(e||(e={}),e[i]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&(lr.hasOwnProperty(a)?o||(o=[]):(o=o||[]).push(a,null));for(a in r){var l=r[a];if(t=null!=n?n[a]:void 0,r.hasOwnProperty(a)&&l!==t&&(null!=l||null!=t))if("style"===a)if(t){for(i in t)!t.hasOwnProperty(i)||l&&l.hasOwnProperty(i)||(e||(e={}),e[i]="");for(i in l)l.hasOwnProperty(i)&&t[i]!==l[i]&&(e||(e={}),e[i]=l[i])}else e||(o||(o=[]),o.push(a,e)),e=l;else"dangerouslySetInnerHTML"===a?(l=l?l.__html:void 0,t=t?t.__html:void 0,null!=l&&t!==l&&(o=o||[]).push(a,""+l)):"children"===a?t===l||"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(a,""+l):"suppressContentEditableWarning"!==a&&(lr.hasOwnProperty(a)?(null!=l&&W(u,a),o||t===l||(o=[])):(o=o||[]).push(a,l))}return e&&(o=o||[]).push("style",e),o},updateProperties:function(e,t,n,r,u){j(n,r),r=j(n,u);for(var o=0;o<t.length;o+=2){var a=t[o],i=t[o+1];"style"===a?Ln.setValueForStyles(e,i):"dangerouslySetInnerHTML"===a?tr(e,i):"children"===a?ur(e,i):r?null!=i?jn.setValueForAttribute(e,a,i):jn.deleteValueForAttribute(e,a):null!=i?jn.setValueForProperty(e,a,i):jn.deleteValueForProperty(e,a)}switch(n){case"input":Gn.updateWrapper(e,u),Zn.updateValueIfChanged(e);break;case"textarea":Xn.updateWrapper(e,u);break;case"select":$n.postUpdateWrapper(e,u)}},diffHydratedProperties:function(e,t,n,r,u){switch(t){case"iframe":case"object":Tn.trapBubbledEvent("topLoad","load",e);break;case"video":case"audio":for(var o in pr)pr.hasOwnProperty(o)&&Tn.trapBubbledEvent(o,pr[o],e);break;case"source":Tn.trapBubbledEvent("topError","error",e);break;case"img":case"image":Tn.trapBubbledEvent("topError","error",e),Tn.trapBubbledEvent("topLoad","load",e);break;case"form":Tn.trapBubbledEvent("topReset","reset",e),Tn.trapBubbledEvent("topSubmit","submit",e);break;case"details":Tn.trapBubbledEvent("topToggle","toggle",e);break;case"input":Gn.initWrapperState(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(u,"onChange");break;case"option":Yn.validateProps(e,n);break;case"select":$n.initWrapperState(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(u,"onChange");break;case"textarea":Xn.initWrapperState(e,n),Tn.trapBubbledEvent("topInvalid","invalid",e),W(u,"onChange")}M(t,n),r=null;for(var a in n)n.hasOwnProperty(a)&&(o=n[a],"children"===a?"string"===typeof o?e.textContent!==o&&(r=["children",o]):"number"===typeof o&&e.textContent!==""+o&&(r=["children",""+o]):lr.hasOwnProperty(a)&&null!=o&&W(u,a));switch(t){case"input":Zn.track(e),Gn.postMountWrapper(e,n);break;case"textarea":Zn.track(e),Xn.postMountWrapper(e,n);break;case"select":case"option":break;default:"function"===typeof n.onClick&&(e.onclick=Et)}return r},diffHydratedText:function(e,t){return e.nodeValue!==t},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":Gn.restoreControlledState(e,n);break;case"textarea":Xn.restoreControlledState(e,n);break;case"select":$n.restoreControlledState(e,n)}}},dr=void 0;if(gt.canUseDOM)if("function"!==typeof requestIdleCallback){var Dr=null,hr=null,gr=!1,mr=!1,Cr=0,Er=33,Ar=33,Fr={timeRemaining:"object"===typeof performance&&"function"===typeof performance.now?function(){return Cr-performance.now()}:function(){return Cr-Date.now()}},br="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){e.source===window&&e.data===br&&(gr=!1,e=hr,hr=null,null!==e&&e(Fr))},!1);var yr=function(e){mr=!1;var t=e-Cr+Ar;t<Ar&&Er<Ar?(8>t&&(t=8),Ar=t<Er?Er:t):Er=t,Cr=e+Ar,gr||(gr=!0,window.postMessage(br,"*")),t=Dr,Dr=null,null!==t&&t(e)};dr=function(e){return hr=e,mr||(mr=!0,requestAnimationFrame(yr)),0}}else dr=requestIdleCallback;else dr=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})}),0};var vr,Br,wr={rIC:dr},kr={enableAsyncSubtreeAPI:!0},xr={NoWork:0,SynchronousPriority:1,TaskPriority:2,HighPriority:3,LowPriority:4,OffscreenPriority:5},Tr=Qt.Callback,Sr=xr.NoWork,Pr=xr.SynchronousPriority,Nr=xr.TaskPriority,_r=Rt.ClassComponent,Or=Rt.HostRoot,Ir=void 0,Rr=void 0,Lr={addUpdate:function(e,t,n,r){$(e,{priorityLevel:r,partialState:t,callback:n,isReplace:!1,isForced:!1,isTopLevelUnmount:!1,next:null})},addReplaceUpdate:function(e,t,n,r){$(e,{priorityLevel:r,partialState:t,callback:n,isReplace:!0,isForced:!1,isTopLevelUnmount:!1,next:null})},addForceUpdate:function(e,t,n){$(e,{priorityLevel:n,partialState:null,callback:t,isReplace:!1,isForced:!0,isTopLevelUnmount:!1,next:null})},getUpdatePriority:function(e){var t=e.updateQueue;return null===t||e.tag!==_r&&e.tag!==Or?Sr:null!==t.first?t.first.priorityLevel:Sr},addTopLevelUpdate:function(e,t,n,r){var u=null===t.element;t={priorityLevel:r,partialState:t,callback:n,isReplace:!1,isForced:!1,isTopLevelUnmount:u,next:null},e=$(e,t),u&&(u=Ir,n=Rr,null!==u&&null!==t.next&&(t.next=null,u.last=t),null!==n&&null!==e&&null!==e.next&&(e.next=null,n.last=t))},beginUpdateQueue:function(e,t,n,r,u,o,a){null!==e&&e.updateQueue===n&&(n=t.updateQueue={first:n.first,last:n.last,callbackList:null,hasForceUpdate:!1}),e=n.callbackList;for(var i=n.hasForceUpdate,l=!0,s=n.first;null!==s&&0>=z(s.priorityLevel,a);){n.first=s.next,null===n.first&&(n.last=null);var c;s.isReplace?(u=Q(s,r,u,o),l=!0):(c=Q(s,r,u,o))&&(u=l?mt({},u,c):mt(u,c),l=!1),s.isForced&&(i=!0),null===s.callback||s.isTopLevelUnmount&&null!==s.next||(e=null!==e?e:[],e.push(s.callback),t.effectTag|=Tr),s=s.next}return n.callbackList=e,n.hasForceUpdate=i,null!==n.first||null!==e||i||(t.updateQueue=null),u},commitCallbacks:function(e,t,n){if(null!==(e=t.callbackList))for(t.callbackList=null,t=0;t<e.length;t++){var u=e[t];"function"!==typeof u&&r("191",u),u.call(n)}}},Ur=[],Mr=-1,Hr={createCursor:function(e){return{current:e}},isEmpty:function(){return-1===Mr},pop:function(e){0>Mr||(e.current=Ur[Mr],Ur[Mr]=null,Mr--)},push:function(e,t){Mr++,Ur[Mr]=e.current,e.current=t},reset:function(){for(;-1<Mr;)Ur[Mr]=null,Mr--}},qr=rn.isFiberMounted,jr=Rt.ClassComponent,Vr=Rt.HostRoot,Wr=Hr.createCursor,zr=Hr.pop,Kr=Hr.push,Gr=Wr(At),Yr=Wr(!1),$r=At,Qr={getUnmaskedContext:function(e){return J(e)?$r:Gr.current},cacheContext:X,getMaskedContext:function(e,t){var n=e.type.contextTypes;if(!n)return At;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var u,o={};for(u in n)o[u]=t[u];return r&&X(e,t,o),o},hasContextChanged:function(){return Yr.current},isContextConsumer:function(e){return e.tag===jr&&null!=e.type.contextTypes},isContextProvider:J,popContextProvider:function(e){J(e)&&(zr(Yr,e),zr(Gr,e))},popTopLevelContextObject:function(e){zr(Yr,e),zr(Gr,e)},pushTopLevelContextObject:function(e,t,n){null!=Gr.cursor&&r("168"),Kr(Gr,t,e),Kr(Yr,n,e)},processChildContext:Z,pushContextProvider:function(e){if(!J(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||At,$r=Gr.current,Kr(Gr,t,e),Kr(Yr,Yr.current,e),!0},invalidateContextProvider:function(e,t){var n=e.stateNode;if(n||r("169"),t){var u=Z(e,$r);n.__reactInternalMemoizedMergedChildContext=u,zr(Yr,e),zr(Gr,e),Kr(Gr,u,e)}else zr(Yr,e);Kr(Yr,t,e)},resetContext:function(){$r=At,Gr.current=At,Yr.current=!1},findCurrentUnmaskedContext:function(e){for(qr(e)&&e.tag===jr?void 0:r("170");e.tag!==Vr;){if(J(e))return e.stateNode.__reactInternalMemoizedMergedChildContext;(e=e.return)||r("171")}return e.stateNode.context}},Xr={NoContext:0,AsyncUpdates:1},Jr=Rt.IndeterminateComponent,Zr=Rt.ClassComponent,eu=Rt.HostRoot,tu=Rt.HostComponent,nu=Rt.HostText,ru=Rt.HostPortal,uu=Rt.CoroutineComponent,ou=Rt.YieldComponent,au=Rt.Fragment,iu=xr.NoWork,lu=Xr.NoContext,su=Qt.NoEffect,cu={createWorkInProgress:function(e,t){var n=e.alternate;return null===n?(n=new ee(e.tag,e.key,e.internalContextTag),n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.effectTag=su,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.pendingWorkPriority=t,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n},createHostRootFiber:function(){return new ee(eu,null,lu)},createFiberFromElement:function(e,t,n){return t=te(e.type,e.key,t),t.pendingProps=e.props,t.pendingWorkPriority=n,t},createFiberFromFragment:function(e,t,n){return t=new ee(au,null,t),t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromText:function(e,t,n){return t=new ee(nu,null,t),t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromElementType:te,createFiberFromHostInstanceForDeletion:function(){var e=new ee(tu,null,lu);return e.type="DELETED",e},createFiberFromCoroutine:function(e,t,n){return t=new ee(uu,e.key,t),t.type=e.handler,t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromYield:function(e,t){return new ee(ou,null,t)},createFiberFromPortal:function(e,t,n){return t=new ee(ru,e.key,t),t.pendingProps=e.children||[],t.pendingWorkPriority=n,t.stateNode={containerInfo:e.containerInfo,implementation:e.implementation},t},largerPriority:function(e,t){return e!==iu&&(t===iu||t>e)?e:t}},pu=cu.createHostRootFiber,fu=Rt.IndeterminateComponent,du=Rt.FunctionalComponent,Du=Rt.ClassComponent,hu=Rt.HostComponent;"function"===typeof Symbol&&Symbol.for?(vr=Symbol.for("react.coroutine"),Br=Symbol.for("react.yield")):(vr=60104,Br=60105);var gu={createCoroutine:function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:vr,key:null==r?null:""+r,children:e,handler:t,props:n}},createYield:function(e){return{$$typeof:Br,value:e}},isCoroutine:function(e){return"object"===typeof e&&null!==e&&e.$$typeof===vr},isYield:function(e){return"object"===typeof e&&null!==e&&e.$$typeof===Br},REACT_YIELD_TYPE:Br,REACT_COROUTINE_TYPE:vr},mu="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.portal")||60106,Cu={createPortal:function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:mu,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}},isPortal:function(e){return"object"===typeof e&&null!==e&&e.$$typeof===mu},REACT_PORTAL_TYPE:mu},Eu=gu.REACT_COROUTINE_TYPE,Au=gu.REACT_YIELD_TYPE,Fu=Cu.REACT_PORTAL_TYPE,bu=cu.createWorkInProgress,yu=cu.createFiberFromElement,vu=cu.createFiberFromFragment,Bu=cu.createFiberFromText,wu=cu.createFiberFromCoroutine,ku=cu.createFiberFromYield,xu=cu.createFiberFromPortal,Tu=Array.isArray,Su=Rt.FunctionalComponent,Pu=Rt.ClassComponent,Nu=Rt.HostText,_u=Rt.HostPortal,Ou=Rt.CoroutineComponent,Iu=Rt.YieldComponent,Ru=Rt.Fragment,Lu=Qt.NoEffect,Uu=Qt.Placement,Mu=Qt.Deletion,Hu="function"===typeof Symbol&&Symbol.iterator,qu="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,ju=oe(!0,!0),Vu=oe(!1,!0),Wu=oe(!1,!1),zu={reconcileChildFibers:ju,reconcileChildFibersInPlace:Vu,mountChildFibersInPlace:Wu,cloneChildFibers:function(e,t){if(null!==e&&t.child!==e.child&&r("153"),null!==t.child){e=t.child;var n=bu(e,e.pendingWorkPriority);for(n.pendingProps=e.pendingProps,t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=bu(e,e.pendingWorkPriority),n.pendingProps=e.pendingProps,n.return=t;n.sibling=null}}},Ku=Qt.Update,Gu=Xr.AsyncUpdates,Yu=Qr.cacheContext,$u=Qr.getMaskedContext,Qu=Qr.getUnmaskedContext,Xu=Qr.isContextConsumer,Ju=Lr.addUpdate,Zu=Lr.addReplaceUpdate,eo=Lr.addForceUpdate,to=Lr.beginUpdateQueue,no=Qr.hasContextChanged,ro=rn.isMounted,uo=zu.mountChildFibersInPlace,oo=zu.reconcileChildFibers,ao=zu.reconcileChildFibersInPlace,io=zu.cloneChildFibers,lo=Lr.beginUpdateQueue,so=Qr.getMaskedContext,co=Qr.getUnmaskedContext,po=Qr.hasContextChanged,fo=Qr.pushContextProvider,Do=Qr.pushTopLevelContextObject,ho=Qr.invalidateContextProvider,go=Rt.IndeterminateComponent,mo=Rt.FunctionalComponent,Co=Rt.ClassComponent,Eo=Rt.HostRoot,Ao=Rt.HostComponent,Fo=Rt.HostText,bo=Rt.HostPortal,yo=Rt.CoroutineComponent,vo=Rt.CoroutineHandlerPhase,Bo=Rt.YieldComponent,wo=Rt.Fragment,ko=xr.NoWork,xo=xr.OffscreenPriority,To=Qt.PerformedWork,So=Qt.Placement,Po=Qt.ContentReset,No=Qt.Err,_o=Qt.Ref,Oo=$t.ReactCurrentOwner,Io=zu.reconcileChildFibers,Ro=Qr.popContextProvider,Lo=Qr.popTopLevelContextObject,Uo=Rt.IndeterminateComponent,Mo=Rt.FunctionalComponent,Ho=Rt.ClassComponent,qo=Rt.HostRoot,jo=Rt.HostComponent,Vo=Rt.HostText,Wo=Rt.HostPortal,zo=Rt.CoroutineComponent,Ko=Rt.CoroutineHandlerPhase,Go=Rt.YieldComponent,Yo=Rt.Fragment,$o=Qt.Placement,Qo=Qt.Ref,Xo=Qt.Update,Jo=xr.OffscreenPriority,Zo=null,ea=null,ta={injectInternals:function(e){if("undefined"===typeof{})return!1;var t={};if(!t.supportsFiber)return!0;try{var n=t.inject(e);Zo=se(function(e){return t.onCommitFiberRoot(n,e)}),ea=se(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0},onCommitRoot:function(e){"function"===typeof Zo&&Zo(e)},onCommitUnmount:function(e){"function"===typeof ea&&ea(e)}},na=Rt.ClassComponent,ra=Rt.HostRoot,ua=Rt.HostComponent,oa=Rt.HostText,aa=Rt.HostPortal,ia=Rt.CoroutineComponent,la=Lr.commitCallbacks,sa=ta.onCommitUnmount,ca=Qt.Placement,pa=Qt.Update,fa=Qt.Callback,da=Qt.ContentReset,Da=Hr.createCursor,ha=Hr.pop,ga=Hr.push,ma={},Ca=Rt.HostComponent,Ea=Rt.HostText,Aa=Rt.HostRoot,Fa=Qt.Deletion,ba=Qt.Placement,ya=cu.createFiberFromHostInstanceForDeletion,va=Qr.popContextProvider,Ba=Hr.reset,wa=$t.ReactCurrentOwner,ka=cu.createWorkInProgress,xa=cu.largerPriority,Ta=ta.onCommitRoot,Sa=xr.NoWork,Pa=xr.SynchronousPriority,Na=xr.TaskPriority,_a=xr.HighPriority,Oa=xr.LowPriority,Ia=xr.OffscreenPriority,Ra=Xr.AsyncUpdates,La=Qt.PerformedWork,Ua=Qt.Placement,Ma=Qt.Update,Ha=Qt.PlacementAndUpdate,qa=Qt.Deletion,ja=Qt.ContentReset,Va=Qt.Callback,Wa=Qt.Err,za=Qt.Ref,Ka=Rt.HostRoot,Ga=Rt.HostComponent,Ya=Rt.HostPortal,$a=Rt.ClassComponent,Qa=Lr.getUpdatePriority,Xa=Qr.resetContext;he._injectFiber=function(e){De=e};var Ja=Lr.addTopLevelUpdate,Za=Qr.findCurrentUnmaskedContext,ei=Qr.isContextProvider,ti=Qr.processChildContext,ni=Rt.HostComponent,ri=rn.findCurrentHostFiber,ui=rn.findCurrentHostFiberWithNoPortals;he._injectFiber(function(e){var t=Za(e);return ei(e)?ti(e,t,!1):t});var oi=Lt.TEXT_NODE,ai=null,ii={getOffsets:function(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,r=t.anchorOffset,u=t.focusNode,o=t.focusOffset,a=t.getRangeAt(0);try{a.startContainer.nodeType,a.endContainer.nodeType}catch(e){return null}t=t.anchorNode===t.focusNode&&t.anchorOffset===t.focusOffset?0:a.toString().length;var i=a.cloneRange();return i.selectNodeContents(e),i.setEnd(a.startContainer,a.startOffset),e=i.startContainer===i.endContainer&&i.startOffset===i.endOffset?0:i.toString().length,a=e+t,t=document.createRange(),t.setStart(n,r),t.setEnd(u,o),n=t.collapsed,{start:n?a:e,end:n?e:a}},setOffsets:function(e,t){if(window.getSelection){var n=window.getSelection(),r=e[Ce()].length,u=Math.min(t.start,r);if(t=void 0===t.end?u:Math.min(t.end,r),!n.extend&&u>t&&(r=t,t=u,u=r),r=me(e,u),e=me(e,t),r&&e){var o=document.createRange();o.setStart(r.node,r.offset),n.removeAllRanges(),u>t?(n.addRange(o),n.extend(e.node,e.offset)):(o.setEnd(e.node,e.offset),n.addRange(o))}}}},li=Lt.ELEMENT_NODE,si={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=vt();return{focusedElem:e,selectionRange:si.hasSelectionCapabilities(e)?si.getSelection(e):null}},restoreSelection:function(e){var t=vt(),n=e.focusedElem;if(e=e.selectionRange,t!==n&&bt(document.documentElement,n)){for(si.hasSelectionCapabilities(n)&&si.setSelection(n,e),t=[],e=n;e=e.parentNode;)e.nodeType===li&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(yt(n),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}},getSelection:function(e){return("selectionStart"in e?{start:e.selectionStart,end:e.selectionEnd}:ii.getOffsets(e))||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;void 0===r&&(r=n),"selectionStart"in e?(e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length)):ii.setOffsets(e,t)}},ci=si,pi=Lt.ELEMENT_NODE;Fe._injectFiber=function(e){Ee=e},Fe._injectStack=function(e){Ae=e};var fi=Rt.HostComponent,di={isAncestor:function(e,t){for(;t;){if(e===t||e===t.alternate)return!0;t=be(t)}return!1},getLowestCommonAncestor:ye,getParentInstance:function(e){return be(e)},traverseTwoPhase:function(e,t,n){for(var r=[];e;)r.push(e),e=be(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)},traverseEnterLeave:function(e,t,n,r,u){for(var o=e&&t?ye(e,t):null,a=[];e&&e!==o;)a.push(e),e=be(e);for(e=[];t&&t!==o;)e.push(t),t=be(t);for(t=0;t<a.length;t++)n(a[t],"bubbled",r);for(t=e.length;0<t--;)n(e[t],"captured",u)}},Di=Fn.getListener,hi={accumulateTwoPhaseDispatches:function(e){w(e,Be)},accumulateTwoPhaseDispatchesSkipTarget:function(e){w(e,we)},accumulateDirectDispatches:function(e){w(e,xe)},accumulateEnterLeaveDispatches:function(e,t,n,r){di.traverseEnterLeave(n,r,ke,e,t)}},gi={_root:null,_startText:null,_fallbackText:null},mi={initialize:function(e){return gi._root=e,gi._startText=mi.getText(),!0},reset:function(){gi._root=null,gi._startText=null,gi._fallbackText=null},getData:function(){if(gi._fallbackText)return gi._fallbackText;var e,t,n=gi._startText,r=n.length,u=mi.getText(),o=u.length;for(e=0;e<r&&n[e]===u[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===u[o-t];t++);return gi._fallbackText=u.slice(e,1<t?1-t:void 0),gi._fallbackText},getText:function(){return"value"in gi._root?gi._root.value:gi._root[Ce()]}},Ci=mi,Ei="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ai={type:null,target:null,currentTarget:Et.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};mt(Te.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Et.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Et.thatReturnsTrue)},persist:function(){this.isPersistent=Et.thatReturnsTrue},isPersistent:Et.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<Ei.length;t++)this[Ei[t]]=null}}),Te.Interface=Ai,Te.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;mt(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=mt({},this.Interface,t),e.augmentClass=this.augmentClass,Ne(e)},Ne(Te),Te.augmentClass(_e,{data:null}),Te.augmentClass(Oe,{data:null});var Fi=[9,13,27,32],bi=gt.canUseDOM&&"CompositionEvent"in window,yi=null;gt.canUseDOM&&"documentMode"in document&&(yi=document.documentMode);var vi;if(vi=gt.canUseDOM&&"TextEvent"in window&&!yi){var Bi=window.opera;vi=!("object"===typeof Bi&&"function"===typeof Bi.version&&12>=parseInt(Bi.version(),10))}var wi=vi,ki=gt.canUseDOM&&(!bi||yi&&8<yi&&11>=yi),xi=String.fromCharCode(32),Ti={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Si=!1,Pi=!1,Ni={eventTypes:Ti,extractEvents:function(e,t,n,r){var u;if(bi)e:{switch(e){case"topCompositionStart":var o=Ti.compositionStart;break e;case"topCompositionEnd":o=Ti.compositionEnd;break e;case"topCompositionUpdate":o=Ti.compositionUpdate;break e}o=void 0}else Pi?Ie(e,n)&&(o=Ti.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(o=Ti.compositionStart);return o?(ki&&(Pi||o!==Ti.compositionStart?o===Ti.compositionEnd&&Pi&&(u=Ci.getData()):Pi=Ci.initialize(r)),o=_e.getPooled(o,t,n,r),u?o.data=u:null!==(u=Re(n))&&(o.data=u),hi.accumulateTwoPhaseDispatches(o),u=o):u=null,(e=wi?Le(e,n):Ue(e,n))?(t=Oe.getPooled(Ti.beforeInput,t,n,r),t.data=e,hi.accumulateTwoPhaseDispatches(t)):t=null,[u,t]}},_i={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},Oi={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}},Ii=null,Ri=null,Li=!1;gt.canUseDOM&&(Li=P("input")&&(!document.documentMode||9<document.documentMode));var Ui={eventTypes:Oi,_isInputEventSupported:Li,extractEvents:function(e,t,n,r){var u=t?Gt.getNodeFromInstance(t):window,o=u.nodeName&&u.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===u.type)var a=Ve;else if(Me(u))if(Li)a=$e;else{a=Ge;var i=Ke}else!(o=u.nodeName)||"input"!==o.toLowerCase()||"checkbox"!==u.type&&"radio"!==u.type||(a=Ye);if(a&&(a=a(e,t)))return He(a,n,r);i&&i(e,u,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||u._wrapperState)&&e.controlled&&"number"===u.type&&(e=""+u.value,u.getAttribute("value")!==e&&u.setAttribute("value",e))}};Te.augmentClass(Qe,{view:function(e){return e.view?e.view:(e=y(e),e.window===e?e:(e=e.ownerDocument)?e.defaultView||e.parentWindow:window)},detail:function(e){return e.detail||0}});var Mi={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};Qe.augmentClass(Ze,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Je,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var Hi={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},qi={eventTypes:Hi,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var u=r.window===r?r:(u=r.ownerDocument)?u.defaultView||u.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?Gt.getClosestInstanceFromNode(t):null):e=null,e===t)return null;var o=null==e?u:Gt.getNodeFromInstance(e);u=null==t?u:Gt.getNodeFromInstance(t);var a=Ze.getPooled(Hi.mouseLeave,e,n,r);return a.type="mouseleave",a.target=o,a.relatedTarget=u,n=Ze.getPooled(Hi.mouseEnter,t,n,r),n.type="mouseenter",n.target=u,n.relatedTarget=o,hi.accumulateEnterLeaveDispatches(a,n,e,t),[a,n]}},ji=Lt.DOCUMENT_NODE,Vi=gt.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Wi={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},zi=null,Ki=null,Gi=null,Yi=!1,$i=Tn.isListeningToAllDependencies,Qi={eventTypes:Wi,extractEvents:function(e,t,n,r){var u=r.window===r?r.document:r.nodeType===ji?r:r.ownerDocument;if(!u||!$i("onSelect",u))return null;switch(u=t?Gt.getNodeFromInstance(t):window,e){case"topFocus":(Me(u)||"true"===u.contentEditable)&&(zi=u,Ki=t,Gi=null);break;case"topBlur":Gi=Ki=zi=null;break;case"topMouseDown":Yi=!0;break;case"topContextMenu":case"topMouseUp":return Yi=!1,et(n,r);case"topSelectionChange":if(Vi)break;case"topKeyDown":case"topKeyUp":return et(n,r)}return null}};Te.augmentClass(tt,{animationName:null,elapsedTime:null,pseudoElement:null}),Te.augmentClass(nt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qe.augmentClass(rt,{relatedTarget:null});var Xi={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ji={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};Qe.augmentClass(ot,{key:function(e){if(e.key){var t=Xi[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=ut(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?Ji[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Je,charCode:function(e){return"keypress"===e.type?ut(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ut(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ze.augmentClass(at,{dataTransfer:null}),Qe.augmentClass(it,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Je}),Te.augmentClass(lt,{propertyName:null,elapsedTime:null,pseudoElement:null}),Ze.augmentClass(st,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var Zi={},el={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;t="top"+t,n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t]},Zi[e]=n,el[t]=n});var tl={eventTypes:Zi,extractEvents:function(e,t,n,u){var o=el[e];if(!o)return null;switch(e){case"topAbort":case"topCancel":case"topCanPlay":case"topCanPlayThrough":case"topClose":case"topDurationChange":case"topEmptied":case"topEncrypted":case"topEnded":case"topError":case"topInput":case"topInvalid":case"topLoad":case"topLoadedData":case"topLoadedMetadata":case"topLoadStart":case"topPause":case"topPlay":case"topPlaying":case"topProgress":case"topRateChange":case"topReset":case"topSeeked":case"topSeeking":case"topStalled":case"topSubmit":case"topSuspend":case"topTimeUpdate":case"topToggle":case"topVolumeChange":case"topWaiting":var a=Te;break;case"topKeyPress":if(0===ut(n))return null;case"topKeyDown":case"topKeyUp":a=ot;break;case"topBlur":case"topFocus":a=rt;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":a=Ze;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":a=at;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":a=it;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":a=tt;break;case"topTransitionEnd":a=lt;break;case"topScroll":a=Qe;break;case"topWheel":a=st;break;case"topCopy":case"topCut":case"topPaste":a=nt}return a||r("86",e),e=a.getPooled(o,t,n,u),hi.accumulateTwoPhaseDispatches(e),e}};En.setHandleTopLevel(Tn.handleTopLevel),Fn.injection.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),ln.injection.injectComponentTree(Gt),Fn.injection.injectEventPluginsByName({SimpleEventPlugin:tl,EnterLeaveEventPlugin:qi,ChangeEventPlugin:Ui,SelectEventPlugin:Qi,BeforeInputEventPlugin:Ni});var nl=It.injection.MUST_USE_PROPERTY,rl=It.injection.HAS_BOOLEAN_VALUE,ul=It.injection.HAS_NUMERIC_VALUE,ol=It.injection.HAS_POSITIVE_NUMERIC_VALUE,al=It.injection.HAS_STRING_BOOLEAN_VALUE,il={Properties:{allowFullScreen:rl,allowTransparency:al,async:rl,autoPlay:rl,capture:rl,checked:nl|rl,cols:ol,contentEditable:al,controls:rl,default:rl,defer:rl,disabled:rl,download:It.injection.HAS_OVERLOADED_BOOLEAN_VALUE,draggable:al,formNoValidate:rl,hidden:rl,loop:rl,multiple:nl|rl,muted:nl|rl,noValidate:rl,open:rl,playsInline:rl,readOnly:rl,required:rl,reversed:rl,rows:ol,rowSpan:ul,scoped:rl,seamless:rl,selected:nl|rl,size:ol,start:ul,span:ol,spellCheck:al,style:0,itemScope:rl,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:al},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},ll=It.injection.HAS_STRING_BOOLEAN_VALUE,sl={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},cl={Properties:{autoReverse:ll,externalResourcesRequired:ll,preserveAlpha:ll},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:sl.xlink,xlinkArcrole:sl.xlink,xlinkHref:sl.xlink,xlinkRole:sl.xlink,xlinkShow:sl.xlink,xlinkTitle:sl.xlink,xlinkType:sl.xlink,xmlBase:sl.xml,xmlLang:sl.xml,xmlSpace:sl.xml}},pl=/[\\-\\:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(pl,ct);cl.Properties[t]=0,cl.DOMAttributeNames[t]=e}),It.injection.injectDOMPropertyConfig(il),It.injection.injectDOMPropertyConfig(cl);var fl=ta.injectInternals,dl=Lt.ELEMENT_NODE,Dl=Lt.TEXT_NODE,hl=Lt.COMMENT_NODE,gl=Lt.DOCUMENT_NODE,ml=Lt.DOCUMENT_FRAGMENT_NODE,Cl=It.ROOT_ATTRIBUTE_NAME,El=kt.getChildNamespace,Al=fr.createElement,Fl=fr.createTextNode,bl=fr.setInitialProperties,yl=fr.diffProperties,vl=fr.updateProperties,Bl=fr.diffHydratedProperties,wl=fr.diffHydratedText,kl=fr.warnForDeletedHydratableElement,xl=fr.warnForDeletedHydratableText,Tl=fr.warnForInsertedHydratedElement,Sl=fr.warnForInsertedHydratedText,Pl=Gt.precacheFiberNode,Nl=Gt.updateFiberProps;fn.injection.injectFiberControlledHostComponent(fr),Fe._injectFiber(function(e){return Il.findHostInstance(e)});var _l=null,Ol=null,Il=function(e){var t=e.getPublicInstance;e=de(e);var n=e.scheduleUpdate,r=e.getPriorityContext;return{createContainer:function(e){var t=pu();return e={current:t,containerInfo:e,isScheduled:!1,nextScheduledRoot:null,context:null,pendingContext:null},t.stateNode=e},updateContainer:function(e,t,u,o){var a=t.current;u=he(u),null===t.context?t.context=u:t.pendingContext=u,t=o,o=r(a,kr.enableAsyncSubtreeAPI&&null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent),e={element:e},Ja(a,e,void 0===t?null:t,o),n(a,o)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case ni:return t(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:function(e){return e=ri(e),null===e?null:e.stateNode},findHostInstanceWithNoPortals:function(e){return e=ui(e),null===e?null:e.stateNode}}}({getRootHostContext:function(e){if(e.nodeType===gl)e=(e=e.documentElement)?e.namespaceURI:El(null,"");else{var t=e.nodeType===hl?e.parentNode:e;e=t.namespaceURI||null,t=t.tagName,e=El(e,t)}return e},getChildHostContext:function(e,t){return El(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){_l=Tn.isEnabled(),Ol=ci.getSelectionInformation(),Tn.setEnabled(!1)},resetAfterCommit:function(){ci.restoreSelection(Ol),Ol=null,Tn.setEnabled(_l),_l=null},createInstance:function(e,t,n,r,u){return e=Al(e,t,n,r),Pl(u,e),Nl(e,t),e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){bl(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,u){return yl(e,t,n,r,u)},commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,u){Nl(e,u),vl(e,t,n,r,u)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"===typeof t.dangerouslySetInnerHTML.__html},resetTextContent:function(e){e.textContent=""},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return e=Fl(e,t),Pl(r,e),e},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){e.nodeType===hl?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){e.nodeType===hl?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){e.nodeType===hl?e.parentNode.removeChild(t):e.removeChild(t)},canHydrateInstance:function(e,t){return e.nodeType===dl&&t===e.nodeName.toLowerCase()},canHydrateTextInstance:function(e,t){return""!==t&&e.nodeType===Dl},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&e.nodeType!==dl&&e.nodeType!==Dl;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&e.nodeType!==dl&&e.nodeType!==Dl;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,u,o){return Pl(o,e),Nl(e,n),Bl(e,t,n,u,r)},hydrateTextInstance:function(e,t,n){return Pl(n,e),wl(e,t)},didNotHydrateInstance:function(e,t){1===t.nodeType?kl(e,t):xl(e,t)},didNotFindHydratableInstance:function(e,t,n){Tl(e,t,n)},didNotFindHydratableTextInstance:function(e,t){Sl(e,t)},scheduleDeferredCallback:wr.rIC,useSyncScheduling:!0});Dn.injection.injectFiberBatchedUpdates(Il.batchedUpdates);var Rl={createPortal:Dt,hydrate:function(e,t,n){return dt(null,e,t,!0,n)},render:function(e,t,n){return dt(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,u){return null!=e&&Yt.has(e)||r("38"),dt(e,t,n,!1,u)},unmountComponentAtNode:function(e){return pt(e)||r("40"),!!e._reactRootContainer&&(Il.unbatchedUpdates(function(){dt(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},findDOMNode:Fe,unstable_createPortal:Dt,unstable_batchedUpdates:Dn.batchedUpdates,unstable_deferredUpdates:Il.deferredUpdates,flushSync:Il.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Fn,EventPluginRegistry:Pt,EventPropagators:hi,ReactControlledComponent:fn,ReactDOMComponentTree:Gt,ReactDOMEventListener:En}};fl({findFiberByHostInstance:Gt.getClosestInstanceFromNode,findHostInstanceByFiber:Il.findHostInstance,bundleType:0,version:"16.0.0",rendererPackageName:"react-dom"}),e.exports=Rl},function(e,t,n){"use strict";var r=!("undefined"===typeof window||!window.document||!window.document.createElement),u={canUseDOM:r,canUseWorkers:"undefined"!==typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=u},function(e,t,n){"use strict";var r=n(3),u={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=u},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function u(e,t){if(r(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),u=Object.keys(t);if(n.length!==u.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var o=Object.prototype.hasOwnProperty;e.exports=u},function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!u(e)&&(u(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var u=n(31);e.exports=r},function(e,t,n){"use strict";function r(e){return u(e)&&3==e.nodeType}var u=n(32);e.exports=r},function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"===typeof n.Node?e instanceof n.Node:"object"===typeof e&&"number"===typeof e.nodeType&&"string"===typeof e.nodeName))}e.exports=r},function(e,t,n){"use strict";function r(e){try{e.focus()}catch(e){}}e.exports=r},function(e,t,n){"use strict";function r(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(7),s=n(8),c=n(9),p=n(10),f=n(11),d=n(39),D=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),h={cursor:"pointer"},g=function(e){function t(){return r(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),D(t,[{key:"render",value:function(){var e=this.props,t=e.error,n=e.editorHandler,r=Object(d.a)(t),u=null!==r&&null!==n;return i.a.createElement(l.a,null,i.a.createElement(c.a,{headerText:"Failed to compile"}),i.a.createElement("a",{onClick:u&&r?function(){return n(r)}:null,style:u?h:null},i.a.createElement(p.a,{main:!0,codeHTML:Object(f.a)(t)})),i.a.createElement(s.a,{line1:"This error occurred during the build time and cannot be dismissed."}))}}]),t}(a.PureComponent);t.a=g},function(e,t,n){e.exports={XmlEntities:n(37),Html4Entities:n(38),Html5Entities:n(13),AllHtmlEntities:n(13)}},function(e,t){function n(){}var r={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},u={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},o={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"};n.prototype.encode=function(e){return e&&e.length?e.replace(/<|>|"|\'|&/g,function(e){return o[e]}):""},n.encode=function(e){return(new n).encode(e)},n.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return r[e]||e}):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r),a=u[o];a?(n+="&"+a+";",r++):(n+=o<32||o>126?"&#"+o+";":e.charAt(r),r++)}return n},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},e.exports=n},function(e,t){function n(){}for(var r=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],u=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],o={},a={},i=0,l=r.length;i<l;){var s=r[i],c=u[i];o[s]=String.fromCharCode(c),a[c]=s,i++}n.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,function(e,t){var n;if("#"===t.charAt(0)){var r="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(r)||r<-32768||r>65535||(n=String.fromCharCode(r))}else n=o[t];return n||e}):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=a[e.charCodeAt(r)];n+=u?"&"+u+";":e.charAt(r),r++}return n},n.encode=function(e){return(new n).encode(e)},n.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r),o=a[u];n+=o?"&"+o+";":u<32||u>126?"&#"+u+";":e.charAt(r),r++}return n},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},e.exports=n},function(e,t,n){"use strict";function r(e){for(var t=e.split("\\n"),n="",r=0,u=0;u<t.length;u++){var l=o.a.ansiToText(t[u]).trim();if(l){!n&&l.match(a)&&(n=l);for(var s=0;s<i.length;){var c=l.match(i[s]);if(c){r=parseInt(c[1],10);break}s++}if(n&&r)break}}return n&&r?{fileName:n,lineNumber:r}:null}var u=n(12),o=n.n(u),a=/^\\.(\\/[^\\/\\n ]+)+\\.[^\\/\\n ]+$/,i=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];t.a=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(7),s=n(41),c=n(42),p=n(43),f=n(8),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),D=function(e){function t(){var e,n,o,a;r(this,t);for(var i=arguments.length,l=Array(i),s=0;s<i;s++)l[s]=arguments[s];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.state={currentIndex:0},o.previous=function(){o.setState(function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}})},o.next=function(){o.setState(function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}})},o.shortcutHandler=function(e){"Escape"===e?o.props.close():"ArrowLeft"===e?o.previous():"ArrowRight"===e&&o.next()},a=n,u(o,a)}return o(t,e),d(t,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,n=e.close,r=t.length;return i.a.createElement(l.a,{shortcutHandler:this.shortcutHandler},i.a.createElement(s.a,{close:n}),r>1&&i.a.createElement(c.a,{currentError:this.state.currentIndex+1,totalErrors:r,previous:this.previous,next:this.next}),i.a.createElement(p.a,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),i.a.createElement(f.a,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser’s developer console to further inspect this error."}))}}]),t}(a.PureComponent);t.a=D},function(e,t,n){"use strict";function r(e){var t=e.close;return o.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:i},"×")}var u=n(0),o=n.n(u),a=n(1),i={color:a.a,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0};t.a=r},function(e,t,n){"use strict";function r(e){var t=e.currentError,n=e.totalErrors,r=e.previous,u=e.next;return o.a.createElement("div",{style:i},o.a.createElement("span",{style:l},o.a.createElement("button",{onClick:r,style:c},"←"),o.a.createElement("button",{onClick:u,style:p},"→")),t+" of "+n+" errors on the page")}var u=n(0),o=n.n(u),a=n(1),i={marginBottom:"0.5rem"},l={marginRight:"1em"},s={backgroundColor:a.f,color:a.e,border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},c=Object.assign({},s,{borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"}),p=Object.assign({},s,{borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"});t.a=r},function(e,t,n){"use strict";function r(e){var t=e.errorRecord,n=e.editorHandler,r=t.error,u=t.unhandledRejection,s=t.contextSize,c=t.stackFrames,p=u?"Unhandled Rejection ("+r.name+")":r.name,f=r.message,d=f.match(/^\\w*:/)||!p?f:p+": "+f;return d=d.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),o.a.createElement("div",{style:l},o.a.createElement(a.a,{headerText:d}),o.a.createElement(i.a,{stackFrames:c,errorName:p,contextSize:s,editorHandler:n}))}var u=n(0),o=n.n(u),a=n(9),i=n(44),l={display:"flex",flexDirection:"column"};t.a=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(45),s=n(61),c=n(62),p=n(63),f=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},D=function(e){function t(){return r(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),f(t,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,n=e.errorName,r=e.contextSize,u=e.editorHandler,o=[],a=!1,f=[],d=0;return t.forEach(function(e,D){var h=e.fileName,g=e._originalFileName,m=Object(c.a)(g,h),C=!Object(p.a)(n),E=m&&(C||a);m||(a=!0);var A=i.a.createElement(l.a,{key:"frame-"+D,frame:e,contextSize:r,critical:0===D,showCode:!E,editorHandler:u}),F=D===t.length-1;E&&f.push(A),E&&!F||(1===f.length?o.push(f[0]):f.length>1&&(d++,o.push(i.a.createElement(s.a,{key:"bundle-"+d},f))),f=[]),E||o.push(A)}),o}},{key:"render",value:function(){return i.a.createElement("div",{style:d},this.renderFrames())}}]),t}(a.Component);t.a=D},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(46),s=n(60),c=n(1),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f={fontSize:"0.9em",marginBottom:"0.9em"},d={textDecoration:"none",color:c.b,cursor:"pointer"},D={cursor:"pointer"},h={marginBottom:"1.5em",color:c.b,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:"#fff",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},g=function(e){function t(){var e,n,o,a;r(this,t);for(var i=arguments.length,l=Array(i),s=0;s<i;s++)l[s]=arguments[s];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.state={compiled:!1},o.toggleCompiled=function(){o.setState(function(e){return{compiled:!e.compiled}})},o.editorHandler=function(){var e=o.getErrorLocation();e&&o.props.editorHandler(e)},o.onKeyDown=function(e){"Enter"===e.key&&o.editorHandler()},a=n,u(o,a)}return o(t,e),p(t,[{key:"getErrorLocation",value:function(){var e=this.props.frame,t=e._originalFileName,n=e._originalLineNumber;return t?-1!==t.trim().indexOf(" ")?null:{fileName:t,lineNumber:n||1}:null}},{key:"render",value:function(){var e=this.props,t=e.frame,n=e.contextSize,r=e.critical,u=e.showCode,o=t.fileName,a=t.lineNumber,c=t.columnNumber,p=t._scriptCode,g=t._originalFileName,m=t._originalLineNumber,C=t._originalColumnNumber,E=t._originalScriptCode,A=t.getFunctionName(),F=this.state.compiled,b=Object(s.a)(g,m,C,o,a,c,F),y=null;u&&(F&&p&&0!==p.length&&null!=a?y={lines:p,lineNum:a,columnNum:c,contextSize:n,main:r}:!F&&E&&0!==E.length&&null!=m&&(y={lines:E,lineNum:m,columnNum:C,contextSize:n,main:r}));var v=null!==this.getErrorLocation()&&null!==this.props.editorHandler;return i.a.createElement("div",null,i.a.createElement("div",null,A),i.a.createElement("div",{style:f},i.a.createElement("a",{style:v?d:null,onClick:v?this.editorHandler:null,onKeyDown:v?this.onKeyDown:null,tabIndex:v?"0":null},b)),y&&i.a.createElement("span",null,i.a.createElement("a",{onClick:v?this.editorHandler:null,style:v?D:null},i.a.createElement(l.a,y)),i.a.createElement("button",{style:h,onClick:this.toggleCompiled},"View "+(F?"source":"compiled"))))}}]),t}(a.Component);t.a=g},function(e,t,n){"use strict";function r(e){var t=e.lines,n=e.lineNum,r=e.columnNum,u=e.contextSize,p=e.main,d=[],D=1/0;t.forEach(function(e){var t=e.content,n=t.match(/^\\s*/);""!==t&&(D=n&&n[0]?Math.min(D,n[0].length):0)}),t.forEach(function(e){var t=e.content,n=e.lineNumber;isFinite(D)&&(t=t.substring(D)),d[n-1]=t});var h=f()(d.join("\\n"),n,null==r?0:r-(isFinite(D)?D:0),{forceColor:!0,linesAbove:u,linesBelow:u}),g=Object(c.a)(h),m=document.createElement("code");m.innerHTML=g,Object(l.a)(m);var C=m.childNodes;e:for(var E=0;E<C.length;++E)for(var A=C[E],F=A.childNodes,b=0;b<F.length;++b){var y=F[b],v=y.innerText;if(null!=v&&-1!==v.indexOf(" "+n+" |")){Object(i.a)(A,p?s.d:s.g);break e}}return o.a.createElement(a.a,{main:p,codeHTML:m.innerHTML})}var u=n(0),o=n.n(u),a=n(10),i=n(14),l=n(47),s=n(1),c=n(11),p=n(48),f=n.n(p);t.a=r},function(e,t,n){"use strict";function r(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}function u(e){for(var t=e.childNodes,n=0;n<t.length;++n){var u=t[n];if("span"===u.tagName.toLowerCase()){var o=u.innerText;if(null!=o){"|^"===o.replace(/\\s/g,"")&&(u.style.position="absolute",r(e,u))}}}}n.d(t,"a",function(){return u})},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function u(e){return{keyword:e.cyan,capitalized:e.yellow,jsx_tag:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold,gutter:e.grey,marker:e.red.bold}}function o(e){var t=e.slice(-2),n=t[0],r=t[1],u=(0,i.matchToToken)(e);if("name"===u.type){if(c.default.keyword.isReservedWordES6(u.value))return"keyword";if(D.test(u.value)&&("<"===r[n-1]||"</"==r.substr(n-2,2)))return"jsx_tag";if(u.value[0]!==u.value[0].toLowerCase())return"capitalized"}return"punctuator"===u.type&&h.test(u.value)?"bracket":u.type}function a(e,t){return t.replace(l.default,function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];var u=o(n),a=e[u];return a?n[0].split(d).map(function(e){return a(e)}).join("\\n"):n[0]})}t.__esModule=!0,t.default=function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};n=Math.max(n,0);var o=r.highlightCode&&f.default.supportsColor||r.forceColor,i=f.default;r.forceColor&&(i=new f.default.constructor({enabled:!0}));var l=function(e,t){return o?e(t):t},s=u(i);o&&(e=a(s,e));var c=r.linesAbove||2,p=r.linesBelow||3,D=e.split(d),h=Math.max(t-(c+1),0),g=Math.min(D.length,t+p);t||n||(h=0,g=D.length);var m=String(g).length,C=D.slice(h,g).map(function(e,r){var u=h+1+r,o=(" "+u).slice(-m),a=" "+o+" | ";if(u===t){var i="";if(n){var c=e.slice(0,n-1).replace(/[^\\t]/g," ");i=["\\n ",l(s.gutter,a.replace(/\\d/g," ")),c,l(s.marker,"^")].join("")}return[l(s.marker,">"),l(s.gutter,a),e,i].join("")}return" "+l(s.gutter,a)+e}).join("\\n");return o?i.reset(C):C};var i=n(49),l=r(i),s=n(50),c=r(s),p=n(53),f=r(p),d=/\\r\\n|[\\n\\r\\u2028\\u2029]/,D=/^[a-z][\\w-]*$/i,h=/^[()\\[\\]{}]$/;e.exports=t.default},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0]};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,n){!function(){"use strict";t.ast=n(51),t.code=n(15),t.keyword=n(52)}()},function(e,t){!function(){"use strict";function t(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1}function n(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1}function r(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function u(e){return r(e)||null!=e&&"FunctionDeclaration"===e.type}function o(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}function a(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=o(t)}while(t);return!1}e.exports={isExpression:t,isStatement:r,isIterationStatement:n,isSourceElement:u,isProblematicIfStatement:a,trailingStatement:o}}()},function(e,t,n){!function(){"use strict";function t(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}function r(e,t){return!(!t&&"yield"===e)&&u(e,t)}function u(e,n){if(n&&t(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function o(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function a(e,t){return"null"===e||"true"===e||"false"===e||u(e,t)}function i(e){return"eval"===e||"arguments"===e}function l(e){var t,n,r;if(0===e.length)return!1;if(r=e.charCodeAt(0),!d.isIdentifierStartES5(r))return!1;for(t=1,n=e.length;t<n;++t)if(r=e.charCodeAt(t),!d.isIdentifierPartES5(r))return!1;return!0}function s(e,t){return 1024*(e-55296)+(t-56320)+65536}function c(e){var t,n,r,u,o;if(0===e.length)return!1;for(o=d.isIdentifierStartES6,t=0,n=e.length;t<n;++t){if(55296<=(r=e.charCodeAt(t))&&r<=56319){if(++t>=n)return!1;if(!(56320<=(u=e.charCodeAt(t))&&u<=57343))return!1;r=s(r,u)}if(!o(r))return!1;o=d.isIdentifierPartES6}return!0}function p(e,t){return l(e)&&!o(e,t)}function f(e,t){return c(e)&&!a(e,t)}var d=n(15);e.exports={isKeywordES5:r,isKeywordES6:u,isReservedWordES5:o,isReservedWordES6:a,isRestrictedWord:i,isIdentifierNameES5:l,isIdentifierNameES6:c,isIdentifierES5:p,isIdentifierES6:f}}()},function(e,t,n){"use strict";(function(t){function r(e){this.enabled=e&&void 0!==e.enabled?e.enabled:c}function u(e){var t=function(){return o.apply(t,arguments)};return t._styles=e,t.enabled=this.enabled,t.__proto__=D,t}function o(){var e=arguments,t=e.length,n=0!==t&&String(arguments[0]);if(t>1)for(var r=1;r<t;r++)n+=" "+e[r];if(!this.enabled||!n)return n;var u=this._styles,o=u.length,a=i.dim.open;for(!f||-1===u.indexOf("gray")&&-1===u.indexOf("grey")||(i.dim.open="");o--;){var l=i[u[o]];n=l.open+n.replace(l.closeRe,l.open)+l.close}return i.dim.open=a,n}var a=n(54),i=n(55),l=n(57),s=n(58),c=n(59),p=Object.defineProperties,f="win32"===t.platform&&!/^xterm/i.test(Object({NODE_ENV:"production"}).TERM);f&&(i.blue.open="\u001b[94m");var d=function(){var e={};return Object.keys(i).forEach(function(t){i[t].closeRe=new RegExp(a(i[t].close),"g"),e[t]={get:function(){return u.call(this,this._styles.concat(t))}}}),e}(),D=p(function(){},d);p(r.prototype,function(){var e={};return Object.keys(d).forEach(function(t){e[t]={get:function(){return u.call(this,[t])}}}),e}()),e.exports=new r,e.exports.styles=i,e.exports.hasColor=s,e.exports.stripColor=l,e.exports.supportsColor=c}).call(t,n(16))},function(e,t,n){"use strict";var r=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(r,"\\\\$&")}},function(e,t,n){"use strict";(function(e){function t(){var e={modifiers:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},colors:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39]},bgColors:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49]}};return e.colors.grey=e.colors.gray,Object.keys(e).forEach(function(t){var n=e[t];Object.keys(n).forEach(function(t){var r=n[t];e[t]=n[t]={open:"\u001b["+r[0]+"m",close:"\u001b["+r[1]+"m"}}),Object.defineProperty(e,t,{value:n,enumerable:!1})}),e}Object.defineProperty(e,"exports",{enumerable:!0,get:t})}).call(t,n(56)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var r=n(17)();e.exports=function(e){return"string"===typeof e?e.replace(r,""):e}},function(e,t,n){"use strict";var r=n(17),u=new RegExp(r().source);e.exports=u.test.bind(u)},function(e,t,n){"use strict";(function(t){var n=t.argv,r=n.indexOf("--"),u=function(e){e="--"+e;var t=n.indexOf(e);return-1!==t&&(-1===r||t<r)};e.exports=function(){return"FORCE_COLOR"in Object({NODE_ENV:"production"})||!(u("no-color")||u("no-colors")||u("color=false"))&&(!!(u("color")||u("colors")||u("color=true")||u("color=always"))||!(t.stdout&&!t.stdout.isTTY)&&("win32"===t.platform||("COLORTERM"in Object({NODE_ENV:"production"})||"dumb"!==Object({NODE_ENV:"production"}).TERM&&!!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(Object({NODE_ENV:"production"}).TERM))))}()}).call(t,n(16))},function(e,t,n){"use strict";function r(e,t,n,r,u,o,a){var i=void 0;if(!a&&e&&"number"===typeof t){var l=/^[\\/|\\\\].*?[\\/|\\\\]((src|node_modules)[\\/|\\\\].*)/.exec(e);i=l&&l[1]?l[1]:e,i+=":"+t,n&&(i+=":"+n)}else r&&"number"===typeof u?(i=r+":"+u,o&&(i+=":"+o)):i="unknown";return i.replace("webpack://",".")}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),i=n.n(a),l=n(1),s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c={color:l.a,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:"#fff",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},p=Object.assign({},c,{marginBottom:"1.5em"}),f=Object.assign({},c,{marginBottom:"0.6em"}),d=function(e){function t(){var e,n,o,a;r(this,t);for(var i=arguments.length,l=Array(i),s=0;s<i;s++)l[s]=arguments[s];return n=o=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.state={collapsed:!0},o.toggleCollaped=function(){o.setState(function(e){return{collapsed:!e.collapsed}})},a=n,u(o,a)}return o(t,e),s(t,[{key:"render",value:function(){var e=this.props.children.length,t=this.state.collapsed;return i.a.createElement("div",null,i.a.createElement("button",{onClick:this.toggleCollaped,style:t?p:f},(t?"▶":"▼")+" "+e+" stack frames were "+(t?"collapsed.":"expanded.")),i.a.createElement("div",{style:{display:t?"none":"block"}},this.props.children,i.a.createElement("button",{onClick:this.toggleCollaped,style:f},"▲ "+e+" stack frames were expanded.")))}}]),t}(a.Component);t.a=d},function(e,t,n){"use strict";function r(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}n.d(t,"a",function(){return r})}]);';

                /***/
              }
              /******/
            ]
          );
        });

        /***/
      },

    /***/ "./node_modules/react-scripts/config/polyfills.js":
      /*!********************************************************!*\
  !*** ./node_modules/react-scripts/config/polyfills.js ***!
  \********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // @remove-on-eject-begin
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */
        // @remove-on-eject-end

        if (typeof Promise === "undefined") {
          // Rejection tracking prevents a common issue where React gets into an
          // inconsistent state due to an error, but it gets swallowed by a Promise,
          // and the user has no idea what causes React's erratic future behavior.
          __webpack_require__(
            /*! promise/lib/rejection-tracking */ "./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js"
          ).enable();
          window.Promise = __webpack_require__(
            /*! promise/lib/es6-extensions.js */ "./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js"
          );
        }

        // fetch() polyfill for making API calls.
        __webpack_require__(
          /*! whatwg-fetch */ "./node_modules/whatwg-fetch/fetch.js"
        );

        // Object.assign() is commonly used with React.
        // It will use the native implementation if it's present and isn't buggy.
        Object.assign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js"
        );

        // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.
        // We don't polyfill it in the browser--this is user's responsibility.
        if (false) {
          require("raf").polyfill(global);
        }

        /***/
      },

    /***/ "./node_modules/react-scripts/node_modules/promise/lib/core.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/react-scripts/node_modules/promise/lib/core.js ***!
  \*********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var asap = __webpack_require__(
          /*! asap/raw */ "./node_modules/asap/browser-raw.js"
        );

        function noop() {}

        // States:
        //
        // 0 - pending
        // 1 - fulfilled with _value
        // 2 - rejected with _value
        // 3 - adopted the state of another promise, _value
        //
        // once the state is no longer pending (0) it is immutable

        // All `_` prefixed properties will be reduced to `_{random number}`
        // at build time to obfuscate them and discourage their use.
        // We don't use symbols or Object.defineProperty to fully hide them
        // because the performance isn't good enough.

        // to avoid using try/catch inside critical functions, we
        // extract them to here.
        var LAST_ERROR = null;
        var IS_ERROR = {};
        function getThen(obj) {
          try {
            return obj.then;
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }

        function tryCallOne(fn, a) {
          try {
            return fn(a);
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }
        function tryCallTwo(fn, a, b) {
          try {
            fn(a, b);
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }

        module.exports = Promise;

        function Promise(fn) {
          if (typeof this !== "object") {
            throw new TypeError("Promises must be constructed via new");
          }
          if (typeof fn !== "function") {
            throw new TypeError(
              "Promise constructor's argument is not a function"
            );
          }
          this._75 = 0;
          this._83 = 0;
          this._18 = null;
          this._38 = null;
          if (fn === noop) return;
          doResolve(fn, this);
        }
        Promise._47 = null;
        Promise._71 = null;
        Promise._44 = noop;

        Promise.prototype.then = function(onFulfilled, onRejected) {
          if (this.constructor !== Promise) {
            return safeThen(this, onFulfilled, onRejected);
          }
          var res = new Promise(noop);
          handle(this, new Handler(onFulfilled, onRejected, res));
          return res;
        };

        function safeThen(self, onFulfilled, onRejected) {
          return new self.constructor(function(resolve, reject) {
            var res = new Promise(noop);
            res.then(resolve, reject);
            handle(self, new Handler(onFulfilled, onRejected, res));
          });
        }
        function handle(self, deferred) {
          while (self._83 === 3) {
            self = self._18;
          }
          if (Promise._47) {
            Promise._47(self);
          }
          if (self._83 === 0) {
            if (self._75 === 0) {
              self._75 = 1;
              self._38 = deferred;
              return;
            }
            if (self._75 === 1) {
              self._75 = 2;
              self._38 = [self._38, deferred];
              return;
            }
            self._38.push(deferred);
            return;
          }
          handleResolved(self, deferred);
        }

        function handleResolved(self, deferred) {
          asap(function() {
            var cb =
              self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;
            if (cb === null) {
              if (self._83 === 1) {
                resolve(deferred.promise, self._18);
              } else {
                reject(deferred.promise, self._18);
              }
              return;
            }
            var ret = tryCallOne(cb, self._18);
            if (ret === IS_ERROR) {
              reject(deferred.promise, LAST_ERROR);
            } else {
              resolve(deferred.promise, ret);
            }
          });
        }
        function resolve(self, newValue) {
          // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
          if (newValue === self) {
            return reject(
              self,
              new TypeError("A promise cannot be resolved with itself.")
            );
          }
          if (
            newValue &&
            (typeof newValue === "object" || typeof newValue === "function")
          ) {
            var then = getThen(newValue);
            if (then === IS_ERROR) {
              return reject(self, LAST_ERROR);
            }
            if (then === self.then && newValue instanceof Promise) {
              self._83 = 3;
              self._18 = newValue;
              finale(self);
              return;
            } else if (typeof then === "function") {
              doResolve(then.bind(newValue), self);
              return;
            }
          }
          self._83 = 1;
          self._18 = newValue;
          finale(self);
        }

        function reject(self, newValue) {
          self._83 = 2;
          self._18 = newValue;
          if (Promise._71) {
            Promise._71(self, newValue);
          }
          finale(self);
        }
        function finale(self) {
          if (self._75 === 1) {
            handle(self, self._38);
            self._38 = null;
          }
          if (self._75 === 2) {
            for (var i = 0; i < self._38.length; i++) {
              handle(self, self._38[i]);
            }
            self._38 = null;
          }
        }

        function Handler(onFulfilled, onRejected, promise) {
          this.onFulfilled =
            typeof onFulfilled === "function" ? onFulfilled : null;
          this.onRejected =
            typeof onRejected === "function" ? onRejected : null;
          this.promise = promise;
        }

        /**
         * Take a potentially misbehaving resolver function and make sure
         * onFulfilled and onRejected are only called once.
         *
         * Makes no guarantees about asynchrony.
         */
        function doResolve(fn, promise) {
          var done = false;
          var res = tryCallTwo(
            fn,
            function(value) {
              if (done) return;
              done = true;
              resolve(promise, value);
            },
            function(reason) {
              if (done) return;
              done = true;
              reject(promise, reason);
            }
          );
          if (!done && res === IS_ERROR) {
            done = true;
            reject(promise, LAST_ERROR);
          }
        }

        /***/
      },

    /***/ "./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js":
      /*!*******************************************************************************!*\
  !*** ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js ***!
  \*******************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        //This file contains the ES6 extensions to the core Promises/A+ API

        var Promise = __webpack_require__(
          /*! ./core.js */ "./node_modules/react-scripts/node_modules/promise/lib/core.js"
        );

        module.exports = Promise;

        /* Static Functions */

        var TRUE = valuePromise(true);
        var FALSE = valuePromise(false);
        var NULL = valuePromise(null);
        var UNDEFINED = valuePromise(undefined);
        var ZERO = valuePromise(0);
        var EMPTYSTRING = valuePromise("");

        function valuePromise(value) {
          var p = new Promise(Promise._44);
          p._83 = 1;
          p._18 = value;
          return p;
        }
        Promise.resolve = function(value) {
          if (value instanceof Promise) return value;

          if (value === null) return NULL;
          if (value === undefined) return UNDEFINED;
          if (value === true) return TRUE;
          if (value === false) return FALSE;
          if (value === 0) return ZERO;
          if (value === "") return EMPTYSTRING;

          if (typeof value === "object" || typeof value === "function") {
            try {
              var then = value.then;
              if (typeof then === "function") {
                return new Promise(then.bind(value));
              }
            } catch (ex) {
              return new Promise(function(resolve, reject) {
                reject(ex);
              });
            }
          }
          return valuePromise(value);
        };

        Promise.all = function(arr) {
          var args = Array.prototype.slice.call(arr);

          return new Promise(function(resolve, reject) {
            if (args.length === 0) return resolve([]);
            var remaining = args.length;
            function res(i, val) {
              if (
                val &&
                (typeof val === "object" || typeof val === "function")
              ) {
                if (
                  val instanceof Promise &&
                  val.then === Promise.prototype.then
                ) {
                  while (val._83 === 3) {
                    val = val._18;
                  }
                  if (val._83 === 1) return res(i, val._18);
                  if (val._83 === 2) reject(val._18);
                  val.then(function(val) {
                    res(i, val);
                  }, reject);
                  return;
                } else {
                  var then = val.then;
                  if (typeof then === "function") {
                    var p = new Promise(then.bind(val));
                    p.then(function(val) {
                      res(i, val);
                    }, reject);
                    return;
                  }
                }
              }
              args[i] = val;
              if (--remaining === 0) {
                resolve(args);
              }
            }
            for (var i = 0; i < args.length; i++) {
              res(i, args[i]);
            }
          });
        };

        Promise.reject = function(value) {
          return new Promise(function(resolve, reject) {
            reject(value);
          });
        };

        Promise.race = function(values) {
          return new Promise(function(resolve, reject) {
            values.forEach(function(value) {
              Promise.resolve(value).then(resolve, reject);
            });
          });
        };

        /* Prototype Methods */

        Promise.prototype["catch"] = function(onRejected) {
          return this.then(null, onRejected);
        };

        /***/
      },

    /***/ "./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js":
      /*!***********************************************************************************!*\
  !*** ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js ***!
  \***********************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var Promise = __webpack_require__(
          /*! ./core */ "./node_modules/react-scripts/node_modules/promise/lib/core.js"
        );

        var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

        var enabled = false;
        exports.disable = disable;
        function disable() {
          enabled = false;
          Promise._47 = null;
          Promise._71 = null;
        }

        exports.enable = enable;
        function enable(options) {
          options = options || {};
          if (enabled) disable();
          enabled = true;
          var id = 0;
          var displayId = 0;
          var rejections = {};
          Promise._47 = function(promise) {
            if (
              promise._83 === 2 && // IS REJECTED
              rejections[promise._56]
            ) {
              if (rejections[promise._56].logged) {
                onHandled(promise._56);
              } else {
                clearTimeout(rejections[promise._56].timeout);
              }
              delete rejections[promise._56];
            }
          };
          Promise._71 = function(promise, err) {
            if (promise._75 === 0) {
              // not yet handled
              promise._56 = id++;
              rejections[promise._56] = {
                displayId: null,
                error: err,
                timeout: setTimeout(
                  onUnhandled.bind(null, promise._56),
                  // For reference errors and type errors, this almost always
                  // means the programmer made a mistake, so log them after just
                  // 100ms
                  // otherwise, wait 2 seconds to see if they get handled
                  matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000
                ),
                logged: false
              };
            }
          };
          function onUnhandled(id) {
            if (
              options.allRejections ||
              matchWhitelist(
                rejections[id].error,
                options.whitelist || DEFAULT_WHITELIST
              )
            ) {
              rejections[id].displayId = displayId++;
              if (options.onUnhandled) {
                rejections[id].logged = true;
                options.onUnhandled(
                  rejections[id].displayId,
                  rejections[id].error
                );
              } else {
                rejections[id].logged = true;
                logError(rejections[id].displayId, rejections[id].error);
              }
            }
          }
          function onHandled(id) {
            if (rejections[id].logged) {
              if (options.onHandled) {
                options.onHandled(
                  rejections[id].displayId,
                  rejections[id].error
                );
              } else if (!rejections[id].onUnhandled) {
                console.warn(
                  "Promise Rejection Handled (id: " +
                    rejections[id].displayId +
                    "):"
                );
                console.warn(
                  '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
                    rejections[id].displayId +
                    "."
                );
              }
            }
          }
        }

        function logError(id, error) {
          console.warn(
            "Possible Unhandled Promise Rejection (id: " + id + "):"
          );
          var errStr = (error && (error.stack || error)) + "";
          errStr.split("\n").forEach(function(line) {
            console.warn("  " + line);
          });
        }

        function matchWhitelist(error, list) {
          return list.some(function(cls) {
            return error instanceof cls;
          });
        }

        /***/
      },

    /***/ "./node_modules/react/cjs/react.development.js":
      /*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.2.0
         * react.development.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          (function() {
            "use strict";

            var _assign = __webpack_require__(
              /*! object-assign */ "./node_modules/object-assign/index.js"
            );
            var emptyObject = __webpack_require__(
              /*! fbjs/lib/emptyObject */ "./node_modules/fbjs/lib/emptyObject.js"
            );
            var invariant = __webpack_require__(
              /*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js"
            );
            var warning = __webpack_require__(
              /*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js"
            );
            var emptyFunction = __webpack_require__(
              /*! fbjs/lib/emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js"
            );
            var checkPropTypes = __webpack_require__(
              /*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js"
            );

            // TODO: this is special because it gets imported during build.

            var ReactVersion = "16.2.0";

            // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
            // nor polyfill, then a plain number is used for performance.
            var hasSymbol = typeof Symbol === "function" && Symbol["for"];

            var REACT_ELEMENT_TYPE = hasSymbol
              ? Symbol["for"]("react.element")
              : 0xeac7;
            var REACT_CALL_TYPE = hasSymbol
              ? Symbol["for"]("react.call")
              : 0xeac8;
            var REACT_RETURN_TYPE = hasSymbol
              ? Symbol["for"]("react.return")
              : 0xeac9;
            var REACT_PORTAL_TYPE = hasSymbol
              ? Symbol["for"]("react.portal")
              : 0xeaca;
            var REACT_FRAGMENT_TYPE = hasSymbol
              ? Symbol["for"]("react.fragment")
              : 0xeacb;

            var MAYBE_ITERATOR_SYMBOL =
              typeof Symbol === "function" && Symbol.iterator;
            var FAUX_ITERATOR_SYMBOL = "@@iterator";

            function getIteratorFn(maybeIterable) {
              if (
                maybeIterable === null ||
                typeof maybeIterable === "undefined"
              ) {
                return null;
              }
              var maybeIterator =
                (MAYBE_ITERATOR_SYMBOL &&
                  maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL];
              if (typeof maybeIterator === "function") {
                return maybeIterator;
              }
              return null;
            }

            /**
             * WARNING: DO NOT manually require this module.
             * This is a replacement for `invariant(...)` used by the error code system
             * and will _only_ be required by the corresponding babel pass.
             * It always throws.
             */

            /**
             * Forked from fbjs/warning:
             * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
             *
             * Only change is we use console.warn instead of console.error,
             * and do nothing when 'console' is not supported.
             * This really simplifies the code.
             * ---
             * Similar to invariant but only logs a warning if the condition is not met.
             * This can be used to log issues in development environments in critical
             * paths. Removing the logging code for production environments will keep the
             * same logic and follow the same code paths.
             */

            var lowPriorityWarning = function() {};

            {
              var printWarning = function(format) {
                for (
                  var _len = arguments.length,
                    args = Array(_len > 1 ? _len - 1 : 0),
                    _key = 1;
                  _key < _len;
                  _key++
                ) {
                  args[_key - 1] = arguments[_key];
                }

                var argIndex = 0;
                var message =
                  "Warning: " +
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                if (typeof console !== "undefined") {
                  console.warn(message);
                }
                try {
                  // --- Welcome to debugging React ---
                  // This error was thrown as a convenience so that you can use this stack
                  // to find the callsite that caused this warning to fire.
                  throw new Error(message);
                } catch (x) {}
              };

              lowPriorityWarning = function(condition, format) {
                if (format === undefined) {
                  throw new Error(
                    "`warning(condition, format, ...args)` requires a warning " +
                      "message argument"
                  );
                }
                if (!condition) {
                  for (
                    var _len2 = arguments.length,
                      args = Array(_len2 > 2 ? _len2 - 2 : 0),
                      _key2 = 2;
                    _key2 < _len2;
                    _key2++
                  ) {
                    args[_key2 - 2] = arguments[_key2];
                  }

                  printWarning.apply(undefined, [format].concat(args));
                }
              };
            }

            var lowPriorityWarning$1 = lowPriorityWarning;

            var didWarnStateUpdateForUnmountedComponent = {};

            function warnNoop(publicInstance, callerName) {
              {
                var constructor = publicInstance.constructor;
                var componentName =
                  (constructor &&
                    (constructor.displayName || constructor.name)) ||
                  "ReactClass";
                var warningKey = componentName + "." + callerName;
                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                  return;
                }
                warning(
                  false,
                  "%s(...): Can only update a mounted or mounting component. " +
                    "This usually means you called %s() on an unmounted component. " +
                    "This is a no-op.\n\nPlease check the code for the %s component.",
                  callerName,
                  callerName,
                  componentName
                );
                didWarnStateUpdateForUnmountedComponent[warningKey] = true;
              }
            }

            /**
             * This is the abstract API for an update queue.
             */
            var ReactNoopUpdateQueue = {
              /**
               * Checks whether or not this composite component is mounted.
               * @param {ReactClass} publicInstance The instance we want to test.
               * @return {boolean} True if mounted, false otherwise.
               * @protected
               * @final
               */
              isMounted: function(publicInstance) {
                return false;
              },

              /**
               * Forces an update. This should only be invoked when it is known with
               * certainty that we are **not** in a DOM transaction.
               *
               * You may want to call this when you know that some deeper aspect of the
               * component's state has changed but `setState` was not called.
               *
               * This will not invoke `shouldComponentUpdate`, but it will invoke
               * `componentWillUpdate` and `componentDidUpdate`.
               *
               * @param {ReactClass} publicInstance The instance that should rerender.
               * @param {?function} callback Called after component is updated.
               * @param {?string} callerName name of the calling function in the public API.
               * @internal
               */
              enqueueForceUpdate: function(
                publicInstance,
                callback,
                callerName
              ) {
                warnNoop(publicInstance, "forceUpdate");
              },

              /**
               * Replaces all of the state. Always use this or `setState` to mutate state.
               * You should treat `this.state` as immutable.
               *
               * There is no guarantee that `this.state` will be immediately updated, so
               * accessing `this.state` after calling this method may return the old value.
               *
               * @param {ReactClass} publicInstance The instance that should rerender.
               * @param {object} completeState Next state.
               * @param {?function} callback Called after component is updated.
               * @param {?string} callerName name of the calling function in the public API.
               * @internal
               */
              enqueueReplaceState: function(
                publicInstance,
                completeState,
                callback,
                callerName
              ) {
                warnNoop(publicInstance, "replaceState");
              },

              /**
               * Sets a subset of the state. This only exists because _pendingState is
               * internal. This provides a merging strategy that is not available to deep
               * properties which is confusing. TODO: Expose pendingState or don't use it
               * during the merge.
               *
               * @param {ReactClass} publicInstance The instance that should rerender.
               * @param {object} partialState Next partial state to be merged with state.
               * @param {?function} callback Called after component is updated.
               * @param {?string} Name of the calling function in the public API.
               * @internal
               */
              enqueueSetState: function(
                publicInstance,
                partialState,
                callback,
                callerName
              ) {
                warnNoop(publicInstance, "setState");
              }
            };

            /**
             * Base class helpers for the updating state of a component.
             */
            function Component(props, context, updater) {
              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              // We initialize the default updater but the real one gets injected by the
              // renderer.
              this.updater = updater || ReactNoopUpdateQueue;
            }

            Component.prototype.isReactComponent = {};

            /**
             * Sets a subset of the state. Always use this to mutate
             * state. You should treat `this.state` as immutable.
             *
             * There is no guarantee that `this.state` will be immediately updated, so
             * accessing `this.state` after calling this method may return the old value.
             *
             * There is no guarantee that calls to `setState` will run synchronously,
             * as they may eventually be batched together.  You can provide an optional
             * callback that will be executed when the call to setState is actually
             * completed.
             *
             * When a function is provided to setState, it will be called at some point in
             * the future (not synchronously). It will be called with the up to date
             * component arguments (state, props, context). These values can be different
             * from this.* because your function may be called after receiveProps but before
             * shouldComponentUpdate, and this new state, props, and context will not yet be
             * assigned to this.
             *
             * @param {object|function} partialState Next partial state or function to
             *        produce next partial state to be merged with current state.
             * @param {?function} callback Called after state is updated.
             * @final
             * @protected
             */
            Component.prototype.setState = function(partialState, callback) {
              !(
                typeof partialState === "object" ||
                typeof partialState === "function" ||
                partialState == null
              )
                ? invariant(
                    false,
                    "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
                  )
                : void 0;
              this.updater.enqueueSetState(
                this,
                partialState,
                callback,
                "setState"
              );
            };

            /**
             * Forces an update. This should only be invoked when it is known with
             * certainty that we are **not** in a DOM transaction.
             *
             * You may want to call this when you know that some deeper aspect of the
             * component's state has changed but `setState` was not called.
             *
             * This will not invoke `shouldComponentUpdate`, but it will invoke
             * `componentWillUpdate` and `componentDidUpdate`.
             *
             * @param {?function} callback Called after update is complete.
             * @final
             * @protected
             */
            Component.prototype.forceUpdate = function(callback) {
              this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
            };

            /**
             * Deprecated APIs. These APIs used to exist on classic React classes but since
             * we would like to deprecate them, we're not going to move them over to this
             * modern base class. Instead, we define a getter that warns if it's accessed.
             */
            {
              var deprecatedAPIs = {
                isMounted: [
                  "isMounted",
                  "Instead, make sure to clean up subscriptions and pending requests in " +
                    "componentWillUnmount to prevent memory leaks."
                ],
                replaceState: [
                  "replaceState",
                  "Refactor your code to use setState instead (see " +
                    "https://github.com/facebook/react/issues/3236)."
                ]
              };
              var defineDeprecationWarning = function(methodName, info) {
                Object.defineProperty(Component.prototype, methodName, {
                  get: function() {
                    lowPriorityWarning$1(
                      false,
                      "%s(...) is deprecated in plain JavaScript React classes. %s",
                      info[0],
                      info[1]
                    );
                    return undefined;
                  }
                });
              };
              for (var fnName in deprecatedAPIs) {
                if (deprecatedAPIs.hasOwnProperty(fnName)) {
                  defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
                }
              }
            }

            /**
             * Base class helpers for the updating state of a component.
             */
            function PureComponent(props, context, updater) {
              // Duplicated from Component.
              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              // We initialize the default updater but the real one gets injected by the
              // renderer.
              this.updater = updater || ReactNoopUpdateQueue;
            }

            function ComponentDummy() {}
            ComponentDummy.prototype = Component.prototype;
            var pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());
            pureComponentPrototype.constructor = PureComponent;
            // Avoid an extra prototype jump for these methods.
            _assign(pureComponentPrototype, Component.prototype);
            pureComponentPrototype.isPureReactComponent = true;

            function AsyncComponent(props, context, updater) {
              // Duplicated from Component.
              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              // We initialize the default updater but the real one gets injected by the
              // renderer.
              this.updater = updater || ReactNoopUpdateQueue;
            }

            var asyncComponentPrototype = (AsyncComponent.prototype = new ComponentDummy());
            asyncComponentPrototype.constructor = AsyncComponent;
            // Avoid an extra prototype jump for these methods.
            _assign(asyncComponentPrototype, Component.prototype);
            asyncComponentPrototype.unstable_isAsyncReactComponent = true;
            asyncComponentPrototype.render = function() {
              return this.props.children;
            };

            /**
             * Keeps track of the current owner.
             *
             * The current owner is the component who should own any components that are
             * currently being constructed.
             */
            var ReactCurrentOwner = {
              /**
               * @internal
               * @type {ReactComponent}
               */
              current: null
            };

            var hasOwnProperty = Object.prototype.hasOwnProperty;

            var RESERVED_PROPS = {
              key: true,
              ref: true,
              __self: true,
              __source: true
            };

            var specialPropKeyWarningShown;
            var specialPropRefWarningShown;

            function hasValidRef(config) {
              {
                if (hasOwnProperty.call(config, "ref")) {
                  var getter = Object.getOwnPropertyDescriptor(config, "ref")
                    .get;
                  if (getter && getter.isReactWarning) {
                    return false;
                  }
                }
              }
              return config.ref !== undefined;
            }

            function hasValidKey(config) {
              {
                if (hasOwnProperty.call(config, "key")) {
                  var getter = Object.getOwnPropertyDescriptor(config, "key")
                    .get;
                  if (getter && getter.isReactWarning) {
                    return false;
                  }
                }
              }
              return config.key !== undefined;
            }

            function defineKeyPropWarningGetter(props, displayName) {
              var warnAboutAccessingKey = function() {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  warning(
                    false,
                    "%s: `key` is not a prop. Trying to access it will result " +
                      "in `undefined` being returned. If you need to access the same " +
                      "value within the child component, you should pass it as a different " +
                      "prop. (https://fb.me/react-special-props)",
                    displayName
                  );
                }
              };
              warnAboutAccessingKey.isReactWarning = true;
              Object.defineProperty(props, "key", {
                get: warnAboutAccessingKey,
                configurable: true
              });
            }

            function defineRefPropWarningGetter(props, displayName) {
              var warnAboutAccessingRef = function() {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  warning(
                    false,
                    "%s: `ref` is not a prop. Trying to access it will result " +
                      "in `undefined` being returned. If you need to access the same " +
                      "value within the child component, you should pass it as a different " +
                      "prop. (https://fb.me/react-special-props)",
                    displayName
                  );
                }
              };
              warnAboutAccessingRef.isReactWarning = true;
              Object.defineProperty(props, "ref", {
                get: warnAboutAccessingRef,
                configurable: true
              });
            }

            /**
             * Factory method to create a new React element. This no longer adheres to
             * the class pattern, so do not use new to call it. Also, no instanceof check
             * will work. Instead test $$typeof field against Symbol.for('react.element') to check
             * if something is a React Element.
             *
             * @param {*} type
             * @param {*} key
             * @param {string|object} ref
             * @param {*} self A *temporary* helper to detect places where `this` is
             * different from the `owner` when React.createElement is called, so that we
             * can warn. We want to get rid of owner and replace string `ref`s with arrow
             * functions, and as long as `this` and owner are the same, there will be no
             * change in behavior.
             * @param {*} source An annotation object (added by a transpiler or otherwise)
             * indicating filename, line number, and/or other information.
             * @param {*} owner
             * @param {*} props
             * @internal
             */
            var ReactElement = function(
              type,
              key,
              ref,
              self,
              source,
              owner,
              props
            ) {
              var element = {
                // This tag allow us to uniquely identify this as a React Element
                $$typeof: REACT_ELEMENT_TYPE,

                // Built-in properties that belong on the element
                type: type,
                key: key,
                ref: ref,
                props: props,

                // Record the component responsible for creating this element.
                _owner: owner
              };

              {
                // The validation flag is currently mutative. We put it on
                // an external backing store so that we can freeze the whole object.
                // This can be replaced with a WeakMap once they are implemented in
                // commonly used development environments.
                element._store = {};

                // To make comparing ReactElements easier for testing purposes, we make
                // the validation flag non-enumerable (where possible, which should
                // include every environment we run tests in), so the test framework
                // ignores it.
                Object.defineProperty(element._store, "validated", {
                  configurable: false,
                  enumerable: false,
                  writable: true,
                  value: false
                });
                // self and source are DEV only properties.
                Object.defineProperty(element, "_self", {
                  configurable: false,
                  enumerable: false,
                  writable: false,
                  value: self
                });
                // Two elements created in two different places should be considered
                // equal for testing purposes and therefore we hide it from enumeration.
                Object.defineProperty(element, "_source", {
                  configurable: false,
                  enumerable: false,
                  writable: false,
                  value: source
                });
                if (Object.freeze) {
                  Object.freeze(element.props);
                  Object.freeze(element);
                }
              }

              return element;
            };

            /**
             * Create and return a new ReactElement of the given type.
             * See https://reactjs.org/docs/react-api.html#createelement
             */
            function createElement(type, config, children) {
              var propName;

              // Reserved names are extracted
              var props = {};

              var key = null;
              var ref = null;
              var self = null;
              var source = null;

              if (config != null) {
                if (hasValidRef(config)) {
                  ref = config.ref;
                }
                if (hasValidKey(config)) {
                  key = "" + config.key;
                }

                self = config.__self === undefined ? null : config.__self;
                source = config.__source === undefined ? null : config.__source;
                // Remaining properties are added to a new props object
                for (propName in config) {
                  if (
                    hasOwnProperty.call(config, propName) &&
                    !RESERVED_PROPS.hasOwnProperty(propName)
                  ) {
                    props[propName] = config[propName];
                  }
                }
              }

              // Children can be more than one argument, and those are transferred onto
              // the newly allocated props object.
              var childrenLength = arguments.length - 2;
              if (childrenLength === 1) {
                props.children = children;
              } else if (childrenLength > 1) {
                var childArray = Array(childrenLength);
                for (var i = 0; i < childrenLength; i++) {
                  childArray[i] = arguments[i + 2];
                }
                {
                  if (Object.freeze) {
                    Object.freeze(childArray);
                  }
                }
                props.children = childArray;
              }

              // Resolve default props
              if (type && type.defaultProps) {
                var defaultProps = type.defaultProps;
                for (propName in defaultProps) {
                  if (props[propName] === undefined) {
                    props[propName] = defaultProps[propName];
                  }
                }
              }
              {
                if (key || ref) {
                  if (
                    typeof props.$$typeof === "undefined" ||
                    props.$$typeof !== REACT_ELEMENT_TYPE
                  ) {
                    var displayName =
                      typeof type === "function"
                        ? type.displayName || type.name || "Unknown"
                        : type;
                    if (key) {
                      defineKeyPropWarningGetter(props, displayName);
                    }
                    if (ref) {
                      defineRefPropWarningGetter(props, displayName);
                    }
                  }
                }
              }
              return ReactElement(
                type,
                key,
                ref,
                self,
                source,
                ReactCurrentOwner.current,
                props
              );
            }

            /**
             * Return a function that produces ReactElements of a given type.
             * See https://reactjs.org/docs/react-api.html#createfactory
             */

            function cloneAndReplaceKey(oldElement, newKey) {
              var newElement = ReactElement(
                oldElement.type,
                newKey,
                oldElement.ref,
                oldElement._self,
                oldElement._source,
                oldElement._owner,
                oldElement.props
              );

              return newElement;
            }

            /**
             * Clone and return a new ReactElement using element as the starting point.
             * See https://reactjs.org/docs/react-api.html#cloneelement
             */
            function cloneElement(element, config, children) {
              var propName;

              // Original props are copied
              var props = _assign({}, element.props);

              // Reserved names are extracted
              var key = element.key;
              var ref = element.ref;
              // Self is preserved since the owner is preserved.
              var self = element._self;
              // Source is preserved since cloneElement is unlikely to be targeted by a
              // transpiler, and the original source is probably a better indicator of the
              // true owner.
              var source = element._source;

              // Owner will be preserved, unless ref is overridden
              var owner = element._owner;

              if (config != null) {
                if (hasValidRef(config)) {
                  // Silently steal the ref from the parent.
                  ref = config.ref;
                  owner = ReactCurrentOwner.current;
                }
                if (hasValidKey(config)) {
                  key = "" + config.key;
                }

                // Remaining properties override existing props
                var defaultProps;
                if (element.type && element.type.defaultProps) {
                  defaultProps = element.type.defaultProps;
                }
                for (propName in config) {
                  if (
                    hasOwnProperty.call(config, propName) &&
                    !RESERVED_PROPS.hasOwnProperty(propName)
                  ) {
                    if (
                      config[propName] === undefined &&
                      defaultProps !== undefined
                    ) {
                      // Resolve default props
                      props[propName] = defaultProps[propName];
                    } else {
                      props[propName] = config[propName];
                    }
                  }
                }
              }

              // Children can be more than one argument, and those are transferred onto
              // the newly allocated props object.
              var childrenLength = arguments.length - 2;
              if (childrenLength === 1) {
                props.children = children;
              } else if (childrenLength > 1) {
                var childArray = Array(childrenLength);
                for (var i = 0; i < childrenLength; i++) {
                  childArray[i] = arguments[i + 2];
                }
                props.children = childArray;
              }

              return ReactElement(
                element.type,
                key,
                ref,
                self,
                source,
                owner,
                props
              );
            }

            /**
             * Verifies the object is a ReactElement.
             * See https://reactjs.org/docs/react-api.html#isvalidelement
             * @param {?object} object
             * @return {boolean} True if `object` is a valid component.
             * @final
             */
            function isValidElement(object) {
              return (
                typeof object === "object" &&
                object !== null &&
                object.$$typeof === REACT_ELEMENT_TYPE
              );
            }

            var ReactDebugCurrentFrame = {};

            {
              // Component that is being worked on
              ReactDebugCurrentFrame.getCurrentStack = null;

              ReactDebugCurrentFrame.getStackAddendum = function() {
                var impl = ReactDebugCurrentFrame.getCurrentStack;
                if (impl) {
                  return impl();
                }
                return null;
              };
            }

            var SEPARATOR = ".";
            var SUBSEPARATOR = ":";

            /**
             * Escape and wrap key so it is safe to use as a reactid
             *
             * @param {string} key to be escaped.
             * @return {string} the escaped key.
             */
            function escape(key) {
              var escapeRegex = /[=:]/g;
              var escaperLookup = {
                "=": "=0",
                ":": "=2"
              };
              var escapedString = ("" + key).replace(escapeRegex, function(
                match
              ) {
                return escaperLookup[match];
              });

              return "$" + escapedString;
            }

            /**
             * TODO: Test that a single child and an array with one item have the same key
             * pattern.
             */

            var didWarnAboutMaps = false;

            var userProvidedKeyEscapeRegex = /\/+/g;
            function escapeUserProvidedKey(text) {
              return ("" + text).replace(userProvidedKeyEscapeRegex, "$&/");
            }

            var POOL_SIZE = 10;
            var traverseContextPool = [];
            function getPooledTraverseContext(
              mapResult,
              keyPrefix,
              mapFunction,
              mapContext
            ) {
              if (traverseContextPool.length) {
                var traverseContext = traverseContextPool.pop();
                traverseContext.result = mapResult;
                traverseContext.keyPrefix = keyPrefix;
                traverseContext.func = mapFunction;
                traverseContext.context = mapContext;
                traverseContext.count = 0;
                return traverseContext;
              } else {
                return {
                  result: mapResult,
                  keyPrefix: keyPrefix,
                  func: mapFunction,
                  context: mapContext,
                  count: 0
                };
              }
            }

            function releaseTraverseContext(traverseContext) {
              traverseContext.result = null;
              traverseContext.keyPrefix = null;
              traverseContext.func = null;
              traverseContext.context = null;
              traverseContext.count = 0;
              if (traverseContextPool.length < POOL_SIZE) {
                traverseContextPool.push(traverseContext);
              }
            }

            /**
             * @param {?*} children Children tree container.
             * @param {!string} nameSoFar Name of the key path so far.
             * @param {!function} callback Callback to invoke with each child found.
             * @param {?*} traverseContext Used to pass information throughout the traversal
             * process.
             * @return {!number} The number of children in this subtree.
             */
            function traverseAllChildrenImpl(
              children,
              nameSoFar,
              callback,
              traverseContext
            ) {
              var type = typeof children;

              if (type === "undefined" || type === "boolean") {
                // All of the above are perceived as null.
                children = null;
              }

              var invokeCallback = false;

              if (children === null) {
                invokeCallback = true;
              } else {
                switch (type) {
                  case "string":
                  case "number":
                    invokeCallback = true;
                    break;
                  case "object":
                    switch (children.$$typeof) {
                      case REACT_ELEMENT_TYPE:
                      case REACT_CALL_TYPE:
                      case REACT_RETURN_TYPE:
                      case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                    }
                }
              }

              if (invokeCallback) {
                callback(
                  traverseContext,
                  children,
                  // If it's the only child, treat the name as if it was wrapped in an array
                  // so that it's consistent if the number of children grows.
                  nameSoFar === ""
                    ? SEPARATOR + getComponentKey(children, 0)
                    : nameSoFar
                );
                return 1;
              }

              var child;
              var nextName;
              var subtreeCount = 0; // Count of children found in the current subtree.
              var nextNamePrefix =
                nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;

              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  child = children[i];
                  nextName = nextNamePrefix + getComponentKey(child, i);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext
                  );
                }
              } else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                  {
                    // Warn about using Maps as children
                    if (iteratorFn === children.entries) {
                      warning(
                        didWarnAboutMaps,
                        "Using Maps as children is unsupported and will likely yield " +
                          "unexpected results. Convert it to a sequence/iterable of keyed " +
                          "ReactElements instead.%s",
                        ReactDebugCurrentFrame.getStackAddendum()
                      );
                      didWarnAboutMaps = true;
                    }
                  }

                  var iterator = iteratorFn.call(children);
                  var step;
                  var ii = 0;
                  while (!(step = iterator.next()).done) {
                    child = step.value;
                    nextName = nextNamePrefix + getComponentKey(child, ii++);
                    subtreeCount += traverseAllChildrenImpl(
                      child,
                      nextName,
                      callback,
                      traverseContext
                    );
                  }
                } else if (type === "object") {
                  var addendum = "";
                  {
                    addendum =
                      " If you meant to render a collection of children, use an array " +
                      "instead." +
                      ReactDebugCurrentFrame.getStackAddendum();
                  }
                  var childrenString = "" + children;
                  invariant(
                    false,
                    "Objects are not valid as a React child (found: %s).%s",
                    childrenString === "[object Object]"
                      ? "object with keys {" +
                        Object.keys(children).join(", ") +
                        "}"
                      : childrenString,
                    addendum
                  );
                }
              }

              return subtreeCount;
            }

            /**
             * Traverses children that are typically specified as `props.children`, but
             * might also be specified through attributes:
             *
             * - `traverseAllChildren(this.props.children, ...)`
             * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
             *
             * The `traverseContext` is an optional argument that is passed through the
             * entire traversal. It can be used to store accumulations or anything else that
             * the callback might find relevant.
             *
             * @param {?*} children Children tree object.
             * @param {!function} callback To invoke upon traversing each child.
             * @param {?*} traverseContext Context for traversal.
             * @return {!number} The number of children in this subtree.
             */
            function traverseAllChildren(children, callback, traverseContext) {
              if (children == null) {
                return 0;
              }

              return traverseAllChildrenImpl(
                children,
                "",
                callback,
                traverseContext
              );
            }

            /**
             * Generate a key string that identifies a component within a set.
             *
             * @param {*} component A component that could contain a manual key.
             * @param {number} index Index that is used if a manual key is not provided.
             * @return {string}
             */
            function getComponentKey(component, index) {
              // Do some typechecking here since we call this blindly. We want to ensure
              // that we don't block potential future ES APIs.
              if (
                typeof component === "object" &&
                component !== null &&
                component.key != null
              ) {
                // Explicit key
                return escape(component.key);
              }
              // Implicit key determined by the index in the set
              return index.toString(36);
            }

            function forEachSingleChild(bookKeeping, child, name) {
              var func = bookKeeping.func,
                context = bookKeeping.context;

              func.call(context, child, bookKeeping.count++);
            }

            /**
             * Iterates through children that are typically specified as `props.children`.
             *
             * See https://reactjs.org/docs/react-api.html#react.children.foreach
             *
             * The provided forEachFunc(child, index) will be called for each
             * leaf child.
             *
             * @param {?*} children Children tree container.
             * @param {function(*, int)} forEachFunc
             * @param {*} forEachContext Context for forEachContext.
             */
            function forEachChildren(children, forEachFunc, forEachContext) {
              if (children == null) {
                return children;
              }
              var traverseContext = getPooledTraverseContext(
                null,
                null,
                forEachFunc,
                forEachContext
              );
              traverseAllChildren(
                children,
                forEachSingleChild,
                traverseContext
              );
              releaseTraverseContext(traverseContext);
            }

            function mapSingleChildIntoContext(bookKeeping, child, childKey) {
              var result = bookKeeping.result,
                keyPrefix = bookKeeping.keyPrefix,
                func = bookKeeping.func,
                context = bookKeeping.context;

              var mappedChild = func.call(context, child, bookKeeping.count++);
              if (Array.isArray(mappedChild)) {
                mapIntoWithKeyPrefixInternal(
                  mappedChild,
                  result,
                  childKey,
                  emptyFunction.thatReturnsArgument
                );
              } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                  mappedChild = cloneAndReplaceKey(
                    mappedChild,
                    // Keep both the (mapped) and old keys if they differ, just as
                    // traverseAllChildren used to do for objects as children
                    keyPrefix +
                      (mappedChild.key &&
                      (!child || child.key !== mappedChild.key)
                        ? escapeUserProvidedKey(mappedChild.key) + "/"
                        : "") +
                      childKey
                  );
                }
                result.push(mappedChild);
              }
            }

            function mapIntoWithKeyPrefixInternal(
              children,
              array,
              prefix,
              func,
              context
            ) {
              var escapedPrefix = "";
              if (prefix != null) {
                escapedPrefix = escapeUserProvidedKey(prefix) + "/";
              }
              var traverseContext = getPooledTraverseContext(
                array,
                escapedPrefix,
                func,
                context
              );
              traverseAllChildren(
                children,
                mapSingleChildIntoContext,
                traverseContext
              );
              releaseTraverseContext(traverseContext);
            }

            /**
             * Maps children that are typically specified as `props.children`.
             *
             * See https://reactjs.org/docs/react-api.html#react.children.map
             *
             * The provided mapFunction(child, key, index) will be called for each
             * leaf child.
             *
             * @param {?*} children Children tree container.
             * @param {function(*, int)} func The map function.
             * @param {*} context Context for mapFunction.
             * @return {object} Object containing the ordered map of results.
             */
            function mapChildren(children, func, context) {
              if (children == null) {
                return children;
              }
              var result = [];
              mapIntoWithKeyPrefixInternal(
                children,
                result,
                null,
                func,
                context
              );
              return result;
            }

            /**
             * Count the number of children that are typically specified as
             * `props.children`.
             *
             * See https://reactjs.org/docs/react-api.html#react.children.count
             *
             * @param {?*} children Children tree container.
             * @return {number} The number of children.
             */
            function countChildren(children, context) {
              return traverseAllChildren(
                children,
                emptyFunction.thatReturnsNull,
                null
              );
            }

            /**
             * Flatten a children object (typically specified as `props.children`) and
             * return an array with appropriately re-keyed children.
             *
             * See https://reactjs.org/docs/react-api.html#react.children.toarray
             */
            function toArray(children) {
              var result = [];
              mapIntoWithKeyPrefixInternal(
                children,
                result,
                null,
                emptyFunction.thatReturnsArgument
              );
              return result;
            }

            /**
             * Returns the first child in a collection of children and verifies that there
             * is only one child in the collection.
             *
             * See https://reactjs.org/docs/react-api.html#react.children.only
             *
             * The current implementation of this function assumes that a single child gets
             * passed without a wrapper, but the purpose of this helper function is to
             * abstract away the particular structure of children.
             *
             * @param {?object} children Child collection structure.
             * @return {ReactElement} The first and only `ReactElement` contained in the
             * structure.
             */
            function onlyChild(children) {
              !isValidElement(children)
                ? invariant(
                    false,
                    "React.Children.only expected to receive a single React element child."
                  )
                : void 0;
              return children;
            }

            var describeComponentFrame = function(name, source, ownerName) {
              return (
                "\n    in " +
                (name || "Unknown") +
                (source
                  ? " (at " +
                    source.fileName.replace(/^.*[\\\/]/, "") +
                    ":" +
                    source.lineNumber +
                    ")"
                  : ownerName ? " (created by " + ownerName + ")" : "")
              );
            };

            function getComponentName(fiber) {
              var type = fiber.type;

              if (typeof type === "string") {
                return type;
              }
              if (typeof type === "function") {
                return type.displayName || type.name;
              }
              return null;
            }

            /**
             * ReactElementValidator provides a wrapper around a element factory
             * which validates the props passed to the element. This is intended to be
             * used only in DEV and could be replaced by a static type checker for languages
             * that support it.
             */

            {
              var currentlyValidatingElement = null;

              var propTypesMisspellWarningShown = false;

              var getDisplayName = function(element) {
                if (element == null) {
                  return "#empty";
                } else if (
                  typeof element === "string" ||
                  typeof element === "number"
                ) {
                  return "#text";
                } else if (typeof element.type === "string") {
                  return element.type;
                } else if (element.type === REACT_FRAGMENT_TYPE) {
                  return "React.Fragment";
                } else {
                  return (
                    element.type.displayName || element.type.name || "Unknown"
                  );
                }
              };

              var getStackAddendum = function() {
                var stack = "";
                if (currentlyValidatingElement) {
                  var name = getDisplayName(currentlyValidatingElement);
                  var owner = currentlyValidatingElement._owner;
                  stack += describeComponentFrame(
                    name,
                    currentlyValidatingElement._source,
                    owner && getComponentName(owner)
                  );
                }
                stack += ReactDebugCurrentFrame.getStackAddendum() || "";
                return stack;
              };

              var VALID_FRAGMENT_PROPS = new Map([
                ["children", true],
                ["key", true]
              ]);
            }

            function getDeclarationErrorAddendum() {
              if (ReactCurrentOwner.current) {
                var name = getComponentName(ReactCurrentOwner.current);
                if (name) {
                  return "\n\nCheck the render method of `" + name + "`.";
                }
              }
              return "";
            }

            function getSourceInfoErrorAddendum(elementProps) {
              if (
                elementProps !== null &&
                elementProps !== undefined &&
                elementProps.__source !== undefined
              ) {
                var source = elementProps.__source;
                var fileName = source.fileName.replace(/^.*[\\\/]/, "");
                var lineNumber = source.lineNumber;
                return (
                  "\n\nCheck your code at " + fileName + ":" + lineNumber + "."
                );
              }
              return "";
            }

            /**
             * Warn if there's no key explicitly set on dynamic arrays of children or
             * object keys are not valid. This allows us to keep track of children between
             * updates.
             */
            var ownerHasKeyUseWarning = {};

            function getCurrentComponentErrorInfo(parentType) {
              var info = getDeclarationErrorAddendum();

              if (!info) {
                var parentName =
                  typeof parentType === "string"
                    ? parentType
                    : parentType.displayName || parentType.name;
                if (parentName) {
                  info =
                    "\n\nCheck the top-level render call using <" +
                    parentName +
                    ">.";
                }
              }
              return info;
            }

            /**
             * Warn if the element doesn't have an explicit key assigned to it.
             * This element is in an array. The array could grow and shrink or be
             * reordered. All children that haven't already been validated are required to
             * have a "key" property assigned to it. Error statuses are cached so a warning
             * will only be shown once.
             *
             * @internal
             * @param {ReactElement} element Element that requires a key.
             * @param {*} parentType element's parent's type.
             */
            function validateExplicitKey(element, parentType) {
              if (
                !element._store ||
                element._store.validated ||
                element.key != null
              ) {
                return;
              }
              element._store.validated = true;

              var currentComponentErrorInfo = getCurrentComponentErrorInfo(
                parentType
              );
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

              // Usually the current owner is the offender, but if it accepts children as a
              // property, it may be the creator of the child that's responsible for
              // assigning it a key.
              var childOwner = "";
              if (
                element &&
                element._owner &&
                element._owner !== ReactCurrentOwner.current
              ) {
                // Give the component that originally created this child.
                childOwner =
                  " It was passed a child from " +
                  getComponentName(element._owner) +
                  ".";
              }

              currentlyValidatingElement = element;
              {
                warning(
                  false,
                  'Each child in an array or iterator should have a unique "key" prop.' +
                    "%s%s See https://fb.me/react-warning-keys for more information.%s",
                  currentComponentErrorInfo,
                  childOwner,
                  getStackAddendum()
                );
              }
              currentlyValidatingElement = null;
            }

            /**
             * Ensure that every element either is passed in a static location, in an
             * array with an explicit keys property defined, or in an object literal
             * with valid key property.
             *
             * @internal
             * @param {ReactNode} node Statically passed child of any type.
             * @param {*} parentType node's parent's type.
             */
            function validateChildKeys(node, parentType) {
              if (typeof node !== "object") {
                return;
              }
              if (Array.isArray(node)) {
                for (var i = 0; i < node.length; i++) {
                  var child = node[i];
                  if (isValidElement(child)) {
                    validateExplicitKey(child, parentType);
                  }
                }
              } else if (isValidElement(node)) {
                // This element was passed in a valid location.
                if (node._store) {
                  node._store.validated = true;
                }
              } else if (node) {
                var iteratorFn = getIteratorFn(node);
                if (typeof iteratorFn === "function") {
                  // Entry iterators used to provide implicit keys,
                  // but now we print a separate warning for them later.
                  if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while (!(step = iterator.next()).done) {
                      if (isValidElement(step.value)) {
                        validateExplicitKey(step.value, parentType);
                      }
                    }
                  }
                }
              }
            }

            /**
             * Given an element, validate that its props follow the propTypes definition,
             * provided by the type.
             *
             * @param {ReactElement} element
             */
            function validatePropTypes(element) {
              var componentClass = element.type;
              if (typeof componentClass !== "function") {
                return;
              }
              var name = componentClass.displayName || componentClass.name;
              var propTypes = componentClass.propTypes;
              if (propTypes) {
                currentlyValidatingElement = element;
                checkPropTypes(
                  propTypes,
                  element.props,
                  "prop",
                  name,
                  getStackAddendum
                );
                currentlyValidatingElement = null;
              } else if (
                componentClass.PropTypes !== undefined &&
                !propTypesMisspellWarningShown
              ) {
                propTypesMisspellWarningShown = true;
                warning(
                  false,
                  "Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",
                  name || "Unknown"
                );
              }
              if (typeof componentClass.getDefaultProps === "function") {
                warning(
                  componentClass.getDefaultProps.isReactClassApproved,
                  "getDefaultProps is only used on classic React.createClass " +
                    "definitions. Use a static property named `defaultProps` instead."
                );
              }
            }

            /**
             * Given a fragment, validate that it can only be provided with fragment props
             * @param {ReactElement} fragment
             */
            function validateFragmentProps(fragment) {
              currentlyValidatingElement = fragment;

              var _iteratorNormalCompletion = true;
              var _didIteratorError = false;
              var _iteratorError = undefined;

              try {
                for (
                  var _iterator = Object.keys(fragment.props)[
                      Symbol.iterator
                    ](),
                    _step;
                  !(_iteratorNormalCompletion = (_step = _iterator.next())
                    .done);
                  _iteratorNormalCompletion = true
                ) {
                  var key = _step.value;

                  if (!VALID_FRAGMENT_PROPS.has(key)) {
                    warning(
                      false,
                      "Invalid prop `%s` supplied to `React.Fragment`. " +
                        "React.Fragment can only have `key` and `children` props.%s",
                      key,
                      getStackAddendum()
                    );
                    break;
                  }
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator["return"]) {
                    _iterator["return"]();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }

              if (fragment.ref !== null) {
                warning(
                  false,
                  "Invalid attribute `ref` supplied to `React.Fragment`.%s",
                  getStackAddendum()
                );
              }

              currentlyValidatingElement = null;
            }

            function createElementWithValidation(type, props, children) {
              var validType =
                typeof type === "string" ||
                typeof type === "function" ||
                typeof type === "symbol" ||
                typeof type === "number";
              // We warn in this case but don't throw. We expect the element creation to
              // succeed and there will likely be errors in render.
              if (!validType) {
                var info = "";
                if (
                  type === undefined ||
                  (typeof type === "object" &&
                    type !== null &&
                    Object.keys(type).length === 0)
                ) {
                  info +=
                    " You likely forgot to export your component from the file " +
                    "it's defined in, or you might have mixed up default and named imports.";
                }

                var sourceInfo = getSourceInfoErrorAddendum(props);
                if (sourceInfo) {
                  info += sourceInfo;
                } else {
                  info += getDeclarationErrorAddendum();
                }

                info += getStackAddendum() || "";

                warning(
                  false,
                  "React.createElement: type is invalid -- expected a string (for " +
                    "built-in components) or a class/function (for composite " +
                    "components) but got: %s.%s",
                  type == null ? type : typeof type,
                  info
                );
              }

              var element = createElement.apply(this, arguments);

              // The result can be nullish if a mock or a custom function is used.
              // TODO: Drop this when these are no longer allowed as the type argument.
              if (element == null) {
                return element;
              }

              // Skip key warning if the type isn't valid since our key validation logic
              // doesn't expect a non-string/function type and can throw confusing errors.
              // We don't want exception behavior to differ between dev and prod.
              // (Rendering will throw with a helpful message and as soon as the type is
              // fixed, the key warnings will appear.)
              if (validType) {
                for (var i = 2; i < arguments.length; i++) {
                  validateChildKeys(arguments[i], type);
                }
              }

              if (typeof type === "symbol" && type === REACT_FRAGMENT_TYPE) {
                validateFragmentProps(element);
              } else {
                validatePropTypes(element);
              }

              return element;
            }

            function createFactoryWithValidation(type) {
              var validatedFactory = createElementWithValidation.bind(
                null,
                type
              );
              // Legacy hook TODO: Warn if this is accessed
              validatedFactory.type = type;

              {
                Object.defineProperty(validatedFactory, "type", {
                  enumerable: false,
                  get: function() {
                    lowPriorityWarning$1(
                      false,
                      "Factory.type is deprecated. Access the class directly " +
                        "before passing it to createFactory."
                    );
                    Object.defineProperty(this, "type", {
                      value: type
                    });
                    return type;
                  }
                });
              }

              return validatedFactory;
            }

            function cloneElementWithValidation(element, props, children) {
              var newElement = cloneElement.apply(this, arguments);
              for (var i = 2; i < arguments.length; i++) {
                validateChildKeys(arguments[i], newElement.type);
              }
              validatePropTypes(newElement);
              return newElement;
            }

            var React = {
              Children: {
                map: mapChildren,
                forEach: forEachChildren,
                count: countChildren,
                toArray: toArray,
                only: onlyChild
              },

              Component: Component,
              PureComponent: PureComponent,
              unstable_AsyncComponent: AsyncComponent,

              Fragment: REACT_FRAGMENT_TYPE,

              createElement: createElementWithValidation,
              cloneElement: cloneElementWithValidation,
              createFactory: createFactoryWithValidation,
              isValidElement: isValidElement,

              version: ReactVersion,

              __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                ReactCurrentOwner: ReactCurrentOwner,
                // Used by renderers to avoid bundling object-assign twice in UMD bundles:
                assign: _assign
              }
            };

            {
              _assign(
                React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                {
                  // These should not be included in production.
                  ReactDebugCurrentFrame: ReactDebugCurrentFrame,
                  // Shim for React DOM 16.0.0 which still destructured (but not used) this.
                  // TODO: remove in React 17.0.
                  ReactComponentTreeHook: {}
                }
              );
            }

            var React$2 = Object.freeze({
              default: React
            });

            var React$3 = (React$2 && React) || React$2;

            // TODO: decide on the top-level export form.
            // This is hacky but makes it work with both Rollup and Jest.
            var react = React$3["default"] ? React$3["default"] : React$3;

            module.exports = react;
          })();
        }

        /***/
      },

    /***/ "./node_modules/react/index.js":
      /*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        if (false) {
          module.exports = require("./cjs/react.production.min.js");
        } else {
          module.exports = __webpack_require__(
            /*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js"
          );
        }

        /***/
      },

    /***/ "./node_modules/requires-port/index.js":
      /*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Check if we're required to add a port number.
         *
         * @see https://url.spec.whatwg.org/#default-port
         * @param {Number|String} port Port number we need to check
         * @param {String} protocol Protocol we need to check against.
         * @returns {Boolean} Is it a default port for the given protocol
         * @api private
         */
        module.exports = function required(port, protocol) {
          protocol = protocol.split(":")[0];
          port = +port;

          if (!port) return false;

          switch (protocol) {
            case "http":
            case "ws":
              return port !== 80;

            case "https":
            case "wss":
              return port !== 443;

            case "ftp":
              return port !== 21;

            case "gopher":
              return port !== 70;

            case "file":
              return false;
          }

          return port !== 0;
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/entry.js":
      /*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/entry.js ***!
  \*************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var transportList = __webpack_require__(
            /*! ./transport-list */ "./node_modules/sockjs-client/lib/transport-list.js"
          );

          module.exports = __webpack_require__(
            /*! ./main */ "./node_modules/sockjs-client/lib/main.js"
          )(transportList);

          // TODO can't get rid of this until all servers do
          if ("_sockjs_onload" in global) {
            setTimeout(global._sockjs_onload, 1);
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/event/close.js":
      /*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/close.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          Event = __webpack_require__(
            /*! ./event */ "./node_modules/sockjs-client/lib/event/event.js"
          );

        function CloseEvent() {
          Event.call(this);
          this.initEvent("close", false, false);
          this.wasClean = false;
          this.code = 0;
          this.reason = "";
        }

        inherits(CloseEvent, Event);

        module.exports = CloseEvent;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/event/emitter.js":
      /*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/emitter.js ***!
  \*********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventTarget = __webpack_require__(
            /*! ./eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js"
          );

        function EventEmitter() {
          EventTarget.call(this);
        }

        inherits(EventEmitter, EventTarget);

        EventEmitter.prototype.removeAllListeners = function(type) {
          if (type) {
            delete this._listeners[type];
          } else {
            this._listeners = {};
          }
        };

        EventEmitter.prototype.once = function(type, listener) {
          var self = this,
            fired = false;

          function g() {
            self.removeListener(type, g);

            if (!fired) {
              fired = true;
              listener.apply(this, arguments);
            }
          }

          this.on(type, g);
        };

        EventEmitter.prototype.emit = function() {
          var type = arguments[0];
          var listeners = this._listeners[type];
          if (!listeners) {
            return;
          }
          // equivalent of Array.prototype.slice.call(arguments, 1);
          var l = arguments.length;
          var args = new Array(l - 1);
          for (var ai = 1; ai < l; ai++) {
            args[ai - 1] = arguments[ai];
          }
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].apply(this, args);
          }
        };

        EventEmitter.prototype.on = EventEmitter.prototype.addListener =
          EventTarget.prototype.addEventListener;
        EventEmitter.prototype.removeListener =
          EventTarget.prototype.removeEventListener;

        module.exports.EventEmitter = EventEmitter;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/event/event.js":
      /*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/event.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        function Event(eventType) {
          this.type = eventType;
        }

        Event.prototype.initEvent = function(eventType, canBubble, cancelable) {
          this.type = eventType;
          this.bubbles = canBubble;
          this.cancelable = cancelable;
          this.timeStamp = +new Date();
          return this;
        };

        Event.prototype.stopPropagation = function() {};
        Event.prototype.preventDefault = function() {};

        Event.CAPTURING_PHASE = 1;
        Event.AT_TARGET = 2;
        Event.BUBBLING_PHASE = 3;

        module.exports = Event;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/event/eventtarget.js":
      /*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/eventtarget.js ***!
  \*************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* Simplified implementation of DOM2 EventTarget.
 *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
 */

        function EventTarget() {
          this._listeners = {};
        }

        EventTarget.prototype.addEventListener = function(eventType, listener) {
          if (!(eventType in this._listeners)) {
            this._listeners[eventType] = [];
          }
          var arr = this._listeners[eventType];
          // #4
          if (arr.indexOf(listener) === -1) {
            // Make a copy so as not to interfere with a current dispatchEvent.
            arr = arr.concat([listener]);
          }
          this._listeners[eventType] = arr;
        };

        EventTarget.prototype.removeEventListener = function(
          eventType,
          listener
        ) {
          var arr = this._listeners[eventType];
          if (!arr) {
            return;
          }
          var idx = arr.indexOf(listener);
          if (idx !== -1) {
            if (arr.length > 1) {
              // Make a copy so as not to interfere with a current dispatchEvent.
              this._listeners[eventType] = arr
                .slice(0, idx)
                .concat(arr.slice(idx + 1));
            } else {
              delete this._listeners[eventType];
            }
            return;
          }
        };

        EventTarget.prototype.dispatchEvent = function() {
          var event = arguments[0];
          var t = event.type;
          // equivalent of Array.prototype.slice.call(arguments, 0);
          var args =
            arguments.length === 1 ? [event] : Array.apply(null, arguments);
          // TODO: This doesn't match the real behavior; per spec, onfoo get
          // their place in line from the /first/ time they're set from
          // non-null. Although WebKit bumps it to the end every time it's
          // set.
          if (this["on" + t]) {
            this["on" + t].apply(this, args);
          }
          if (t in this._listeners) {
            // Grab a reference to the listeners list. removeEventListener may alter the list.
            var listeners = this._listeners[t];
            for (var i = 0; i < listeners.length; i++) {
              listeners[i].apply(this, args);
            }
          }
        };

        module.exports = EventTarget;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/event/trans-message.js":
      /*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/trans-message.js ***!
  \***************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          Event = __webpack_require__(
            /*! ./event */ "./node_modules/sockjs-client/lib/event/event.js"
          );

        function TransportMessageEvent(data) {
          Event.call(this);
          this.initEvent("message", false, false);
          this.data = data;
        }

        inherits(TransportMessageEvent, Event);

        module.exports = TransportMessageEvent;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/facade.js":
      /*!**************************************************!*\
  !*** ./node_modules/sockjs-client/lib/facade.js ***!
  \**************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var JSON3 = __webpack_require__(
            /*! json3 */ "./node_modules/json3/lib/json3.js"
          ),
          iframeUtils = __webpack_require__(
            /*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"
          );

        function FacadeJS(transport) {
          this._transport = transport;
          transport.on("message", this._transportMessage.bind(this));
          transport.on("close", this._transportClose.bind(this));
        }

        FacadeJS.prototype._transportClose = function(code, reason) {
          iframeUtils.postMessage("c", JSON3.stringify([code, reason]));
        };
        FacadeJS.prototype._transportMessage = function(frame) {
          iframeUtils.postMessage("t", frame);
        };
        FacadeJS.prototype._send = function(data) {
          this._transport.send(data);
        };
        FacadeJS.prototype._close = function() {
          this._transport.close();
          this._transport.removeAllListeners();
        };

        module.exports = FacadeJS;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/iframe-bootstrap.js":
      /*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/iframe-bootstrap.js ***!
  \************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var urlUtils = __webpack_require__(
            /*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          eventUtils = __webpack_require__(
            /*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
          ),
          JSON3 = __webpack_require__(
            /*! json3 */ "./node_modules/json3/lib/json3.js"
          ),
          FacadeJS = __webpack_require__(
            /*! ./facade */ "./node_modules/sockjs-client/lib/facade.js"
          ),
          InfoIframeReceiver = __webpack_require__(
            /*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js"
          ),
          iframeUtils = __webpack_require__(
            /*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"
          ),
          loc = __webpack_require__(
            /*! ./location */ "./node_modules/sockjs-client/lib/location.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:iframe-bootstrap");
        }

        module.exports = function(SockJS, availableTransports) {
          var transportMap = {};
          availableTransports.forEach(function(at) {
            if (at.facadeTransport) {
              transportMap[at.facadeTransport.transportName] =
                at.facadeTransport;
            }
          });

          // hard-coded for the info iframe
          // TODO see if we can make this more dynamic
          transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;
          var parentOrigin;

          /* eslint-disable camelcase */
          SockJS.bootstrap_iframe = function() {
            /* eslint-enable camelcase */
            var facade;
            iframeUtils.currentWindowId = loc.hash.slice(1);
            var onMessage = function(e) {
              if (e.source !== parent) {
                return;
              }
              if (typeof parentOrigin === "undefined") {
                parentOrigin = e.origin;
              }
              if (e.origin !== parentOrigin) {
                return;
              }

              var iframeMessage;
              try {
                iframeMessage = JSON3.parse(e.data);
              } catch (ignored) {
                debug("bad json", e.data);
                return;
              }

              if (iframeMessage.windowId !== iframeUtils.currentWindowId) {
                return;
              }
              switch (iframeMessage.type) {
                case "s":
                  var p;
                  try {
                    p = JSON3.parse(iframeMessage.data);
                  } catch (ignored) {
                    debug("bad json", iframeMessage.data);
                    break;
                  }
                  var version = p[0];
                  var transport = p[1];
                  var transUrl = p[2];
                  var baseUrl = p[3];
                  debug(version, transport, transUrl, baseUrl);
                  // change this to semver logic
                  if (version !== SockJS.version) {
                    throw new Error(
                      "Incompatible SockJS! Main site uses:" +
                        ' "' +
                        version +
                        '", the iframe:' +
                        ' "' +
                        SockJS.version +
                        '".'
                    );
                  }

                  if (
                    !urlUtils.isOriginEqual(transUrl, loc.href) ||
                    !urlUtils.isOriginEqual(baseUrl, loc.href)
                  ) {
                    throw new Error(
                      "Can't connect to different domain from within an " +
                        "iframe. (" +
                        loc.href +
                        ", " +
                        transUrl +
                        ", " +
                        baseUrl +
                        ")"
                    );
                  }
                  facade = new FacadeJS(
                    new transportMap[transport](transUrl, baseUrl)
                  );
                  break;
                case "m":
                  facade._send(iframeMessage.data);
                  break;
                case "c":
                  if (facade) {
                    facade._close();
                  }
                  facade = null;
                  break;
              }
            };

            eventUtils.attachEvent("message", onMessage);

            // Start
            iframeUtils.postMessage("s");
          };
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/info-ajax.js":
      /*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-ajax.js ***!
  \*****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          JSON3 = __webpack_require__(
            /*! json3 */ "./node_modules/json3/lib/json3.js"
          ),
          objectUtils = __webpack_require__(
            /*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:info-ajax");
        }

        function InfoAjax(url, AjaxObject) {
          EventEmitter.call(this);

          var self = this;
          var t0 = +new Date();
          this.xo = new AjaxObject("GET", url);

          this.xo.once("finish", function(status, text) {
            var info, rtt;
            if (status === 200) {
              rtt = +new Date() - t0;
              if (text) {
                try {
                  info = JSON3.parse(text);
                } catch (e) {
                  debug("bad json", text);
                }
              }

              if (!objectUtils.isObject(info)) {
                info = {};
              }
            }
            self.emit("finish", info, rtt);
            self.removeAllListeners();
          });
        }

        inherits(InfoAjax, EventEmitter);

        InfoAjax.prototype.close = function() {
          this.removeAllListeners();
          this.xo.close();
        };

        module.exports = InfoAjax;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/info-iframe-receiver.js":
      /*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe-receiver.js ***!
  \****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          JSON3 = __webpack_require__(
            /*! json3 */ "./node_modules/json3/lib/json3.js"
          ),
          XHRLocalObject = __webpack_require__(
            /*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"
          ),
          InfoAjax = __webpack_require__(
            /*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js"
          );

        function InfoReceiverIframe(transUrl) {
          var self = this;
          EventEmitter.call(this);

          this.ir = new InfoAjax(transUrl, XHRLocalObject);
          this.ir.once("finish", function(info, rtt) {
            self.ir = null;
            self.emit("message", JSON3.stringify([info, rtt]));
          });
        }

        inherits(InfoReceiverIframe, EventEmitter);

        InfoReceiverIframe.transportName = "iframe-info-receiver";

        InfoReceiverIframe.prototype.close = function() {
          if (this.ir) {
            this.ir.close();
            this.ir = null;
          }
          this.removeAllListeners();
        };

        module.exports = InfoReceiverIframe;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/info-iframe.js":
      /*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var EventEmitter = __webpack_require__(
              /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
            ).EventEmitter,
            inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            JSON3 = __webpack_require__(
              /*! json3 */ "./node_modules/json3/lib/json3.js"
            ),
            utils = __webpack_require__(
              /*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
            ),
            IframeTransport = __webpack_require__(
              /*! ./transport/iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js"
            ),
            InfoReceiverIframe = __webpack_require__(
              /*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:info-iframe");
          }

          function InfoIframe(baseUrl, url) {
            var self = this;
            EventEmitter.call(this);

            var go = function() {
              var ifr = (self.ifr = new IframeTransport(
                InfoReceiverIframe.transportName,
                url,
                baseUrl
              ));

              ifr.once("message", function(msg) {
                if (msg) {
                  var d;
                  try {
                    d = JSON3.parse(msg);
                  } catch (e) {
                    debug("bad json", msg);
                    self.emit("finish");
                    self.close();
                    return;
                  }

                  var info = d[0],
                    rtt = d[1];
                  self.emit("finish", info, rtt);
                }
                self.close();
              });

              ifr.once("close", function() {
                self.emit("finish");
                self.close();
              });
            };

            // TODO this seems the same as the 'needBody' from transports
            if (!global.document.body) {
              utils.attachEvent("load", go);
            } else {
              go();
            }
          }

          inherits(InfoIframe, EventEmitter);

          InfoIframe.enabled = function() {
            return IframeTransport.enabled();
          };

          InfoIframe.prototype.close = function() {
            if (this.ifr) {
              this.ifr.close();
            }
            this.removeAllListeners();
            this.ifr = null;
          };

          module.exports = InfoIframe;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/info-receiver.js":
      /*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-receiver.js ***!
  \*********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          urlUtils = __webpack_require__(
            /*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          XDR = __webpack_require__(
            /*! ./transport/sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js"
          ),
          XHRCors = __webpack_require__(
            /*! ./transport/sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"
          ),
          XHRLocal = __webpack_require__(
            /*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"
          ),
          XHRFake = __webpack_require__(
            /*! ./transport/sender/xhr-fake */ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js"
          ),
          InfoIframe = __webpack_require__(
            /*! ./info-iframe */ "./node_modules/sockjs-client/lib/info-iframe.js"
          ),
          InfoAjax = __webpack_require__(
            /*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:info-receiver");
        }

        function InfoReceiver(baseUrl, urlInfo) {
          debug(baseUrl);
          var self = this;
          EventEmitter.call(this);

          setTimeout(function() {
            self.doXhr(baseUrl, urlInfo);
          }, 0);
        }

        inherits(InfoReceiver, EventEmitter);

        // TODO this is currently ignoring the list of available transports and the whitelist

        InfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {
          // determine method of CORS support (if needed)
          if (urlInfo.sameOrigin) {
            return new InfoAjax(url, XHRLocal);
          }
          if (XHRCors.enabled) {
            return new InfoAjax(url, XHRCors);
          }
          if (XDR.enabled && urlInfo.sameScheme) {
            return new InfoAjax(url, XDR);
          }
          if (InfoIframe.enabled()) {
            return new InfoIframe(baseUrl, url);
          }
          return new InfoAjax(url, XHRFake);
        };

        InfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {
          var self = this,
            url = urlUtils.addPath(baseUrl, "/info");
          debug("doXhr", url);

          this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);

          this.timeoutRef = setTimeout(function() {
            debug("timeout");
            self._cleanup(false);
            self.emit("finish");
          }, InfoReceiver.timeout);

          this.xo.once("finish", function(info, rtt) {
            debug("finish", info, rtt);
            self._cleanup(true);
            self.emit("finish", info, rtt);
          });
        };

        InfoReceiver.prototype._cleanup = function(wasClean) {
          debug("_cleanup");
          clearTimeout(this.timeoutRef);
          this.timeoutRef = null;
          if (!wasClean && this.xo) {
            this.xo.close();
          }
          this.xo = null;
        };

        InfoReceiver.prototype.close = function() {
          debug("close");
          this.removeAllListeners();
          this._cleanup(false);
        };

        InfoReceiver.timeout = 8000;

        module.exports = InfoReceiver;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/location.js":
      /*!****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/location.js ***!
  \****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          module.exports = global.location || {
            origin: "http://localhost:80",
            protocol: "http",
            host: "localhost",
            port: 80,
            href: "http://localhost/",
            hash: ""
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/main.js":
      /*!************************************************!*\
  !*** ./node_modules/sockjs-client/lib/main.js ***!
  \************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          __webpack_require__(
            /*! ./shims */ "./node_modules/sockjs-client/lib/shims.js"
          );

          var URL = __webpack_require__(
              /*! url-parse */ "./node_modules/url-parse/index.js"
            ),
            inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            JSON3 = __webpack_require__(
              /*! json3 */ "./node_modules/json3/lib/json3.js"
            ),
            random = __webpack_require__(
              /*! ./utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"
            ),
            escape = __webpack_require__(
              /*! ./utils/escape */ "./node_modules/sockjs-client/lib/utils/escape.js"
            ),
            urlUtils = __webpack_require__(
              /*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            ),
            eventUtils = __webpack_require__(
              /*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
            ),
            transport = __webpack_require__(
              /*! ./utils/transport */ "./node_modules/sockjs-client/lib/utils/transport.js"
            ),
            objectUtils = __webpack_require__(
              /*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js"
            ),
            browser = __webpack_require__(
              /*! ./utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"
            ),
            log = __webpack_require__(
              /*! ./utils/log */ "./node_modules/sockjs-client/lib/utils/log.js"
            ),
            Event = __webpack_require__(
              /*! ./event/event */ "./node_modules/sockjs-client/lib/event/event.js"
            ),
            EventTarget = __webpack_require__(
              /*! ./event/eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js"
            ),
            loc = __webpack_require__(
              /*! ./location */ "./node_modules/sockjs-client/lib/location.js"
            ),
            CloseEvent = __webpack_require__(
              /*! ./event/close */ "./node_modules/sockjs-client/lib/event/close.js"
            ),
            TransportMessageEvent = __webpack_require__(
              /*! ./event/trans-message */ "./node_modules/sockjs-client/lib/event/trans-message.js"
            ),
            InfoReceiver = __webpack_require__(
              /*! ./info-receiver */ "./node_modules/sockjs-client/lib/info-receiver.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:main");
          }

          var transports;

          // follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface
          function SockJS(url, protocols, options) {
            if (!(this instanceof SockJS)) {
              return new SockJS(url, protocols, options);
            }
            if (arguments.length < 1) {
              throw new TypeError(
                "Failed to construct 'SockJS: 1 argument required, but only 0 present"
              );
            }
            EventTarget.call(this);

            this.readyState = SockJS.CONNECTING;
            this.extensions = "";
            this.protocol = "";

            // non-standard extension
            options = options || {};
            if (options.protocols_whitelist) {
              log.warn(
                "'protocols_whitelist' is DEPRECATED. Use 'transports' instead."
              );
            }
            this._transportsWhitelist = options.transports;
            this._transportOptions = options.transportOptions || {};

            var sessionId = options.sessionId || 8;
            if (typeof sessionId === "function") {
              this._generateSessionId = sessionId;
            } else if (typeof sessionId === "number") {
              this._generateSessionId = function() {
                return random.string(sessionId);
              };
            } else {
              throw new TypeError(
                "If sessionId is used in the options, it needs to be a number or a function."
              );
            }

            this._server = options.server || random.numberString(1000);

            // Step 1 of WS spec - parse and validate the url. Issue #8
            var parsedUrl = new URL(url);
            if (!parsedUrl.host || !parsedUrl.protocol) {
              throw new SyntaxError("The URL '" + url + "' is invalid");
            } else if (parsedUrl.hash) {
              throw new SyntaxError("The URL must not contain a fragment");
            } else if (
              parsedUrl.protocol !== "http:" &&
              parsedUrl.protocol !== "https:"
            ) {
              throw new SyntaxError(
                "The URL's scheme must be either 'http:' or 'https:'. '" +
                  parsedUrl.protocol +
                  "' is not allowed."
              );
            }

            var secure = parsedUrl.protocol === "https:";
            // Step 2 - don't allow secure origin with an insecure protocol
            if (loc.protocol === "https" && !secure) {
              throw new Error(
                "SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS"
              );
            }

            // Step 3 - check port access - no need here
            // Step 4 - parse protocols argument
            if (!protocols) {
              protocols = [];
            } else if (!Array.isArray(protocols)) {
              protocols = [protocols];
            }

            // Step 5 - check protocols argument
            var sortedProtocols = protocols.sort();
            sortedProtocols.forEach(function(proto, i) {
              if (!proto) {
                throw new SyntaxError(
                  "The protocols entry '" + proto + "' is invalid."
                );
              }
              if (
                i < sortedProtocols.length - 1 &&
                proto === sortedProtocols[i + 1]
              ) {
                throw new SyntaxError(
                  "The protocols entry '" + proto + "' is duplicated."
                );
              }
            });

            // Step 6 - convert origin
            var o = urlUtils.getOrigin(loc.href);
            this._origin = o ? o.toLowerCase() : null;

            // remove the trailing slash
            parsedUrl.set("pathname", parsedUrl.pathname.replace(/\/+$/, ""));

            // store the sanitized url
            this.url = parsedUrl.href;
            debug("using url", this.url);

            // Step 7 - start connection in background
            // obtain server info
            // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26
            this._urlInfo = {
              nullOrigin: !browser.hasDomain(),
              sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),
              sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)
            };

            this._ir = new InfoReceiver(this.url, this._urlInfo);
            this._ir.once("finish", this._receiveInfo.bind(this));
          }

          inherits(SockJS, EventTarget);

          function userSetCode(code) {
            return code === 1000 || (code >= 3000 && code <= 4999);
          }

          SockJS.prototype.close = function(code, reason) {
            // Step 1
            if (code && !userSetCode(code)) {
              throw new Error("InvalidAccessError: Invalid code");
            }
            // Step 2.4 states the max is 123 bytes, but we are just checking length
            if (reason && reason.length > 123) {
              throw new SyntaxError("reason argument has an invalid length");
            }

            // Step 3.1
            if (
              this.readyState === SockJS.CLOSING ||
              this.readyState === SockJS.CLOSED
            ) {
              return;
            }

            // TODO look at docs to determine how to set this
            var wasClean = true;
            this._close(code || 1000, reason || "Normal closure", wasClean);
          };

          SockJS.prototype.send = function(data) {
            // #13 - convert anything non-string to string
            // TODO this currently turns objects into [object Object]
            if (typeof data !== "string") {
              data = "" + data;
            }
            if (this.readyState === SockJS.CONNECTING) {
              throw new Error(
                "InvalidStateError: The connection has not been established yet"
              );
            }
            if (this.readyState !== SockJS.OPEN) {
              return;
            }
            this._transport.send(escape.quote(data));
          };

          SockJS.version = __webpack_require__(
            /*! ./version */ "./node_modules/sockjs-client/lib/version.js"
          );

          SockJS.CONNECTING = 0;
          SockJS.OPEN = 1;
          SockJS.CLOSING = 2;
          SockJS.CLOSED = 3;

          SockJS.prototype._receiveInfo = function(info, rtt) {
            debug("_receiveInfo", rtt);
            this._ir = null;
            if (!info) {
              this._close(1002, "Cannot connect to server");
              return;
            }

            // establish a round-trip timeout (RTO) based on the
            // round-trip time (RTT)
            this._rto = this.countRTO(rtt);
            // allow server to override url used for the actual transport
            this._transUrl = info.base_url ? info.base_url : this.url;
            info = objectUtils.extend(info, this._urlInfo);
            debug("info", info);
            // determine list of desired and supported transports
            var enabledTransports = transports.filterToEnabled(
              this._transportsWhitelist,
              info
            );
            this._transports = enabledTransports.main;
            debug(this._transports.length + " enabled transports");

            this._connect();
          };

          SockJS.prototype._connect = function() {
            for (
              var Transport = this._transports.shift();
              Transport;
              Transport = this._transports.shift()
            ) {
              debug("attempt", Transport.transportName);
              if (Transport.needBody) {
                if (
                  !global.document.body ||
                  (typeof global.document.readyState !== "undefined" &&
                    global.document.readyState !== "complete" &&
                    global.document.readyState !== "interactive")
                ) {
                  debug("waiting for body");
                  this._transports.unshift(Transport);
                  eventUtils.attachEvent("load", this._connect.bind(this));
                  return;
                }
              }

              // calculate timeout based on RTO and round trips. Default to 5s
              var timeoutMs = this._rto * Transport.roundTrips || 5000;
              this._transportTimeoutId = setTimeout(
                this._transportTimeout.bind(this),
                timeoutMs
              );
              debug("using timeout", timeoutMs);

              var transportUrl = urlUtils.addPath(
                this._transUrl,
                "/" + this._server + "/" + this._generateSessionId()
              );
              var options = this._transportOptions[Transport.transportName];
              debug("transport url", transportUrl);
              var transportObj = new Transport(
                transportUrl,
                this._transUrl,
                options
              );
              transportObj.on("message", this._transportMessage.bind(this));
              transportObj.once("close", this._transportClose.bind(this));
              transportObj.transportName = Transport.transportName;
              this._transport = transportObj;

              return;
            }
            this._close(2000, "All transports failed", false);
          };

          SockJS.prototype._transportTimeout = function() {
            debug("_transportTimeout");
            if (this.readyState === SockJS.CONNECTING) {
              this._transportClose(2007, "Transport timed out");
            }
          };

          SockJS.prototype._transportMessage = function(msg) {
            debug("_transportMessage", msg);
            var self = this,
              type = msg.slice(0, 1),
              content = msg.slice(1),
              payload;

            // first check for messages that don't need a payload
            switch (type) {
              case "o":
                this._open();
                return;
              case "h":
                this.dispatchEvent(new Event("heartbeat"));
                debug("heartbeat", this.transport);
                return;
            }

            if (content) {
              try {
                payload = JSON3.parse(content);
              } catch (e) {
                debug("bad json", content);
              }
            }

            if (typeof payload === "undefined") {
              debug("empty payload", content);
              return;
            }

            switch (type) {
              case "a":
                if (Array.isArray(payload)) {
                  payload.forEach(function(p) {
                    debug("message", self.transport, p);
                    self.dispatchEvent(new TransportMessageEvent(p));
                  });
                }
                break;
              case "m":
                debug("message", this.transport, payload);
                this.dispatchEvent(new TransportMessageEvent(payload));
                break;
              case "c":
                if (Array.isArray(payload) && payload.length === 2) {
                  this._close(payload[0], payload[1], true);
                }
                break;
            }
          };

          SockJS.prototype._transportClose = function(code, reason) {
            debug("_transportClose", this.transport, code, reason);
            if (this._transport) {
              this._transport.removeAllListeners();
              this._transport = null;
              this.transport = null;
            }

            if (
              !userSetCode(code) &&
              code !== 2000 &&
              this.readyState === SockJS.CONNECTING
            ) {
              this._connect();
              return;
            }

            this._close(code, reason);
          };

          SockJS.prototype._open = function() {
            debug("_open", this._transport.transportName, this.readyState);
            if (this.readyState === SockJS.CONNECTING) {
              if (this._transportTimeoutId) {
                clearTimeout(this._transportTimeoutId);
                this._transportTimeoutId = null;
              }
              this.readyState = SockJS.OPEN;
              this.transport = this._transport.transportName;
              this.dispatchEvent(new Event("open"));
              debug("connected", this.transport);
            } else {
              // The server might have been restarted, and lost track of our
              // connection.
              this._close(1006, "Server lost session");
            }
          };

          SockJS.prototype._close = function(code, reason, wasClean) {
            debug(
              "_close",
              this.transport,
              code,
              reason,
              wasClean,
              this.readyState
            );
            var forceFail = false;

            if (this._ir) {
              forceFail = true;
              this._ir.close();
              this._ir = null;
            }
            if (this._transport) {
              this._transport.close();
              this._transport = null;
              this.transport = null;
            }

            if (this.readyState === SockJS.CLOSED) {
              throw new Error(
                "InvalidStateError: SockJS has already been closed"
              );
            }

            this.readyState = SockJS.CLOSING;
            setTimeout(
              function() {
                this.readyState = SockJS.CLOSED;

                if (forceFail) {
                  this.dispatchEvent(new Event("error"));
                }

                var e = new CloseEvent("close");
                e.wasClean = wasClean || false;
                e.code = code || 1000;
                e.reason = reason;

                this.dispatchEvent(e);
                this.onmessage = this.onclose = this.onerror = null;
                debug("disconnected");
              }.bind(this),
              0
            );
          };

          // See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
          // and RFC 2988.
          SockJS.prototype.countRTO = function(rtt) {
            // In a local environment, when using IE8/9 and the `jsonp-polling`
            // transport the time needed to establish a connection (the time that pass
            // from the opening of the transport to the call of `_dispatchOpen`) is
            // around 200msec (the lower bound used in the article above) and this
            // causes spurious timeouts. For this reason we calculate a value slightly
            // larger than that used in the article.
            if (rtt > 100) {
              return 4 * rtt; // rto > 400msec
            }
            return 300 + rtt; // 300msec < rto <= 400msec
          };

          module.exports = function(availableTransports) {
            transports = transport(availableTransports);
            __webpack_require__(
              /*! ./iframe-bootstrap */ "./node_modules/sockjs-client/lib/iframe-bootstrap.js"
            )(SockJS, availableTransports);
            return SockJS;
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/shims.js":
      /*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/shims.js ***!
  \*************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* eslint-disable */
        /* jscs: disable */

        // pulled specific shims from https://github.com/es-shims/es5-shim

        var ArrayPrototype = Array.prototype;
        var ObjectPrototype = Object.prototype;
        var FunctionPrototype = Function.prototype;
        var StringPrototype = String.prototype;
        var array_slice = ArrayPrototype.slice;

        var _toString = ObjectPrototype.toString;
        var isFunction = function(val) {
          return ObjectPrototype.toString.call(val) === "[object Function]";
        };
        var isArray = function isArray(obj) {
          return _toString.call(obj) === "[object Array]";
        };
        var isString = function isString(obj) {
          return _toString.call(obj) === "[object String]";
        };

        var supportsDescriptors =
          Object.defineProperty &&
          (function() {
            try {
              Object.defineProperty({}, "x", {});
              return true;
            } catch (e) {
              /* this is ES3 */
              return false;
            }
          })();

        // Define configurable, writable and non-enumerable props
        // if they don't exist.
        var defineProperty;
        if (supportsDescriptors) {
          defineProperty = function(object, name, method, forceAssign) {
            if (!forceAssign && name in object) {
              return;
            }
            Object.defineProperty(object, name, {
              configurable: true,
              enumerable: false,
              writable: true,
              value: method
            });
          };
        } else {
          defineProperty = function(object, name, method, forceAssign) {
            if (!forceAssign && name in object) {
              return;
            }
            object[name] = method;
          };
        }
        var defineProperties = function(object, map, forceAssign) {
          for (var name in map) {
            if (ObjectPrototype.hasOwnProperty.call(map, name)) {
              defineProperty(object, name, map[name], forceAssign);
            }
          }
        };

        var toObject = function(o) {
          if (o == null) {
            // this matches both null and undefined
            throw new TypeError("can't convert " + o + " to object");
          }
          return Object(o);
        };

        //
        // Util
        // ======
        //

        // ES5 9.4
        // http://es5.github.com/#x9.4
        // http://jsperf.com/to-integer

        function toInteger(num) {
          var n = +num;
          if (n !== n) {
            // isNaN
            n = 0;
          } else if (n !== 0 && n !== 1 / 0 && n !== -(1 / 0)) {
            n = (n > 0 || -1) * Math.floor(Math.abs(n));
          }
          return n;
        }

        function ToUint32(x) {
          return x >>> 0;
        }

        //
        // Function
        // ========
        //

        // ES-5 15.3.4.5
        // http://es5.github.com/#x15.3.4.5

        function Empty() {}

        defineProperties(FunctionPrototype, {
          bind: function bind(that) {
            // .length is 1
            // 1. Let Target be the this value.
            var target = this;
            // 2. If IsCallable(Target) is false, throw a TypeError exception.
            if (!isFunction(target)) {
              throw new TypeError(
                "Function.prototype.bind called on incompatible " + target
              );
            }
            // 3. Let A be a new (possibly empty) internal list of all of the
            //   argument values provided after thisArg (arg1, arg2 etc), in order.
            // XXX slicedArgs will stand in for "A" if used
            var args = array_slice.call(arguments, 1); // for normal call
            // 4. Let F be a new native ECMAScript object.
            // 11. Set the [[Prototype]] internal property of F to the standard
            //   built-in Function prototype object as specified in 15.3.3.1.
            // 12. Set the [[Call]] internal property of F as described in
            //   15.3.4.5.1.
            // 13. Set the [[Construct]] internal property of F as described in
            //   15.3.4.5.2.
            // 14. Set the [[HasInstance]] internal property of F as described in
            //   15.3.4.5.3.
            var binder = function() {
              if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                  this,
                  args.concat(array_slice.call(arguments))
                );
                if (Object(result) === result) {
                  return result;
                }
                return this;
              } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                  that,
                  args.concat(array_slice.call(arguments))
                );
              }
            };

            // 15. If the [[Class]] internal property of Target is "Function", then
            //     a. Let L be the length property of Target minus the length of A.
            //     b. Set the length own property of F to either 0 or L, whichever is
            //       larger.
            // 16. Else set the length own property of F to 0.

            var boundLength = Math.max(0, target.length - args.length);

            // 17. Set the attributes of the length own property of F to the values
            //   specified in 15.3.5.1.
            var boundArgs = [];
            for (var i = 0; i < boundLength; i++) {
              boundArgs.push("$" + i);
            }

            // XXX Build a dynamic function with desired amount of arguments is the only
            // way to set the length property of a function.
            // In environments where Content Security Policies enabled (Chrome extensions,
            // for ex.) all use of eval or Function costructor throws an exception.
            // However in all of these environments Function.prototype.bind exists
            // and so this code will never be executed.
            var bound = Function(
              "binder",
              "return function (" +
                boundArgs.join(",") +
                "){ return binder.apply(this, arguments); }"
            )(binder);

            if (target.prototype) {
              Empty.prototype = target.prototype;
              bound.prototype = new Empty();
              // Clean up dangling references.
              Empty.prototype = null;
            }

            // TODO
            // 18. Set the [[Extensible]] internal property of F to true.

            // TODO
            // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
            // 20. Call the [[DefineOwnProperty]] internal method of F with
            //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
            //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
            //   false.
            // 21. Call the [[DefineOwnProperty]] internal method of F with
            //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
            //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
            //   and false.

            // TODO
            // NOTE Function objects created using Function.prototype.bind do not
            // have a prototype property or the [[Code]], [[FormalParameters]], and
            // [[Scope]] internal properties.
            // XXX can't delete prototype in pure-js.

            // 22. Return F.
            return bound;
          }
        });

        //
        // Array
        // =====
        //

        // ES5 15.4.3.2
        // http://es5.github.com/#x15.4.3.2
        // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
        defineProperties(Array, { isArray: isArray });

        var boxedString = Object("a");
        var splitString = boxedString[0] !== "a" || !(0 in boxedString);

        var properlyBoxesContext = function properlyBoxed(method) {
          // Check node 0.6.21 bug where third parameter is not boxed
          var properlyBoxesNonStrict = true;
          var properlyBoxesStrict = true;
          if (method) {
            method.call("foo", function(_, __, context) {
              if (typeof context !== "object") {
                properlyBoxesNonStrict = false;
              }
            });

            method.call(
              [1],
              function() {
                "use strict";
                properlyBoxesStrict = typeof this === "string";
              },
              "x"
            );
          }
          return !!method && properlyBoxesNonStrict && properlyBoxesStrict;
        };

        defineProperties(
          ArrayPrototype,
          {
            forEach: function forEach(fun /*, thisp*/) {
              var object = toObject(this),
                self = splitString && isString(this) ? this.split("") : object,
                thisp = arguments[1],
                i = -1,
                length = self.length >>> 0;

              // If no callback function or if callback is not a callable function
              if (!isFunction(fun)) {
                throw new TypeError(); // TODO message
              }

              while (++i < length) {
                if (i in self) {
                  // Invoke the callback function with call, passing arguments:
                  // context, property value, property key, thisArg object
                  // context
                  fun.call(thisp, self[i], i, object);
                }
              }
            }
          },
          !properlyBoxesContext(ArrayPrototype.forEach)
        );

        // ES5 15.4.4.14
        // http://es5.github.com/#x15.4.4.14
        // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
        var hasFirefox2IndexOfBug =
          Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;
        defineProperties(
          ArrayPrototype,
          {
            indexOf: function indexOf(sought /*, fromIndex */) {
              var self =
                  splitString && isString(this)
                    ? this.split("")
                    : toObject(this),
                length = self.length >>> 0;

              if (!length) {
                return -1;
              }

              var i = 0;
              if (arguments.length > 1) {
                i = toInteger(arguments[1]);
              }

              // handle negative indices
              i = i >= 0 ? i : Math.max(0, length + i);
              for (; i < length; i++) {
                if (i in self && self[i] === sought) {
                  return i;
                }
              }
              return -1;
            }
          },
          hasFirefox2IndexOfBug
        );

        //
        // String
        // ======
        //

        // ES5 15.5.4.14
        // http://es5.github.com/#x15.5.4.14

        // [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
        // Many browsers do not split properly with regular expressions or they
        // do not perform the split correctly under obscure conditions.
        // See http://blog.stevenlevithan.com/archives/cross-browser-split
        // I've tested in many browsers and this seems to cover the deviant ones:
        //    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
        //    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
        //    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
        //       [undefined, "t", undefined, "e", ...]
        //    ''.split(/.?/) should be [], not [""]
        //    '.'.split(/()()/) should be ["."], not ["", "", "."]

        var string_split = StringPrototype.split;
        if (
          "ab".split(/(?:ab)*/).length !== 2 ||
          ".".split(/(.?)(.?)/).length !== 4 ||
          "tesst".split(/(s)*/)[1] === "t" ||
          "test".split(/(?:)/, -1).length !== 4 ||
          "".split(/.?/).length ||
          ".".split(/()()/).length > 1
        ) {
          (function() {
            var compliantExecNpcg = /()??/.exec("")[1] === void 0; // NPCG: nonparticipating capturing group

            StringPrototype.split = function(separator, limit) {
              var string = this;
              if (separator === void 0 && limit === 0) {
                return [];
              }

              // If `separator` is not a regex, use native split
              if (_toString.call(separator) !== "[object RegExp]") {
                return string_split.call(this, separator, limit);
              }

              var output = [],
                flags =
                  (separator.ignoreCase ? "i" : "") +
                  (separator.multiline ? "m" : "") +
                  (separator.extended ? "x" : "") + // Proposed for ES6
                  (separator.sticky ? "y" : ""), // Firefox 3+
                lastLastIndex = 0,
                // Make `global` and avoid `lastIndex` issues by working with a copy
                separator2,
                match,
                lastIndex,
                lastLength;
              separator = new RegExp(separator.source, flags + "g");
              string += ""; // Type-convert
              if (!compliantExecNpcg) {
                // Doesn't need flags gy, but they don't hurt
                separator2 = new RegExp(
                  "^" + separator.source + "$(?!\\s)",
                  flags
                );
              }
              /* Values for `limit`, per the spec:
             * If undefined: 4294967295 // Math.pow(2, 32) - 1
             * If 0, Infinity, or NaN: 0
             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
             * If negative number: 4294967296 - Math.floor(Math.abs(limit))
             * If other: Type-convert, then use the above rules
             */
              limit =
                limit === void 0
                  ? -1 >>> 0 // Math.pow(2, 32) - 1
                  : ToUint32(limit);
              while ((match = separator.exec(string))) {
                // `separator.lastIndex` is not reliable cross-browser
                lastIndex = match.index + match[0].length;
                if (lastIndex > lastLastIndex) {
                  output.push(string.slice(lastLastIndex, match.index));
                  // Fix browsers whose `exec` methods don't consistently return `undefined` for
                  // nonparticipating capturing groups
                  if (!compliantExecNpcg && match.length > 1) {
                    match[0].replace(separator2, function() {
                      for (var i = 1; i < arguments.length - 2; i++) {
                        if (arguments[i] === void 0) {
                          match[i] = void 0;
                        }
                      }
                    });
                  }
                  if (match.length > 1 && match.index < string.length) {
                    ArrayPrototype.push.apply(output, match.slice(1));
                  }
                  lastLength = match[0].length;
                  lastLastIndex = lastIndex;
                  if (output.length >= limit) {
                    break;
                  }
                }
                if (separator.lastIndex === match.index) {
                  separator.lastIndex++; // Avoid an infinite loop
                }
              }
              if (lastLastIndex === string.length) {
                if (lastLength || !separator.test("")) {
                  output.push("");
                }
              } else {
                output.push(string.slice(lastLastIndex));
              }
              return output.length > limit ? output.slice(0, limit) : output;
            };
          })();

          // [bugfix, chrome]
          // If separator is undefined, then the result array contains just one String,
          // which is the this value (converted to a String). If limit is not undefined,
          // then the output array is truncated so that it contains no more than limit
          // elements.
          // "0".split(undefined, 0) -> []
        } else if ("0".split(void 0, 0).length) {
          StringPrototype.split = function split(separator, limit) {
            if (separator === void 0 && limit === 0) {
              return [];
            }
            return string_split.call(this, separator, limit);
          };
        }

        // ECMA-262, 3rd B.2.3
        // Not an ECMAScript standard, although ECMAScript 3rd Edition has a
        // non-normative section suggesting uniform semantics and it should be
        // normalized across all browsers
        // [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
        var string_substr = StringPrototype.substr;
        var hasNegativeSubstrBug = "".substr && "0b".substr(-1) !== "b";
        defineProperties(
          StringPrototype,
          {
            substr: function substr(start, length) {
              return string_substr.call(
                this,
                start < 0
                  ? (start = this.length + start) < 0 ? 0 : start
                  : start,
                length
              );
            }
          },
          hasNegativeSubstrBug
        );

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport-list.js":
      /*!**********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport-list.js ***!
  \**********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        module.exports = [
          // streaming transports
          __webpack_require__(
            /*! ./transport/websocket */ "./node_modules/sockjs-client/lib/transport/websocket.js"
          ),
          __webpack_require__(
            /*! ./transport/xhr-streaming */ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js"
          ),
          __webpack_require__(
            /*! ./transport/xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js"
          ),
          __webpack_require__(
            /*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js"
          ),
          __webpack_require__(
            /*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js"
          )(
            __webpack_require__(
              /*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js"
            )
          ),

          // polling transports
          __webpack_require__(
            /*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js"
          ),
          __webpack_require__(
            /*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js"
          )(
            __webpack_require__(
              /*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js"
            )
          ),
          __webpack_require__(
            /*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js"
          ),
          __webpack_require__(
            /*! ./transport/xdr-polling */ "./node_modules/sockjs-client/lib/transport/xdr-polling.js"
          ),
          __webpack_require__(
            /*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js"
          )(
            __webpack_require__(
              /*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js"
            )
          ),
          __webpack_require__(
            /*! ./transport/jsonp-polling */ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js"
          )
        ];

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js ***!
  \**************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var EventEmitter = __webpack_require__(
              /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
            ).EventEmitter,
            inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            utils = __webpack_require__(
              /*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
            ),
            urlUtils = __webpack_require__(
              /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            ),
            XHR = global.XMLHttpRequest;

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:browser:xhr");
          }

          function AbstractXHRObject(method, url, payload, opts) {
            debug(method, url);
            var self = this;
            EventEmitter.call(this);

            setTimeout(function() {
              self._start(method, url, payload, opts);
            }, 0);
          }

          inherits(AbstractXHRObject, EventEmitter);

          AbstractXHRObject.prototype._start = function(
            method,
            url,
            payload,
            opts
          ) {
            var self = this;

            try {
              this.xhr = new XHR();
            } catch (x) {
              // intentionally empty
            }

            if (!this.xhr) {
              debug("no xhr");
              this.emit("finish", 0, "no xhr support");
              this._cleanup();
              return;
            }

            // several browsers cache POSTs
            url = urlUtils.addQuery(url, "t=" + +new Date());

            // Explorer tends to keep connection open, even after the
            // tab gets closed: http://bugs.jquery.com/ticket/5280
            this.unloadRef = utils.unloadAdd(function() {
              debug("unload cleanup");
              self._cleanup(true);
            });
            try {
              this.xhr.open(method, url, true);
              if (this.timeout && "timeout" in this.xhr) {
                this.xhr.timeout = this.timeout;
                this.xhr.ontimeout = function() {
                  debug("xhr timeout");
                  self.emit("finish", 0, "");
                  self._cleanup(false);
                };
              }
            } catch (e) {
              debug("exception", e);
              // IE raises an exception on wrong port.
              this.emit("finish", 0, "");
              this._cleanup(false);
              return;
            }

            if (
              (!opts || !opts.noCredentials) &&
              AbstractXHRObject.supportsCORS
            ) {
              debug("withCredentials");
              // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
              // "This never affects same-site requests."

              this.xhr.withCredentials = "true";
            }
            if (opts && opts.headers) {
              for (var key in opts.headers) {
                this.xhr.setRequestHeader(key, opts.headers[key]);
              }
            }

            this.xhr.onreadystatechange = function() {
              if (self.xhr) {
                var x = self.xhr;
                var text, status;
                debug("readyState", x.readyState);
                switch (x.readyState) {
                  case 3:
                    // IE doesn't like peeking into responseText or status
                    // on Microsoft.XMLHTTP and readystate=3
                    try {
                      status = x.status;
                      text = x.responseText;
                    } catch (e) {
                      // intentionally empty
                    }
                    debug("status", status);
                    // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
                    if (status === 1223) {
                      status = 204;
                    }

                    // IE does return readystate == 3 for 404 answers.
                    if (status === 200 && text && text.length > 0) {
                      debug("chunk");
                      self.emit("chunk", status, text);
                    }
                    break;
                  case 4:
                    status = x.status;
                    debug("status", status);
                    // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
                    if (status === 1223) {
                      status = 204;
                    }
                    // IE returns this for a bad port
                    // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx
                    if (status === 12005 || status === 12029) {
                      status = 0;
                    }

                    debug("finish", status, x.responseText);
                    self.emit("finish", status, x.responseText);
                    self._cleanup(false);
                    break;
                }
              }
            };

            try {
              self.xhr.send(payload);
            } catch (e) {
              self.emit("finish", 0, "");
              self._cleanup(false);
            }
          };

          AbstractXHRObject.prototype._cleanup = function(abort) {
            debug("cleanup");
            if (!this.xhr) {
              return;
            }
            this.removeAllListeners();
            utils.unloadDel(this.unloadRef);

            // IE needs this field to be a function
            this.xhr.onreadystatechange = function() {};
            if (this.xhr.ontimeout) {
              this.xhr.ontimeout = null;
            }

            if (abort) {
              try {
                this.xhr.abort();
              } catch (x) {
                // intentionally empty
              }
            }
            this.unloadRef = this.xhr = null;
          };

          AbstractXHRObject.prototype.close = function() {
            debug("close");
            this._cleanup(true);
          };

          AbstractXHRObject.enabled = !!XHR;
          // override XMLHttpRequest for IE6/7
          // obfuscate to avoid firewalls
          var axo = ["Active"].concat("Object").join("X");
          if (!AbstractXHRObject.enabled && axo in global) {
            debug("overriding xmlhttprequest");
            XHR = function() {
              try {
                return new global[axo]("Microsoft.XMLHTTP");
              } catch (e) {
                return null;
              }
            };
            AbstractXHRObject.enabled = !!new XHR();
          }

          var cors = false;
          try {
            cors = "withCredentials" in new XHR();
          } catch (ignored) {
            // intentionally empty
          }

          AbstractXHRObject.supportsCORS = cors;

          module.exports = AbstractXHRObject;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/eventsource.js ***!
  \*************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(global) {
          module.exports = global.EventSource;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/browser/websocket.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/websocket.js ***!
  \***********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var Driver = global.WebSocket || global.MozWebSocket;
          if (Driver) {
            module.exports = function WebSocketBrowserDriver(url) {
              return new Driver(url);
            };
          } else {
            module.exports = undefined;
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/eventsource.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/eventsource.js ***!
  \*****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          AjaxBasedTransport = __webpack_require__(
            /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
          ),
          EventSourceReceiver = __webpack_require__(
            /*! ./receiver/eventsource */ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js"
          ),
          XHRCorsObject = __webpack_require__(
            /*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"
          ),
          EventSourceDriver = __webpack_require__(
            /*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js"
          );

        function EventSourceTransport(transUrl) {
          if (!EventSourceTransport.enabled()) {
            throw new Error("Transport created when disabled");
          }

          AjaxBasedTransport.call(
            this,
            transUrl,
            "/eventsource",
            EventSourceReceiver,
            XHRCorsObject
          );
        }

        inherits(EventSourceTransport, AjaxBasedTransport);

        EventSourceTransport.enabled = function() {
          return !!EventSourceDriver;
        };

        EventSourceTransport.transportName = "eventsource";
        EventSourceTransport.roundTrips = 2;

        module.exports = EventSourceTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/htmlfile.js":
      /*!**************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/htmlfile.js ***!
  \**************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          HtmlfileReceiver = __webpack_require__(
            /*! ./receiver/htmlfile */ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js"
          ),
          XHRLocalObject = __webpack_require__(
            /*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"
          ),
          AjaxBasedTransport = __webpack_require__(
            /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
          );

        function HtmlFileTransport(transUrl) {
          if (!HtmlfileReceiver.enabled) {
            throw new Error("Transport created when disabled");
          }
          AjaxBasedTransport.call(
            this,
            transUrl,
            "/htmlfile",
            HtmlfileReceiver,
            XHRLocalObject
          );
        }

        inherits(HtmlFileTransport, AjaxBasedTransport);

        HtmlFileTransport.enabled = function(info) {
          return HtmlfileReceiver.enabled && info.sameOrigin;
        };

        HtmlFileTransport.transportName = "htmlfile";
        HtmlFileTransport.roundTrips = 2;

        module.exports = HtmlFileTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/iframe.js":
      /*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/iframe.js ***!
  \************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // Few cool transports do work only for same-origin. In order to make
        // them work cross-domain we shall use iframe, served from the
        // remote domain. New browsers have capabilities to communicate with
        // cross domain iframe using postMessage(). In IE it was implemented
        // from IE 8+, but of course, IE got some details wrong:
        //    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
        //    http://stevesouders.com/misc/test-postmessage.php

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          JSON3 = __webpack_require__(
            /*! json3 */ "./node_modules/json3/lib/json3.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          version = __webpack_require__(
            /*! ../version */ "./node_modules/sockjs-client/lib/version.js"
          ),
          urlUtils = __webpack_require__(
            /*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          iframeUtils = __webpack_require__(
            /*! ../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"
          ),
          eventUtils = __webpack_require__(
            /*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
          ),
          random = __webpack_require__(
            /*! ../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:transport:iframe");
        }

        function IframeTransport(transport, transUrl, baseUrl) {
          if (!IframeTransport.enabled()) {
            throw new Error("Transport created when disabled");
          }
          EventEmitter.call(this);

          var self = this;
          this.origin = urlUtils.getOrigin(baseUrl);
          this.baseUrl = baseUrl;
          this.transUrl = transUrl;
          this.transport = transport;
          this.windowId = random.string(8);

          var iframeUrl =
            urlUtils.addPath(baseUrl, "/iframe.html") + "#" + this.windowId;
          debug(transport, transUrl, iframeUrl);

          this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {
            debug("err callback");
            self.emit("close", 1006, "Unable to load an iframe (" + r + ")");
            self.close();
          });

          this.onmessageCallback = this._message.bind(this);
          eventUtils.attachEvent("message", this.onmessageCallback);
        }

        inherits(IframeTransport, EventEmitter);

        IframeTransport.prototype.close = function() {
          debug("close");
          this.removeAllListeners();
          if (this.iframeObj) {
            eventUtils.detachEvent("message", this.onmessageCallback);
            try {
              // When the iframe is not loaded, IE raises an exception
              // on 'contentWindow'.
              this.postMessage("c");
            } catch (x) {
              // intentionally empty
            }
            this.iframeObj.cleanup();
            this.iframeObj = null;
            this.onmessageCallback = this.iframeObj = null;
          }
        };

        IframeTransport.prototype._message = function(e) {
          debug("message", e.data);
          if (!urlUtils.isOriginEqual(e.origin, this.origin)) {
            debug("not same origin", e.origin, this.origin);
            return;
          }

          var iframeMessage;
          try {
            iframeMessage = JSON3.parse(e.data);
          } catch (ignored) {
            debug("bad json", e.data);
            return;
          }

          if (iframeMessage.windowId !== this.windowId) {
            debug(
              "mismatched window id",
              iframeMessage.windowId,
              this.windowId
            );
            return;
          }

          switch (iframeMessage.type) {
            case "s":
              this.iframeObj.loaded();
              // window global dependency
              this.postMessage(
                "s",
                JSON3.stringify([
                  version,
                  this.transport,
                  this.transUrl,
                  this.baseUrl
                ])
              );
              break;
            case "t":
              this.emit("message", iframeMessage.data);
              break;
            case "c":
              var cdata;
              try {
                cdata = JSON3.parse(iframeMessage.data);
              } catch (ignored) {
                debug("bad json", iframeMessage.data);
                return;
              }
              this.emit("close", cdata[0], cdata[1]);
              this.close();
              break;
          }
        };

        IframeTransport.prototype.postMessage = function(type, data) {
          debug("postMessage", type, data);
          this.iframeObj.post(
            JSON3.stringify({
              windowId: this.windowId,
              type: type,
              data: data || ""
            }),
            this.origin
          );
        };

        IframeTransport.prototype.send = function(message) {
          debug("send", message);
          this.postMessage("m", message);
        };

        IframeTransport.enabled = function() {
          return iframeUtils.iframeEnabled;
        };

        IframeTransport.transportName = "iframe";
        IframeTransport.roundTrips = 2;

        module.exports = IframeTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/jsonp-polling.js ***!
  \*******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          // The simplest and most robust transport, using the well-know cross
          // domain hack - JSONP. This transport is quite inefficient - one
          // message could use up to one http request. But at least it works almost
          // everywhere.
          // Known limitations:
          //   o you will get a spinning cursor
          //   o for Konqueror a dumb timer is needed to detect errors

          var inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            SenderReceiver = __webpack_require__(
              /*! ./lib/sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js"
            ),
            JsonpReceiver = __webpack_require__(
              /*! ./receiver/jsonp */ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js"
            ),
            jsonpSender = __webpack_require__(
              /*! ./sender/jsonp */ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js"
            );

          function JsonPTransport(transUrl) {
            if (!JsonPTransport.enabled()) {
              throw new Error("Transport created when disabled");
            }
            SenderReceiver.call(
              this,
              transUrl,
              "/jsonp",
              jsonpSender,
              JsonpReceiver
            );
          }

          inherits(JsonPTransport, SenderReceiver);

          JsonPTransport.enabled = function() {
            return !!global.document;
          };

          JsonPTransport.transportName = "jsonp-polling";
          JsonPTransport.roundTrips = 1;
          JsonPTransport.needBody = true;

          module.exports = JsonPTransport;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js":
      /*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/ajax-based.js ***!
  \********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          urlUtils = __webpack_require__(
            /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          SenderReceiver = __webpack_require__(
            /*! ./sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:ajax-based");
        }

        function createAjaxSender(AjaxObject) {
          return function(url, payload, callback) {
            debug("create ajax sender", url, payload);
            var opt = {};
            if (typeof payload === "string") {
              opt.headers = { "Content-type": "text/plain" };
            }
            var ajaxUrl = urlUtils.addPath(url, "/xhr_send");
            var xo = new AjaxObject("POST", ajaxUrl, payload, opt);
            xo.once("finish", function(status) {
              debug("finish", status);
              xo = null;

              if (status !== 200 && status !== 204) {
                return callback(new Error("http status " + status));
              }
              callback();
            });
            return function() {
              debug("abort");
              xo.close();
              xo = null;

              var err = new Error("Aborted");
              err.code = 1000;
              callback(err);
            };
          };
        }

        function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {
          SenderReceiver.call(
            this,
            transUrl,
            urlSuffix,
            createAjaxSender(AjaxObject),
            Receiver,
            AjaxObject
          );
        }

        inherits(AjaxBasedTransport, SenderReceiver);

        module.exports = AjaxBasedTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js ***!
  \*************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter;

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:buffered-sender");
        }

        function BufferedSender(url, sender) {
          debug(url);
          EventEmitter.call(this);
          this.sendBuffer = [];
          this.sender = sender;
          this.url = url;
        }

        inherits(BufferedSender, EventEmitter);

        BufferedSender.prototype.send = function(message) {
          debug("send", message);
          this.sendBuffer.push(message);
          if (!this.sendStop) {
            this.sendSchedule();
          }
        };

        // For polling transports in a situation when in the message callback,
        // new message is being send. If the sending connection was started
        // before receiving one, it is possible to saturate the network and
        // timeout due to the lack of receiving socket. To avoid that we delay
        // sending messages by some small time, in order to let receiving
        // connection be started beforehand. This is only a halfmeasure and
        // does not fix the big problem, but it does make the tests go more
        // stable on slow networks.
        BufferedSender.prototype.sendScheduleWait = function() {
          debug("sendScheduleWait");
          var self = this;
          var tref;
          this.sendStop = function() {
            debug("sendStop");
            self.sendStop = null;
            clearTimeout(tref);
          };
          tref = setTimeout(function() {
            debug("timeout");
            self.sendStop = null;
            self.sendSchedule();
          }, 25);
        };

        BufferedSender.prototype.sendSchedule = function() {
          debug("sendSchedule", this.sendBuffer.length);
          var self = this;
          if (this.sendBuffer.length > 0) {
            var payload = "[" + this.sendBuffer.join(",") + "]";
            this.sendStop = this.sender(this.url, payload, function(err) {
              self.sendStop = null;
              if (err) {
                debug("error", err);
                self.emit("close", err.code || 1006, "Sending error: " + err);
                self.close();
              } else {
                self.sendScheduleWait();
              }
            });
            this.sendBuffer = [];
          }
        };

        BufferedSender.prototype._cleanup = function() {
          debug("_cleanup");
          this.removeAllListeners();
        };

        BufferedSender.prototype.close = function() {
          debug("close");
          this._cleanup();
          if (this.sendStop) {
            this.sendStop();
            this.sendStop = null;
          }
        };

        module.exports = BufferedSender;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js ***!
  \*********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            IframeTransport = __webpack_require__(
              /*! ../iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js"
            ),
            objectUtils = __webpack_require__(
              /*! ../../utils/object */ "./node_modules/sockjs-client/lib/utils/object.js"
            );

          module.exports = function(transport) {
            function IframeWrapTransport(transUrl, baseUrl) {
              IframeTransport.call(
                this,
                transport.transportName,
                transUrl,
                baseUrl
              );
            }

            inherits(IframeWrapTransport, IframeTransport);

            IframeWrapTransport.enabled = function(url, info) {
              if (!global.document) {
                return false;
              }

              var iframeInfo = objectUtils.extend({}, info);
              iframeInfo.sameOrigin = true;
              return transport.enabled(iframeInfo) && IframeTransport.enabled();
            };

            IframeWrapTransport.transportName =
              "iframe-" + transport.transportName;
            IframeWrapTransport.needBody = true;
            IframeWrapTransport.roundTrips =
              IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)

            IframeWrapTransport.facadeTransport = transport;

            return IframeWrapTransport;
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/lib/polling.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/polling.js ***!
  \*****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter;

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:polling");
        }

        function Polling(Receiver, receiveUrl, AjaxObject) {
          debug(receiveUrl);
          EventEmitter.call(this);
          this.Receiver = Receiver;
          this.receiveUrl = receiveUrl;
          this.AjaxObject = AjaxObject;
          this._scheduleReceiver();
        }

        inherits(Polling, EventEmitter);

        Polling.prototype._scheduleReceiver = function() {
          debug("_scheduleReceiver");
          var self = this;
          var poll = (this.poll = new this.Receiver(
            this.receiveUrl,
            this.AjaxObject
          ));

          poll.on("message", function(msg) {
            debug("message", msg);
            self.emit("message", msg);
          });

          poll.once("close", function(code, reason) {
            debug("close", code, reason, self.pollIsClosing);
            self.poll = poll = null;

            if (!self.pollIsClosing) {
              if (reason === "network") {
                self._scheduleReceiver();
              } else {
                self.emit("close", code || 1006, reason);
                self.removeAllListeners();
              }
            }
          });
        };

        Polling.prototype.abort = function() {
          debug("abort");
          this.removeAllListeners();
          this.pollIsClosing = true;
          if (this.poll) {
            this.poll.abort();
          }
        };

        module.exports = Polling;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js ***!
  \*************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          urlUtils = __webpack_require__(
            /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          BufferedSender = __webpack_require__(
            /*! ./buffered-sender */ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js"
          ),
          Polling = __webpack_require__(
            /*! ./polling */ "./node_modules/sockjs-client/lib/transport/lib/polling.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:sender-receiver");
        }

        function SenderReceiver(
          transUrl,
          urlSuffix,
          senderFunc,
          Receiver,
          AjaxObject
        ) {
          var pollUrl = urlUtils.addPath(transUrl, urlSuffix);
          debug(pollUrl);
          var self = this;
          BufferedSender.call(this, transUrl, senderFunc);

          this.poll = new Polling(Receiver, pollUrl, AjaxObject);
          this.poll.on("message", function(msg) {
            debug("poll message", msg);
            self.emit("message", msg);
          });
          this.poll.once("close", function(code, reason) {
            debug("poll close", code, reason);
            self.poll = null;
            self.emit("close", code, reason);
            self.close();
          });
        }

        inherits(SenderReceiver, BufferedSender);

        SenderReceiver.prototype.close = function() {
          BufferedSender.prototype.close.call(this);
          debug("close");
          this.removeAllListeners();
          if (this.poll) {
            this.poll.abort();
            this.poll = null;
          }
        };

        module.exports = SenderReceiver;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/eventsource.js ***!
  \**************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          EventSourceDriver = __webpack_require__(
            /*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:receiver:eventsource");
        }

        function EventSourceReceiver(url) {
          debug(url);
          EventEmitter.call(this);

          var self = this;
          var es = (this.es = new EventSourceDriver(url));
          es.onmessage = function(e) {
            debug("message", e.data);
            self.emit("message", decodeURI(e.data));
          };
          es.onerror = function(e) {
            debug("error", es.readyState, e);
            // ES on reconnection has readyState = 0 or 1.
            // on network error it's CLOSED = 2
            var reason = es.readyState !== 2 ? "network" : "permanent";
            self._cleanup();
            self._close(reason);
          };
        }

        inherits(EventSourceReceiver, EventEmitter);

        EventSourceReceiver.prototype.abort = function() {
          debug("abort");
          this._cleanup();
          this._close("user");
        };

        EventSourceReceiver.prototype._cleanup = function() {
          debug("cleanup");
          var es = this.es;
          if (es) {
            es.onmessage = es.onerror = null;
            es.close();
            this.es = null;
          }
        };

        EventSourceReceiver.prototype._close = function(reason) {
          debug("close", reason);
          var self = this;
          // Safari and chrome < 15 crash if we close window before
          // waiting for ES cleanup. See:
          // https://code.google.com/p/chromium/issues/detail?id=89155
          setTimeout(function() {
            self.emit("close", null, reason);
            self.removeAllListeners();
          }, 200);
        };

        module.exports = EventSourceReceiver;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js ***!
  \***********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            iframeUtils = __webpack_require__(
              /*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"
            ),
            urlUtils = __webpack_require__(
              /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            ),
            EventEmitter = __webpack_require__(
              /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
            ).EventEmitter,
            random = __webpack_require__(
              /*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:receiver:htmlfile");
          }

          function HtmlfileReceiver(url) {
            debug(url);
            EventEmitter.call(this);
            var self = this;
            iframeUtils.polluteGlobalNamespace();

            this.id = "a" + random.string(6);
            url = urlUtils.addQuery(
              url,
              "c=" + decodeURIComponent(iframeUtils.WPrefix + "." + this.id)
            );

            debug("using htmlfile", HtmlfileReceiver.htmlfileEnabled);
            var constructFunc = HtmlfileReceiver.htmlfileEnabled
              ? iframeUtils.createHtmlfile
              : iframeUtils.createIframe;

            global[iframeUtils.WPrefix][this.id] = {
              start: function() {
                debug("start");
                self.iframeObj.loaded();
              },
              message: function(data) {
                debug("message", data);
                self.emit("message", data);
              },
              stop: function() {
                debug("stop");
                self._cleanup();
                self._close("network");
              }
            };
            this.iframeObj = constructFunc(url, function() {
              debug("callback");
              self._cleanup();
              self._close("permanent");
            });
          }

          inherits(HtmlfileReceiver, EventEmitter);

          HtmlfileReceiver.prototype.abort = function() {
            debug("abort");
            this._cleanup();
            this._close("user");
          };

          HtmlfileReceiver.prototype._cleanup = function() {
            debug("_cleanup");
            if (this.iframeObj) {
              this.iframeObj.cleanup();
              this.iframeObj = null;
            }
            delete global[iframeUtils.WPrefix][this.id];
          };

          HtmlfileReceiver.prototype._close = function(reason) {
            debug("_close", reason);
            this.emit("close", null, reason);
            this.removeAllListeners();
          };

          HtmlfileReceiver.htmlfileEnabled = false;

          // obfuscate to avoid firewalls
          var axo = ["Active"].concat("Object").join("X");
          if (axo in global) {
            try {
              HtmlfileReceiver.htmlfileEnabled = !!new global[axo]("htmlfile");
            } catch (x) {
              // intentionally empty
            }
          }

          HtmlfileReceiver.enabled =
            HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;

          module.exports = HtmlfileReceiver;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js":
      /*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/jsonp.js ***!
  \********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var utils = __webpack_require__(
              /*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"
            ),
            random = __webpack_require__(
              /*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"
            ),
            browser = __webpack_require__(
              /*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"
            ),
            urlUtils = __webpack_require__(
              /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            ),
            inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            EventEmitter = __webpack_require__(
              /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
            ).EventEmitter;

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:receiver:jsonp");
          }

          function JsonpReceiver(url) {
            debug(url);
            var self = this;
            EventEmitter.call(this);

            utils.polluteGlobalNamespace();

            this.id = "a" + random.string(6);
            var urlWithId = urlUtils.addQuery(
              url,
              "c=" + encodeURIComponent(utils.WPrefix + "." + this.id)
            );

            global[utils.WPrefix][this.id] = this._callback.bind(this);
            this._createScript(urlWithId);

            // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.
            this.timeoutId = setTimeout(function() {
              debug("timeout");
              self._abort(
                new Error("JSONP script loaded abnormally (timeout)")
              );
            }, JsonpReceiver.timeout);
          }

          inherits(JsonpReceiver, EventEmitter);

          JsonpReceiver.prototype.abort = function() {
            debug("abort");
            if (global[utils.WPrefix][this.id]) {
              var err = new Error("JSONP user aborted read");
              err.code = 1000;
              this._abort(err);
            }
          };

          JsonpReceiver.timeout = 35000;
          JsonpReceiver.scriptErrorTimeout = 1000;

          JsonpReceiver.prototype._callback = function(data) {
            debug("_callback", data);
            this._cleanup();

            if (this.aborting) {
              return;
            }

            if (data) {
              debug("message", data);
              this.emit("message", data);
            }
            this.emit("close", null, "network");
            this.removeAllListeners();
          };

          JsonpReceiver.prototype._abort = function(err) {
            debug("_abort", err);
            this._cleanup();
            this.aborting = true;
            this.emit("close", err.code, err.message);
            this.removeAllListeners();
          };

          JsonpReceiver.prototype._cleanup = function() {
            debug("_cleanup");
            clearTimeout(this.timeoutId);
            if (this.script2) {
              this.script2.parentNode.removeChild(this.script2);
              this.script2 = null;
            }
            if (this.script) {
              var script = this.script;
              // Unfortunately, you can't really abort script loading of
              // the script.
              script.parentNode.removeChild(script);
              script.onreadystatechange = script.onerror = script.onload = script.onclick = null;
              this.script = null;
            }
            delete global[utils.WPrefix][this.id];
          };

          JsonpReceiver.prototype._scriptError = function() {
            debug("_scriptError");
            var self = this;
            if (this.errorTimer) {
              return;
            }

            this.errorTimer = setTimeout(function() {
              if (!self.loadedOkay) {
                self._abort(
                  new Error("JSONP script loaded abnormally (onerror)")
                );
              }
            }, JsonpReceiver.scriptErrorTimeout);
          };

          JsonpReceiver.prototype._createScript = function(url) {
            debug("_createScript", url);
            var self = this;
            var script = (this.script = global.document.createElement(
              "script"
            ));
            var script2; // Opera synchronous load trick.

            script.id = "a" + random.string(8);
            script.src = url;
            script.type = "text/javascript";
            script.charset = "UTF-8";
            script.onerror = this._scriptError.bind(this);
            script.onload = function() {
              debug("onload");
              self._abort(new Error("JSONP script loaded abnormally (onload)"));
            };

            // IE9 fires 'error' event after onreadystatechange or before, in random order.
            // Use loadedOkay to determine if actually errored
            script.onreadystatechange = function() {
              debug("onreadystatechange", script.readyState);
              if (/loaded|closed/.test(script.readyState)) {
                if (script && script.htmlFor && script.onclick) {
                  self.loadedOkay = true;
                  try {
                    // In IE, actually execute the script.
                    script.onclick();
                  } catch (x) {
                    // intentionally empty
                  }
                }
                if (script) {
                  self._abort(
                    new Error(
                      "JSONP script loaded abnormally (onreadystatechange)"
                    )
                  );
                }
              }
            };
            // IE: event/htmlFor/onclick trick.
            // One can't rely on proper order for onreadystatechange. In order to
            // make sure, set a 'htmlFor' and 'event' properties, so that
            // script code will be installed as 'onclick' handler for the
            // script object. Later, onreadystatechange, manually execute this
            // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
            // set. For reference see:
            //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
            // Also, read on that about script ordering:
            //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order
            if (
              typeof script.async === "undefined" &&
              global.document.attachEvent
            ) {
              // According to mozilla docs, in recent browsers script.async defaults
              // to 'true', so we may use it to detect a good browser:
              // https://developer.mozilla.org/en/HTML/Element/script
              if (!browser.isOpera()) {
                // Naively assume we're in IE
                try {
                  script.htmlFor = script.id;
                  script.event = "onclick";
                } catch (x) {
                  // intentionally empty
                }
                script.async = true;
              } else {
                // Opera, second sync script hack
                script2 = this.script2 = global.document.createElement(
                  "script"
                );
                script2.text =
                  "try{var a = document.getElementById('" +
                  script.id +
                  "'); if(a)a.onerror();}catch(x){};";
                script.async = script2.async = false;
              }
            }
            if (typeof script.async !== "undefined") {
              script.async = true;
            }

            var head = global.document.getElementsByTagName("head")[0];
            head.insertBefore(script, head.firstChild);
            if (script2) {
              head.insertBefore(script2, head.firstChild);
            }
          };

          module.exports = JsonpReceiver;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js":
      /*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/xhr.js ***!
  \******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter;

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:receiver:xhr");
        }

        function XhrReceiver(url, AjaxObject) {
          debug(url);
          EventEmitter.call(this);
          var self = this;

          this.bufferPosition = 0;

          this.xo = new AjaxObject("POST", url, null);
          this.xo.on("chunk", this._chunkHandler.bind(this));
          this.xo.once("finish", function(status, text) {
            debug("finish", status, text);
            self._chunkHandler(status, text);
            self.xo = null;
            var reason = status === 200 ? "network" : "permanent";
            debug("close", reason);
            self.emit("close", null, reason);
            self._cleanup();
          });
        }

        inherits(XhrReceiver, EventEmitter);

        XhrReceiver.prototype._chunkHandler = function(status, text) {
          debug("_chunkHandler", status);
          if (status !== 200 || !text) {
            return;
          }

          for (var idx = -1; ; this.bufferPosition += idx + 1) {
            var buf = text.slice(this.bufferPosition);
            idx = buf.indexOf("\n");
            if (idx === -1) {
              break;
            }
            var msg = buf.slice(0, idx);
            if (msg) {
              debug("message", msg);
              this.emit("message", msg);
            }
          }
        };

        XhrReceiver.prototype._cleanup = function() {
          debug("_cleanup");
          this.removeAllListeners();
        };

        XhrReceiver.prototype.abort = function() {
          debug("abort");
          if (this.xo) {
            this.xo.close();
            debug("close");
            this.emit("close", null, "user");
            this.xo = null;
          }
          this._cleanup();
        };

        module.exports = XhrReceiver;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js":
      /*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/jsonp.js ***!
  \******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var random = __webpack_require__(
              /*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"
            ),
            urlUtils = __webpack_require__(
              /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:sender:jsonp");
          }

          var form, area;

          function createIframe(id) {
            debug("createIframe", id);
            try {
              // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
              return global.document.createElement(
                '<iframe name="' + id + '">'
              );
            } catch (x) {
              var iframe = global.document.createElement("iframe");
              iframe.name = id;
              return iframe;
            }
          }

          function createForm() {
            debug("createForm");
            form = global.document.createElement("form");
            form.style.display = "none";
            form.style.position = "absolute";
            form.method = "POST";
            form.enctype = "application/x-www-form-urlencoded";
            form.acceptCharset = "UTF-8";

            area = global.document.createElement("textarea");
            area.name = "d";
            form.appendChild(area);

            global.document.body.appendChild(form);
          }

          module.exports = function(url, payload, callback) {
            debug(url, payload);
            if (!form) {
              createForm();
            }
            var id = "a" + random.string(8);
            form.target = id;
            form.action = urlUtils.addQuery(
              urlUtils.addPath(url, "/jsonp_send"),
              "i=" + id
            );

            var iframe = createIframe(id);
            iframe.id = id;
            iframe.style.display = "none";
            form.appendChild(iframe);

            try {
              area.value = payload;
            } catch (e) {
              // seriously broken browsers get here
            }
            form.submit();

            var completed = function(err) {
              debug("completed", id, err);
              if (!iframe.onerror) {
                return;
              }
              iframe.onreadystatechange = iframe.onerror = iframe.onload = null;
              // Opera mini doesn't like if we GC iframe
              // immediately, thus this timeout.
              setTimeout(function() {
                debug("cleaning up", id);
                iframe.parentNode.removeChild(iframe);
                iframe = null;
              }, 500);
              area.value = "";
              // It is not possible to detect if the iframe succeeded or
              // failed to submit our form.
              callback(err);
            };
            iframe.onerror = function() {
              debug("onerror", id);
              completed();
            };
            iframe.onload = function() {
              debug("onload", id);
              completed();
            };
            iframe.onreadystatechange = function(e) {
              debug("onreadystatechange", id, iframe.readyState, e);
              if (iframe.readyState === "complete") {
                completed();
              }
            };
            return function() {
              debug("aborted", id);
              completed(new Error("Aborted"));
            };
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/sender/xdr.js":
      /*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xdr.js ***!
  \****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var EventEmitter = __webpack_require__(
              /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
            ).EventEmitter,
            inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            eventUtils = __webpack_require__(
              /*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
            ),
            browser = __webpack_require__(
              /*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"
            ),
            urlUtils = __webpack_require__(
              /*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:sender:xdr");
          }

          // References:
          //   http://ajaxian.com/archives/100-line-ajax-wrapper
          //   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx

          function XDRObject(method, url, payload) {
            debug(method, url);
            var self = this;
            EventEmitter.call(this);

            setTimeout(function() {
              self._start(method, url, payload);
            }, 0);
          }

          inherits(XDRObject, EventEmitter);

          XDRObject.prototype._start = function(method, url, payload) {
            debug("_start");
            var self = this;
            var xdr = new global.XDomainRequest();
            // IE caches even POSTs
            url = urlUtils.addQuery(url, "t=" + +new Date());

            xdr.onerror = function() {
              debug("onerror");
              self._error();
            };
            xdr.ontimeout = function() {
              debug("ontimeout");
              self._error();
            };
            xdr.onprogress = function() {
              debug("progress", xdr.responseText);
              self.emit("chunk", 200, xdr.responseText);
            };
            xdr.onload = function() {
              debug("load");
              self.emit("finish", 200, xdr.responseText);
              self._cleanup(false);
            };
            this.xdr = xdr;
            this.unloadRef = eventUtils.unloadAdd(function() {
              self._cleanup(true);
            });
            try {
              // Fails with AccessDenied if port number is bogus
              this.xdr.open(method, url);
              if (this.timeout) {
                this.xdr.timeout = this.timeout;
              }
              this.xdr.send(payload);
            } catch (x) {
              this._error();
            }
          };

          XDRObject.prototype._error = function() {
            this.emit("finish", 0, "");
            this._cleanup(false);
          };

          XDRObject.prototype._cleanup = function(abort) {
            debug("cleanup", abort);
            if (!this.xdr) {
              return;
            }
            this.removeAllListeners();
            eventUtils.unloadDel(this.unloadRef);

            this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;
            if (abort) {
              try {
                this.xdr.abort();
              } catch (x) {
                // intentionally empty
              }
            }
            this.unloadRef = this.xdr = null;
          };

          XDRObject.prototype.close = function() {
            debug("close");
            this._cleanup(true);
          };

          // IE 8/9 if the request target uses the same scheme - #79
          XDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());

          module.exports = XDRObject;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js ***!
  \*********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          XhrDriver = __webpack_require__(
            /*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js"
          );

        function XHRCorsObject(method, url, payload, opts) {
          XhrDriver.call(this, method, url, payload, opts);
        }

        inherits(XHRCorsObject, XhrDriver);

        XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;

        module.exports = XHRCorsObject;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js ***!
  \*********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          );

        function XHRFake(/* method, url, payload, opts */) {
          var self = this;
          EventEmitter.call(this);

          this.to = setTimeout(function() {
            self.emit("finish", 200, "{}");
          }, XHRFake.timeout);
        }

        inherits(XHRFake, EventEmitter);

        XHRFake.prototype.close = function() {
          clearTimeout(this.to);
        };

        XHRFake.timeout = 2000;

        module.exports = XHRFake;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-local.js ***!
  \**********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          XhrDriver = __webpack_require__(
            /*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js"
          );

        function XHRLocalObject(method, url, payload /*, opts */) {
          XhrDriver.call(this, method, url, payload, {
            noCredentials: true
          });
        }

        inherits(XHRLocalObject, XhrDriver);

        XHRLocalObject.enabled = XhrDriver.enabled;

        module.exports = XHRLocalObject;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/websocket.js":
      /*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/websocket.js ***!
  \***************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var utils = __webpack_require__(
            /*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"
          ),
          urlUtils = __webpack_require__(
            /*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"
          ),
          inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          EventEmitter = __webpack_require__(
            /*! events */ "./node_modules/sockjs-client/lib/event/emitter.js"
          ).EventEmitter,
          WebsocketDriver = __webpack_require__(
            /*! ./driver/websocket */ "./node_modules/sockjs-client/lib/transport/browser/websocket.js"
          );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:websocket");
        }

        function WebSocketTransport(transUrl, ignore, options) {
          if (!WebSocketTransport.enabled()) {
            throw new Error("Transport created when disabled");
          }

          EventEmitter.call(this);
          debug("constructor", transUrl);

          var self = this;
          var url = urlUtils.addPath(transUrl, "/websocket");
          if (url.slice(0, 5) === "https") {
            url = "wss" + url.slice(5);
          } else {
            url = "ws" + url.slice(4);
          }
          this.url = url;

          this.ws = new WebsocketDriver(this.url, [], options);
          this.ws.onmessage = function(e) {
            debug("message event", e.data);
            self.emit("message", e.data);
          };
          // Firefox has an interesting bug. If a websocket connection is
          // created after onunload, it stays alive even when user
          // navigates away from the page. In such situation let's lie -
          // let's not open the ws connection at all. See:
          // https://github.com/sockjs/sockjs-client/issues/28
          // https://bugzilla.mozilla.org/show_bug.cgi?id=696085
          this.unloadRef = utils.unloadAdd(function() {
            debug("unload");
            self.ws.close();
          });
          this.ws.onclose = function(e) {
            debug("close event", e.code, e.reason);
            self.emit("close", e.code, e.reason);
            self._cleanup();
          };
          this.ws.onerror = function(e) {
            debug("error event", e);
            self.emit("close", 1006, "WebSocket connection broken");
            self._cleanup();
          };
        }

        inherits(WebSocketTransport, EventEmitter);

        WebSocketTransport.prototype.send = function(data) {
          var msg = "[" + data + "]";
          debug("send", msg);
          this.ws.send(msg);
        };

        WebSocketTransport.prototype.close = function() {
          debug("close");
          var ws = this.ws;
          this._cleanup();
          if (ws) {
            ws.close();
          }
        };

        WebSocketTransport.prototype._cleanup = function() {
          debug("_cleanup");
          var ws = this.ws;
          if (ws) {
            ws.onmessage = ws.onclose = ws.onerror = null;
          }
          utils.unloadDel(this.unloadRef);
          this.unloadRef = this.ws = null;
          this.removeAllListeners();
        };

        WebSocketTransport.enabled = function() {
          debug("enabled");
          return !!WebsocketDriver;
        };
        WebSocketTransport.transportName = "websocket";

        // In theory, ws should require 1 round trip. But in chrome, this is
        // not very stable over SSL. Most likely a ws connection requires a
        // separate SSL connection, in which case 2 round trips are an
        // absolute minumum.
        WebSocketTransport.roundTrips = 2;

        module.exports = WebSocketTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/xdr-polling.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-polling.js ***!
  \*****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          AjaxBasedTransport = __webpack_require__(
            /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
          ),
          XdrStreamingTransport = __webpack_require__(
            /*! ./xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js"
          ),
          XhrReceiver = __webpack_require__(
            /*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"
          ),
          XDRObject = __webpack_require__(
            /*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js"
          );

        function XdrPollingTransport(transUrl) {
          if (!XDRObject.enabled) {
            throw new Error("Transport created when disabled");
          }
          AjaxBasedTransport.call(
            this,
            transUrl,
            "/xhr",
            XhrReceiver,
            XDRObject
          );
        }

        inherits(XdrPollingTransport, AjaxBasedTransport);

        XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
        XdrPollingTransport.transportName = "xdr-polling";
        XdrPollingTransport.roundTrips = 2; // preflight, ajax

        module.exports = XdrPollingTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-streaming.js ***!
  \*******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          AjaxBasedTransport = __webpack_require__(
            /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
          ),
          XhrReceiver = __webpack_require__(
            /*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"
          ),
          XDRObject = __webpack_require__(
            /*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js"
          );

        // According to:
        //   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
        //   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/

        function XdrStreamingTransport(transUrl) {
          if (!XDRObject.enabled) {
            throw new Error("Transport created when disabled");
          }
          AjaxBasedTransport.call(
            this,
            transUrl,
            "/xhr_streaming",
            XhrReceiver,
            XDRObject
          );
        }

        inherits(XdrStreamingTransport, AjaxBasedTransport);

        XdrStreamingTransport.enabled = function(info) {
          if (info.cookie_needed || info.nullOrigin) {
            return false;
          }
          return XDRObject.enabled && info.sameScheme;
        };

        XdrStreamingTransport.transportName = "xdr-streaming";
        XdrStreamingTransport.roundTrips = 2; // preflight, ajax

        module.exports = XdrStreamingTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/xhr-polling.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-polling.js ***!
  \*****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var inherits = __webpack_require__(
            /*! inherits */ "./node_modules/inherits/inherits_browser.js"
          ),
          AjaxBasedTransport = __webpack_require__(
            /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
          ),
          XhrReceiver = __webpack_require__(
            /*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"
          ),
          XHRCorsObject = __webpack_require__(
            /*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"
          ),
          XHRLocalObject = __webpack_require__(
            /*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"
          );

        function XhrPollingTransport(transUrl) {
          if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
            throw new Error("Transport created when disabled");
          }
          AjaxBasedTransport.call(
            this,
            transUrl,
            "/xhr",
            XhrReceiver,
            XHRCorsObject
          );
        }

        inherits(XhrPollingTransport, AjaxBasedTransport);

        XhrPollingTransport.enabled = function(info) {
          if (info.nullOrigin) {
            return false;
          }

          if (XHRLocalObject.enabled && info.sameOrigin) {
            return true;
          }
          return XHRCorsObject.enabled;
        };

        XhrPollingTransport.transportName = "xhr-polling";
        XhrPollingTransport.roundTrips = 2; // preflight, ajax

        module.exports = XhrPollingTransport;

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-streaming.js ***!
  \*******************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var inherits = __webpack_require__(
              /*! inherits */ "./node_modules/inherits/inherits_browser.js"
            ),
            AjaxBasedTransport = __webpack_require__(
              /*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"
            ),
            XhrReceiver = __webpack_require__(
              /*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"
            ),
            XHRCorsObject = __webpack_require__(
              /*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"
            ),
            XHRLocalObject = __webpack_require__(
              /*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"
            ),
            browser = __webpack_require__(
              /*! ../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"
            );

          function XhrStreamingTransport(transUrl) {
            if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
              throw new Error("Transport created when disabled");
            }
            AjaxBasedTransport.call(
              this,
              transUrl,
              "/xhr_streaming",
              XhrReceiver,
              XHRCorsObject
            );
          }

          inherits(XhrStreamingTransport, AjaxBasedTransport);

          XhrStreamingTransport.enabled = function(info) {
            if (info.nullOrigin) {
              return false;
            }
            // Opera doesn't support xhr-streaming #60
            // But it might be able to #92
            if (browser.isOpera()) {
              return false;
            }

            return XHRCorsObject.enabled;
          };

          XhrStreamingTransport.transportName = "xhr-streaming";
          XhrStreamingTransport.roundTrips = 2; // preflight, ajax

          // Safari gets confused when a streaming ajax request is started
          // before onload. This causes the load indicator to spin indefinetely.
          // Only require body when used in a browser
          XhrStreamingTransport.needBody = !!global.document;

          module.exports = XhrStreamingTransport;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/browser-crypto.js":
      /*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser-crypto.js ***!
  \****************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          if (global.crypto && global.crypto.getRandomValues) {
            module.exports.randomBytes = function(length) {
              var bytes = new Uint8Array(length);
              global.crypto.getRandomValues(bytes);
              return bytes;
            };
          } else {
            module.exports.randomBytes = function(length) {
              var bytes = new Array(length);
              for (var i = 0; i < length; i++) {
                bytes[i] = Math.floor(Math.random() * 256);
              }
              return bytes;
            };
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/browser.js":
      /*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser.js ***!
  \*********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          module.exports = {
            isOpera: function() {
              return (
                global.navigator && /opera/i.test(global.navigator.userAgent)
              );
            },

            isKonqueror: function() {
              return (
                global.navigator &&
                /konqueror/i.test(global.navigator.userAgent)
              );
            },

            // #187 wrap document.domain in try/catch because of WP8 from file:///
            hasDomain: function() {
              // non-browser client always has a domain
              if (!global.document) {
                return true;
              }

              try {
                return !!global.document.domain;
              } catch (e) {
                return false;
              }
            }
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/escape.js":
      /*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/escape.js ***!
  \********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var JSON3 = __webpack_require__(
          /*! json3 */ "./node_modules/json3/lib/json3.js"
        );

        // Some extra characters that Chrome gets wrong, and substitutes with
        // something else on the wire.
        // eslint-disable-next-line no-control-regex
        var extraEscapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g,
          extraLookup;

        // This may be quite slow, so let's delay until user actually uses bad
        // characters.
        var unrollLookup = function(escapable) {
          var i;
          var unrolled = {};
          var c = [];
          for (i = 0; i < 65536; i++) {
            c.push(String.fromCharCode(i));
          }
          escapable.lastIndex = 0;
          c.join("").replace(escapable, function(a) {
            unrolled[a] =
              "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
            return "";
          });
          escapable.lastIndex = 0;
          return unrolled;
        };

        // Quote string, also taking care of unicode characters that browsers
        // often break. Especially, take care of unicode surrogates:
        // http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates
        module.exports = {
          quote: function(string) {
            var quoted = JSON3.stringify(string);

            // In most cases this should be very fast and good enough.
            extraEscapable.lastIndex = 0;
            if (!extraEscapable.test(quoted)) {
              return quoted;
            }

            if (!extraLookup) {
              extraLookup = unrollLookup(extraEscapable);
            }

            return quoted.replace(extraEscapable, function(a) {
              return extraLookup[a];
            });
          }
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/event.js":
      /*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/event.js ***!
  \*******************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var random = __webpack_require__(
            /*! ./random */ "./node_modules/sockjs-client/lib/utils/random.js"
          );

          var onUnload = {},
            afterUnload = false,
            // detect google chrome packaged apps because they don't allow the 'unload' event
            isChromePackagedApp =
              global.chrome && global.chrome.app && global.chrome.app.runtime;

          module.exports = {
            attachEvent: function(event, listener) {
              if (typeof global.addEventListener !== "undefined") {
                global.addEventListener(event, listener, false);
              } else if (global.document && global.attachEvent) {
                // IE quirks.
                // According to: http://stevesouders.com/misc/test-postmessage.php
                // the message gets delivered only to 'document', not 'window'.
                global.document.attachEvent("on" + event, listener);
                // I get 'window' for ie8.
                global.attachEvent("on" + event, listener);
              }
            },

            detachEvent: function(event, listener) {
              if (typeof global.addEventListener !== "undefined") {
                global.removeEventListener(event, listener, false);
              } else if (global.document && global.detachEvent) {
                global.document.detachEvent("on" + event, listener);
                global.detachEvent("on" + event, listener);
              }
            },

            unloadAdd: function(listener) {
              if (isChromePackagedApp) {
                return null;
              }

              var ref = random.string(8);
              onUnload[ref] = listener;
              if (afterUnload) {
                setTimeout(this.triggerUnloadCallbacks, 0);
              }
              return ref;
            },

            unloadDel: function(ref) {
              if (ref in onUnload) {
                delete onUnload[ref];
              }
            },

            triggerUnloadCallbacks: function() {
              for (var ref in onUnload) {
                onUnload[ref]();
                delete onUnload[ref];
              }
            }
          };

          var unloadTriggered = function() {
            if (afterUnload) {
              return;
            }
            afterUnload = true;
            module.exports.triggerUnloadCallbacks();
          };

          // 'unload' alone is not reliable in opera within an iframe, but we
          // can't use `beforeunload` as IE fires it on javascript: links.
          if (!isChromePackagedApp) {
            module.exports.attachEvent("unload", unloadTriggered);
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/iframe.js":
      /*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/iframe.js ***!
  \********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var eventUtils = __webpack_require__(
              /*! ./event */ "./node_modules/sockjs-client/lib/utils/event.js"
            ),
            JSON3 = __webpack_require__(
              /*! json3 */ "./node_modules/json3/lib/json3.js"
            ),
            browser = __webpack_require__(
              /*! ./browser */ "./node_modules/sockjs-client/lib/utils/browser.js"
            );

          var debug = function() {};
          if (true) {
            debug = __webpack_require__(
              /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
            )("sockjs-client:utils:iframe");
          }

          module.exports = {
            WPrefix: "_jp",
            currentWindowId: null,

            polluteGlobalNamespace: function() {
              if (!(module.exports.WPrefix in global)) {
                global[module.exports.WPrefix] = {};
              }
            },

            postMessage: function(type, data) {
              if (global.parent !== global) {
                global.parent.postMessage(
                  JSON3.stringify({
                    windowId: module.exports.currentWindowId,
                    type: type,
                    data: data || ""
                  }),
                  "*"
                );
              } else {
                debug("Cannot postMessage, no parent window.", type, data);
              }
            },

            createIframe: function(iframeUrl, errorCallback) {
              var iframe = global.document.createElement("iframe");
              var tref, unloadRef;
              var unattach = function() {
                debug("unattach");
                clearTimeout(tref);
                // Explorer had problems with that.
                try {
                  iframe.onload = null;
                } catch (x) {
                  // intentionally empty
                }
                iframe.onerror = null;
              };
              var cleanup = function() {
                debug("cleanup");
                if (iframe) {
                  unattach();
                  // This timeout makes chrome fire onbeforeunload event
                  // within iframe. Without the timeout it goes straight to
                  // onunload.
                  setTimeout(function() {
                    if (iframe) {
                      iframe.parentNode.removeChild(iframe);
                    }
                    iframe = null;
                  }, 0);
                  eventUtils.unloadDel(unloadRef);
                }
              };
              var onerror = function(err) {
                debug("onerror", err);
                if (iframe) {
                  cleanup();
                  errorCallback(err);
                }
              };
              var post = function(msg, origin) {
                debug("post", msg, origin);
                try {
                  // When the iframe is not loaded, IE raises an exception
                  // on 'contentWindow'.
                  setTimeout(function() {
                    if (iframe && iframe.contentWindow) {
                      iframe.contentWindow.postMessage(msg, origin);
                    }
                  }, 0);
                } catch (x) {
                  // intentionally empty
                }
              };

              iframe.src = iframeUrl;
              iframe.style.display = "none";
              iframe.style.position = "absolute";
              iframe.onerror = function() {
                onerror("onerror");
              };
              iframe.onload = function() {
                debug("onload");
                // `onload` is triggered before scripts on the iframe are
                // executed. Give it few seconds to actually load stuff.
                clearTimeout(tref);
                tref = setTimeout(function() {
                  onerror("onload timeout");
                }, 2000);
              };
              global.document.body.appendChild(iframe);
              tref = setTimeout(function() {
                onerror("timeout");
              }, 15000);
              unloadRef = eventUtils.unloadAdd(cleanup);
              return {
                post: post,
                cleanup: cleanup,
                loaded: unattach
              };
            },

            /* eslint no-undef: "off", new-cap: "off" */
            createHtmlfile: function(iframeUrl, errorCallback) {
              var axo = ["Active"].concat("Object").join("X");
              var doc = new global[axo]("htmlfile");
              var tref, unloadRef;
              var iframe;
              var unattach = function() {
                clearTimeout(tref);
                iframe.onerror = null;
              };
              var cleanup = function() {
                if (doc) {
                  unattach();
                  eventUtils.unloadDel(unloadRef);
                  iframe.parentNode.removeChild(iframe);
                  iframe = doc = null;
                  CollectGarbage();
                }
              };
              var onerror = function(r) {
                debug("onerror", r);
                if (doc) {
                  cleanup();
                  errorCallback(r);
                }
              };
              var post = function(msg, origin) {
                try {
                  // When the iframe is not loaded, IE raises an exception
                  // on 'contentWindow'.
                  setTimeout(function() {
                    if (iframe && iframe.contentWindow) {
                      iframe.contentWindow.postMessage(msg, origin);
                    }
                  }, 0);
                } catch (x) {
                  // intentionally empty
                }
              };

              doc.open();
              doc.write(
                "<html><s" +
                  "cript>" +
                  'document.domain="' +
                  global.document.domain +
                  '";' +
                  "</s" +
                  "cript></html>"
              );
              doc.close();
              doc.parentWindow[module.exports.WPrefix] =
                global[module.exports.WPrefix];
              var c = doc.createElement("div");
              doc.body.appendChild(c);
              iframe = doc.createElement("iframe");
              c.appendChild(iframe);
              iframe.src = iframeUrl;
              iframe.onerror = function() {
                onerror("onerror");
              };
              tref = setTimeout(function() {
                onerror("timeout");
              }, 15000);
              unloadRef = eventUtils.unloadAdd(cleanup);
              return {
                post: post,
                cleanup: cleanup,
                loaded: unattach
              };
            }
          };

          module.exports.iframeEnabled = false;
          if (global.document) {
            // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
            // huge delay, or not at all.
            module.exports.iframeEnabled =
              (typeof global.postMessage === "function" ||
                typeof global.postMessage === "object") &&
              !browser.isKonqueror();
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/log.js":
      /*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/log.js ***!
  \*****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var logObject = {};
          ["log", "debug", "warn"].forEach(function(level) {
            var levelExists;

            try {
              levelExists =
                global.console &&
                global.console[level] &&
                global.console[level].apply;
            } catch (e) {
              // do nothing
            }

            logObject[level] = levelExists
              ? function() {
                  return global.console[level].apply(global.console, arguments);
                }
              : level === "log" ? function() {} : logObject.log;
          });

          module.exports = logObject;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/object.js":
      /*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/object.js ***!
  \********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        module.exports = {
          isObject: function(obj) {
            var type = typeof obj;
            return type === "function" || (type === "object" && !!obj);
          },

          extend: function(obj) {
            if (!this.isObject(obj)) {
              return obj;
            }
            var source, prop;
            for (var i = 1, length = arguments.length; i < length; i++) {
              source = arguments[i];
              for (prop in source) {
                if (Object.prototype.hasOwnProperty.call(source, prop)) {
                  obj[prop] = source[prop];
                }
              }
            }
            return obj;
          }
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/random.js":
      /*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/random.js ***!
  \********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* global crypto:true */
        var crypto = __webpack_require__(
          /*! crypto */ "./node_modules/sockjs-client/lib/utils/browser-crypto.js"
        );

        // This string has length 32, a power of 2, so the modulus doesn't introduce a
        // bias.
        var _randomStringChars = "abcdefghijklmnopqrstuvwxyz012345";
        module.exports = {
          string: function(length) {
            var max = _randomStringChars.length;
            var bytes = crypto.randomBytes(length);
            var ret = [];
            for (var i = 0; i < length; i++) {
              ret.push(_randomStringChars.substr(bytes[i] % max, 1));
            }
            return ret.join("");
          },

          number: function(max) {
            return Math.floor(Math.random() * max);
          },

          numberString: function(max) {
            var t = ("" + (max - 1)).length;
            var p = new Array(t + 1).join("0");
            return (p + this.number(max)).slice(-t);
          }
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/transport.js":
      /*!***********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/transport.js ***!
  \***********************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:utils:transport");
        }

        module.exports = function(availableTransports) {
          return {
            filterToEnabled: function(transportsWhitelist, info) {
              var transports = {
                main: [],
                facade: []
              };
              if (!transportsWhitelist) {
                transportsWhitelist = [];
              } else if (typeof transportsWhitelist === "string") {
                transportsWhitelist = [transportsWhitelist];
              }

              availableTransports.forEach(function(trans) {
                if (!trans) {
                  return;
                }

                if (
                  trans.transportName === "websocket" &&
                  info.websocket === false
                ) {
                  debug("disabled from server", "websocket");
                  return;
                }

                if (
                  transportsWhitelist.length &&
                  transportsWhitelist.indexOf(trans.transportName) === -1
                ) {
                  debug("not in whitelist", trans.transportName);
                  return;
                }

                if (trans.enabled(info)) {
                  debug("enabled", trans.transportName);
                  transports.main.push(trans);
                  if (trans.facadeTransport) {
                    transports.facade.push(trans.facadeTransport);
                  }
                } else {
                  debug("disabled", trans.transportName);
                }
              });
              return transports;
            }
          };
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/utils/url.js":
      /*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/url.js ***!
  \*****************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var URL = __webpack_require__(
          /*! url-parse */ "./node_modules/url-parse/index.js"
        );

        var debug = function() {};
        if (true) {
          debug = __webpack_require__(
            /*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js"
          )("sockjs-client:utils:url");
        }

        module.exports = {
          getOrigin: function(url) {
            if (!url) {
              return null;
            }

            var p = new URL(url);
            if (p.protocol === "file:") {
              return null;
            }

            var port = p.port;
            if (!port) {
              port = p.protocol === "https:" ? "443" : "80";
            }

            return p.protocol + "//" + p.hostname + ":" + port;
          },

          isOriginEqual: function(a, b) {
            var res = this.getOrigin(a) === this.getOrigin(b);
            debug("same", a, b, res);
            return res;
          },

          isSchemeEqual: function(a, b) {
            return a.split(":")[0] === b.split(":")[0];
          },

          addPath: function(url, path) {
            var qs = url.split("?");
            return qs[0] + path + (qs[1] ? "?" + qs[1] : "");
          },

          addQuery: function(url, q) {
            return url + (url.indexOf("?") === -1 ? "?" + q : "&" + q);
          }
        };

        /***/
      },

    /***/ "./node_modules/sockjs-client/lib/version.js":
      /*!***************************************************!*\
  !*** ./node_modules/sockjs-client/lib/version.js ***!
  \***************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        module.exports = "1.1.4";

        /***/
      },

    /***/ "./node_modules/sockjs-client/node_modules/debug/src/browser.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/browser.js ***!
  \**********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(process) {
          /**
           * This is the web browser implementation of `debug()`.
           *
           * Expose `debug()` as the module.
           */

          exports = module.exports = __webpack_require__(
            /*! ./debug */ "./node_modules/sockjs-client/node_modules/debug/src/debug.js"
          );
          exports.log = log;
          exports.formatArgs = formatArgs;
          exports.save = save;
          exports.load = load;
          exports.useColors = useColors;
          exports.storage =
            "undefined" != typeof chrome && "undefined" != typeof chrome.storage
              ? chrome.storage.local
              : localstorage();

          /**
           * Colors.
           */

          exports.colors = [
            "lightseagreen",
            "forestgreen",
            "goldenrod",
            "dodgerblue",
            "darkorchid",
            "crimson"
          ];

          /**
           * Currently only WebKit-based Web Inspectors, Firefox >= v31,
           * and the Firebug extension (any Firefox version) are known
           * to support "%c" CSS customizations.
           *
           * TODO: add a `localStorage` variable to explicitly enable/disable colors
           */

          function useColors() {
            // NB: In an Electron preload script, document will be defined but not fully
            // initialized. Since we know we're in Chrome, we'll just detect this case
            // explicitly
            if (
              typeof window !== "undefined" &&
              window.process &&
              window.process.type === "renderer"
            ) {
              return true;
            }

            // is webkit? http://stackoverflow.com/a/16459606/376773
            // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
            return (
              (typeof document !== "undefined" &&
                document.documentElement &&
                document.documentElement.style &&
                document.documentElement.style.WebkitAppearance) ||
              // is firebug? http://stackoverflow.com/a/398120/376773
              (typeof window !== "undefined" &&
                window.console &&
                (window.console.firebug ||
                  (window.console.exception && window.console.table))) ||
              // is firefox >= v31?
              // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
              (typeof navigator !== "undefined" &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                parseInt(RegExp.$1, 10) >= 31) ||
              // double check webkit in userAgent just in case we are in a worker
              (typeof navigator !== "undefined" &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
            );
          }

          /**
           * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
           */

          exports.formatters.j = function(v) {
            try {
              return JSON.stringify(v);
            } catch (err) {
              return "[UnexpectedJSONParseError]: " + err.message;
            }
          };

          /**
           * Colorize log arguments if enabled.
           *
           * @api public
           */

          function formatArgs(args) {
            var useColors = this.useColors;

            args[0] =
              (useColors ? "%c" : "") +
              this.namespace +
              (useColors ? " %c" : " ") +
              args[0] +
              (useColors ? "%c " : " ") +
              "+" +
              exports.humanize(this.diff);

            if (!useColors) return;

            var c = "color: " + this.color;
            args.splice(1, 0, c, "color: inherit");

            // the final "%c" is somewhat tricky, because there could be other
            // arguments passed either before or after the %c, so we need to
            // figure out the correct index to insert the CSS into
            var index = 0;
            var lastC = 0;
            args[0].replace(/%[a-zA-Z%]/g, function(match) {
              if ("%%" === match) return;
              index++;
              if ("%c" === match) {
                // we only are interested in the *last* %c
                // (the user may have provided their own)
                lastC = index;
              }
            });

            args.splice(lastC, 0, c);
          }

          /**
           * Invokes `console.log()` when available.
           * No-op when `console.log` is not a "function".
           *
           * @api public
           */

          function log() {
            // this hackery is required for IE8/9, where
            // the `console.log` function doesn't have 'apply'
            return (
              "object" === typeof console &&
              console.log &&
              Function.prototype.apply.call(console.log, console, arguments)
            );
          }

          /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

          function save(namespaces) {
            try {
              if (null == namespaces) {
                exports.storage.removeItem("debug");
              } else {
                exports.storage.debug = namespaces;
              }
            } catch (e) {}
          }

          /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

          function load() {
            var r;
            try {
              r = exports.storage.debug;
            } catch (e) {}

            // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
            if (!r && typeof process !== "undefined" && "env" in process) {
              r = Object({ NODE_ENV: "development", PUBLIC_URL: "" }).DEBUG;
            }

            return r;
          }

          /**
           * Enable namespaces listed in `localStorage.debug` initially.
           */

          exports.enable(load());

          /**
           * Localstorage attempts to return the localstorage.
           *
           * This is necessary because safari throws
           * when a user disables cookies/localstorage
           * and you attempt to access it.
           *
           * @return {LocalStorage}
           * @api private
           */

          function localstorage() {
            try {
              return window.localStorage;
            } catch (e) {}
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../../../../process/browser.js */ "./node_modules/process/browser.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/sockjs-client/node_modules/debug/src/debug.js":
      /*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/debug.js ***!
  \********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * This is the common logic for both the Node.js and web browser
         * implementations of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = createDebug.debug = createDebug[
          "default"
        ] = createDebug;
        exports.coerce = coerce;
        exports.disable = disable;
        exports.enable = enable;
        exports.enabled = enabled;
        exports.humanize = __webpack_require__(
          /*! ms */ "./node_modules/ms/index.js"
        );

        /**
         * The currently active debug mode names, and names to skip.
         */

        exports.names = [];
        exports.skips = [];

        /**
         * Map of special "%n" handling functions, for the debug "format" argument.
         *
         * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
         */

        exports.formatters = {};

        /**
         * Previous log timestamp.
         */

        var prevTime;

        /**
         * Select a color.
         * @param {String} namespace
         * @return {Number}
         * @api private
         */

        function selectColor(namespace) {
          var hash = 0,
            i;

          for (i in namespace) {
            hash = (hash << 5) - hash + namespace.charCodeAt(i);
            hash |= 0; // Convert to 32bit integer
          }

          return exports.colors[Math.abs(hash) % exports.colors.length];
        }

        /**
         * Create a debugger with the given `namespace`.
         *
         * @param {String} namespace
         * @return {Function}
         * @api public
         */

        function createDebug(namespace) {
          function debug() {
            // disabled?
            if (!debug.enabled) return;

            var self = debug;

            // set `diff` timestamp
            var curr = +new Date();
            var ms = curr - (prevTime || curr);
            self.diff = ms;
            self.prev = prevTime;
            self.curr = curr;
            prevTime = curr;

            // turn the `arguments` into a proper Array
            var args = new Array(arguments.length);
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i];
            }

            args[0] = exports.coerce(args[0]);

            if ("string" !== typeof args[0]) {
              // anything else let's inspect with %O
              args.unshift("%O");
            }

            // apply any `formatters` transformations
            var index = 0;
            args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
              // if we encounter an escaped % then don't increase the array index
              if (match === "%%") return match;
              index++;
              var formatter = exports.formatters[format];
              if ("function" === typeof formatter) {
                var val = args[index];
                match = formatter.call(self, val);

                // now we need to remove `args[index]` since it's inlined in the `format`
                args.splice(index, 1);
                index--;
              }
              return match;
            });

            // apply env-specific formatting (colors, etc.)
            exports.formatArgs.call(self, args);

            var logFn = debug.log || exports.log || console.log.bind(console);
            logFn.apply(self, args);
          }

          debug.namespace = namespace;
          debug.enabled = exports.enabled(namespace);
          debug.useColors = exports.useColors();
          debug.color = selectColor(namespace);

          // env-specific initialization logic for debug instances
          if ("function" === typeof exports.init) {
            exports.init(debug);
          }

          return debug;
        }

        /**
         * Enables a debug mode by namespaces. This can include modes
         * separated by a colon and wildcards.
         *
         * @param {String} namespaces
         * @api public
         */

        function enable(namespaces) {
          exports.save(namespaces);

          exports.names = [];
          exports.skips = [];

          var split = (typeof namespaces === "string" ? namespaces : "").split(
            /[\s,]+/
          );
          var len = split.length;

          for (var i = 0; i < len; i++) {
            if (!split[i]) continue; // ignore empty strings
            namespaces = split[i].replace(/\*/g, ".*?");
            if (namespaces[0] === "-") {
              exports.skips.push(new RegExp("^" + namespaces.substr(1) + "$"));
            } else {
              exports.names.push(new RegExp("^" + namespaces + "$"));
            }
          }
        }

        /**
         * Disable debug output.
         *
         * @api public
         */

        function disable() {
          exports.enable("");
        }

        /**
         * Returns true if the given mode name is enabled, false otherwise.
         *
         * @param {String} name
         * @return {Boolean}
         * @api public
         */

        function enabled(name) {
          var i, len;
          for (i = 0, len = exports.skips.length; i < len; i++) {
            if (exports.skips[i].test(name)) {
              return false;
            }
          }
          for (i = 0, len = exports.names.length; i < len; i++) {
            if (exports.names[i].test(name)) {
              return true;
            }
          }
          return false;
        }

        /**
         * Coerce `val`.
         *
         * @param {Mixed} val
         * @return {Mixed}
         * @api private
         */

        function coerce(val) {
          if (val instanceof Error) return val.stack || val.message;
          return val;
        }

        /***/
      },

    /***/ "./node_modules/supports-color/index.js":
      /*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(process) {
          var argv = process.argv;

          var terminator = argv.indexOf("--");
          var hasFlag = function(flag) {
            flag = "--" + flag;
            var pos = argv.indexOf(flag);
            return pos !== -1 && (terminator !== -1 ? pos < terminator : true);
          };

          module.exports = (function() {
            if (
              "FORCE_COLOR" in
              Object({ NODE_ENV: "development", PUBLIC_URL: "" })
            ) {
              return true;
            }

            if (
              hasFlag("no-color") ||
              hasFlag("no-colors") ||
              hasFlag("color=false")
            ) {
              return false;
            }

            if (
              hasFlag("color") ||
              hasFlag("colors") ||
              hasFlag("color=true") ||
              hasFlag("color=always")
            ) {
              return true;
            }

            if (process.stdout && !process.stdout.isTTY) {
              return false;
            }

            if (process.platform === "win32") {
              return true;
            }

            if (
              "COLORTERM" in Object({ NODE_ENV: "development", PUBLIC_URL: "" })
            ) {
              return true;
            }

            if (
              Object({ NODE_ENV: "development", PUBLIC_URL: "" }).TERM ===
              "dumb"
            ) {
              return false;
            }

            if (
              /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(
                Object({ NODE_ENV: "development", PUBLIC_URL: "" }).TERM
              )
            ) {
              return true;
            }

            return false;
          })();

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../process/browser.js */ "./node_modules/process/browser.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/url-parse/index.js":
      /*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function(global) {
          var required = __webpack_require__(
              /*! requires-port */ "./node_modules/requires-port/index.js"
            ),
            qs = __webpack_require__(
              /*! querystringify */ "./node_modules/url-parse/node_modules/querystringify/index.js"
            ),
            protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,
            slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;

          /**
           * These are the parse rules for the URL parser, it informs the parser
           * about:
           *
           * 0. The char it Needs to parse, if it's a string it should be done using
           *    indexOf, RegExp using exec and NaN means set as current value.
           * 1. The property we should set when parsing this value.
           * 2. Indication if it's backwards or forward parsing, when set as number it's
           *    the value of extra chars that should be split off.
           * 3. Inherit from location if non existing in the parser.
           * 4. `toLowerCase` the resulting value.
           */
          var rules = [
            ["#", "hash"], // Extract from the back.
            ["?", "query"], // Extract from the back.
            ["/", "pathname"], // Extract from the back.
            ["@", "auth", 1], // Extract from the front.
            [NaN, "host", undefined, 1, 1], // Set left over value.
            [/:(\d+)$/, "port", undefined, 1], // RegExp the back.
            [NaN, "hostname", undefined, 1, 1] // Set left over.
          ];

          /**
           * These properties should not be copied or inherited from. This is only needed
           * for all non blob URL's as a blob URL does not include a hash, only the
           * origin.
           *
           * @type {Object}
           * @private
           */
          var ignore = { hash: 1, query: 1 };

          /**
           * The location object differs when your code is loaded through a normal page,
           * Worker or through a worker using a blob. And with the blobble begins the
           * trouble as the location object will contain the URL of the blob, not the
           * location of the page where our code is loaded in. The actual origin is
           * encoded in the `pathname` so we can thankfully generate a good "default"
           * location from it so we can generate proper relative URL's again.
           *
           * @param {Object|String} loc Optional default location object.
           * @returns {Object} lolcation object.
           * @api public
           */
          function lolcation(loc) {
            loc = loc || global.location || {};

            var finaldestination = {},
              type = typeof loc,
              key;

            if ("blob:" === loc.protocol) {
              finaldestination = new URL(unescape(loc.pathname), {});
            } else if ("string" === type) {
              finaldestination = new URL(loc, {});
              for (key in ignore) delete finaldestination[key];
            } else if ("object" === type) {
              for (key in loc) {
                if (key in ignore) continue;
                finaldestination[key] = loc[key];
              }

              if (finaldestination.slashes === undefined) {
                finaldestination.slashes = slashes.test(loc.href);
              }
            }

            return finaldestination;
          }

          /**
           * @typedef ProtocolExtract
           * @type Object
           * @property {String} protocol Protocol matched in the URL, in lowercase.
           * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
           * @property {String} rest Rest of the URL that is not part of the protocol.
           */

          /**
           * Extract protocol information from a URL with/without double slash ("//").
           *
           * @param {String} address URL we want to extract from.
           * @return {ProtocolExtract} Extracted information.
           * @api private
           */
          function extractProtocol(address) {
            var match = protocolre.exec(address);

            return {
              protocol: match[1] ? match[1].toLowerCase() : "",
              slashes: !!match[2],
              rest: match[3]
            };
          }

          /**
           * Resolve a relative URL pathname against a base URL pathname.
           *
           * @param {String} relative Pathname of the relative URL.
           * @param {String} base Pathname of the base URL.
           * @return {String} Resolved pathname.
           * @api private
           */
          function resolve(relative, base) {
            var path = (base || "/")
                .split("/")
                .slice(0, -1)
                .concat(relative.split("/")),
              i = path.length,
              last = path[i - 1],
              unshift = false,
              up = 0;

            while (i--) {
              if (path[i] === ".") {
                path.splice(i, 1);
              } else if (path[i] === "..") {
                path.splice(i, 1);
                up++;
              } else if (up) {
                if (i === 0) unshift = true;
                path.splice(i, 1);
                up--;
              }
            }

            if (unshift) path.unshift("");
            if (last === "." || last === "..") path.push("");

            return path.join("/");
          }

          /**
           * The actual URL instance. Instead of returning an object we've opted-in to
           * create an actual constructor as it's much more memory efficient and
           * faster and it pleases my OCD.
           *
           * @constructor
           * @param {String} address URL we want to parse.
           * @param {Object|String} location Location defaults for relative paths.
           * @param {Boolean|Function} parser Parser for the query string.
           * @api public
           */
          function URL(address, location, parser) {
            if (!(this instanceof URL)) {
              return new URL(address, location, parser);
            }

            var relative,
              extracted,
              parse,
              instruction,
              index,
              key,
              instructions = rules.slice(),
              type = typeof location,
              url = this,
              i = 0;

            //
            // The following if statements allows this module two have compatibility with
            // 2 different API:
            //
            // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
            //    where the boolean indicates that the query string should also be parsed.
            //
            // 2. The `URL` interface of the browser which accepts a URL, object as
            //    arguments. The supplied object will be used as default values / fall-back
            //    for relative paths.
            //
            if ("object" !== type && "string" !== type) {
              parser = location;
              location = null;
            }

            if (parser && "function" !== typeof parser) parser = qs.parse;

            location = lolcation(location);

            //
            // Extract protocol information before running the instructions.
            //
            extracted = extractProtocol(address || "");
            relative = !extracted.protocol && !extracted.slashes;
            url.slashes = extracted.slashes || (relative && location.slashes);
            url.protocol = extracted.protocol || location.protocol || "";
            address = extracted.rest;

            //
            // When the authority component is absent the URL starts with a path
            // component.
            //
            if (!extracted.slashes) instructions[2] = [/(.*)/, "pathname"];

            for (; i < instructions.length; i++) {
              instruction = instructions[i];
              parse = instruction[0];
              key = instruction[1];

              if (parse !== parse) {
                url[key] = address;
              } else if ("string" === typeof parse) {
                if (~(index = address.indexOf(parse))) {
                  if ("number" === typeof instruction[2]) {
                    url[key] = address.slice(0, index);
                    address = address.slice(index + instruction[2]);
                  } else {
                    url[key] = address.slice(index);
                    address = address.slice(0, index);
                  }
                }
              } else if ((index = parse.exec(address))) {
                url[key] = index[1];
                address = address.slice(0, index.index);
              }

              url[key] =
                url[key] ||
                (relative && instruction[3] ? location[key] || "" : "");

              //
              // Hostname, host and protocol should be lowercased so they can be used to
              // create a proper `origin`.
              //
              if (instruction[4]) url[key] = url[key].toLowerCase();
            }

            //
            // Also parse the supplied query string in to an object. If we're supplied
            // with a custom parser as function use that instead of the default build-in
            // parser.
            //
            if (parser) url.query = parser(url.query);

            //
            // If the URL is relative, resolve the pathname against the base URL.
            //
            if (
              relative &&
              location.slashes &&
              url.pathname.charAt(0) !== "/" &&
              (url.pathname !== "" || location.pathname !== "")
            ) {
              url.pathname = resolve(url.pathname, location.pathname);
            }

            //
            // We should not add port numbers if they are already the default port number
            // for a given protocol. As the host also contains the port number we're going
            // override it with the hostname which contains no port number.
            //
            if (!required(url.port, url.protocol)) {
              url.host = url.hostname;
              url.port = "";
            }

            //
            // Parse down the `auth` for the username and password.
            //
            url.username = url.password = "";
            if (url.auth) {
              instruction = url.auth.split(":");
              url.username = instruction[0] || "";
              url.password = instruction[1] || "";
            }

            url.origin =
              url.protocol && url.host && url.protocol !== "file:"
                ? url.protocol + "//" + url.host
                : "null";

            //
            // The href is just the compiled result.
            //
            url.href = url.toString();
          }

          /**
           * This is convenience method for changing properties in the URL instance to
           * insure that they all propagate correctly.
           *
           * @param {String} part          Property we need to adjust.
           * @param {Mixed} value          The newly assigned value.
           * @param {Boolean|Function} fn  When setting the query, it will be the function
           *                               used to parse the query.
           *                               When setting the protocol, double slash will be
           *                               removed from the final url if it is true.
           * @returns {URL}
           * @api public
           */
          function set(part, value, fn) {
            var url = this;

            switch (part) {
              case "query":
                if ("string" === typeof value && value.length) {
                  value = (fn || qs.parse)(value);
                }

                url[part] = value;
                break;

              case "port":
                url[part] = value;

                if (!required(value, url.protocol)) {
                  url.host = url.hostname;
                  url[part] = "";
                } else if (value) {
                  url.host = url.hostname + ":" + value;
                }

                break;

              case "hostname":
                url[part] = value;

                if (url.port) value += ":" + url.port;
                url.host = value;
                break;

              case "host":
                url[part] = value;

                if (/:\d+$/.test(value)) {
                  value = value.split(":");
                  url.port = value.pop();
                  url.hostname = value.join(":");
                } else {
                  url.hostname = value;
                  url.port = "";
                }

                break;

              case "protocol":
                url.protocol = value.toLowerCase();
                url.slashes = !fn;
                break;

              case "pathname":
              case "hash":
                if (value) {
                  var char = part === "pathname" ? "/" : "#";
                  url[part] = value.charAt(0) !== char ? char + value : value;
                } else {
                  url[part] = value;
                }
                break;

              default:
                url[part] = value;
            }

            for (var i = 0; i < rules.length; i++) {
              var ins = rules[i];

              if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
            }

            url.origin =
              url.protocol && url.host && url.protocol !== "file:"
                ? url.protocol + "//" + url.host
                : "null";

            url.href = url.toString();

            return url;
          }

          /**
           * Transform the properties back in to a valid and full URL string.
           *
           * @param {Function} stringify Optional query stringify function.
           * @returns {String}
           * @api public
           */
          function toString(stringify) {
            if (!stringify || "function" !== typeof stringify)
              stringify = qs.stringify;

            var query,
              url = this,
              protocol = url.protocol;

            if (protocol && protocol.charAt(protocol.length - 1) !== ":")
              protocol += ":";

            var result = protocol + (url.slashes ? "//" : "");

            if (url.username) {
              result += url.username;
              if (url.password) result += ":" + url.password;
              result += "@";
            }

            result += url.host + url.pathname;

            query =
              "object" === typeof url.query ? stringify(url.query) : url.query;
            if (query) result += "?" !== query.charAt(0) ? "?" + query : query;

            if (url.hash) result += url.hash;

            return result;
          }

          URL.prototype = { set: set, toString: toString };

          //
          // Expose the URL parser and some additional properties that might be useful for
          // others or testing.
          //
          URL.extractProtocol = extractProtocol;
          URL.location = lolcation;
          URL.qs = qs;

          module.exports = URL;

          /* WEBPACK VAR INJECTION */
        }.call(
          exports,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"
          )
        ));

        /***/
      },

    /***/ "./node_modules/url-parse/node_modules/querystringify/index.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/url-parse/node_modules/querystringify/index.js ***!
  \*********************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var has = Object.prototype.hasOwnProperty;

        /**
         * Decode a URI encoded string.
         *
         * @param {String} input The URI encoded string.
         * @returns {String} The decoded string.
         * @api private
         */
        function decode(input) {
          return decodeURIComponent(input.replace(/\+/g, " "));
        }

        /**
         * Simple query string parser.
         *
         * @param {String} query The query string that needs to be parsed.
         * @returns {Object}
         * @api public
         */
        function querystring(query) {
          var parser = /([^=?&]+)=?([^&]*)/g,
            result = {},
            part;

          //
          // Little nifty parsing hack, leverage the fact that RegExp.exec increments
          // the lastIndex property so we can continue executing this loop until we've
          // parsed all results.
          //
          for (
            ;
            (part = parser.exec(query));
            result[decode(part[1])] = decode(part[2])
          );

          return result;
        }

        /**
         * Transform a query string to an object.
         *
         * @param {Object} obj Object that should be transformed.
         * @param {String} prefix Optional prefix.
         * @returns {String}
         * @api public
         */
        function querystringify(obj, prefix) {
          prefix = prefix || "";

          var pairs = [];

          //
          // Optionally prefix with a '?' if needed
          //
          if ("string" !== typeof prefix) prefix = "?";

          for (var key in obj) {
            if (has.call(obj, key)) {
              pairs.push(
                encodeURIComponent(key) + "=" + encodeURIComponent(obj[key])
              );
            }
          }

          return pairs.length ? prefix + pairs.join("&") : "";
        }

        //
        // Expose the module.
        //
        exports.stringify = querystringify;
        exports.parse = querystring;

        /***/
      },

    /***/ "./node_modules/url/url.js":
      /*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var punycode = __webpack_require__(
          /*! punycode */ "./node_modules/punycode/punycode.js"
        );
        var util = __webpack_require__(
          /*! ./util */ "./node_modules/url/util.js"
        );

        exports.parse = urlParse;
        exports.resolve = urlResolve;
        exports.resolveObject = urlResolveObject;
        exports.format = urlFormat;

        exports.Url = Url;

        function Url() {
          this.protocol = null;
          this.slashes = null;
          this.auth = null;
          this.host = null;
          this.port = null;
          this.hostname = null;
          this.hash = null;
          this.search = null;
          this.query = null;
          this.pathname = null;
          this.path = null;
          this.href = null;
        }

        // Reference: RFC 3986, RFC 1808, RFC 2396

        // define these here so at least they only have to be
        // compiled once on the first module load.
        var protocolPattern = /^([a-z0-9.+-]+:)/i,
          portPattern = /:[0-9]*$/,
          // Special case for a simple path URL
          simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
          // RFC 2396: characters reserved for delimiting URLs.
          // We actually just auto-escape these.
          delims = ["<", ">", '"', "`", " ", "\r", "\n", "\t"],
          // RFC 2396: characters not allowed for various reasons.
          unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims),
          // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
          autoEscape = ["'"].concat(unwise),
          // Characters that are never ever allowed in a hostname.
          // Note that any invalid chars are also handled, but these
          // are the ones that are *expected* to be seen, so we fast-path
          // them.
          nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape),
          hostEndingChars = ["/", "?", "#"],
          hostnameMaxLen = 255,
          hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
          hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
          // protocols that can allow "unsafe" and "unwise" chars.
          unsafeProtocol = {
            javascript: true,
            "javascript:": true
          },
          // protocols that never have a hostname.
          hostlessProtocol = {
            javascript: true,
            "javascript:": true
          },
          // protocols that always contain a // bit.
          slashedProtocol = {
            http: true,
            https: true,
            ftp: true,
            gopher: true,
            file: true,
            "http:": true,
            "https:": true,
            "ftp:": true,
            "gopher:": true,
            "file:": true
          },
          querystring = __webpack_require__(
            /*! querystring */ "./node_modules/querystring-es3/index.js"
          );

        function urlParse(url, parseQueryString, slashesDenoteHost) {
          if (url && util.isObject(url) && url instanceof Url) return url;

          var u = new Url();
          u.parse(url, parseQueryString, slashesDenoteHost);
          return u;
        }

        Url.prototype.parse = function(
          url,
          parseQueryString,
          slashesDenoteHost
        ) {
          if (!util.isString(url)) {
            throw new TypeError(
              "Parameter 'url' must be a string, not " + typeof url
            );
          }

          // Copy chrome, IE, opera backslash-handling behavior.
          // Back slashes before the query string get converted to forward slashes
          // See: https://code.google.com/p/chromium/issues/detail?id=25916
          var queryIndex = url.indexOf("?"),
            splitter =
              queryIndex !== -1 && queryIndex < url.indexOf("#") ? "?" : "#",
            uSplit = url.split(splitter),
            slashRegex = /\\/g;
          uSplit[0] = uSplit[0].replace(slashRegex, "/");
          url = uSplit.join(splitter);

          var rest = url;

          // trim before proceeding.
          // This is to support parse stuff like "  http://foo.com  \n"
          rest = rest.trim();

          if (!slashesDenoteHost && url.split("#").length === 1) {
            // Try fast path regexp
            var simplePath = simplePathPattern.exec(rest);
            if (simplePath) {
              this.path = rest;
              this.href = rest;
              this.pathname = simplePath[1];
              if (simplePath[2]) {
                this.search = simplePath[2];
                if (parseQueryString) {
                  this.query = querystring.parse(this.search.substr(1));
                } else {
                  this.query = this.search.substr(1);
                }
              } else if (parseQueryString) {
                this.search = "";
                this.query = {};
              }
              return this;
            }
          }

          var proto = protocolPattern.exec(rest);
          if (proto) {
            proto = proto[0];
            var lowerProto = proto.toLowerCase();
            this.protocol = lowerProto;
            rest = rest.substr(proto.length);
          }

          // figure out if it's got a host
          // user@server is *always* interpreted as a hostname, and url
          // resolution will treat //foo/bar as host=foo,path=bar because that's
          // how the browser resolves relative URLs.
          if (
            slashesDenoteHost ||
            proto ||
            rest.match(/^\/\/[^@\/]+@[^@\/]+/)
          ) {
            var slashes = rest.substr(0, 2) === "//";
            if (slashes && !(proto && hostlessProtocol[proto])) {
              rest = rest.substr(2);
              this.slashes = true;
            }
          }

          if (
            !hostlessProtocol[proto] &&
            (slashes || (proto && !slashedProtocol[proto]))
          ) {
            // there's a hostname.
            // the first instance of /, ?, ;, or # ends the host.
            //
            // If there is an @ in the hostname, then non-host chars *are* allowed
            // to the left of the last @ sign, unless some host-ending character
            // comes *before* the @-sign.
            // URLs are obnoxious.
            //
            // ex:
            // http://a@b@c/ => user:a@b host:c
            // http://a@b?@c => user:a host:c path:/?@c

            // v0.12 TODO(isaacs): This is not quite how Chrome does things.
            // Review our test case against browsers more comprehensively.

            // find the first instance of any hostEndingChars
            var hostEnd = -1;
            for (var i = 0; i < hostEndingChars.length; i++) {
              var hec = rest.indexOf(hostEndingChars[i]);
              if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                hostEnd = hec;
            }

            // at this point, either we have an explicit point where the
            // auth portion cannot go past, or the last @ char is the decider.
            var auth, atSign;
            if (hostEnd === -1) {
              // atSign can be anywhere.
              atSign = rest.lastIndexOf("@");
            } else {
              // atSign must be in auth portion.
              // http://a@b/c@d => host:b auth:a path:/c@d
              atSign = rest.lastIndexOf("@", hostEnd);
            }

            // Now we have a portion which is definitely the auth.
            // Pull that off.
            if (atSign !== -1) {
              auth = rest.slice(0, atSign);
              rest = rest.slice(atSign + 1);
              this.auth = decodeURIComponent(auth);
            }

            // the host is the remaining to the left of the first non-host char
            hostEnd = -1;
            for (var i = 0; i < nonHostChars.length; i++) {
              var hec = rest.indexOf(nonHostChars[i]);
              if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                hostEnd = hec;
            }
            // if we still have not hit it, then the entire thing is a host.
            if (hostEnd === -1) hostEnd = rest.length;

            this.host = rest.slice(0, hostEnd);
            rest = rest.slice(hostEnd);

            // pull out port.
            this.parseHost();

            // we've indicated that there is a hostname,
            // so even if it's empty, it has to be present.
            this.hostname = this.hostname || "";

            // if hostname begins with [ and ends with ]
            // assume that it's an IPv6 address.
            var ipv6Hostname =
              this.hostname[0] === "[" &&
              this.hostname[this.hostname.length - 1] === "]";

            // validate a little.
            if (!ipv6Hostname) {
              var hostparts = this.hostname.split(/\./);
              for (var i = 0, l = hostparts.length; i < l; i++) {
                var part = hostparts[i];
                if (!part) continue;
                if (!part.match(hostnamePartPattern)) {
                  var newpart = "";
                  for (var j = 0, k = part.length; j < k; j++) {
                    if (part.charCodeAt(j) > 127) {
                      // we replace non-ASCII char with a temporary placeholder
                      // we need this to make sure size of hostname is not
                      // broken by replacing non-ASCII by nothing
                      newpart += "x";
                    } else {
                      newpart += part[j];
                    }
                  }
                  // we test again with ASCII char only
                  if (!newpart.match(hostnamePartPattern)) {
                    var validParts = hostparts.slice(0, i);
                    var notHost = hostparts.slice(i + 1);
                    var bit = part.match(hostnamePartStart);
                    if (bit) {
                      validParts.push(bit[1]);
                      notHost.unshift(bit[2]);
                    }
                    if (notHost.length) {
                      rest = "/" + notHost.join(".") + rest;
                    }
                    this.hostname = validParts.join(".");
                    break;
                  }
                }
              }
            }

            if (this.hostname.length > hostnameMaxLen) {
              this.hostname = "";
            } else {
              // hostnames are always lower case.
              this.hostname = this.hostname.toLowerCase();
            }

            if (!ipv6Hostname) {
              // IDNA Support: Returns a punycoded representation of "domain".
              // It only converts parts of the domain name that
              // have non-ASCII characters, i.e. it doesn't matter if
              // you call it with a domain that already is ASCII-only.
              this.hostname = punycode.toASCII(this.hostname);
            }

            var p = this.port ? ":" + this.port : "";
            var h = this.hostname || "";
            this.host = h + p;
            this.href += this.host;

            // strip [ and ] from the hostname
            // the host field still retains them, though
            if (ipv6Hostname) {
              this.hostname = this.hostname.substr(1, this.hostname.length - 2);
              if (rest[0] !== "/") {
                rest = "/" + rest;
              }
            }
          }

          // now rest is set to the post-host stuff.
          // chop off any delim chars.
          if (!unsafeProtocol[lowerProto]) {
            // First, make 100% sure that any "autoEscape" chars get
            // escaped, even if encodeURIComponent doesn't think they
            // need to be.
            for (var i = 0, l = autoEscape.length; i < l; i++) {
              var ae = autoEscape[i];
              if (rest.indexOf(ae) === -1) continue;
              var esc = encodeURIComponent(ae);
              if (esc === ae) {
                esc = escape(ae);
              }
              rest = rest.split(ae).join(esc);
            }
          }

          // chop off from the tail first.
          var hash = rest.indexOf("#");
          if (hash !== -1) {
            // got a fragment string.
            this.hash = rest.substr(hash);
            rest = rest.slice(0, hash);
          }
          var qm = rest.indexOf("?");
          if (qm !== -1) {
            this.search = rest.substr(qm);
            this.query = rest.substr(qm + 1);
            if (parseQueryString) {
              this.query = querystring.parse(this.query);
            }
            rest = rest.slice(0, qm);
          } else if (parseQueryString) {
            // no query string, but parseQueryString still requested
            this.search = "";
            this.query = {};
          }
          if (rest) this.pathname = rest;
          if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
            this.pathname = "/";
          }

          //to support http.request
          if (this.pathname || this.search) {
            var p = this.pathname || "";
            var s = this.search || "";
            this.path = p + s;
          }

          // finally, reconstruct the href based on what has been validated.
          this.href = this.format();
          return this;
        };

        // format a parsed object into a url string
        function urlFormat(obj) {
          // ensure it's an object, and not a string url.
          // If it's an obj, this is a no-op.
          // this way, you can call url_format() on strings
          // to clean up potentially wonky urls.
          if (util.isString(obj)) obj = urlParse(obj);
          if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
          return obj.format();
        }

        Url.prototype.format = function() {
          var auth = this.auth || "";
          if (auth) {
            auth = encodeURIComponent(auth);
            auth = auth.replace(/%3A/i, ":");
            auth += "@";
          }

          var protocol = this.protocol || "",
            pathname = this.pathname || "",
            hash = this.hash || "",
            host = false,
            query = "";

          if (this.host) {
            host = auth + this.host;
          } else if (this.hostname) {
            host =
              auth +
              (this.hostname.indexOf(":") === -1
                ? this.hostname
                : "[" + this.hostname + "]");
            if (this.port) {
              host += ":" + this.port;
            }
          }

          if (
            this.query &&
            util.isObject(this.query) &&
            Object.keys(this.query).length
          ) {
            query = querystring.stringify(this.query);
          }

          var search = this.search || (query && "?" + query) || "";

          if (protocol && protocol.substr(-1) !== ":") protocol += ":";

          // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
          // unless they had them to begin with.
          if (
            this.slashes ||
            ((!protocol || slashedProtocol[protocol]) && host !== false)
          ) {
            host = "//" + (host || "");
            if (pathname && pathname.charAt(0) !== "/")
              pathname = "/" + pathname;
          } else if (!host) {
            host = "";
          }

          if (hash && hash.charAt(0) !== "#") hash = "#" + hash;
          if (search && search.charAt(0) !== "?") search = "?" + search;

          pathname = pathname.replace(/[?#]/g, function(match) {
            return encodeURIComponent(match);
          });
          search = search.replace("#", "%23");

          return protocol + host + pathname + search + hash;
        };

        function urlResolve(source, relative) {
          return urlParse(source, false, true).resolve(relative);
        }

        Url.prototype.resolve = function(relative) {
          return this.resolveObject(urlParse(relative, false, true)).format();
        };

        function urlResolveObject(source, relative) {
          if (!source) return relative;
          return urlParse(source, false, true).resolveObject(relative);
        }

        Url.prototype.resolveObject = function(relative) {
          if (util.isString(relative)) {
            var rel = new Url();
            rel.parse(relative, false, true);
            relative = rel;
          }

          var result = new Url();
          var tkeys = Object.keys(this);
          for (var tk = 0; tk < tkeys.length; tk++) {
            var tkey = tkeys[tk];
            result[tkey] = this[tkey];
          }

          // hash is always overridden, no matter what.
          // even href="" will remove it.
          result.hash = relative.hash;

          // if the relative url is empty, then there's nothing left to do here.
          if (relative.href === "") {
            result.href = result.format();
            return result;
          }

          // hrefs like //foo/bar always cut to the protocol.
          if (relative.slashes && !relative.protocol) {
            // take everything except the protocol from relative
            var rkeys = Object.keys(relative);
            for (var rk = 0; rk < rkeys.length; rk++) {
              var rkey = rkeys[rk];
              if (rkey !== "protocol") result[rkey] = relative[rkey];
            }

            //urlParse appends trailing / to urls like http://www.example.com
            if (
              slashedProtocol[result.protocol] &&
              result.hostname &&
              !result.pathname
            ) {
              result.path = result.pathname = "/";
            }

            result.href = result.format();
            return result;
          }

          if (relative.protocol && relative.protocol !== result.protocol) {
            // if it's a known url protocol, then changing
            // the protocol does weird things
            // first, if it's not file:, then we MUST have a host,
            // and if there was a path
            // to begin with, then we MUST have a path.
            // if it is file:, then the host is dropped,
            // because that's known to be hostless.
            // anything else is assumed to be absolute.
            if (!slashedProtocol[relative.protocol]) {
              var keys = Object.keys(relative);
              for (var v = 0; v < keys.length; v++) {
                var k = keys[v];
                result[k] = relative[k];
              }
              result.href = result.format();
              return result;
            }

            result.protocol = relative.protocol;
            if (!relative.host && !hostlessProtocol[relative.protocol]) {
              var relPath = (relative.pathname || "").split("/");
              while (relPath.length && !(relative.host = relPath.shift()));
              if (!relative.host) relative.host = "";
              if (!relative.hostname) relative.hostname = "";
              if (relPath[0] !== "") relPath.unshift("");
              if (relPath.length < 2) relPath.unshift("");
              result.pathname = relPath.join("/");
            } else {
              result.pathname = relative.pathname;
            }
            result.search = relative.search;
            result.query = relative.query;
            result.host = relative.host || "";
            result.auth = relative.auth;
            result.hostname = relative.hostname || relative.host;
            result.port = relative.port;
            // to support http.request
            if (result.pathname || result.search) {
              var p = result.pathname || "";
              var s = result.search || "";
              result.path = p + s;
            }
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
          }

          var isSourceAbs =
              result.pathname && result.pathname.charAt(0) === "/",
            isRelAbs =
              relative.host ||
              (relative.pathname && relative.pathname.charAt(0) === "/"),
            mustEndAbs =
              isRelAbs || isSourceAbs || (result.host && relative.pathname),
            removeAllDots = mustEndAbs,
            srcPath = (result.pathname && result.pathname.split("/")) || [],
            relPath = (relative.pathname && relative.pathname.split("/")) || [],
            psychotic = result.protocol && !slashedProtocol[result.protocol];

          // if the url is a non-slashed url, then relative
          // links like ../.. should be able
          // to crawl up to the hostname, as well.  This is strange.
          // result.protocol has already been set by now.
          // Later on, put the first path part into the host field.
          if (psychotic) {
            result.hostname = "";
            result.port = null;
            if (result.host) {
              if (srcPath[0] === "") srcPath[0] = result.host;
              else srcPath.unshift(result.host);
            }
            result.host = "";
            if (relative.protocol) {
              relative.hostname = null;
              relative.port = null;
              if (relative.host) {
                if (relPath[0] === "") relPath[0] = relative.host;
                else relPath.unshift(relative.host);
              }
              relative.host = null;
            }
            mustEndAbs = mustEndAbs && (relPath[0] === "" || srcPath[0] === "");
          }

          if (isRelAbs) {
            // it's absolute.
            result.host =
              relative.host || relative.host === ""
                ? relative.host
                : result.host;
            result.hostname =
              relative.hostname || relative.hostname === ""
                ? relative.hostname
                : result.hostname;
            result.search = relative.search;
            result.query = relative.query;
            srcPath = relPath;
            // fall through to the dot-handling below.
          } else if (relPath.length) {
            // it's relative
            // throw away the existing file, and take the new path instead.
            if (!srcPath) srcPath = [];
            srcPath.pop();
            srcPath = srcPath.concat(relPath);
            result.search = relative.search;
            result.query = relative.query;
          } else if (!util.isNullOrUndefined(relative.search)) {
            // just pull out the search.
            // like href='?foo'.
            // Put this after the other two cases because it simplifies the booleans
            if (psychotic) {
              result.hostname = result.host = srcPath.shift();
              //occationaly the auth can get stuck only in host
              //this especially happens in cases like
              //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
              var authInHost =
                result.host && result.host.indexOf("@") > 0
                  ? result.host.split("@")
                  : false;
              if (authInHost) {
                result.auth = authInHost.shift();
                result.host = result.hostname = authInHost.shift();
              }
            }
            result.search = relative.search;
            result.query = relative.query;
            //to support http.request
            if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
              result.path =
                (result.pathname ? result.pathname : "") +
                (result.search ? result.search : "");
            }
            result.href = result.format();
            return result;
          }

          if (!srcPath.length) {
            // no path at all.  easy.
            // we've already handled the other stuff above.
            result.pathname = null;
            //to support http.request
            if (result.search) {
              result.path = "/" + result.search;
            } else {
              result.path = null;
            }
            result.href = result.format();
            return result;
          }

          // if a url ENDs in . or .., then it must get a trailing slash.
          // however, if it ends in anything else non-slashy,
          // then it must NOT get a trailing slash.
          var last = srcPath.slice(-1)[0];
          var hasTrailingSlash =
            ((result.host || relative.host || srcPath.length > 1) &&
              (last === "." || last === "..")) ||
            last === "";

          // strip single dots, resolve double dots to parent dir
          // if the path tries to go above the root, `up` ends up > 0
          var up = 0;
          for (var i = srcPath.length; i >= 0; i--) {
            last = srcPath[i];
            if (last === ".") {
              srcPath.splice(i, 1);
            } else if (last === "..") {
              srcPath.splice(i, 1);
              up++;
            } else if (up) {
              srcPath.splice(i, 1);
              up--;
            }
          }

          // if the path is allowed to go above the root, restore leading ..s
          if (!mustEndAbs && !removeAllDots) {
            for (; up--; up) {
              srcPath.unshift("..");
            }
          }

          if (
            mustEndAbs &&
            srcPath[0] !== "" &&
            (!srcPath[0] || srcPath[0].charAt(0) !== "/")
          ) {
            srcPath.unshift("");
          }

          if (hasTrailingSlash && srcPath.join("/").substr(-1) !== "/") {
            srcPath.push("");
          }

          var isAbsolute =
            srcPath[0] === "" || (srcPath[0] && srcPath[0].charAt(0) === "/");

          // put the host back
          if (psychotic) {
            result.hostname = result.host = isAbsolute
              ? ""
              : srcPath.length ? srcPath.shift() : "";
            //occationaly the auth can get stuck only in host
            //this especially happens in cases like
            //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
            var authInHost =
              result.host && result.host.indexOf("@") > 0
                ? result.host.split("@")
                : false;
            if (authInHost) {
              result.auth = authInHost.shift();
              result.host = result.hostname = authInHost.shift();
            }
          }

          mustEndAbs = mustEndAbs || (result.host && srcPath.length);

          if (mustEndAbs && !isAbsolute) {
            srcPath.unshift("");
          }

          if (!srcPath.length) {
            result.pathname = null;
            result.path = null;
          } else {
            result.pathname = srcPath.join("/");
          }

          //to support request.http
          if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
            result.path =
              (result.pathname ? result.pathname : "") +
              (result.search ? result.search : "");
          }
          result.auth = relative.auth || result.auth;
          result.slashes = result.slashes || relative.slashes;
          result.href = result.format();
          return result;
        };

        Url.prototype.parseHost = function() {
          var host = this.host;
          var port = portPattern.exec(host);
          if (port) {
            port = port[0];
            if (port !== ":") {
              this.port = port.substr(1);
            }
            host = host.substr(0, host.length - port.length);
          }
          if (host) this.hostname = host;
        };

        /***/
      },

    /***/ "./node_modules/url/util.js":
      /*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        module.exports = {
          isString: function(arg) {
            return typeof arg === "string";
          },
          isObject: function(arg) {
            return typeof arg === "object" && arg !== null;
          },
          isNull: function(arg) {
            return arg === null;
          },
          isNullOrUndefined: function(arg) {
            return arg == null;
          }
        };

        /***/
      },

    /***/ "./node_modules/webpack/buildin/amd-options.js":
      /*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        /* WEBPACK VAR INJECTION */ (function(__webpack_amd_options__) {
          /* globals __webpack_amd_options__ */
          module.exports = __webpack_amd_options__;

          /* WEBPACK VAR INJECTION */
        }.call(exports, {}));

        /***/
      },

    /***/ "./node_modules/webpack/buildin/global.js":
      /*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        var g;

        // This works in non-strict mode
        g = (function() {
          return this;
        })();

        try {
          // This works if eval is allowed (see CSP)
          g = g || Function("return this")() || (1, eval)("this");
        } catch (e) {
          // This works if the window reference is available
          if (typeof window === "object") g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
      },

    /***/ "./node_modules/webpack/buildin/module.js":
      /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        module.exports = function(module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function() {};
            module.paths = [];
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, "loaded", {
              enumerable: true,
              get: function() {
                return module.l;
              }
            });
            Object.defineProperty(module, "id", {
              enumerable: true,
              get: function() {
                return module.i;
              }
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },

    /***/ "./node_modules/whatwg-fetch/fetch.js":
      /*!********************************************!*\
  !*** ./node_modules/whatwg-fetch/fetch.js ***!
  \********************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports) {
        (function(self) {
          "use strict";

          if (self.fetch) {
            return;
          }

          var support = {
            searchParams: "URLSearchParams" in self,
            iterable: "Symbol" in self && "iterator" in Symbol,
            blob:
              "FileReader" in self &&
              "Blob" in self &&
              (function() {
                try {
                  new Blob();
                  return true;
                } catch (e) {
                  return false;
                }
              })(),
            formData: "FormData" in self,
            arrayBuffer: "ArrayBuffer" in self
          };

          if (support.arrayBuffer) {
            var viewClasses = [
              "[object Int8Array]",
              "[object Uint8Array]",
              "[object Uint8ClampedArray]",
              "[object Int16Array]",
              "[object Uint16Array]",
              "[object Int32Array]",
              "[object Uint32Array]",
              "[object Float32Array]",
              "[object Float64Array]"
            ];

            var isDataView = function(obj) {
              return obj && DataView.prototype.isPrototypeOf(obj);
            };

            var isArrayBufferView =
              ArrayBuffer.isView ||
              function(obj) {
                return (
                  obj &&
                  viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
                );
              };
          }

          function normalizeName(name) {
            if (typeof name !== "string") {
              name = String(name);
            }
            if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
              throw new TypeError("Invalid character in header field name");
            }
            return name.toLowerCase();
          }

          function normalizeValue(value) {
            if (typeof value !== "string") {
              value = String(value);
            }
            return value;
          }

          // Build a destructive iterator for the value list
          function iteratorFor(items) {
            var iterator = {
              next: function() {
                var value = items.shift();
                return { done: value === undefined, value: value };
              }
            };

            if (support.iterable) {
              iterator[Symbol.iterator] = function() {
                return iterator;
              };
            }

            return iterator;
          }

          function Headers(headers) {
            this.map = {};

            if (headers instanceof Headers) {
              headers.forEach(function(value, name) {
                this.append(name, value);
              }, this);
            } else if (Array.isArray(headers)) {
              headers.forEach(function(header) {
                this.append(header[0], header[1]);
              }, this);
            } else if (headers) {
              Object.getOwnPropertyNames(headers).forEach(function(name) {
                this.append(name, headers[name]);
              }, this);
            }
          }

          Headers.prototype.append = function(name, value) {
            name = normalizeName(name);
            value = normalizeValue(value);
            var oldValue = this.map[name];
            this.map[name] = oldValue ? oldValue + "," + value : value;
          };

          Headers.prototype["delete"] = function(name) {
            delete this.map[normalizeName(name)];
          };

          Headers.prototype.get = function(name) {
            name = normalizeName(name);
            return this.has(name) ? this.map[name] : null;
          };

          Headers.prototype.has = function(name) {
            return this.map.hasOwnProperty(normalizeName(name));
          };

          Headers.prototype.set = function(name, value) {
            this.map[normalizeName(name)] = normalizeValue(value);
          };

          Headers.prototype.forEach = function(callback, thisArg) {
            for (var name in this.map) {
              if (this.map.hasOwnProperty(name)) {
                callback.call(thisArg, this.map[name], name, this);
              }
            }
          };

          Headers.prototype.keys = function() {
            var items = [];
            this.forEach(function(value, name) {
              items.push(name);
            });
            return iteratorFor(items);
          };

          Headers.prototype.values = function() {
            var items = [];
            this.forEach(function(value) {
              items.push(value);
            });
            return iteratorFor(items);
          };

          Headers.prototype.entries = function() {
            var items = [];
            this.forEach(function(value, name) {
              items.push([name, value]);
            });
            return iteratorFor(items);
          };

          if (support.iterable) {
            Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
          }

          function consumed(body) {
            if (body.bodyUsed) {
              return Promise.reject(new TypeError("Already read"));
            }
            body.bodyUsed = true;
          }

          function fileReaderReady(reader) {
            return new Promise(function(resolve, reject) {
              reader.onload = function() {
                resolve(reader.result);
              };
              reader.onerror = function() {
                reject(reader.error);
              };
            });
          }

          function readBlobAsArrayBuffer(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsArrayBuffer(blob);
            return promise;
          }

          function readBlobAsText(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsText(blob);
            return promise;
          }

          function readArrayBufferAsText(buf) {
            var view = new Uint8Array(buf);
            var chars = new Array(view.length);

            for (var i = 0; i < view.length; i++) {
              chars[i] = String.fromCharCode(view[i]);
            }
            return chars.join("");
          }

          function bufferClone(buf) {
            if (buf.slice) {
              return buf.slice(0);
            } else {
              var view = new Uint8Array(buf.byteLength);
              view.set(new Uint8Array(buf));
              return view.buffer;
            }
          }

          function Body() {
            this.bodyUsed = false;

            this._initBody = function(body) {
              this._bodyInit = body;
              if (!body) {
                this._bodyText = "";
              } else if (typeof body === "string") {
                this._bodyText = body;
              } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
                this._bodyBlob = body;
              } else if (
                support.formData &&
                FormData.prototype.isPrototypeOf(body)
              ) {
                this._bodyFormData = body;
              } else if (
                support.searchParams &&
                URLSearchParams.prototype.isPrototypeOf(body)
              ) {
                this._bodyText = body.toString();
              } else if (
                support.arrayBuffer &&
                support.blob &&
                isDataView(body)
              ) {
                this._bodyArrayBuffer = bufferClone(body.buffer);
                // IE 10-11 can't handle a DataView body.
                this._bodyInit = new Blob([this._bodyArrayBuffer]);
              } else if (
                support.arrayBuffer &&
                (ArrayBuffer.prototype.isPrototypeOf(body) ||
                  isArrayBufferView(body))
              ) {
                this._bodyArrayBuffer = bufferClone(body);
              } else {
                throw new Error("unsupported BodyInit type");
              }

              if (!this.headers.get("content-type")) {
                if (typeof body === "string") {
                  this.headers.set("content-type", "text/plain;charset=UTF-8");
                } else if (this._bodyBlob && this._bodyBlob.type) {
                  this.headers.set("content-type", this._bodyBlob.type);
                } else if (
                  support.searchParams &&
                  URLSearchParams.prototype.isPrototypeOf(body)
                ) {
                  this.headers.set(
                    "content-type",
                    "application/x-www-form-urlencoded;charset=UTF-8"
                  );
                }
              }
            };

            if (support.blob) {
              this.blob = function() {
                var rejected = consumed(this);
                if (rejected) {
                  return rejected;
                }

                if (this._bodyBlob) {
                  return Promise.resolve(this._bodyBlob);
                } else if (this._bodyArrayBuffer) {
                  return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                } else if (this._bodyFormData) {
                  throw new Error("could not read FormData body as blob");
                } else {
                  return Promise.resolve(new Blob([this._bodyText]));
                }
              };

              this.arrayBuffer = function() {
                if (this._bodyArrayBuffer) {
                  return (
                    consumed(this) || Promise.resolve(this._bodyArrayBuffer)
                  );
                } else {
                  return this.blob().then(readBlobAsArrayBuffer);
                }
              };
            }

            this.text = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }

              if (this._bodyBlob) {
                return readBlobAsText(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(
                  readArrayBufferAsText(this._bodyArrayBuffer)
                );
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as text");
              } else {
                return Promise.resolve(this._bodyText);
              }
            };

            if (support.formData) {
              this.formData = function() {
                return this.text().then(decode);
              };
            }

            this.json = function() {
              return this.text().then(JSON.parse);
            };

            return this;
          }

          // HTTP methods whose capitalization should be normalized
          var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

          function normalizeMethod(method) {
            var upcased = method.toUpperCase();
            return methods.indexOf(upcased) > -1 ? upcased : method;
          }

          function Request(input, options) {
            options = options || {};
            var body = options.body;

            if (input instanceof Request) {
              if (input.bodyUsed) {
                throw new TypeError("Already read");
              }
              this.url = input.url;
              this.credentials = input.credentials;
              if (!options.headers) {
                this.headers = new Headers(input.headers);
              }
              this.method = input.method;
              this.mode = input.mode;
              if (!body && input._bodyInit != null) {
                body = input._bodyInit;
                input.bodyUsed = true;
              }
            } else {
              this.url = String(input);
            }

            this.credentials =
              options.credentials || this.credentials || "omit";
            if (options.headers || !this.headers) {
              this.headers = new Headers(options.headers);
            }
            this.method = normalizeMethod(
              options.method || this.method || "GET"
            );
            this.mode = options.mode || this.mode || null;
            this.referrer = null;

            if ((this.method === "GET" || this.method === "HEAD") && body) {
              throw new TypeError("Body not allowed for GET or HEAD requests");
            }
            this._initBody(body);
          }

          Request.prototype.clone = function() {
            return new Request(this, { body: this._bodyInit });
          };

          function decode(body) {
            var form = new FormData();
            body
              .trim()
              .split("&")
              .forEach(function(bytes) {
                if (bytes) {
                  var split = bytes.split("=");
                  var name = split.shift().replace(/\+/g, " ");
                  var value = split.join("=").replace(/\+/g, " ");
                  form.append(
                    decodeURIComponent(name),
                    decodeURIComponent(value)
                  );
                }
              });
            return form;
          }

          function parseHeaders(rawHeaders) {
            var headers = new Headers();
            rawHeaders.split(/\r?\n/).forEach(function(line) {
              var parts = line.split(":");
              var key = parts.shift().trim();
              if (key) {
                var value = parts.join(":").trim();
                headers.append(key, value);
              }
            });
            return headers;
          }

          Body.call(Request.prototype);

          function Response(bodyInit, options) {
            if (!options) {
              options = {};
            }

            this.type = "default";
            this.status = "status" in options ? options.status : 200;
            this.ok = this.status >= 200 && this.status < 300;
            this.statusText =
              "statusText" in options ? options.statusText : "OK";
            this.headers = new Headers(options.headers);
            this.url = options.url || "";
            this._initBody(bodyInit);
          }

          Body.call(Response.prototype);

          Response.prototype.clone = function() {
            return new Response(this._bodyInit, {
              status: this.status,
              statusText: this.statusText,
              headers: new Headers(this.headers),
              url: this.url
            });
          };

          Response.error = function() {
            var response = new Response(null, { status: 0, statusText: "" });
            response.type = "error";
            return response;
          };

          var redirectStatuses = [301, 302, 303, 307, 308];

          Response.redirect = function(url, status) {
            if (redirectStatuses.indexOf(status) === -1) {
              throw new RangeError("Invalid status code");
            }

            return new Response(null, {
              status: status,
              headers: { location: url }
            });
          };

          self.Headers = Headers;
          self.Request = Request;
          self.Response = Response;

          self.fetch = function(input, init) {
            return new Promise(function(resolve, reject) {
              var request = new Request(input, init);
              var xhr = new XMLHttpRequest();

              xhr.onload = function() {
                var options = {
                  status: xhr.status,
                  statusText: xhr.statusText,
                  headers: parseHeaders(xhr.getAllResponseHeaders() || "")
                };
                options.url =
                  "responseURL" in xhr
                    ? xhr.responseURL
                    : options.headers.get("X-Request-URL");
                var body = "response" in xhr ? xhr.response : xhr.responseText;
                resolve(new Response(body, options));
              };

              xhr.onerror = function() {
                reject(new TypeError("Network request failed"));
              };

              xhr.ontimeout = function() {
                reject(new TypeError("Network request failed"));
              };

              xhr.open(request.method, request.url, true);

              if (request.credentials === "include") {
                xhr.withCredentials = true;
              }

              if ("responseType" in xhr && support.blob) {
                xhr.responseType = "blob";
              }

              request.headers.forEach(function(value, name) {
                xhr.setRequestHeader(name, value);
              });

              xhr.send(
                typeof request._bodyInit === "undefined"
                  ? null
                  : request._bodyInit
              );
            });
          };
          self.fetch.polyfill = true;
        })(typeof self !== "undefined" ? self : this);

        /***/
      },

    /***/ "./src/App.js":
      /*!********************!*\
  !*** ./src/App.js ***!
  \********************/
      /*! exports provided: default */
      /*! exports used: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js"
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__step_in_test_js__ = __webpack_require__(
          /*! ./step-in-test.js */ "./src/step-in-test.js"
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__step_over_test_js__ = __webpack_require__(
          /*! ./step-over-test.js */ "./src/step-over-test.js"
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__step_out_test_js__ = __webpack_require__(
          /*! ./step-out-test.js */ "./src/step-out-test.js"
        );
        var _jsxFileName =
          "/Users/Ystartsev/Work/debugger-sourcemaps/src/App.js";

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var App = (function(_Component) {
          _inherits(App, _Component);

          function App() {
            _classCallCheck(this, App);

            return _possibleConstructorReturn(
              this,
              (App.__proto__ || Object.getPrototypeOf(App)).apply(
                this,
                arguments
              )
            );
          }

          _createClass(App, [
            {
              key: "render",
              value: function render() {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                  "div",
                  {
                    className: "App",
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 9
                    },
                    __self: this
                  },
                  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "header",
                    {
                      className: "App-header",
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 10
                      },
                      __self: this
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                      "h1",
                      {
                        className: "App-title",
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 11
                        },
                        __self: this
                      },
                      "Welcome to React"
                    )
                  ),
                  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "p",
                    {
                      className: "App-intro",
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 13
                      },
                      __self: this
                    },
                    "To get started, edit ",
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                      "code",
                      {
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 14
                        },
                        __self: this
                      },
                      "src/App.js"
                    ),
                    " and save to reload."
                  )
                );
              }
            }
          ]);

          return App;
        })(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

        window.hitBreakpoint = function breakpoint() {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__step_in_test_js__["b" /* stepInTest */]
          )();
          Object(
            __WEBPACK_IMPORTED_MODULE_2__step_over_test_js__["a" /* default */]
          )();
          Object(
            __WEBPACK_IMPORTED_MODULE_3__step_out_test_js__["a" /* default */]
          )();
          console.log("hitting a breakpoint");
          return;
        };

        window.hitDebugStatement = function() {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__step_in_test_js__[
              "a" /* debugStatement */
            ]
          )();
          console.log("hitting a debug statement");
          return;
        };

        /* harmony default export */ __webpack_exports__["a"] = App;

        /***/
      },

    /***/ "./src/index.js":
      /*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
      /*! no exports provided */
      /*! all exports used */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js"
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(
          /*! react-dom */ "./node_modules/react-dom/index.js"
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_react_dom__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App__ = __webpack_require__(
          /*! ./App */ "./src/App.js"
        );
        var _jsxFileName =
          "/Users/Ystartsev/Work/debugger-sourcemaps/src/index.js";

        __WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(
          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_2__App__["a" /* default */],
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 5
              },
              __self: this
            }
          ),
          document.getElementById("root")
        );

        /***/
      },

    /***/ "./src/step-in-test.js":
      /*!*****************************!*\
  !*** ./src/step-in-test.js ***!
  \*****************************/
      /*! exports provided: stepInTest, debugStatement */
      /*! exports used: debugStatement, stepInTest */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["b"] = stepInTest;
        /* harmony export (immutable) */ __webpack_exports__[
          "a"
        ] = debugStatement;
        // depth: 3, width: 12
        // 2586 functions, 182225 characters generated

        function f0_0_0_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_0_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_2() {
          return Math.random();
        }

        function f0_0_0_3() {
          return Math.random();
        }

        function f0_0_0_4() {
          return isNaN(undefined);
        }

        function f0_0_0_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_0_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_0() {
          f0_0_0_0();
          f0_0_0_1();
          f0_0_0_2();
          f0_0_0_3();
          f0_0_0_4();
          f0_0_0_5();
          f0_0_0_6();
          f0_0_0_7();
          f0_0_0_8();
          f0_0_0_9();
          f0_0_0_10();
          f0_0_0_11();
        }

        function f0_0_1_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_1_1() {
          return Math.random();
        }

        function f0_0_1_2() {
          return Math.random();
        }

        function f0_0_1_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_1_4() {
          return Math.random();
        }

        function f0_0_1_5() {
          return isNaN(undefined);
        }

        function f0_0_1_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_1_7() {
          return isNaN(undefined);
        }

        function f0_0_1_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_1_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_1_10() {
          return Math.random();
        }

        function f0_0_1_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_1() {
          f0_0_1_0();
          f0_0_1_1();
          f0_0_1_2();
          f0_0_1_3();
          f0_0_1_4();
          f0_0_1_5();
          f0_0_1_6();
          f0_0_1_7();
          f0_0_1_8();
          f0_0_1_9();
          f0_0_1_10();
          f0_0_1_11();
        }

        function f0_0_2_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_2_1() {
          return isNaN(undefined);
        }

        function f0_0_2_2() {
          return isNaN(undefined);
        }

        function f0_0_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_2_4() {
          return Math.random();
        }

        function f0_0_2_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_2_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_2_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_2() {
          f0_0_2_0();
          f0_0_2_1();
          f0_0_2_2();
          f0_0_2_3();
          f0_0_2_4();
          f0_0_2_5();
          f0_0_2_6();
          f0_0_2_7();
          f0_0_2_8();
          f0_0_2_9();
          f0_0_2_10();
          f0_0_2_11();
        }

        function f0_0_3_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_3_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_3_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_3_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_3_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_3_5() {
          return isNaN(undefined);
        }

        function f0_0_3_6() {
          return isNaN(undefined);
        }

        function f0_0_3_7() {
          return isNaN(undefined);
        }

        function f0_0_3_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_3_9() {
          return Math.random();
        }

        function f0_0_3_10() {
          return isNaN(undefined);
        }

        function f0_0_3_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_3() {
          f0_0_3_0();
          f0_0_3_1();
          f0_0_3_2();
          f0_0_3_3();
          f0_0_3_4();
          f0_0_3_5();
          f0_0_3_6();
          f0_0_3_7();
          f0_0_3_8();
          f0_0_3_9();
          f0_0_3_10();
          f0_0_3_11();
        }

        function f0_0_4_0() {
          return isNaN(undefined);
        }

        function f0_0_4_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_4_2() {
          return Math.random();
        }

        function f0_0_4_3() {
          return isNaN(undefined);
        }

        function f0_0_4_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_4_5() {
          return isNaN(undefined);
        }

        function f0_0_4_6() {
          return isNaN(undefined);
        }

        function f0_0_4_7() {
          return isNaN(undefined);
        }

        function f0_0_4_8() {
          return isNaN(undefined);
        }

        function f0_0_4_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_4_10() {
          return Math.random();
        }

        function f0_0_4_11() {
          return isNaN(undefined);
        }

        function f0_0_4() {
          f0_0_4_0();
          f0_0_4_1();
          f0_0_4_2();
          f0_0_4_3();
          f0_0_4_4();
          f0_0_4_5();
          f0_0_4_6();
          f0_0_4_7();
          f0_0_4_8();
          f0_0_4_9();
          f0_0_4_10();
          f0_0_4_11();
        }

        function f0_0_5_0() {
          return Math.random();
        }

        function f0_0_5_1() {
          return Math.random();
        }

        function f0_0_5_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_5_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_5_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_5_6() {
          return Math.random();
        }

        function f0_0_5_7() {
          return isNaN(undefined);
        }

        function f0_0_5_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_5_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_5_10() {
          return isNaN(undefined);
        }

        function f0_0_5_11() {
          return Math.random();
        }

        function f0_0_5() {
          f0_0_5_0();
          f0_0_5_1();
          f0_0_5_2();
          f0_0_5_3();
          f0_0_5_4();
          f0_0_5_5();
          f0_0_5_6();
          f0_0_5_7();
          f0_0_5_8();
          f0_0_5_9();
          f0_0_5_10();
          f0_0_5_11();
        }

        function f0_0_6_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_6_1() {
          return Math.random();
        }

        function f0_0_6_2() {
          return isNaN(undefined);
        }

        function f0_0_6_3() {
          return isNaN(undefined);
        }

        function f0_0_6_4() {
          return isNaN(undefined);
        }

        function f0_0_6_5() {
          return Math.random();
        }

        function f0_0_6_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_6_8() {
          return Math.random();
        }

        function f0_0_6_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_6_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_6() {
          f0_0_6_0();
          f0_0_6_1();
          f0_0_6_2();
          f0_0_6_3();
          f0_0_6_4();
          f0_0_6_5();
          f0_0_6_6();
          f0_0_6_7();
          f0_0_6_8();
          f0_0_6_9();
          f0_0_6_10();
          f0_0_6_11();
        }

        function f0_0_7_0() {
          return isNaN(undefined);
        }

        function f0_0_7_1() {
          return Math.random();
        }

        function f0_0_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_7_3() {
          return Math.random();
        }

        function f0_0_7_4() {
          return Math.random();
        }

        function f0_0_7_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_7_6() {
          return Math.random();
        }

        function f0_0_7_7() {
          return Math.random();
        }

        function f0_0_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_7_9() {
          return isNaN(undefined);
        }

        function f0_0_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_7_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_7() {
          f0_0_7_0();
          f0_0_7_1();
          f0_0_7_2();
          f0_0_7_3();
          f0_0_7_4();
          f0_0_7_5();
          f0_0_7_6();
          f0_0_7_7();
          f0_0_7_8();
          f0_0_7_9();
          f0_0_7_10();
          f0_0_7_11();
        }

        function f0_0_8_0() {
          return Math.random();
        }

        function f0_0_8_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_8_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_8_3() {
          return Math.random();
        }

        function f0_0_8_4() {
          return isNaN(undefined);
        }

        function f0_0_8_5() {
          return Math.random();
        }

        function f0_0_8_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_8_7() {
          return Math.random();
        }

        function f0_0_8_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_8_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_8_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_8_11() {
          return Math.random();
        }

        function f0_0_8() {
          f0_0_8_0();
          f0_0_8_1();
          f0_0_8_2();
          f0_0_8_3();
          f0_0_8_4();
          f0_0_8_5();
          f0_0_8_6();
          f0_0_8_7();
          f0_0_8_8();
          f0_0_8_9();
          f0_0_8_10();
          f0_0_8_11();
        }

        function f0_0_9_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_9_1() {
          return Math.random();
        }

        function f0_0_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_9_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_9_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_9_5() {
          return isNaN(undefined);
        }

        function f0_0_9_6() {
          return Math.random();
        }

        function f0_0_9_7() {
          return Math.random();
        }

        function f0_0_9_8() {
          return Math.random();
        }

        function f0_0_9_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_9_10() {
          return Math.random();
        }

        function f0_0_9_11() {
          return Math.random();
        }

        function f0_0_9() {
          f0_0_9_0();
          f0_0_9_1();
          f0_0_9_2();
          f0_0_9_3();
          f0_0_9_4();
          f0_0_9_5();
          f0_0_9_6();
          f0_0_9_7();
          f0_0_9_8();
          f0_0_9_9();
          f0_0_9_10();
          f0_0_9_11();
        }

        function f0_0_10_0() {
          return Math.random();
        }

        function f0_0_10_1() {
          return isNaN(undefined);
        }

        function f0_0_10_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_3() {
          return Math.random();
        }

        function f0_0_10_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_5() {
          return isNaN(undefined);
        }

        function f0_0_10_6() {
          return Math.random();
        }

        function f0_0_10_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_10() {
          f0_0_10_0();
          f0_0_10_1();
          f0_0_10_2();
          f0_0_10_3();
          f0_0_10_4();
          f0_0_10_5();
          f0_0_10_6();
          f0_0_10_7();
          f0_0_10_8();
          f0_0_10_9();
          f0_0_10_10();
          f0_0_10_11();
        }

        function f0_0_11_0() {
          return Math.random();
        }

        function f0_0_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_11_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_11_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_11_5() {
          return isNaN(undefined);
        }

        function f0_0_11_6() {
          return isNaN(undefined);
        }

        function f0_0_11_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_0_11_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_0_11_10() {
          return Math.random();
        }

        function f0_0_11_11() {
          return Math.random();
        }

        function f0_0_11() {
          f0_0_11_0();
          f0_0_11_1();
          f0_0_11_2();
          f0_0_11_3();
          f0_0_11_4();
          f0_0_11_5();
          f0_0_11_6();
          f0_0_11_7();
          f0_0_11_8();
          f0_0_11_9();
          f0_0_11_10();
          f0_0_11_11();
        }

        function f0_0() {
          f0_0_0();
          f0_0_1();
          f0_0_2();
          f0_0_3();
          f0_0_4();
          f0_0_5();
          f0_0_6();
          f0_0_7();
          f0_0_8();
          f0_0_9();
          f0_0_10();
          f0_0_11();
        }

        function f0_1_0_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_0_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_0_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_0_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_0_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_0_5() {
          return Math.random();
        }

        function f0_1_0_6() {
          return isNaN(undefined);
        }

        function f0_1_0_7() {
          return Math.random();
        }

        function f0_1_0_8() {
          return isNaN(undefined);
        }

        function f0_1_0_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_0_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_0_11() {
          return Math.random();
        }

        function f0_1_0() {
          f0_1_0_0();
          f0_1_0_1();
          f0_1_0_2();
          f0_1_0_3();
          f0_1_0_4();
          f0_1_0_5();
          f0_1_0_6();
          f0_1_0_7();
          f0_1_0_8();
          f0_1_0_9();
          f0_1_0_10();
          f0_1_0_11();
        }

        function f0_1_1_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_1_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_1_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_1_3() {
          return isNaN(undefined);
        }

        function f0_1_1_4() {
          return Math.random();
        }

        function f0_1_1_5() {
          return isNaN(undefined);
        }

        function f0_1_1_6() {
          return isNaN(undefined);
        }

        function f0_1_1_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_1_8() {
          return Math.random();
        }

        function f0_1_1_9() {
          return Math.random();
        }

        function f0_1_1_10() {
          return Math.random();
        }

        function f0_1_1_11() {
          return Math.random();
        }

        function f0_1_1() {
          f0_1_1_0();
          f0_1_1_1();
          f0_1_1_2();
          f0_1_1_3();
          f0_1_1_4();
          f0_1_1_5();
          f0_1_1_6();
          f0_1_1_7();
          f0_1_1_8();
          f0_1_1_9();
          f0_1_1_10();
          f0_1_1_11();
        }

        function f0_1_2_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_2_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_5() {
          return Math.random();
        }

        function f0_1_2_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_2_8() {
          return isNaN(undefined);
        }

        function f0_1_2_9() {
          return Math.random();
        }

        function f0_1_2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_2_11() {
          return Math.random();
        }

        function f0_1_2() {
          f0_1_2_0();
          f0_1_2_1();
          f0_1_2_2();
          f0_1_2_3();
          f0_1_2_4();
          f0_1_2_5();
          f0_1_2_6();
          f0_1_2_7();
          f0_1_2_8();
          f0_1_2_9();
          f0_1_2_10();
          f0_1_2_11();
        }

        function f0_1_3_0() {
          return isNaN(undefined);
        }

        function f0_1_3_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_3_2() {
          return isNaN(undefined);
        }

        function f0_1_3_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_3_4() {
          return isNaN(undefined);
        }

        function f0_1_3_5() {
          return Math.random();
        }

        function f0_1_3_6() {
          return Math.random();
        }

        function f0_1_3_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_3_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_3_10() {
          return Math.random();
        }

        function f0_1_3_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_3() {
          f0_1_3_0();
          f0_1_3_1();
          f0_1_3_2();
          f0_1_3_3();
          f0_1_3_4();
          f0_1_3_5();
          f0_1_3_6();
          f0_1_3_7();
          f0_1_3_8();
          f0_1_3_9();
          f0_1_3_10();
          f0_1_3_11();
        }

        function f0_1_4_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_4_1() {
          return isNaN(undefined);
        }

        function f0_1_4_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_4_3() {
          return isNaN(undefined);
        }

        function f0_1_4_4() {
          return isNaN(undefined);
        }

        function f0_1_4_5() {
          return isNaN(undefined);
        }

        function f0_1_4_6() {
          return isNaN(undefined);
        }

        function f0_1_4_7() {
          return Math.random();
        }

        function f0_1_4_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_4_9() {
          return isNaN(undefined);
        }

        function f0_1_4_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_4_11() {
          return Math.random();
        }

        function f0_1_4() {
          f0_1_4_0();
          f0_1_4_1();
          f0_1_4_2();
          f0_1_4_3();
          f0_1_4_4();
          f0_1_4_5();
          f0_1_4_6();
          f0_1_4_7();
          f0_1_4_8();
          f0_1_4_9();
          f0_1_4_10();
          f0_1_4_11();
        }

        function f0_1_5_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_5_1() {
          return isNaN(undefined);
        }

        function f0_1_5_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_5_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_5_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_5_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_5_7() {
          return isNaN(undefined);
        }

        function f0_1_5_8() {
          return isNaN(undefined);
        }

        function f0_1_5_9() {
          return Math.random();
        }

        function f0_1_5_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_5_11() {
          return isNaN(undefined);
        }

        function f0_1_5() {
          f0_1_5_0();
          f0_1_5_1();
          f0_1_5_2();
          f0_1_5_3();
          f0_1_5_4();
          f0_1_5_5();
          f0_1_5_6();
          f0_1_5_7();
          f0_1_5_8();
          f0_1_5_9();
          f0_1_5_10();
          f0_1_5_11();
        }

        function f0_1_6_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_6_1() {
          return isNaN(undefined);
        }

        function f0_1_6_2() {
          return isNaN(undefined);
        }

        function f0_1_6_3() {
          return isNaN(undefined);
        }

        function f0_1_6_4() {
          return isNaN(undefined);
        }

        function f0_1_6_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_6_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_6_8() {
          return isNaN(undefined);
        }

        function f0_1_6_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_6_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_6() {
          f0_1_6_0();
          f0_1_6_1();
          f0_1_6_2();
          f0_1_6_3();
          f0_1_6_4();
          f0_1_6_5();
          f0_1_6_6();
          f0_1_6_7();
          f0_1_6_8();
          f0_1_6_9();
          f0_1_6_10();
          f0_1_6_11();
        }

        function f0_1_7_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_3() {
          return Math.random();
        }

        function f0_1_7_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_7_5() {
          return isNaN(undefined);
        }

        function f0_1_7_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_7_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_7() {
          f0_1_7_0();
          f0_1_7_1();
          f0_1_7_2();
          f0_1_7_3();
          f0_1_7_4();
          f0_1_7_5();
          f0_1_7_6();
          f0_1_7_7();
          f0_1_7_8();
          f0_1_7_9();
          f0_1_7_10();
          f0_1_7_11();
        }
        function f0_1_8_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_8_1() {
          return isNaN(undefined);
        }

        function f0_1_8_2() {
          return Math.random();
        }

        function f0_1_8_3() {
          return isNaN(undefined);
        }

        function f0_1_8_4() {
          return isNaN(undefined);
        }

        function f0_1_8_5() {
          return isNaN(undefined);
        }

        function f0_1_8_6() {
          return isNaN(undefined);
        }

        function f0_1_8_7() {
          return Math.random();
        }

        function f0_1_8_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_8_9() {
          return isNaN(undefined);
        }

        function f0_1_8_10() {
          return isNaN(undefined);
        }

        function f0_1_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_8() {
          f0_1_8_0();
          f0_1_8_1();
          f0_1_8_2();
          f0_1_8_3();
          f0_1_8_4();
          f0_1_8_5();
          f0_1_8_6();
          f0_1_8_7();
          f0_1_8_8();
          f0_1_8_9();
          f0_1_8_10();
          f0_1_8_11();
        }

        function f0_1_9_0() {
          return isNaN(undefined);
        }

        function f0_1_9_1() {
          return isNaN(undefined);
        }

        function f0_1_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_9_3() {
          return isNaN(undefined);
        }

        function f0_1_9_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_9_5() {
          return isNaN(undefined);
        }

        function f0_1_9_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_9_7() {
          return Math.random();
        }

        function f0_1_9_8() {
          return isNaN(undefined);
        }

        function f0_1_9_9() {
          return Math.random();
        }

        function f0_1_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_9() {
          f0_1_9_0();
          f0_1_9_1();
          f0_1_9_2();
          f0_1_9_3();
          f0_1_9_4();
          f0_1_9_5();
          f0_1_9_6();
          f0_1_9_7();
          f0_1_9_8();
          f0_1_9_9();
          f0_1_9_10();
          f0_1_9_11();
        }

        function f0_1_10_0() {
          return isNaN(undefined);
        }

        function f0_1_10_1() {
          return isNaN(undefined);
        }

        function f0_1_10_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_10_3() {
          return Math.random();
        }

        function f0_1_10_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_10_5() {
          return Math.random();
        }

        function f0_1_10_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_10_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_10_8() {
          return isNaN(undefined);
        }

        function f0_1_10_9() {
          return isNaN(undefined);
        }

        function f0_1_10_10() {
          return isNaN(undefined);
        }

        function f0_1_10_11() {
          return isNaN(undefined);
        }

        function f0_1_10() {
          f0_1_10_0();
          f0_1_10_1();
          f0_1_10_2();
          f0_1_10_3();
          f0_1_10_4();
          f0_1_10_5();
          f0_1_10_6();
          f0_1_10_7();
          f0_1_10_8();
          f0_1_10_9();
          f0_1_10_10();
          f0_1_10_11();
        }

        function f0_1_11_0() {
          return Math.random();
        }

        function f0_1_11_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_11_2() {
          return Math.random();
        }

        function f0_1_11_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_11_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_11_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_11_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_11_8() {
          return Math.random();
        }

        function f0_1_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_1_11_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_11_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_1_11() {
          f0_1_11_0();
          f0_1_11_1();
          f0_1_11_2();
          f0_1_11_3();
          f0_1_11_4();
          f0_1_11_5();
          f0_1_11_6();
          f0_1_11_7();
          f0_1_11_8();
          f0_1_11_9();
          f0_1_11_10();
          f0_1_11_11();
        }

        function f0_1() {
          f0_1_0();
          f0_1_1();
          f0_1_2();
          f0_1_3();
          f0_1_4();
          f0_1_5();
          f0_1_6();
          f0_1_7();
          f0_1_8();
          f0_1_9();
          f0_1_10();
          f0_1_11();
        }

        function f0_2_0_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_0_1() {
          return Math.random();
        }

        function f0_2_0_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_0_3() {
          return isNaN(undefined);
        }

        function f0_2_0_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_0_5() {
          return Math.random();
        }

        function f0_2_0_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_0_7() {
          return Math.random();
        }

        function f0_2_0_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_0_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_0_10() {
          return isNaN(undefined);
        }

        function f0_2_0_11() {
          return isNaN(undefined);
        }

        function f0_2_0() {
          f0_2_0_0();
          f0_2_0_1();
          f0_2_0_2();
          f0_2_0_3();
          f0_2_0_4();
          f0_2_0_5();
          f0_2_0_6();
          f0_2_0_7();
          f0_2_0_8();
          f0_2_0_9();
          f0_2_0_10();
          f0_2_0_11();
        }

        function f0_2_1_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_1_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_1_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_1_3() {
          return isNaN(undefined);
        }

        function f0_2_1_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_1_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_1_6() {
          return isNaN(undefined);
        }

        function f0_2_1_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_1_8() {
          return isNaN(undefined);
        }

        function f0_2_1_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_1_10() {
          return isNaN(undefined);
        }

        function f0_2_1_11() {
          return isNaN(undefined);
        }

        function f0_2_1() {
          f0_2_1_0();
          f0_2_1_1();
          f0_2_1_2();
          f0_2_1_3();
          f0_2_1_4();
          f0_2_1_5();
          f0_2_1_6();
          f0_2_1_7();
          f0_2_1_8();
          f0_2_1_9();
          f0_2_1_10();
          f0_2_1_11();
        }

        function f0_2_2_0() {
          return Math.random();
        }

        function f0_2_2_1() {
          return Math.random();
        }

        function f0_2_2_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_2_5() {
          return Math.random();
        }

        function f0_2_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_2_9() {
          return Math.random();
        }

        function f0_2_2_10() {
          return Math.random();
        }

        function f0_2_2_11() {
          return isNaN(undefined);
        }

        function f0_2_2() {
          f0_2_2_0();
          f0_2_2_1();
          f0_2_2_2();
          f0_2_2_3();
          f0_2_2_4();
          f0_2_2_5();
          f0_2_2_6();
          f0_2_2_7();
          f0_2_2_8();
          f0_2_2_9();
          f0_2_2_10();
          f0_2_2_11();
        }

        function f0_2_3_0() {
          return Math.random();
        }

        function f0_2_3_1() {
          return Math.random();
        }

        function f0_2_3_2() {
          return Math.random();
        }

        function f0_2_3_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_3_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_3_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_3_6() {
          return isNaN(undefined);
        }

        function f0_2_3_7() {
          return isNaN(undefined);
        }

        function f0_2_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_3_9() {
          return Math.random();
        }

        function f0_2_3_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_3_11() {
          return isNaN(undefined);
        }

        function f0_2_3() {
          f0_2_3_0();
          f0_2_3_1();
          f0_2_3_2();
          f0_2_3_3();
          f0_2_3_4();
          f0_2_3_5();
          f0_2_3_6();
          f0_2_3_7();
          f0_2_3_8();
          f0_2_3_9();
          f0_2_3_10();
          f0_2_3_11();
        }

        function f0_2_4_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_4_1() {
          return Math.random();
        }

        function f0_2_4_2() {
          return Math.random();
        }

        function f0_2_4_3() {
          return isNaN(undefined);
        }

        function f0_2_4_4() {
          return isNaN(undefined);
        }

        function f0_2_4_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_4_6() {
          return Math.random();
        }

        function f0_2_4_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_4_8() {
          return Math.random();
        }

        function f0_2_4_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_4_10() {
          return isNaN(undefined);
        }

        function f0_2_4_11() {
          return isNaN(undefined);
        }

        function f0_2_4() {
          f0_2_4_0();
          f0_2_4_1();
          f0_2_4_2();
          f0_2_4_3();
          f0_2_4_4();
          f0_2_4_5();
          f0_2_4_6();
          f0_2_4_7();
          f0_2_4_8();
          f0_2_4_9();
          f0_2_4_10();
          f0_2_4_11();
        }

        function f0_2_5_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_5_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_5_2() {
          return Math.random();
        }

        function f0_2_5_3() {
          return Math.random();
        }

        function f0_2_5_4() {
          return isNaN(undefined);
        }

        function f0_2_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_5_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_5_7() {
          return isNaN(undefined);
        }

        function f0_2_5_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_5_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_5_10() {
          return Math.random();
        }

        function f0_2_5_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_5() {
          f0_2_5_0();
          f0_2_5_1();
          f0_2_5_2();
          f0_2_5_3();
          f0_2_5_4();
          f0_2_5_5();
          f0_2_5_6();
          f0_2_5_7();
          f0_2_5_8();
          f0_2_5_9();
          f0_2_5_10();
          f0_2_5_11();
        }

        function f0_2_6_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_6_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_6_2() {
          return Math.random();
        }

        function f0_2_6_3() {
          return Math.random();
        }

        function f0_2_6_4() {
          return Math.random();
        }

        function f0_2_6_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_6_6() {
          return Math.random();
        }

        function f0_2_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_6_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_6_9() {
          return Math.random();
        }

        function f0_2_6_10() {
          return isNaN(undefined);
        }

        function f0_2_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_6() {
          f0_2_6_0();
          f0_2_6_1();
          f0_2_6_2();
          f0_2_6_3();
          f0_2_6_4();
          f0_2_6_5();
          f0_2_6_6();
          f0_2_6_7();
          f0_2_6_8();
          f0_2_6_9();
          f0_2_6_10();
          f0_2_6_11();
        }

        function f0_2_7_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7_2() {
          return isNaN(undefined);
        }

        function f0_2_7_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_7_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7_5() {
          return isNaN(undefined);
        }

        function f0_2_7_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_7_8() {
          return isNaN(undefined);
        }

        function f0_2_7_9() {
          return Math.random();
        }

        function f0_2_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_7() {
          f0_2_7_0();
          f0_2_7_1();
          f0_2_7_2();
          f0_2_7_3();
          f0_2_7_4();
          f0_2_7_5();
          f0_2_7_6();
          f0_2_7_7();
          f0_2_7_8();
          f0_2_7_9();
          f0_2_7_10();
          f0_2_7_11();
        }

        function f0_2_8_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_8_1() {
          return Math.random();
        }

        function f0_2_8_2() {
          return isNaN(undefined);
        }

        function f0_2_8_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_8_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_8_5() {
          return isNaN(undefined);
        }

        function f0_2_8_6() {
          return Math.random();
        }

        function f0_2_8_7() {
          return isNaN(undefined);
        }

        function f0_2_8_8() {
          return Math.random();
        }

        function f0_2_8_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_8_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_8() {
          f0_2_8_0();
          f0_2_8_1();
          f0_2_8_2();
          f0_2_8_3();
          f0_2_8_4();
          f0_2_8_5();
          f0_2_8_6();
          f0_2_8_7();
          f0_2_8_8();
          f0_2_8_9();
          f0_2_8_10();
          f0_2_8_11();
        }

        function f0_2_9_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_4() {
          return isNaN(undefined);
        }

        function f0_2_9_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_9_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_8() {
          return Math.random();
        }

        function f0_2_9_9() {
          return Math.random();
        }

        function f0_2_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_9_11() {
          return isNaN(undefined);
        }

        function f0_2_9() {
          f0_2_9_0();
          f0_2_9_1();
          f0_2_9_2();
          f0_2_9_3();
          f0_2_9_4();
          f0_2_9_5();
          f0_2_9_6();
          f0_2_9_7();
          f0_2_9_8();
          f0_2_9_9();
          f0_2_9_10();
          f0_2_9_11();
        }

        function f0_2_10_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_10_1() {
          return Math.random();
        }

        function f0_2_10_2() {
          return isNaN(undefined);
        }

        function f0_2_10_3() {
          return isNaN(undefined);
        }

        function f0_2_10_4() {
          return isNaN(undefined);
        }

        function f0_2_10_5() {
          return isNaN(undefined);
        }

        function f0_2_10_6() {
          return isNaN(undefined);
        }

        function f0_2_10_7() {
          return Math.random();
        }

        function f0_2_10_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_10_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_10_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_10() {
          f0_2_10_0();
          f0_2_10_1();
          f0_2_10_2();
          f0_2_10_3();
          f0_2_10_4();
          f0_2_10_5();
          f0_2_10_6();
          f0_2_10_7();
          f0_2_10_8();
          f0_2_10_9();
          f0_2_10_10();
          f0_2_10_11();
        }

        function f0_2_11_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_11_1() {
          return Math.random();
        }

        function f0_2_11_2() {
          return Math.random();
        }

        function f0_2_11_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_11_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_11_6() {
          return isNaN(undefined);
        }

        function f0_2_11_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_11_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_2_11_9() {
          return isNaN(undefined);
        }

        function f0_2_11_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_2_11_11() {
          return isNaN(undefined);
        }

        function f0_2_11() {
          f0_2_11_0();
          f0_2_11_1();
          f0_2_11_2();
          f0_2_11_3();
          f0_2_11_4();
          f0_2_11_5();
          f0_2_11_6();
          f0_2_11_7();
          f0_2_11_8();
          f0_2_11_9();
          f0_2_11_10();
          f0_2_11_11();
        }

        function f0_2() {
          f0_2_0();
          f0_2_1();
          f0_2_2();
          f0_2_3();
          f0_2_4();
          f0_2_5();
          f0_2_6();
          f0_2_7();
          f0_2_8();
          f0_2_9();
          f0_2_10();
          f0_2_11();
        }

        function f0_3_0_0() {
          return Math.random();
        }

        function f0_3_0_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_0_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_0_3() {
          return isNaN(undefined);
        }

        function f0_3_0_4() {
          return Math.random();
        }

        function f0_3_0_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_0_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_0_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_0_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_0_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_0_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_0_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_0() {
          f0_3_0_0();
          f0_3_0_1();
          f0_3_0_2();
          f0_3_0_3();
          f0_3_0_4();
          f0_3_0_5();
          f0_3_0_6();
          f0_3_0_7();
          f0_3_0_8();
          f0_3_0_9();
          f0_3_0_10();
          f0_3_0_11();
        }

        function f0_3_1_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_1_1() {
          return isNaN(undefined);
        }

        function f0_3_1_2() {
          return Math.random();
        }

        function f0_3_1_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_1_4() {
          return isNaN(undefined);
        }

        function f0_3_1_5() {
          return Math.random();
        }

        function f0_3_1_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_1_7() {
          return isNaN(undefined);
        }

        function f0_3_1_8() {
          return Math.random();
        }

        function f0_3_1_9() {
          return Math.random();
        }

        function f0_3_1_10() {
          return Math.random();
        }

        function f0_3_1_11() {
          return Math.random();
        }

        function f0_3_1() {
          f0_3_1_0();
          f0_3_1_1();
          f0_3_1_2();
          f0_3_1_3();
          f0_3_1_4();
          f0_3_1_5();
          f0_3_1_6();
          f0_3_1_7();
          f0_3_1_8();
          f0_3_1_9();
          f0_3_1_10();
          f0_3_1_11();
        }

        function f0_3_2_0() {
          return Math.random();
        }

        function f0_3_2_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_2_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_2_3() {
          return isNaN(undefined);
        }

        function f0_3_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_2_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_2_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_2_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_2_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_2_10() {
          return isNaN(undefined);
        }

        function f0_3_2_11() {
          return Math.random();
        }

        function f0_3_2() {
          f0_3_2_0();
          f0_3_2_1();
          f0_3_2_2();
          f0_3_2_3();
          f0_3_2_4();
          f0_3_2_5();
          f0_3_2_6();
          f0_3_2_7();
          f0_3_2_8();
          f0_3_2_9();
          f0_3_2_10();
          f0_3_2_11();
        }

        function f0_3_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_3_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_3_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_3_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_3_4() {
          return isNaN(undefined);
        }

        function f0_3_3_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_3_6() {
          return Math.random();
        }

        function f0_3_3_7() {
          return isNaN(undefined);
        }

        function f0_3_3_8() {
          return isNaN(undefined);
        }

        function f0_3_3_9() {
          return isNaN(undefined);
        }

        function f0_3_3_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_3_11() {
          return Math.random();
        }

        function f0_3_3() {
          f0_3_3_0();
          f0_3_3_1();
          f0_3_3_2();
          f0_3_3_3();
          f0_3_3_4();
          f0_3_3_5();
          f0_3_3_6();
          f0_3_3_7();
          f0_3_3_8();
          f0_3_3_9();
          f0_3_3_10();
          f0_3_3_11();
        }

        function f0_3_4_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_4_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_4_3() {
          return Math.random();
        }

        function f0_3_4_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_4_5() {
          return Math.random();
        }

        function f0_3_4_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_4_7() {
          return Math.random();
        }

        function f0_3_4_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_4_9() {
          return Math.random();
        }

        function f0_3_4_10() {
          return Math.random();
        }

        function f0_3_4_11() {
          return Math.random();
        }

        function f0_3_4() {
          f0_3_4_0();
          f0_3_4_1();
          f0_3_4_2();
          f0_3_4_3();
          f0_3_4_4();
          f0_3_4_5();
          f0_3_4_6();
          f0_3_4_7();
          f0_3_4_8();
          f0_3_4_9();
          f0_3_4_10();
          f0_3_4_11();
        }

        function f0_3_5_0() {
          return Math.random();
        }

        function f0_3_5_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_5_2() {
          return isNaN(undefined);
        }

        function f0_3_5_3() {
          return isNaN(undefined);
        }

        function f0_3_5_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_5_5() {
          return Math.random();
        }

        function f0_3_5_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_5_7() {
          return Math.random();
        }

        function f0_3_5_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_5_9() {
          return isNaN(undefined);
        }

        function f0_3_5_10() {
          return Math.random();
        }

        function f0_3_5_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_5() {
          f0_3_5_0();
          f0_3_5_1();
          f0_3_5_2();
          f0_3_5_3();
          f0_3_5_4();
          f0_3_5_5();
          f0_3_5_6();
          f0_3_5_7();
          f0_3_5_8();
          f0_3_5_9();
          f0_3_5_10();
          f0_3_5_11();
        }

        function f0_3_6_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_6_1() {
          return isNaN(undefined);
        }

        function f0_3_6_2() {
          return Math.random();
        }

        function f0_3_6_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_6_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_6_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_6_6() {
          return isNaN(undefined);
        }

        function f0_3_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_6_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_6_9() {
          return isNaN(undefined);
        }

        function f0_3_6_10() {
          return Math.random();
        }

        function f0_3_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_6() {
          f0_3_6_0();
          f0_3_6_1();
          f0_3_6_2();
          f0_3_6_3();
          f0_3_6_4();
          f0_3_6_5();
          f0_3_6_6();
          f0_3_6_7();
          f0_3_6_8();
          f0_3_6_9();
          f0_3_6_10();
          f0_3_6_11();
        }

        function f0_3_7_0() {
          return isNaN(undefined);
        }

        function f0_3_7_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_7_2() {
          return Math.random();
        }

        function f0_3_7_3() {
          return isNaN(undefined);
        }

        function f0_3_7_4() {
          return isNaN(undefined);
        }

        function f0_3_7_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_7_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_7_7() {
          return isNaN(undefined);
        }

        function f0_3_7_8() {
          return Math.random();
        }

        function f0_3_7_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_7_10() {
          return isNaN(undefined);
        }

        function f0_3_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_7() {
          f0_3_7_0();
          f0_3_7_1();
          f0_3_7_2();
          f0_3_7_3();
          f0_3_7_4();
          f0_3_7_5();
          f0_3_7_6();
          f0_3_7_7();
          f0_3_7_8();
          f0_3_7_9();
          f0_3_7_10();
          f0_3_7_11();
        }

        function f0_3_8_0() {
          return Math.random();
        }

        function f0_3_8_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_8_2() {
          return isNaN(undefined);
        }

        function f0_3_8_3() {
          return Math.random();
        }

        function f0_3_8_4() {
          return Math.random();
        }

        function f0_3_8_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_8_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_8_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_8_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_8_9() {
          return Math.random();
        }

        function f0_3_8_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_8_11() {
          return Math.random();
        }

        function f0_3_8() {
          f0_3_8_0();
          f0_3_8_1();
          f0_3_8_2();
          f0_3_8_3();
          f0_3_8_4();
          f0_3_8_5();
          f0_3_8_6();
          f0_3_8_7();
          f0_3_8_8();
          f0_3_8_9();
          f0_3_8_10();
          f0_3_8_11();
        }

        function f0_3_9_0() {
          return isNaN(undefined);
        }

        function f0_3_9_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_9_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_9_4() {
          return isNaN(undefined);
        }

        function f0_3_9_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_9_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_9_7() {
          return Math.random();
        }

        function f0_3_9_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_9_9() {
          return Math.random();
        }

        function f0_3_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_9() {
          f0_3_9_0();
          f0_3_9_1();
          f0_3_9_2();
          f0_3_9_3();
          f0_3_9_4();
          f0_3_9_5();
          f0_3_9_6();
          f0_3_9_7();
          f0_3_9_8();
          f0_3_9_9();
          f0_3_9_10();
          f0_3_9_11();
        }

        function f0_3_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_10_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_10_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_10_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_10_4() {
          return isNaN(undefined);
        }

        function f0_3_10_5() {
          return Math.random();
        }

        function f0_3_10_6() {
          return isNaN(undefined);
        }

        function f0_3_10_7() {
          return isNaN(undefined);
        }

        function f0_3_10_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_10_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_10_10() {
          return isNaN(undefined);
        }

        function f0_3_10_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_10() {
          f0_3_10_0();
          f0_3_10_1();
          f0_3_10_2();
          f0_3_10_3();
          f0_3_10_4();
          f0_3_10_5();
          f0_3_10_6();
          f0_3_10_7();
          f0_3_10_8();
          f0_3_10_9();
          f0_3_10_10();
          f0_3_10_11();
        }

        function f0_3_11_0() {
          return isNaN(undefined);
        }

        function f0_3_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_11_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_11_3() {
          return isNaN(undefined);
        }

        function f0_3_11_4() {
          return isNaN(undefined);
        }

        function f0_3_11_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_11_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_11_7() {
          return Math.random();
        }

        function f0_3_11_8() {
          return Math.random();
        }

        function f0_3_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_3_11_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_3_11_11() {
          return Math.random();
        }

        function f0_3_11() {
          f0_3_11_0();
          f0_3_11_1();
          f0_3_11_2();
          f0_3_11_3();
          f0_3_11_4();
          f0_3_11_5();
          f0_3_11_6();
          f0_3_11_7();
          f0_3_11_8();
          f0_3_11_9();
          f0_3_11_10();
          f0_3_11_11();
        }

        function f0_3() {
          f0_3_0();
          f0_3_1();
          f0_3_2();
          f0_3_3();
          f0_3_4();
          f0_3_5();
          f0_3_6();
          f0_3_7();
          f0_3_8();
          f0_3_9();
          f0_3_10();
          f0_3_11();
        }

        function f0_4_0_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_0_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_0_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_0_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_0_4() {
          return Math.random();
        }

        function f0_4_0_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_0_6() {
          return isNaN(undefined);
        }

        function f0_4_0_7() {
          return isNaN(undefined);
        }

        function f0_4_0_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_0_9() {
          return Math.random();
        }

        function f0_4_0_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_0_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_0() {
          f0_4_0_0();
          f0_4_0_1();
          f0_4_0_2();
          f0_4_0_3();
          f0_4_0_4();
          f0_4_0_5();
          f0_4_0_6();
          f0_4_0_7();
          f0_4_0_8();
          f0_4_0_9();
          f0_4_0_10();
          f0_4_0_11();
        }

        function f0_4_1_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_1_1() {
          return Math.random();
        }

        function f0_4_1_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_1_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_1_4() {
          return isNaN(undefined);
        }

        function f0_4_1_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_1_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_1_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_1_8() {
          return isNaN(undefined);
        }

        function f0_4_1_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_1_10() {
          return isNaN(undefined);
        }

        function f0_4_1_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_1() {
          f0_4_1_0();
          f0_4_1_1();
          f0_4_1_2();
          f0_4_1_3();
          f0_4_1_4();
          f0_4_1_5();
          f0_4_1_6();
          f0_4_1_7();
          f0_4_1_8();
          f0_4_1_9();
          f0_4_1_10();
          f0_4_1_11();
        }

        function f0_4_2_0() {
          return Math.random();
        }

        function f0_4_2_1() {
          return Math.random();
        }

        function f0_4_2_2() {
          return isNaN(undefined);
        }

        function f0_4_2_3() {
          return isNaN(undefined);
        }

        function f0_4_2_4() {
          return isNaN(undefined);
        }

        function f0_4_2_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_2_7() {
          return Math.random();
        }

        function f0_4_2_8() {
          return Math.random();
        }

        function f0_4_2_9() {
          return isNaN(undefined);
        }

        function f0_4_2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_2_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_2() {
          f0_4_2_0();
          f0_4_2_1();
          f0_4_2_2();
          f0_4_2_3();
          f0_4_2_4();
          f0_4_2_5();
          f0_4_2_6();
          f0_4_2_7();
          f0_4_2_8();
          f0_4_2_9();
          f0_4_2_10();
          f0_4_2_11();
        }

        function f0_4_3_0() {
          return isNaN(undefined);
        }

        function f0_4_3_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_3_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_3_3() {
          return isNaN(undefined);
        }

        function f0_4_3_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_3_5() {
          return isNaN(undefined);
        }

        function f0_4_3_6() {
          return Math.random();
        }

        function f0_4_3_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_3_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_3_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_3_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_3() {
          f0_4_3_0();
          f0_4_3_1();
          f0_4_3_2();
          f0_4_3_3();
          f0_4_3_4();
          f0_4_3_5();
          f0_4_3_6();
          f0_4_3_7();
          f0_4_3_8();
          f0_4_3_9();
          f0_4_3_10();
          f0_4_3_11();
        }

        function f0_4_4_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_4_2() {
          return isNaN(undefined);
        }

        function f0_4_4_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_4_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_4_5() {
          return isNaN(undefined);
        }

        function f0_4_4_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_4_7() {
          return Math.random();
        }

        function f0_4_4_8() {
          return isNaN(undefined);
        }

        function f0_4_4_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_4_10() {
          return isNaN(undefined);
        }

        function f0_4_4_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_4() {
          f0_4_4_0();
          f0_4_4_1();
          f0_4_4_2();
          f0_4_4_3();
          f0_4_4_4();
          f0_4_4_5();
          f0_4_4_6();
          f0_4_4_7();
          f0_4_4_8();
          f0_4_4_9();
          f0_4_4_10();
          f0_4_4_11();
        }

        function f0_4_5_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_5_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_5_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_5_3() {
          return isNaN(undefined);
        }

        function f0_4_5_4() {
          return Math.random();
        }

        function f0_4_5_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_5_6() {
          return isNaN(undefined);
        }

        function f0_4_5_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_5_8() {
          return Math.random();
        }

        function f0_4_5_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_5_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_5_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_5() {
          f0_4_5_0();
          f0_4_5_1();
          f0_4_5_2();
          f0_4_5_3();
          f0_4_5_4();
          f0_4_5_5();
          f0_4_5_6();
          f0_4_5_7();
          f0_4_5_8();
          f0_4_5_9();
          f0_4_5_10();
          f0_4_5_11();
        }

        function f0_4_6_0() {
          return Math.random();
        }

        function f0_4_6_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_6_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_6_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_6_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_6_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_6_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_6_7() {
          return Math.random();
        }

        function f0_4_6_8() {
          return isNaN(undefined);
        }

        function f0_4_6_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_6_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_6_11() {
          return Math.random();
        }

        function f0_4_6() {
          f0_4_6_0();
          f0_4_6_1();
          f0_4_6_2();
          f0_4_6_3();
          f0_4_6_4();
          f0_4_6_5();
          f0_4_6_6();
          f0_4_6_7();
          f0_4_6_8();
          f0_4_6_9();
          f0_4_6_10();
          f0_4_6_11();
        }

        function f0_4_7_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_7_1() {
          return Math.random();
        }

        function f0_4_7_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_7_3() {
          return isNaN(undefined);
        }

        function f0_4_7_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_7_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_7_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_7_7() {
          return isNaN(undefined);
        }

        function f0_4_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_7_9() {
          return Math.random();
        }

        function f0_4_7_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_7_11() {
          return isNaN(undefined);
        }

        function f0_4_7() {
          f0_4_7_0();
          f0_4_7_1();
          f0_4_7_2();
          f0_4_7_3();
          f0_4_7_4();
          f0_4_7_5();
          f0_4_7_6();
          f0_4_7_7();
          f0_4_7_8();
          f0_4_7_9();
          f0_4_7_10();
          f0_4_7_11();
        }

        function f0_4_8_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_8_2() {
          return Math.random();
        }

        function f0_4_8_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_8_4() {
          return Math.random();
        }

        function f0_4_8_5() {
          return isNaN(undefined);
        }

        function f0_4_8_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_8_7() {
          return Math.random();
        }

        function f0_4_8_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_8_9() {
          return isNaN(undefined);
        }

        function f0_4_8_10() {
          return Math.random();
        }

        function f0_4_8_11() {
          return isNaN(undefined);
        }

        function f0_4_8() {
          f0_4_8_0();
          f0_4_8_1();
          f0_4_8_2();
          f0_4_8_3();
          f0_4_8_4();
          f0_4_8_5();
          f0_4_8_6();
          f0_4_8_7();
          f0_4_8_8();
          f0_4_8_9();
          f0_4_8_10();
          f0_4_8_11();
        }

        function f0_4_9_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_9_1() {
          return Math.random();
        }

        function f0_4_9_2() {
          return Math.random();
        }

        function f0_4_9_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_9_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_9_5() {
          return isNaN(undefined);
        }

        function f0_4_9_6() {
          return isNaN(undefined);
        }

        function f0_4_9_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_9_8() {
          return Math.random();
        }

        function f0_4_9_9() {
          return Math.random();
        }

        function f0_4_9_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_9_11() {
          return Math.random();
        }

        function f0_4_9() {
          f0_4_9_0();
          f0_4_9_1();
          f0_4_9_2();
          f0_4_9_3();
          f0_4_9_4();
          f0_4_9_5();
          f0_4_9_6();
          f0_4_9_7();
          f0_4_9_8();
          f0_4_9_9();
          f0_4_9_10();
          f0_4_9_11();
        }

        function f0_4_10_0() {
          return isNaN(undefined);
        }

        function f0_4_10_1() {
          return isNaN(undefined);
        }

        function f0_4_10_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_10_3() {
          return Math.random();
        }

        function f0_4_10_4() {
          return Math.random();
        }

        function f0_4_10_5() {
          return Math.random();
        }

        function f0_4_10_6() {
          return isNaN(undefined);
        }

        function f0_4_10_7() {
          return isNaN(undefined);
        }

        function f0_4_10_8() {
          return Math.random();
        }

        function f0_4_10_9() {
          return Math.random();
        }

        function f0_4_10_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_10() {
          f0_4_10_0();
          f0_4_10_1();
          f0_4_10_2();
          f0_4_10_3();
          f0_4_10_4();
          f0_4_10_5();
          f0_4_10_6();
          f0_4_10_7();
          f0_4_10_8();
          f0_4_10_9();
          f0_4_10_10();
          f0_4_10_11();
        }

        function f0_4_11_0() {
          return isNaN(undefined);
        }

        function f0_4_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_11_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_11_3() {
          return isNaN(undefined);
        }

        function f0_4_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_11_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_11_6() {
          return isNaN(undefined);
        }

        function f0_4_11_7() {
          return isNaN(undefined);
        }

        function f0_4_11_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_4_11_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_4_11_10() {
          return isNaN(undefined);
        }

        function f0_4_11_11() {
          return isNaN(undefined);
        }

        function f0_4_11() {
          f0_4_11_0();
          f0_4_11_1();
          f0_4_11_2();
          f0_4_11_3();
          f0_4_11_4();
          f0_4_11_5();
          f0_4_11_6();
          f0_4_11_7();
          f0_4_11_8();
          f0_4_11_9();
          f0_4_11_10();
          f0_4_11_11();
        }

        function f0_4() {
          f0_4_0();
          f0_4_1();
          f0_4_2();
          f0_4_3();
          f0_4_4();
          f0_4_5();
          f0_4_6();
          f0_4_7();
          f0_4_8();
          f0_4_9();
          f0_4_10();
          f0_4_11();
        }

        function f0_5_0_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_0_1() {
          return Math.random();
        }

        function f0_5_0_2() {
          return isNaN(undefined);
        }

        function f0_5_0_3() {
          return Math.random();
        }

        function f0_5_0_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_0_5() {
          return isNaN(undefined);
        }

        function f0_5_0_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_0_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_0_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_0_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_0_10() {
          return Math.random();
        }

        function f0_5_0_11() {
          return isNaN(undefined);
        }

        function f0_5_0() {
          f0_5_0_0();
          f0_5_0_1();
          f0_5_0_2();
          f0_5_0_3();
          f0_5_0_4();
          f0_5_0_5();
          f0_5_0_6();
          f0_5_0_7();
          f0_5_0_8();
          f0_5_0_9();
          f0_5_0_10();
          f0_5_0_11();
        }

        function f0_5_1_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_1_1() {
          return isNaN(undefined);
        }

        function f0_5_1_2() {
          return Math.random();
        }

        function f0_5_1_3() {
          return isNaN(undefined);
        }

        function f0_5_1_4() {
          return Math.random();
        }

        function f0_5_1_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_1_6() {
          return isNaN(undefined);
        }

        function f0_5_1_7() {
          return isNaN(undefined);
        }

        function f0_5_1_8() {
          return Math.random();
        }

        function f0_5_1_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_1_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_1_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_1() {
          f0_5_1_0();
          f0_5_1_1();
          f0_5_1_2();
          f0_5_1_3();
          f0_5_1_4();
          f0_5_1_5();
          f0_5_1_6();
          f0_5_1_7();
          f0_5_1_8();
          f0_5_1_9();
          f0_5_1_10();
          f0_5_1_11();
        }

        function f0_5_2_0() {
          return isNaN(undefined);
        }

        function f0_5_2_1() {
          return isNaN(undefined);
        }

        function f0_5_2_2() {
          return Math.random();
        }

        function f0_5_2_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_2_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_2_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_2_7() {
          return Math.random();
        }

        function f0_5_2_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_2_9() {
          return isNaN(undefined);
        }

        function f0_5_2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_2_11() {
          return isNaN(undefined);
        }

        function f0_5_2() {
          f0_5_2_0();
          f0_5_2_1();
          f0_5_2_2();
          f0_5_2_3();
          f0_5_2_4();
          f0_5_2_5();
          f0_5_2_6();
          f0_5_2_7();
          f0_5_2_8();
          f0_5_2_9();
          f0_5_2_10();
          f0_5_2_11();
        }

        function f0_5_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_3_1() {
          return isNaN(undefined);
        }

        function f0_5_3_2() {
          return Math.random();
        }

        function f0_5_3_3() {
          return isNaN(undefined);
        }

        function f0_5_3_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_3_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_3_6() {
          return isNaN(undefined);
        }

        function f0_5_3_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_3_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_3_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_3_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_3_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_3() {
          f0_5_3_0();
          f0_5_3_1();
          f0_5_3_2();
          f0_5_3_3();
          f0_5_3_4();
          f0_5_3_5();
          f0_5_3_6();
          f0_5_3_7();
          f0_5_3_8();
          f0_5_3_9();
          f0_5_3_10();
          f0_5_3_11();
        }

        function f0_5_4_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_4_2() {
          return Math.random();
        }

        function f0_5_4_3() {
          return Math.random();
        }

        function f0_5_4_4() {
          return Math.random();
        }

        function f0_5_4_5() {
          return Math.random();
        }

        function f0_5_4_6() {
          return Math.random();
        }

        function f0_5_4_7() {
          return Math.random();
        }

        function f0_5_4_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_4_9() {
          return Math.random();
        }

        function f0_5_4_10() {
          return isNaN(undefined);
        }

        function f0_5_4_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_4() {
          f0_5_4_0();
          f0_5_4_1();
          f0_5_4_2();
          f0_5_4_3();
          f0_5_4_4();
          f0_5_4_5();
          f0_5_4_6();
          f0_5_4_7();
          f0_5_4_8();
          f0_5_4_9();
          f0_5_4_10();
          f0_5_4_11();
        }

        function f0_5_5_0() {
          return isNaN(undefined);
        }

        function f0_5_5_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_5() {
          return isNaN(undefined);
        }

        function f0_5_5_6() {
          return Math.random();
        }

        function f0_5_5_7() {
          return Math.random();
        }

        function f0_5_5_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_9() {
          return Math.random();
        }

        function f0_5_5_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_5_11() {
          return Math.random();
        }

        function f0_5_5() {
          f0_5_5_0();
          f0_5_5_1();
          f0_5_5_2();
          f0_5_5_3();
          f0_5_5_4();
          f0_5_5_5();
          f0_5_5_6();
          f0_5_5_7();
          f0_5_5_8();
          f0_5_5_9();
          f0_5_5_10();
          f0_5_5_11();
        }

        function f0_5_6_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_6_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_6_2() {
          return Math.random();
        }

        function f0_5_6_3() {
          return isNaN(undefined);
        }

        function f0_5_6_4() {
          return Math.random();
        }

        function f0_5_6_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_6_6() {
          return Math.random();
        }

        function f0_5_6_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_6_8() {
          return isNaN(undefined);
        }

        function f0_5_6_9() {
          return isNaN(undefined);
        }

        function f0_5_6_10() {
          return Math.random();
        }

        function f0_5_6_11() {
          return Math.random();
        }

        function f0_5_6() {
          f0_5_6_0();
          f0_5_6_1();
          f0_5_6_2();
          f0_5_6_3();
          f0_5_6_4();
          f0_5_6_5();
          f0_5_6_6();
          f0_5_6_7();
          f0_5_6_8();
          f0_5_6_9();
          f0_5_6_10();
          f0_5_6_11();
        }

        function f0_5_7_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_7_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_7_2() {
          return Math.random();
        }

        function f0_5_7_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_7_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_7_5() {
          return Math.random();
        }

        function f0_5_7_6() {
          return isNaN(undefined);
        }

        function f0_5_7_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_7_8() {
          return Math.random();
        }

        function f0_5_7_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_7_10() {
          return Math.random();
        }

        function f0_5_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_7() {
          f0_5_7_0();
          f0_5_7_1();
          f0_5_7_2();
          f0_5_7_3();
          f0_5_7_4();
          f0_5_7_5();
          f0_5_7_6();
          f0_5_7_7();
          f0_5_7_8();
          f0_5_7_9();
          f0_5_7_10();
          f0_5_7_11();
        }

        function f0_5_8_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_8_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_8_3() {
          return Math.random();
        }

        function f0_5_8_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_8_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_8_6() {
          return Math.random();
        }

        function f0_5_8_7() {
          return Math.random();
        }

        function f0_5_8_8() {
          return isNaN(undefined);
        }

        function f0_5_8_9() {
          return Math.random();
        }

        function f0_5_8_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_8_11() {
          return isNaN(undefined);
        }

        function f0_5_8() {
          f0_5_8_0();
          f0_5_8_1();
          f0_5_8_2();
          f0_5_8_3();
          f0_5_8_4();
          f0_5_8_5();
          f0_5_8_6();
          f0_5_8_7();
          f0_5_8_8();
          f0_5_8_9();
          f0_5_8_10();
          f0_5_8_11();
        }

        function f0_5_9_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_9_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_9_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_7() {
          return Math.random();
        }

        function f0_5_9_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_9_9() {
          return Math.random();
        }

        function f0_5_9_10() {
          return Math.random();
        }

        function f0_5_9_11() {
          return isNaN(undefined);
        }

        function f0_5_9() {
          f0_5_9_0();
          f0_5_9_1();
          f0_5_9_2();
          f0_5_9_3();
          f0_5_9_4();
          f0_5_9_5();
          f0_5_9_6();
          f0_5_9_7();
          f0_5_9_8();
          f0_5_9_9();
          f0_5_9_10();
          f0_5_9_11();
        }

        function f0_5_10_0() {
          return isNaN(undefined);
        }

        function f0_5_10_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_10_2() {
          return isNaN(undefined);
        }

        function f0_5_10_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_10_4() {
          return Math.random();
        }

        function f0_5_10_5() {
          return Math.random();
        }

        function f0_5_10_6() {
          return Math.random();
        }

        function f0_5_10_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_10_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_10_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_10_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_10_11() {
          return Math.random();
        }

        function f0_5_10() {
          f0_5_10_0();
          f0_5_10_1();
          f0_5_10_2();
          f0_5_10_3();
          f0_5_10_4();
          f0_5_10_5();
          f0_5_10_6();
          f0_5_10_7();
          f0_5_10_8();
          f0_5_10_9();
          f0_5_10_10();
          f0_5_10_11();
        }

        function f0_5_11_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_11_2() {
          return Math.random();
        }

        function f0_5_11_3() {
          return Math.random();
        }

        function f0_5_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_5_11_5() {
          return Math.random();
        }

        function f0_5_11_6() {
          return Math.random();
        }

        function f0_5_11_7() {
          return isNaN(undefined);
        }

        function f0_5_11_8() {
          return isNaN(undefined);
        }

        function f0_5_11_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_11_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_5_11_11() {
          return isNaN(undefined);
        }

        function f0_5_11() {
          f0_5_11_0();
          f0_5_11_1();
          f0_5_11_2();
          f0_5_11_3();
          f0_5_11_4();
          f0_5_11_5();
          f0_5_11_6();
          f0_5_11_7();
          f0_5_11_8();
          f0_5_11_9();
          f0_5_11_10();
          f0_5_11_11();
        }

        function f0_5() {
          f0_5_0();
          f0_5_1();
          f0_5_2();
          f0_5_3();
          f0_5_4();
          f0_5_5();
          f0_5_6();
          f0_5_7();
          f0_5_8();
          f0_5_9();
          f0_5_10();
          f0_5_11();
        }

        function f0_6_0_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_0_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_0_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_0_3() {
          return Math.random();
        }

        function f0_6_0_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_0_5() {
          return isNaN(undefined);
        }

        function f0_6_0_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_0_7() {
          return Math.random();
        }

        function f0_6_0_8() {
          return isNaN(undefined);
        }

        function f0_6_0_9() {
          return isNaN(undefined);
        }

        function f0_6_0_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_0_11() {
          return isNaN(undefined);
        }

        function f0_6_0() {
          f0_6_0_0();
          f0_6_0_1();
          f0_6_0_2();
          f0_6_0_3();
          f0_6_0_4();
          f0_6_0_5();
          f0_6_0_6();
          f0_6_0_7();
          f0_6_0_8();
          f0_6_0_9();
          f0_6_0_10();
          f0_6_0_11();
        }

        function f0_6_1_0() {
          return isNaN(undefined);
        }

        function f0_6_1_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_1_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_1_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_1_4() {
          return Math.random();
        }

        function f0_6_1_5() {
          return isNaN(undefined);
        }

        function f0_6_1_6() {
          return isNaN(undefined);
        }

        function f0_6_1_7() {
          return isNaN(undefined);
        }

        function f0_6_1_8() {
          return Math.random();
        }

        function f0_6_1_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_1_10() {
          return Math.random();
        }

        function f0_6_1_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_1() {
          f0_6_1_0();
          f0_6_1_1();
          f0_6_1_2();
          f0_6_1_3();
          f0_6_1_4();
          f0_6_1_5();
          f0_6_1_6();
          f0_6_1_7();
          f0_6_1_8();
          f0_6_1_9();
          f0_6_1_10();
          f0_6_1_11();
        }

        function f0_6_2_0() {
          return isNaN(undefined);
        }

        function f0_6_2_1() {
          return Math.random();
        }

        function f0_6_2_2() {
          return isNaN(undefined);
        }

        function f0_6_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_2_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_2_9() {
          return Math.random();
        }

        function f0_6_2_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_2_11() {
          return isNaN(undefined);
        }

        function f0_6_2() {
          f0_6_2_0();
          f0_6_2_1();
          f0_6_2_2();
          f0_6_2_3();
          f0_6_2_4();
          f0_6_2_5();
          f0_6_2_6();
          f0_6_2_7();
          f0_6_2_8();
          f0_6_2_9();
          f0_6_2_10();
          f0_6_2_11();
        }

        function f0_6_3_0() {
          return Math.random();
        }

        function f0_6_3_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_3_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_3_3() {
          return isNaN(undefined);
        }

        function f0_6_3_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_3_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_3_6() {
          return Math.random();
        }

        function f0_6_3_7() {
          return isNaN(undefined);
        }

        function f0_6_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_3_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_3_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_3_11() {
          return Math.random();
        }

        function f0_6_3() {
          f0_6_3_0();
          f0_6_3_1();
          f0_6_3_2();
          f0_6_3_3();
          f0_6_3_4();
          f0_6_3_5();
          f0_6_3_6();
          f0_6_3_7();
          f0_6_3_8();
          f0_6_3_9();
          f0_6_3_10();
          f0_6_3_11();
        }

        function f0_6_4_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_4_1() {
          return Math.random();
        }

        function f0_6_4_2() {
          return isNaN(undefined);
        }

        function f0_6_4_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_4_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_4_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_4_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_4_7() {
          return Math.random();
        }

        function f0_6_4_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_4_9() {
          return isNaN(undefined);
        }

        function f0_6_4_10() {
          return isNaN(undefined);
        }

        function f0_6_4_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_4() {
          f0_6_4_0();
          f0_6_4_1();
          f0_6_4_2();
          f0_6_4_3();
          f0_6_4_4();
          f0_6_4_5();
          f0_6_4_6();
          f0_6_4_7();
          f0_6_4_8();
          f0_6_4_9();
          f0_6_4_10();
          f0_6_4_11();
        }

        function f0_6_5_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_5_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_5_2() {
          return isNaN(undefined);
        }

        function f0_6_5_3() {
          return isNaN(undefined);
        }

        function f0_6_5_4() {
          return Math.random();
        }

        function f0_6_5_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_5_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_5_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_5_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_5_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_5_10() {
          return isNaN(undefined);
        }

        function f0_6_5_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_5() {
          f0_6_5_0();
          f0_6_5_1();
          f0_6_5_2();
          f0_6_5_3();
          f0_6_5_4();
          f0_6_5_5();
          f0_6_5_6();
          f0_6_5_7();
          f0_6_5_8();
          f0_6_5_9();
          f0_6_5_10();
          f0_6_5_11();
        }

        function f0_6_6_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_6_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_6_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_6_3() {
          return Math.random();
        }

        function f0_6_6_4() {
          return isNaN(undefined);
        }

        function f0_6_6_5() {
          return isNaN(undefined);
        }

        function f0_6_6_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_6_7() {
          return isNaN(undefined);
        }

        function f0_6_6_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_6_9() {
          return isNaN(undefined);
        }

        function f0_6_6_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_6_11() {
          return isNaN(undefined);
        }

        function f0_6_6() {
          f0_6_6_0();
          f0_6_6_1();
          f0_6_6_2();
          f0_6_6_3();
          f0_6_6_4();
          f0_6_6_5();
          f0_6_6_6();
          f0_6_6_7();
          f0_6_6_8();
          f0_6_6_9();
          f0_6_6_10();
          f0_6_6_11();
        }

        function f0_6_7_0() {
          return isNaN(undefined);
        }

        function f0_6_7_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_7_2() {
          return Math.random();
        }

        function f0_6_7_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_7_4() {
          return Math.random();
        }

        function f0_6_7_5() {
          return isNaN(undefined);
        }

        function f0_6_7_6() {
          return isNaN(undefined);
        }

        function f0_6_7_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_7_8() {
          return Math.random();
        }

        function f0_6_7_9() {
          return Math.random();
        }

        function f0_6_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_7_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_7() {
          f0_6_7_0();
          f0_6_7_1();
          f0_6_7_2();
          f0_6_7_3();
          f0_6_7_4();
          f0_6_7_5();
          f0_6_7_6();
          f0_6_7_7();
          f0_6_7_8();
          f0_6_7_9();
          f0_6_7_10();
          f0_6_7_11();
        }

        function f0_6_8_0() {
          return isNaN(undefined);
        }

        function f0_6_8_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_8_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_8_3() {
          return isNaN(undefined);
        }

        function f0_6_8_4() {
          return isNaN(undefined);
        }

        function f0_6_8_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_8_6() {
          return isNaN(undefined);
        }

        function f0_6_8_7() {
          return Math.random();
        }

        function f0_6_8_8() {
          return Math.random();
        }

        function f0_6_8_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_8_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_8_11() {
          return Math.random();
        }

        function f0_6_8() {
          f0_6_8_0();
          f0_6_8_1();
          f0_6_8_2();
          f0_6_8_3();
          f0_6_8_4();
          f0_6_8_5();
          f0_6_8_6();
          f0_6_8_7();
          f0_6_8_8();
          f0_6_8_9();
          f0_6_8_10();
          f0_6_8_11();
        }

        function f0_6_9_0() {
          return isNaN(undefined);
        }

        function f0_6_9_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_9_2() {
          return isNaN(undefined);
        }

        function f0_6_9_3() {
          return Math.random();
        }

        function f0_6_9_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_9_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9_10() {
          return isNaN(undefined);
        }

        function f0_6_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_9() {
          f0_6_9_0();
          f0_6_9_1();
          f0_6_9_2();
          f0_6_9_3();
          f0_6_9_4();
          f0_6_9_5();
          f0_6_9_6();
          f0_6_9_7();
          f0_6_9_8();
          f0_6_9_9();
          f0_6_9_10();
          f0_6_9_11();
        }

        function f0_6_10_0() {
          return isNaN(undefined);
        }

        function f0_6_10_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_10_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_10_3() {
          return isNaN(undefined);
        }

        function f0_6_10_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_10_5() {
          return Math.random();
        }

        function f0_6_10_6() {
          return Math.random();
        }

        function f0_6_10_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_10_8() {
          return isNaN(undefined);
        }

        function f0_6_10_9() {
          return Math.random();
        }

        function f0_6_10_10() {
          return isNaN(undefined);
        }

        function f0_6_10_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_10() {
          f0_6_10_0();
          f0_6_10_1();
          f0_6_10_2();
          f0_6_10_3();
          f0_6_10_4();
          f0_6_10_5();
          f0_6_10_6();
          f0_6_10_7();
          f0_6_10_8();
          f0_6_10_9();
          f0_6_10_10();
          f0_6_10_11();
        }

        function f0_6_11_0() {
          return isNaN(undefined);
        }

        function f0_6_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_11_2() {
          return Math.random();
        }

        function f0_6_11_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_11_4() {
          return Math.random();
        }

        function f0_6_11_5() {
          return isNaN(undefined);
        }

        function f0_6_11_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_6_11_7() {
          return Math.random();
        }

        function f0_6_11_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_11_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_11_10() {
          return Math.random();
        }

        function f0_6_11_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_6_11() {
          f0_6_11_0();
          f0_6_11_1();
          f0_6_11_2();
          f0_6_11_3();
          f0_6_11_4();
          f0_6_11_5();
          f0_6_11_6();
          f0_6_11_7();
          f0_6_11_8();
          f0_6_11_9();
          f0_6_11_10();
          f0_6_11_11();
        }

        function f0_6() {
          f0_6_0();
          f0_6_1();
          f0_6_2();
          f0_6_3();
          f0_6_4();
          f0_6_5();
          f0_6_6();
          f0_6_7();
          f0_6_8();
          f0_6_9();
          f0_6_10();
          f0_6_11();
        }

        function f0_7_0_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_0_1() {
          return Math.random();
        }

        function f0_7_0_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_0_3() {
          return isNaN(undefined);
        }

        function f0_7_0_4() {
          return Math.random();
        }

        function f0_7_0_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_0_6() {
          return isNaN(undefined);
        }

        function f0_7_0_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_0_8() {
          return Math.random();
        }

        function f0_7_0_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_0_10() {
          return isNaN(undefined);
        }

        function f0_7_0_11() {
          return isNaN(undefined);
        }

        function f0_7_0() {
          f0_7_0_0();
          f0_7_0_1();
          f0_7_0_2();
          f0_7_0_3();
          f0_7_0_4();
          f0_7_0_5();
          f0_7_0_6();
          f0_7_0_7();
          f0_7_0_8();
          f0_7_0_9();
          f0_7_0_10();
          f0_7_0_11();
        }

        function f0_7_1_0() {
          return Math.random();
        }

        function f0_7_1_1() {
          return Math.random();
        }

        function f0_7_1_2() {
          return Math.random();
        }

        function f0_7_1_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_1_4() {
          return Math.random();
        }

        function f0_7_1_5() {
          return isNaN(undefined);
        }

        function f0_7_1_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_1_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_1_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_1_9() {
          return Math.random();
        }

        function f0_7_1_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_1_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_1() {
          f0_7_1_0();
          f0_7_1_1();
          f0_7_1_2();
          f0_7_1_3();
          f0_7_1_4();
          f0_7_1_5();
          f0_7_1_6();
          f0_7_1_7();
          f0_7_1_8();
          f0_7_1_9();
          f0_7_1_10();
          f0_7_1_11();
        }

        function f0_7_2_0() {
          return isNaN(undefined);
        }

        function f0_7_2_1() {
          return Math.random();
        }

        function f0_7_2_2() {
          return isNaN(undefined);
        }

        function f0_7_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_2_4() {
          return isNaN(undefined);
        }

        function f0_7_2_5() {
          return Math.random();
        }

        function f0_7_2_6() {
          return Math.random();
        }

        function f0_7_2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_2_8() {
          return isNaN(undefined);
        }

        function f0_7_2_9() {
          return isNaN(undefined);
        }

        function f0_7_2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_2_11() {
          return isNaN(undefined);
        }

        function f0_7_2() {
          f0_7_2_0();
          f0_7_2_1();
          f0_7_2_2();
          f0_7_2_3();
          f0_7_2_4();
          f0_7_2_5();
          f0_7_2_6();
          f0_7_2_7();
          f0_7_2_8();
          f0_7_2_9();
          f0_7_2_10();
          f0_7_2_11();
        }

        function f0_7_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_3_1() {
          return isNaN(undefined);
        }

        function f0_7_3_2() {
          return isNaN(undefined);
        }

        function f0_7_3_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_3_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_3_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_3_6() {
          return isNaN(undefined);
        }

        function f0_7_3_7() {
          return Math.random();
        }

        function f0_7_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_3_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_3_10() {
          return isNaN(undefined);
        }

        function f0_7_3_11() {
          return isNaN(undefined);
        }

        function f0_7_3() {
          f0_7_3_0();
          f0_7_3_1();
          f0_7_3_2();
          f0_7_3_3();
          f0_7_3_4();
          f0_7_3_5();
          f0_7_3_6();
          f0_7_3_7();
          f0_7_3_8();
          f0_7_3_9();
          f0_7_3_10();
          f0_7_3_11();
        }

        function f0_7_4_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_4_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_4_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_4_3() {
          return Math.random();
        }

        function f0_7_4_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_4_5() {
          return isNaN(undefined);
        }

        function f0_7_4_6() {
          return Math.random();
        }

        function f0_7_4_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_4_8() {
          return isNaN(undefined);
        }

        function f0_7_4_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_4_10() {
          return isNaN(undefined);
        }

        function f0_7_4_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_4() {
          f0_7_4_0();
          f0_7_4_1();
          f0_7_4_2();
          f0_7_4_3();
          f0_7_4_4();
          f0_7_4_5();
          f0_7_4_6();
          f0_7_4_7();
          f0_7_4_8();
          f0_7_4_9();
          f0_7_4_10();
          f0_7_4_11();
        }

        function f0_7_5_0() {
          return Math.random();
        }

        function f0_7_5_1() {
          return Math.random();
        }

        function f0_7_5_2() {
          return isNaN(undefined);
        }

        function f0_7_5_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_5_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_5_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_5_6() {
          return isNaN(undefined);
        }

        function f0_7_5_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_5_8() {
          return isNaN(undefined);
        }

        function f0_7_5_9() {
          return isNaN(undefined);
        }

        function f0_7_5_10() {
          return isNaN(undefined);
        }

        function f0_7_5_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_5() {
          f0_7_5_0();
          f0_7_5_1();
          f0_7_5_2();
          f0_7_5_3();
          f0_7_5_4();
          f0_7_5_5();
          f0_7_5_6();
          f0_7_5_7();
          f0_7_5_8();
          f0_7_5_9();
          f0_7_5_10();
          f0_7_5_11();
        }

        function f0_7_6_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_6_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_6_2() {
          return Math.random();
        }

        function f0_7_6_3() {
          return Math.random();
        }

        function f0_7_6_4() {
          return isNaN(undefined);
        }

        function f0_7_6_5() {
          return isNaN(undefined);
        }

        function f0_7_6_6() {
          return Math.random();
        }

        function f0_7_6_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_6_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_6_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_6_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_6_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_6() {
          f0_7_6_0();
          f0_7_6_1();
          f0_7_6_2();
          f0_7_6_3();
          f0_7_6_4();
          f0_7_6_5();
          f0_7_6_6();
          f0_7_6_7();
          f0_7_6_8();
          f0_7_6_9();
          f0_7_6_10();
          f0_7_6_11();
        }

        function f0_7_7_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_7_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_4() {
          return isNaN(undefined);
        }

        function f0_7_7_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_7_7() {
          return Math.random();
        }

        function f0_7_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_7_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_7_11() {
          return Math.random();
        }

        function f0_7_7() {
          f0_7_7_0();
          f0_7_7_1();
          f0_7_7_2();
          f0_7_7_3();
          f0_7_7_4();
          f0_7_7_5();
          f0_7_7_6();
          f0_7_7_7();
          f0_7_7_8();
          f0_7_7_9();
          f0_7_7_10();
          f0_7_7_11();
        }

        function f0_7_8_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_8_2() {
          return Math.random();
        }

        function f0_7_8_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_8_4() {
          return isNaN(undefined);
        }

        function f0_7_8_5() {
          return isNaN(undefined);
        }

        function f0_7_8_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_8_7() {
          return Math.random();
        }

        function f0_7_8_8() {
          return isNaN(undefined);
        }

        function f0_7_8_9() {
          return isNaN(undefined);
        }

        function f0_7_8_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_8() {
          f0_7_8_0();
          f0_7_8_1();
          f0_7_8_2();
          f0_7_8_3();
          f0_7_8_4();
          f0_7_8_5();
          f0_7_8_6();
          f0_7_8_7();
          f0_7_8_8();
          f0_7_8_9();
          f0_7_8_10();
          f0_7_8_11();
        }

        function f0_7_9_0() {
          return Math.random();
        }

        function f0_7_9_1() {
          return Math.random();
        }

        function f0_7_9_2() {
          return Math.random();
        }

        function f0_7_9_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_9_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_9_5() {
          return isNaN(undefined);
        }

        function f0_7_9_6() {
          return Math.random();
        }

        function f0_7_9_7() {
          return Math.random();
        }

        function f0_7_9_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_9_9() {
          return isNaN(undefined);
        }

        function f0_7_9_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_9_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_9() {
          f0_7_9_0();
          f0_7_9_1();
          f0_7_9_2();
          f0_7_9_3();
          f0_7_9_4();
          f0_7_9_5();
          f0_7_9_6();
          f0_7_9_7();
          f0_7_9_8();
          f0_7_9_9();
          f0_7_9_10();
          f0_7_9_11();
        }

        function f0_7_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_10_1() {
          return Math.random();
        }

        function f0_7_10_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_10_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_10_4() {
          return isNaN(undefined);
        }

        function f0_7_10_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_10_6() {
          return isNaN(undefined);
        }

        function f0_7_10_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_10_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_10_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_10_10() {
          return isNaN(undefined);
        }

        function f0_7_10_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_10() {
          f0_7_10_0();
          f0_7_10_1();
          f0_7_10_2();
          f0_7_10_3();
          f0_7_10_4();
          f0_7_10_5();
          f0_7_10_6();
          f0_7_10_7();
          f0_7_10_8();
          f0_7_10_9();
          f0_7_10_10();
          f0_7_10_11();
        }

        function f0_7_11_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_11_2() {
          return isNaN(undefined);
        }

        function f0_7_11_3() {
          return isNaN(undefined);
        }

        function f0_7_11_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_11_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_7_11_6() {
          return Math.random();
        }

        function f0_7_11_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_11_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_11_9() {
          return isNaN(undefined);
        }

        function f0_7_11_10() {
          return Math.random();
        }

        function f0_7_11_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_7_11() {
          f0_7_11_0();
          f0_7_11_1();
          f0_7_11_2();
          f0_7_11_3();
          f0_7_11_4();
          f0_7_11_5();
          f0_7_11_6();
          f0_7_11_7();
          f0_7_11_8();
          f0_7_11_9();
          f0_7_11_10();
          f0_7_11_11();
        }

        function f0_7() {
          f0_7_0();
          f0_7_1();
          f0_7_2();
          f0_7_3();
          f0_7_4();
          f0_7_5();
          f0_7_6();
          f0_7_7();
          f0_7_8();
          f0_7_9();
          f0_7_10();
          f0_7_11();
        }

        function f0_8_0_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_0_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_0_2() {
          return Math.random();
        }

        function f0_8_0_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_0_4() {
          return Math.random();
        }

        function f0_8_0_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_0_6() {
          return Math.random();
        }

        function f0_8_0_7() {
          return Math.random();
        }

        function f0_8_0_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_0_9() {
          return Math.random();
        }

        function f0_8_0_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_0_11() {
          return isNaN(undefined);
        }

        function f0_8_0() {
          f0_8_0_0();
          f0_8_0_1();
          f0_8_0_2();
          f0_8_0_3();
          f0_8_0_4();
          f0_8_0_5();
          f0_8_0_6();
          f0_8_0_7();
          f0_8_0_8();
          f0_8_0_9();
          f0_8_0_10();
          f0_8_0_11();
        }

        function f0_8_1_0() {
          return Math.random();
        }

        function f0_8_1_1() {
          return Math.random();
        }

        function f0_8_1_2() {
          return Math.random();
        }

        function f0_8_1_3() {
          return isNaN(undefined);
        }

        function f0_8_1_4() {
          return Math.random();
        }

        function f0_8_1_5() {
          return Math.random();
        }

        function f0_8_1_6() {
          return isNaN(undefined);
        }

        function f0_8_1_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_1_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_1_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_1_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_1_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_1() {
          f0_8_1_0();
          f0_8_1_1();
          f0_8_1_2();
          f0_8_1_3();
          f0_8_1_4();
          f0_8_1_5();
          f0_8_1_6();
          f0_8_1_7();
          f0_8_1_8();
          f0_8_1_9();
          f0_8_1_10();
          f0_8_1_11();
        }

        function f0_8_2_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_2_1() {
          return isNaN(undefined);
        }

        function f0_8_2_2() {
          return isNaN(undefined);
        }

        function f0_8_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_2_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_2_5() {
          return isNaN(undefined);
        }

        function f0_8_2_6() {
          return Math.random();
        }

        function f0_8_2_7() {
          return isNaN(undefined);
        }

        function f0_8_2_8() {
          return Math.random();
        }

        function f0_8_2_9() {
          return isNaN(undefined);
        }

        function f0_8_2_10() {
          return isNaN(undefined);
        }

        function f0_8_2_11() {
          return isNaN(undefined);
        }

        function f0_8_2() {
          f0_8_2_0();
          f0_8_2_1();
          f0_8_2_2();
          f0_8_2_3();
          f0_8_2_4();
          f0_8_2_5();
          f0_8_2_6();
          f0_8_2_7();
          f0_8_2_8();
          f0_8_2_9();
          f0_8_2_10();
          f0_8_2_11();
        }

        function f0_8_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_3_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_3_2() {
          return isNaN(undefined);
        }

        function f0_8_3_3() {
          return isNaN(undefined);
        }

        function f0_8_3_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_3_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_3_6() {
          return Math.random();
        }

        function f0_8_3_7() {
          return isNaN(undefined);
        }

        function f0_8_3_8() {
          return Math.random();
        }

        function f0_8_3_9() {
          return Math.random();
        }

        function f0_8_3_10() {
          return isNaN(undefined);
        }

        function f0_8_3_11() {
          return Math.random();
        }

        function f0_8_3() {
          f0_8_3_0();
          f0_8_3_1();
          f0_8_3_2();
          f0_8_3_3();
          f0_8_3_4();
          f0_8_3_5();
          f0_8_3_6();
          f0_8_3_7();
          f0_8_3_8();
          f0_8_3_9();
          f0_8_3_10();
          f0_8_3_11();
        }

        function f0_8_4_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_4_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_4_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_4_4() {
          return Math.random();
        }

        function f0_8_4_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_4_6() {
          return isNaN(undefined);
        }

        function f0_8_4_7() {
          return Math.random();
        }

        function f0_8_4_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_4_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_4_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_4_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_4() {
          f0_8_4_0();
          f0_8_4_1();
          f0_8_4_2();
          f0_8_4_3();
          f0_8_4_4();
          f0_8_4_5();
          f0_8_4_6();
          f0_8_4_7();
          f0_8_4_8();
          f0_8_4_9();
          f0_8_4_10();
          f0_8_4_11();
        }

        function f0_8_5_0() {
          return isNaN(undefined);
        }

        function f0_8_5_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_5_2() {
          return isNaN(undefined);
        }

        function f0_8_5_3() {
          return isNaN(undefined);
        }

        function f0_8_5_4() {
          return Math.random();
        }

        function f0_8_5_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_5_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_5_7() {
          return Math.random();
        }

        function f0_8_5_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_5_9() {
          return Math.random();
        }

        function f0_8_5_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_5_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_5() {
          f0_8_5_0();
          f0_8_5_1();
          f0_8_5_2();
          f0_8_5_3();
          f0_8_5_4();
          f0_8_5_5();
          f0_8_5_6();
          f0_8_5_7();
          f0_8_5_8();
          f0_8_5_9();
          f0_8_5_10();
          f0_8_5_11();
        }

        function f0_8_6_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_6_1() {
          return Math.random();
        }

        function f0_8_6_2() {
          return isNaN(undefined);
        }

        function f0_8_6_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_6_4() {
          return Math.random();
        }

        function f0_8_6_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_6_6() {
          return Math.random();
        }

        function f0_8_6_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_6_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_6_9() {
          return Math.random();
        }

        function f0_8_6_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_6_11() {
          return isNaN(undefined);
        }

        function f0_8_6() {
          f0_8_6_0();
          f0_8_6_1();
          f0_8_6_2();
          f0_8_6_3();
          f0_8_6_4();
          f0_8_6_5();
          f0_8_6_6();
          f0_8_6_7();
          f0_8_6_8();
          f0_8_6_9();
          f0_8_6_10();
          f0_8_6_11();
        }

        function f0_8_7_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_7_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_7_2() {
          return Math.random();
        }

        function f0_8_7_3() {
          return isNaN(undefined);
        }

        function f0_8_7_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_7_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_7_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_7_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_7_8() {
          return isNaN(undefined);
        }

        function f0_8_7_9() {
          return isNaN(undefined);
        }

        function f0_8_7_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_7() {
          f0_8_7_0();
          f0_8_7_1();
          f0_8_7_2();
          f0_8_7_3();
          f0_8_7_4();
          f0_8_7_5();
          f0_8_7_6();
          f0_8_7_7();
          f0_8_7_8();
          f0_8_7_9();
          f0_8_7_10();
          f0_8_7_11();
        }

        function f0_8_8_0() {
          return isNaN(undefined);
        }

        function f0_8_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_8_2() {
          return isNaN(undefined);
        }

        function f0_8_8_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_8_4() {
          return Math.random();
        }

        function f0_8_8_5() {
          return isNaN(undefined);
        }

        function f0_8_8_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_8_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_8_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_8_9() {
          return Math.random();
        }

        function f0_8_8_10() {
          return Math.random();
        }

        function f0_8_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_8() {
          f0_8_8_0();
          f0_8_8_1();
          f0_8_8_2();
          f0_8_8_3();
          f0_8_8_4();
          f0_8_8_5();
          f0_8_8_6();
          f0_8_8_7();
          f0_8_8_8();
          f0_8_8_9();
          f0_8_8_10();
          f0_8_8_11();
        }

        function f0_8_9_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_9_1() {
          return isNaN(undefined);
        }

        function f0_8_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_9_3() {
          return isNaN(undefined);
        }

        function f0_8_9_4() {
          return isNaN(undefined);
        }

        function f0_8_9_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_9_6() {
          return Math.random();
        }

        function f0_8_9_7() {
          return isNaN(undefined);
        }

        function f0_8_9_8() {
          return isNaN(undefined);
        }

        function f0_8_9_9() {
          return isNaN(undefined);
        }

        function f0_8_9_10() {
          return isNaN(undefined);
        }

        function f0_8_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_9() {
          f0_8_9_0();
          f0_8_9_1();
          f0_8_9_2();
          f0_8_9_3();
          f0_8_9_4();
          f0_8_9_5();
          f0_8_9_6();
          f0_8_9_7();
          f0_8_9_8();
          f0_8_9_9();
          f0_8_9_10();
          f0_8_9_11();
        }

        function f0_8_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_10_1() {
          return isNaN(undefined);
        }

        function f0_8_10_2() {
          return isNaN(undefined);
        }

        function f0_8_10_3() {
          return Math.random();
        }

        function f0_8_10_4() {
          return isNaN(undefined);
        }

        function f0_8_10_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_10_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_10_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_10_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_10_9() {
          return Math.random();
        }

        function f0_8_10_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_10() {
          f0_8_10_0();
          f0_8_10_1();
          f0_8_10_2();
          f0_8_10_3();
          f0_8_10_4();
          f0_8_10_5();
          f0_8_10_6();
          f0_8_10_7();
          f0_8_10_8();
          f0_8_10_9();
          f0_8_10_10();
          f0_8_10_11();
        }

        function f0_8_11_0() {
          return isNaN(undefined);
        }

        function f0_8_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_11_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_8_11_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_11_5() {
          return isNaN(undefined);
        }

        function f0_8_11_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_11_7() {
          return Math.random();
        }

        function f0_8_11_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_8_11_10() {
          return Math.random();
        }

        function f0_8_11_11() {
          return isNaN(undefined);
        }

        function f0_8_11() {
          f0_8_11_0();
          f0_8_11_1();
          f0_8_11_2();
          f0_8_11_3();
          f0_8_11_4();
          f0_8_11_5();
          f0_8_11_6();
          f0_8_11_7();
          f0_8_11_8();
          f0_8_11_9();
          f0_8_11_10();
          f0_8_11_11();
        }

        function f0_8() {
          f0_8_0();
          f0_8_1();
          f0_8_2();
          f0_8_3();
          f0_8_4();
          f0_8_5();
          f0_8_6();
          f0_8_7();
          f0_8_8();
          f0_8_9();
          f0_8_10();
          f0_8_11();
        }

        function f0_9_0_0() {
          return Math.random();
        }

        function f0_9_0_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_0_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_0_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_0_4() {
          return Math.random();
        }

        function f0_9_0_5() {
          return Math.random();
        }

        function f0_9_0_6() {
          return isNaN(undefined);
        }

        function f0_9_0_7() {
          return Math.random();
        }

        function f0_9_0_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_0_9() {
          return isNaN(undefined);
        }

        function f0_9_0_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_0_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_0() {
          f0_9_0_0();
          f0_9_0_1();
          f0_9_0_2();
          f0_9_0_3();
          f0_9_0_4();
          f0_9_0_5();
          f0_9_0_6();
          f0_9_0_7();
          f0_9_0_8();
          f0_9_0_9();
          f0_9_0_10();
          f0_9_0_11();
        }

        function f0_9_1_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_1_1() {
          return isNaN(undefined);
        }

        function f0_9_1_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_1_3() {
          return isNaN(undefined);
        }

        function f0_9_1_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_1_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_1_6() {
          return Math.random();
        }

        function f0_9_1_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_1_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_1_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_1_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_1_11() {
          return isNaN(undefined);
        }

        function f0_9_1() {
          f0_9_1_0();
          f0_9_1_1();
          f0_9_1_2();
          f0_9_1_3();
          f0_9_1_4();
          f0_9_1_5();
          f0_9_1_6();
          f0_9_1_7();
          f0_9_1_8();
          f0_9_1_9();
          f0_9_1_10();
          f0_9_1_11();
        }

        function f0_9_2_0() {
          return isNaN(undefined);
        }

        function f0_9_2_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_2_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_2_3() {
          return Math.random();
        }

        function f0_9_2_4() {
          return isNaN(undefined);
        }

        function f0_9_2_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_2_6() {
          return isNaN(undefined);
        }

        function f0_9_2_7() {
          return Math.random();
        }

        function f0_9_2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_2_9() {
          return isNaN(undefined);
        }

        function f0_9_2_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_2_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_2() {
          f0_9_2_0();
          f0_9_2_1();
          f0_9_2_2();
          f0_9_2_3();
          f0_9_2_4();
          f0_9_2_5();
          f0_9_2_6();
          f0_9_2_7();
          f0_9_2_8();
          f0_9_2_9();
          f0_9_2_10();
          f0_9_2_11();
        }

        function f0_9_3_0() {
          return Math.random();
        }

        function f0_9_3_1() {
          return isNaN(undefined);
        }

        function f0_9_3_2() {
          return Math.random();
        }

        function f0_9_3_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_3_4() {
          return Math.random();
        }

        function f0_9_3_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_3_6() {
          return Math.random();
        }

        function f0_9_3_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_3_8() {
          return Math.random();
        }

        function f0_9_3_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_3_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_3_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_3() {
          f0_9_3_0();
          f0_9_3_1();
          f0_9_3_2();
          f0_9_3_3();
          f0_9_3_4();
          f0_9_3_5();
          f0_9_3_6();
          f0_9_3_7();
          f0_9_3_8();
          f0_9_3_9();
          f0_9_3_10();
          f0_9_3_11();
        }

        function f0_9_4_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_4_1() {
          return Math.random();
        }

        function f0_9_4_2() {
          return Math.random();
        }

        function f0_9_4_3() {
          return Math.random();
        }

        function f0_9_4_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_4_5() {
          return isNaN(undefined);
        }

        function f0_9_4_6() {
          return isNaN(undefined);
        }

        function f0_9_4_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_4_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_4_9() {
          return Math.random();
        }

        function f0_9_4_10() {
          return Math.random();
        }

        function f0_9_4_11() {
          return isNaN(undefined);
        }

        function f0_9_4() {
          f0_9_4_0();
          f0_9_4_1();
          f0_9_4_2();
          f0_9_4_3();
          f0_9_4_4();
          f0_9_4_5();
          f0_9_4_6();
          f0_9_4_7();
          f0_9_4_8();
          f0_9_4_9();
          f0_9_4_10();
          f0_9_4_11();
        }

        function f0_9_5_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_5_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_5_2() {
          return isNaN(undefined);
        }

        function f0_9_5_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_5_4() {
          return Math.random();
        }

        function f0_9_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_5_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_5_7() {
          return isNaN(undefined);
        }

        function f0_9_5_8() {
          return isNaN(undefined);
        }

        function f0_9_5_9() {
          return Math.random();
        }

        function f0_9_5_10() {
          return isNaN(undefined);
        }

        function f0_9_5_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_5() {
          f0_9_5_0();
          f0_9_5_1();
          f0_9_5_2();
          f0_9_5_3();
          f0_9_5_4();
          f0_9_5_5();
          f0_9_5_6();
          f0_9_5_7();
          f0_9_5_8();
          f0_9_5_9();
          f0_9_5_10();
          f0_9_5_11();
        }

        function f0_9_6_0() {
          return Math.random();
        }

        function f0_9_6_1() {
          return isNaN(undefined);
        }

        function f0_9_6_2() {
          return isNaN(undefined);
        }

        function f0_9_6_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_6_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_6_5() {
          return Math.random();
        }

        function f0_9_6_6() {
          return Math.random();
        }

        function f0_9_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_6_8() {
          return isNaN(undefined);
        }

        function f0_9_6_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_6_10() {
          return Math.random();
        }

        function f0_9_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_6() {
          f0_9_6_0();
          f0_9_6_1();
          f0_9_6_2();
          f0_9_6_3();
          f0_9_6_4();
          f0_9_6_5();
          f0_9_6_6();
          f0_9_6_7();
          f0_9_6_8();
          f0_9_6_9();
          f0_9_6_10();
          f0_9_6_11();
        }

        function f0_9_7_0() {
          return Math.random();
        }

        function f0_9_7_1() {
          return Math.random();
        }

        function f0_9_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_7_3() {
          return isNaN(undefined);
        }

        function f0_9_7_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_7_5() {
          return isNaN(undefined);
        }

        function f0_9_7_6() {
          return Math.random();
        }

        function f0_9_7_7() {
          return isNaN(undefined);
        }

        function f0_9_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_7_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_7_10() {
          return Math.random();
        }

        function f0_9_7_11() {
          return isNaN(undefined);
        }

        function f0_9_7() {
          f0_9_7_0();
          f0_9_7_1();
          f0_9_7_2();
          f0_9_7_3();
          f0_9_7_4();
          f0_9_7_5();
          f0_9_7_6();
          f0_9_7_7();
          f0_9_7_8();
          f0_9_7_9();
          f0_9_7_10();
          f0_9_7_11();
        }

        function f0_9_8_0() {
          return isNaN(undefined);
        }

        function f0_9_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_8_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_8_3() {
          return isNaN(undefined);
        }

        function f0_9_8_4() {
          return isNaN(undefined);
        }

        function f0_9_8_5() {
          return Math.random();
        }

        function f0_9_8_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_8_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_8_8() {
          return Math.random();
        }

        function f0_9_8_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_8_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_8() {
          f0_9_8_0();
          f0_9_8_1();
          f0_9_8_2();
          f0_9_8_3();
          f0_9_8_4();
          f0_9_8_5();
          f0_9_8_6();
          f0_9_8_7();
          f0_9_8_8();
          f0_9_8_9();
          f0_9_8_10();
          f0_9_8_11();
        }

        function f0_9_9_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_9_1() {
          return isNaN(undefined);
        }

        function f0_9_9_2() {
          return Math.random();
        }

        function f0_9_9_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_9_4() {
          return Math.random();
        }

        function f0_9_9_5() {
          return isNaN(undefined);
        }

        function f0_9_9_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_9_7() {
          return isNaN(undefined);
        }

        function f0_9_9_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_9_9() {
          return isNaN(undefined);
        }

        function f0_9_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_9() {
          f0_9_9_0();
          f0_9_9_1();
          f0_9_9_2();
          f0_9_9_3();
          f0_9_9_4();
          f0_9_9_5();
          f0_9_9_6();
          f0_9_9_7();
          f0_9_9_8();
          f0_9_9_9();
          f0_9_9_10();
          f0_9_9_11();
        }

        function f0_9_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_10_1() {
          return isNaN(undefined);
        }

        function f0_9_10_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_10_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_10_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_10_5() {
          return isNaN(undefined);
        }

        function f0_9_10_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_10_7() {
          return isNaN(undefined);
        }

        function f0_9_10_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_10_9() {
          return isNaN(undefined);
        }

        function f0_9_10_10() {
          return isNaN(undefined);
        }

        function f0_9_10_11() {
          return isNaN(undefined);
        }

        function f0_9_10() {
          f0_9_10_0();
          f0_9_10_1();
          f0_9_10_2();
          f0_9_10_3();
          f0_9_10_4();
          f0_9_10_5();
          f0_9_10_6();
          f0_9_10_7();
          f0_9_10_8();
          f0_9_10_9();
          f0_9_10_10();
          f0_9_10_11();
        }

        function f0_9_11_0() {
          return Math.random();
        }

        function f0_9_11_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_11_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_11_3() {
          return isNaN(undefined);
        }

        function f0_9_11_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_11_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_9_11_6() {
          return isNaN(undefined);
        }

        function f0_9_11_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_11_8() {
          return Math.random();
        }

        function f0_9_11_9() {
          return Math.random();
        }

        function f0_9_11_10() {
          return isNaN(undefined);
        }

        function f0_9_11_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_9_11() {
          f0_9_11_0();
          f0_9_11_1();
          f0_9_11_2();
          f0_9_11_3();
          f0_9_11_4();
          f0_9_11_5();
          f0_9_11_6();
          f0_9_11_7();
          f0_9_11_8();
          f0_9_11_9();
          f0_9_11_10();
          f0_9_11_11();
        }

        function f0_9() {
          f0_9_0();
          f0_9_1();
          f0_9_2();
          f0_9_3();
          f0_9_4();
          f0_9_5();
          f0_9_6();
          f0_9_7();
          f0_9_8();
          f0_9_9();
          f0_9_10();
          f0_9_11();
        }

        function f0_10_0_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_0_1() {
          return isNaN(undefined);
        }

        function f0_10_0_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_0_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_0_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_0_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_0_6() {
          return isNaN(undefined);
        }

        function f0_10_0_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_0_8() {
          return Math.random();
        }

        function f0_10_0_9() {
          return isNaN(undefined);
        }

        function f0_10_0_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_0_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_0() {
          f0_10_0_0();
          f0_10_0_1();
          f0_10_0_2();
          f0_10_0_3();
          f0_10_0_4();
          f0_10_0_5();
          f0_10_0_6();
          f0_10_0_7();
          f0_10_0_8();
          f0_10_0_9();
          f0_10_0_10();
          f0_10_0_11();
        }

        function f0_10_1_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_1_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_1_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_1_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_1_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_1_5() {
          return Math.random();
        }

        function f0_10_1_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_1_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_1_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_1_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_1_10() {
          return Math.random();
        }

        function f0_10_1_11() {
          return isNaN(undefined);
        }

        function f0_10_1() {
          f0_10_1_0();
          f0_10_1_1();
          f0_10_1_2();
          f0_10_1_3();
          f0_10_1_4();
          f0_10_1_5();
          f0_10_1_6();
          f0_10_1_7();
          f0_10_1_8();
          f0_10_1_9();
          f0_10_1_10();
          f0_10_1_11();
        }

        function f0_10_2_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_2_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_2_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_2_4() {
          return Math.random();
        }

        function f0_10_2_5() {
          return Math.random();
        }

        function f0_10_2_6() {
          return Math.random();
        }

        function f0_10_2_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_2_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_2_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_2_10() {
          return Math.random();
        }

        function f0_10_2_11() {
          return isNaN(undefined);
        }

        function f0_10_2() {
          f0_10_2_0();
          f0_10_2_1();
          f0_10_2_2();
          f0_10_2_3();
          f0_10_2_4();
          f0_10_2_5();
          f0_10_2_6();
          f0_10_2_7();
          f0_10_2_8();
          f0_10_2_9();
          f0_10_2_10();
          f0_10_2_11();
        }

        function f0_10_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_3_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_3_2() {
          return isNaN(undefined);
        }

        function f0_10_3_3() {
          return isNaN(undefined);
        }

        function f0_10_3_4() {
          return isNaN(undefined);
        }

        function f0_10_3_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_3_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_3_7() {
          return Math.random();
        }

        function f0_10_3_8() {
          return isNaN(undefined);
        }

        function f0_10_3_9() {
          return isNaN(undefined);
        }

        function f0_10_3_10() {
          return Math.random();
        }

        function f0_10_3_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_3() {
          f0_10_3_0();
          f0_10_3_1();
          f0_10_3_2();
          f0_10_3_3();
          f0_10_3_4();
          f0_10_3_5();
          f0_10_3_6();
          f0_10_3_7();
          f0_10_3_8();
          f0_10_3_9();
          f0_10_3_10();
          f0_10_3_11();
        }

        function f0_10_4_0() {
          return Math.random();
        }

        function f0_10_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_4() {
          return isNaN(undefined);
        }

        function f0_10_4_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_4_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_8() {
          return isNaN(undefined);
        }

        function f0_10_4_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_4_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_4_11() {
          return Math.random();
        }

        function f0_10_4() {
          f0_10_4_0();
          f0_10_4_1();
          f0_10_4_2();
          f0_10_4_3();
          f0_10_4_4();
          f0_10_4_5();
          f0_10_4_6();
          f0_10_4_7();
          f0_10_4_8();
          f0_10_4_9();
          f0_10_4_10();
          f0_10_4_11();
        }

        function f0_10_5_0() {
          return Math.random();
        }

        function f0_10_5_1() {
          return Math.random();
        }

        function f0_10_5_2() {
          return isNaN(undefined);
        }

        function f0_10_5_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_5_4() {
          return isNaN(undefined);
        }

        function f0_10_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_5_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_5_7() {
          return isNaN(undefined);
        }

        function f0_10_5_8() {
          return isNaN(undefined);
        }

        function f0_10_5_9() {
          return Math.random();
        }

        function f0_10_5_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_5_11() {
          return Math.random();
        }

        function f0_10_5() {
          f0_10_5_0();
          f0_10_5_1();
          f0_10_5_2();
          f0_10_5_3();
          f0_10_5_4();
          f0_10_5_5();
          f0_10_5_6();
          f0_10_5_7();
          f0_10_5_8();
          f0_10_5_9();
          f0_10_5_10();
          f0_10_5_11();
        }

        function f0_10_6_0() {
          return Math.random();
        }

        function f0_10_6_1() {
          return Math.random();
        }

        function f0_10_6_2() {
          return Math.random();
        }

        function f0_10_6_3() {
          return isNaN(undefined);
        }

        function f0_10_6_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_6_5() {
          return isNaN(undefined);
        }

        function f0_10_6_6() {
          return isNaN(undefined);
        }

        function f0_10_6_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_6_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_6_9() {
          return isNaN(undefined);
        }

        function f0_10_6_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_6_11() {
          return Math.random();
        }

        function f0_10_6() {
          f0_10_6_0();
          f0_10_6_1();
          f0_10_6_2();
          f0_10_6_3();
          f0_10_6_4();
          f0_10_6_5();
          f0_10_6_6();
          f0_10_6_7();
          f0_10_6_8();
          f0_10_6_9();
          f0_10_6_10();
          f0_10_6_11();
        }

        function f0_10_7_0() {
          return Math.random();
        }

        function f0_10_7_1() {
          return Math.random();
        }

        function f0_10_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_7_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_7_4() {
          return isNaN(undefined);
        }

        function f0_10_7_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_7_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_7_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_7_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_7_10() {
          return isNaN(undefined);
        }

        function f0_10_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_7() {
          f0_10_7_0();
          f0_10_7_1();
          f0_10_7_2();
          f0_10_7_3();
          f0_10_7_4();
          f0_10_7_5();
          f0_10_7_6();
          f0_10_7_7();
          f0_10_7_8();
          f0_10_7_9();
          f0_10_7_10();
          f0_10_7_11();
        }

        function f0_10_8_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_8_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_8_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_8_3() {
          return isNaN(undefined);
        }

        function f0_10_8_4() {
          return isNaN(undefined);
        }

        function f0_10_8_5() {
          return Math.random();
        }

        function f0_10_8_6() {
          return isNaN(undefined);
        }

        function f0_10_8_7() {
          return isNaN(undefined);
        }

        function f0_10_8_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_8_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_8_10() {
          return isNaN(undefined);
        }

        function f0_10_8_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_8() {
          f0_10_8_0();
          f0_10_8_1();
          f0_10_8_2();
          f0_10_8_3();
          f0_10_8_4();
          f0_10_8_5();
          f0_10_8_6();
          f0_10_8_7();
          f0_10_8_8();
          f0_10_8_9();
          f0_10_8_10();
          f0_10_8_11();
        }

        function f0_10_9_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_9_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_9_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_9_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_9_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_9_5() {
          return Math.random();
        }

        function f0_10_9_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_9_7() {
          return isNaN(undefined);
        }

        function f0_10_9_8() {
          return Math.random();
        }

        function f0_10_9_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_9_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_9() {
          f0_10_9_0();
          f0_10_9_1();
          f0_10_9_2();
          f0_10_9_3();
          f0_10_9_4();
          f0_10_9_5();
          f0_10_9_6();
          f0_10_9_7();
          f0_10_9_8();
          f0_10_9_9();
          f0_10_9_10();
          f0_10_9_11();
        }

        function f0_10_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_10_1() {
          return Math.random();
        }

        function f0_10_10_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_10_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_10_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_10_5() {
          return isNaN(undefined);
        }

        function f0_10_10_6() {
          return Math.random();
        }

        function f0_10_10_7() {
          return Math.random();
        }

        function f0_10_10_8() {
          return Math.random();
        }

        function f0_10_10_9() {
          return isNaN(undefined);
        }

        function f0_10_10_10() {
          return Math.random();
        }

        function f0_10_10_11() {
          return isNaN(undefined);
        }

        function f0_10_10() {
          f0_10_10_0();
          f0_10_10_1();
          f0_10_10_2();
          f0_10_10_3();
          f0_10_10_4();
          f0_10_10_5();
          f0_10_10_6();
          f0_10_10_7();
          f0_10_10_8();
          f0_10_10_9();
          f0_10_10_10();
          f0_10_10_11();
        }

        function f0_10_11_0() {
          return isNaN(undefined);
        }

        function f0_10_11_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_11_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_11_3() {
          return isNaN(undefined);
        }

        function f0_10_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_11_5() {
          return Math.random();
        }

        function f0_10_11_6() {
          return isNaN(undefined);
        }

        function f0_10_11_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_11_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_10_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_11_10() {
          return isNaN(undefined);
        }

        function f0_10_11_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_10_11() {
          f0_10_11_0();
          f0_10_11_1();
          f0_10_11_2();
          f0_10_11_3();
          f0_10_11_4();
          f0_10_11_5();
          f0_10_11_6();
          f0_10_11_7();
          f0_10_11_8();
          f0_10_11_9();
          f0_10_11_10();
          f0_10_11_11();
        }

        function f0_10() {
          f0_10_0();
          f0_10_1();
          f0_10_2();
          f0_10_3();
          f0_10_4();
          f0_10_5();
          f0_10_6();
          f0_10_7();
          f0_10_8();
          f0_10_9();
          f0_10_10();
          f0_10_11();
        }

        function f0_11_0_0() {
          return Math.random();
        }

        function f0_11_0_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_0_2() {
          return isNaN(undefined);
        }

        function f0_11_0_3() {
          return Math.random();
        }

        function f0_11_0_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_0_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_0_6() {
          return isNaN(undefined);
        }

        function f0_11_0_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_0_8() {
          return Math.random();
        }

        function f0_11_0_9() {
          return Math.random();
        }

        function f0_11_0_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_0_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_0() {
          f0_11_0_0();
          f0_11_0_1();
          f0_11_0_2();
          f0_11_0_3();
          f0_11_0_4();
          f0_11_0_5();
          f0_11_0_6();
          f0_11_0_7();
          f0_11_0_8();
          f0_11_0_9();
          f0_11_0_10();
          f0_11_0_11();
        }

        function f0_11_1_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_1_1() {
          return Math.random();
        }

        function f0_11_1_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_1_3() {
          return Math.random();
        }

        function f0_11_1_4() {
          return isNaN(undefined);
        }

        function f0_11_1_5() {
          return Math.random();
        }

        function f0_11_1_6() {
          return isNaN(undefined);
        }

        function f0_11_1_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_1_8() {
          return Math.random();
        }

        function f0_11_1_9() {
          return isNaN(undefined);
        }

        function f0_11_1_10() {
          return isNaN(undefined);
        }

        function f0_11_1_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_1() {
          f0_11_1_0();
          f0_11_1_1();
          f0_11_1_2();
          f0_11_1_3();
          f0_11_1_4();
          f0_11_1_5();
          f0_11_1_6();
          f0_11_1_7();
          f0_11_1_8();
          f0_11_1_9();
          f0_11_1_10();
          f0_11_1_11();
        }

        function f0_11_2_0() {
          return Math.random();
        }

        function f0_11_2_1() {
          return isNaN(undefined);
        }

        function f0_11_2_2() {
          return isNaN(undefined);
        }

        function f0_11_2_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_2_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_2_5() {
          return isNaN(undefined);
        }

        function f0_11_2_6() {
          return Math.random();
        }

        function f0_11_2_7() {
          return Math.random();
        }

        function f0_11_2_8() {
          return Math.random();
        }

        function f0_11_2_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_2_10() {
          return isNaN(undefined);
        }

        function f0_11_2_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_2() {
          f0_11_2_0();
          f0_11_2_1();
          f0_11_2_2();
          f0_11_2_3();
          f0_11_2_4();
          f0_11_2_5();
          f0_11_2_6();
          f0_11_2_7();
          f0_11_2_8();
          f0_11_2_9();
          f0_11_2_10();
          f0_11_2_11();
        }

        function f0_11_3_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_3_1() {
          return Math.random();
        }

        function f0_11_3_2() {
          return isNaN(undefined);
        }

        function f0_11_3_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_3_4() {
          return Math.random();
        }

        function f0_11_3_5() {
          return Math.random();
        }

        function f0_11_3_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_3_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_3_9() {
          return Math.random();
        }

        function f0_11_3_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_3_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_3() {
          f0_11_3_0();
          f0_11_3_1();
          f0_11_3_2();
          f0_11_3_3();
          f0_11_3_4();
          f0_11_3_5();
          f0_11_3_6();
          f0_11_3_7();
          f0_11_3_8();
          f0_11_3_9();
          f0_11_3_10();
          f0_11_3_11();
        }

        function f0_11_4_0() {
          return isNaN(undefined);
        }

        function f0_11_4_1() {
          return Math.random();
        }

        function f0_11_4_2() {
          return Math.random();
        }

        function f0_11_4_3() {
          return Math.random();
        }

        function f0_11_4_4() {
          return Math.random();
        }

        function f0_11_4_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_4_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_4_7() {
          return Math.random();
        }

        function f0_11_4_8() {
          return Math.random();
        }

        function f0_11_4_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_4_10() {
          return Math.random();
        }

        function f0_11_4_11() {
          return isNaN(undefined);
        }

        function f0_11_4() {
          f0_11_4_0();
          f0_11_4_1();
          f0_11_4_2();
          f0_11_4_3();
          f0_11_4_4();
          f0_11_4_5();
          f0_11_4_6();
          f0_11_4_7();
          f0_11_4_8();
          f0_11_4_9();
          f0_11_4_10();
          f0_11_4_11();
        }

        function f0_11_5_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_5_1() {
          return Math.random();
        }

        function f0_11_5_2() {
          return isNaN(undefined);
        }

        function f0_11_5_3() {
          return isNaN(undefined);
        }

        function f0_11_5_4() {
          return Math.random();
        }

        function f0_11_5_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_5_6() {
          return Math.random();
        }

        function f0_11_5_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_5_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_5_9() {
          return Math.random();
        }

        function f0_11_5_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_5_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_5() {
          f0_11_5_0();
          f0_11_5_1();
          f0_11_5_2();
          f0_11_5_3();
          f0_11_5_4();
          f0_11_5_5();
          f0_11_5_6();
          f0_11_5_7();
          f0_11_5_8();
          f0_11_5_9();
          f0_11_5_10();
          f0_11_5_11();
        }

        function f0_11_6_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_6_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_6_2() {
          return isNaN(undefined);
        }

        function f0_11_6_3() {
          return isNaN(undefined);
        }

        function f0_11_6_4() {
          return isNaN(undefined);
        }

        function f0_11_6_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_6_6() {
          return Math.random();
        }

        function f0_11_6_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_6_8() {
          return Math.random();
        }

        function f0_11_6_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_6_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_6() {
          f0_11_6_0();
          f0_11_6_1();
          f0_11_6_2();
          f0_11_6_3();
          f0_11_6_4();
          f0_11_6_5();
          f0_11_6_6();
          f0_11_6_7();
          f0_11_6_8();
          f0_11_6_9();
          f0_11_6_10();
          f0_11_6_11();
        }

        function f0_11_7_0() {
          return isNaN(undefined);
        }

        function f0_11_7_1() {
          return Math.random();
        }

        function f0_11_7_2() {
          return Math.random();
        }

        function f0_11_7_3() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_7_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_7_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_7_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_7_7() {
          return Math.random();
        }

        function f0_11_7_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_7_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_7_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_7() {
          f0_11_7_0();
          f0_11_7_1();
          f0_11_7_2();
          f0_11_7_3();
          f0_11_7_4();
          f0_11_7_5();
          f0_11_7_6();
          f0_11_7_7();
          f0_11_7_8();
          f0_11_7_9();
          f0_11_7_10();
          f0_11_7_11();
        }

        function f0_11_8_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8_1() {
          return isNaN(undefined);
        }

        function f0_11_8_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_8_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8_5() {
          return Math.random();
        }

        function f0_11_8_6() {
          return Math.random();
        }

        function f0_11_8_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8_8() {
          return isNaN(undefined);
        }

        function f0_11_8_9() {
          return isNaN(undefined);
        }

        function f0_11_8_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_8() {
          f0_11_8_0();
          f0_11_8_1();
          f0_11_8_2();
          f0_11_8_3();
          f0_11_8_4();
          f0_11_8_5();
          f0_11_8_6();
          f0_11_8_7();
          f0_11_8_8();
          f0_11_8_9();
          f0_11_8_10();
          f0_11_8_11();
        }

        function f0_11_9_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_9_1() {
          return Math.random();
        }

        function f0_11_9_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_9_3() {
          return Math.random();
        }

        function f0_11_9_4() {
          return isNaN(undefined);
        }

        function f0_11_9_5() {
          return Math.random();
        }

        function f0_11_9_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_9_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_9_8() {
          return Math.random();
        }

        function f0_11_9_9() {
          return isNaN(undefined);
        }

        function f0_11_9_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_9_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_9() {
          f0_11_9_0();
          f0_11_9_1();
          f0_11_9_2();
          f0_11_9_3();
          f0_11_9_4();
          f0_11_9_5();
          f0_11_9_6();
          f0_11_9_7();
          f0_11_9_8();
          f0_11_9_9();
          f0_11_9_10();
          f0_11_9_11();
        }

        function f0_11_10_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_10_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_10_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_10_3() {
          return isNaN(undefined);
        }

        function f0_11_10_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_10_5() {
          return isNaN(undefined);
        }

        function f0_11_10_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_10_7() {
          return isNaN(undefined);
        }

        function f0_11_10_8() {
          return Math.random();
        }

        function f0_11_10_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_10_10() {
          return isNaN(undefined);
        }

        function f0_11_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_10() {
          f0_11_10_0();
          f0_11_10_1();
          f0_11_10_2();
          f0_11_10_3();
          f0_11_10_4();
          f0_11_10_5();
          f0_11_10_6();
          f0_11_10_7();
          f0_11_10_8();
          f0_11_10_9();
          f0_11_10_10();
          f0_11_10_11();
        }

        function f0_11_11_0() {
          return Math.random();
        }

        function f0_11_11_1() {
          return isNaN(undefined);
        }

        function f0_11_11_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_11_3() {
          return isNaN(undefined);
        }

        function f0_11_11_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_11_5() {
          return isNaN(undefined);
        }

        function f0_11_11_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_11_7() {
          return isNaN(undefined);
        }

        function f0_11_11_8() {
          return Math.random();
        }

        function f0_11_11_9() {
          return Math.random();
        }

        function f0_11_11_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f0_11_11_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f0_11_11() {
          f0_11_11_0();
          f0_11_11_1();
          f0_11_11_2();
          f0_11_11_3();
          f0_11_11_4();
          f0_11_11_5();
          f0_11_11_6();
          f0_11_11_7();
          f0_11_11_8();
          f0_11_11_9();
          f0_11_11_10();
          f0_11_11_11();
        }

        function f0_11() {
          f0_11_0();
          f0_11_1();
          f0_11_2();
          f0_11_3();
          f0_11_4();
          f0_11_5();
          f0_11_6();
          f0_11_7();
          f0_11_8();
          f0_11_9();
          f0_11_10();
          f0_11_11();
        }

        function f0() {
          f0_0();
          f0_1();
          f0_2();
          f0_3();
          f0_4();
          f0_5();
          f0_6();
          f0_7();
          f0_8();
          f0_9();
          f0_10();
          f0_11();
        }

        function f2_0() {
          return Math.random();
        }

        function f2_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f2_2() {
          return isNaN(undefined);
        }

        function f2_3() {
          return isNaN(undefined);
        }

        function f2_4() {
          return isNaN(undefined);
        }

        function f2_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f2_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f2_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f2_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f2_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f2_11() {
          return isNaN(undefined);
        }

        function f1() {
          f1_0();
          f1_1();
          f1_2();
          f1_3();
          f1_4();
          f1_5();
          f1_6();
          f1_7();
          f1_8();
          f1_9();
          f1_10();
          f1_11();
        }

        function f1_0_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_0_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_0_2() {
          return Math.random();
        }

        function f1_0_3() {
          return isNaN(undefined);
        }

        function f1_0_4() {
          return isNaN(undefined);
        }

        function f1_0_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_0_6() {
          return isNaN(undefined);
        }

        function f1_0_7() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_0_8() {
          return isNaN(undefined);
        }

        function f1_0_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_0_10() {
          return Math.random();
        }

        function f1_0_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_0() {
          f1_0_0();
          f1_0_1();
          f1_0_2();
          f1_0_3();
          f1_0_4();
          f1_0_5();
          f1_0_6();
          f1_0_7();
          f1_0_8();
          f1_0_9();
          f1_0_10();
          f1_0_11();
        }

        function f1_1_0() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_1_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_2() {
          return isNaN(undefined);
        }

        function f1_1_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_1_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_1_5() {
          return Math.random();
        }

        function f1_1_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_1() {
          f1_1_0();
          f1_1_1();
          f1_1_2();
          f1_1_3();
          f1_1_4();
          f1_1_5();
          f1_1_6();
          f1_1_7();
          f1_1_8();
          f1_1_9();
          f1_1_10();
          f1_1_11();
        }

        function f1_2_0() {
          return Math.random();
        }

        function f1_2_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_2_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_2_3() {
          return isNaN(undefined);
        }

        function f1_2_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_2_5() {
          return Math.random();
        }

        function f1_2_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_2_7() {
          return isNaN(undefined);
        }

        function f1_2_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_2_9() {
          return Math.random();
        }

        function f1_2_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_2_11() {
          return Math.random();
        }

        function f1_2() {
          f1_2_0();
          f1_2_1();
          f1_2_2();
          f1_2_3();
          f1_2_4();
          f1_2_5();
          f1_2_6();
          f1_2_7();
          f1_2_8();
          f1_2_9();
          f1_2_10();
          f1_2_11();
        }

        function f1_3_0() {
          return Math.random();
        }

        function f1_3_1() {
          return isNaN(undefined);
        }

        function f1_3_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_3_3() {
          return isNaN(undefined);
        }

        function f1_3_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_3_5() {
          return isNaN(undefined);
        }

        function f1_3_6() {
          return Math.random();
        }

        function f1_3_7() {
          return Math.random();
        }

        function f1_3_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_3_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_3_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_3_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_3() {
          f1_3_0();
          f1_3_1();
          f1_3_2();
          f1_3_3();
          f1_3_4();
          f1_3_5();
          f1_3_6();
          f1_3_7();
          f1_3_8();
          f1_3_9();
          f1_3_10();
          f1_3_11();
        }

        function f1_4_0() {
          return isNaN(undefined);
        }

        function f1_4_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_4_2() {
          return isNaN(undefined);
        }

        function f1_4_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_4_4() {
          return Math.random();
        }

        function f1_4_5() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_4_6() {
          return isNaN(undefined);
        }

        function f1_4_7() {
          return isNaN(undefined);
        }

        function f1_4_8() {
          return Math.random();
        }

        function f1_4_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_4_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_4_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_4() {
          f1_4_0();
          f1_4_1();
          f1_4_2();
          f1_4_3();
          f1_4_4();
          f1_4_5();
          f1_4_6();
          f1_4_7();
          f1_4_8();
          f1_4_9();
          f1_4_10();
          f1_4_11();
        }

        function f1_5_0() {
          return isNaN(undefined);
        }

        function f1_5_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_5_2() {
          return Math.random();
        }

        function f1_5_3() {
          return isNaN(undefined);
        }

        function f1_5_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_5_5() {
          return isNaN(undefined);
        }

        function f1_5_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_5_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_5_8() {
          return Math.random();
        }

        function f1_5_9() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_5_10() {
          return isNaN(undefined);
        }

        function f1_5_11() {
          return isNaN(undefined);
        }

        function f1_5() {
          f1_5_0();
          f1_5_1();
          f1_5_2();
          f1_5_3();
          f1_5_4();
          f1_5_5();
          f1_5_6();
          f1_5_7();
          f1_5_8();
          f1_5_9();
          f1_5_10();
          f1_5_11();
        }

        function f1_6_0() {
          return Math.random();
        }

        function f1_6_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_6_2() {
          return Math.random();
        }

        function f1_6_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_6_4() {
          return Math.random();
        }

        function f1_6_5() {
          return Math.random();
        }

        function f1_6_6() {
          return Math.random();
        }

        function f1_6_7() {
          return Math.random();
        }

        function f1_6_8() {
          return isNaN(undefined);
        }

        function f1_6_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_6_10() {
          return Math.random();
        }

        function f1_6_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_6() {
          f1_6_0();
          f1_6_1();
          f1_6_2();
          f1_6_3();
          f1_6_4();
          f1_6_5();
          f1_6_6();
          f1_6_7();
          f1_6_8();
          f1_6_9();
          f1_6_10();
          f1_6_11();
        }

        function f1_7_0() {
          return Math.random();
        }

        function f1_7_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_7_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_7_3() {
          return Math.random();
        }

        function f1_7_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_7_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_7_6() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_7_7() {
          return isNaN(undefined);
        }

        function f1_7_8() {
          return isNaN(undefined);
        }

        function f1_7_9() {
          return isNaN(undefined);
        }

        function f1_7_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_7_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_7() {
          f1_7_0();
          f1_7_1();
          f1_7_2();
          f1_7_3();
          f1_7_4();
          f1_7_5();
          f1_7_6();
          f1_7_7();
          f1_7_8();
          f1_7_9();
          f1_7_10();
          f1_7_11();
        }

        function f1_8_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_1() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_8_2() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_3() {
          return isNaN(undefined);
        }

        function f1_8_4() {
          return isNaN(undefined);
        }

        function f1_8_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_6() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_8() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_8_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8_10() {
          return isNaN(undefined);
        }

        function f1_8_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_8() {
          f1_8_0();
          f1_8_1();
          f1_8_2();
          f1_8_3();
          f1_8_4();
          f1_8_5();
          f1_8_6();
          f1_8_7();
          f1_8_8();
          f1_8_9();
          f1_8_10();
          f1_8_11();
        }

        function f1_9_0() {
          return Math.random();
        }

        function f1_9_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_9_2() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_9_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_9_4() {
          return Math.random();
        }

        function f1_9_5() {
          return isNaN(undefined);
        }

        function f1_9_6() {
          return isNaN(undefined);
        }

        function f1_9_7() {
          return Math.random();
        }

        function f1_9_8() {
          return Math.random();
        }

        function f1_9_9() {
          return Math.random();
        }

        function f1_9_10() {
          return isNaN(undefined);
        }

        function f1_9_11() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_9() {
          f1_9_0();
          f1_9_1();
          f1_9_2();
          f1_9_3();
          f1_9_4();
          f1_9_5();
          f1_9_6();
          f1_9_7();
          f1_9_8();
          f1_9_9();
          f1_9_10();
          f1_9_11();
        }

        function f1_10_0() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10_2() {
          return Math.random();
        }

        function f1_10_3() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_10_4() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_10_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10_6() {
          return Math.random();
        }

        function f1_10_7() {
          return Math.random();
        }

        function f1_10_8() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10_10() {
          return Math.max(Math.random(), Math.random());
        }

        function f1_10_11() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_10() {
          f1_10_0();
          f1_10_1();
          f1_10_2();
          f1_10_3();
          f1_10_4();
          f1_10_5();
          f1_10_6();
          f1_10_7();
          f1_10_8();
          f1_10_9();
          f1_10_10();
          f1_10_11();
        }

        function f1_11_0() {
          return isNaN(undefined);
        }

        function f1_11_1() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_2() {
          return isNaN(undefined);
        }

        function f1_11_3() {
          return isNaN(undefined);
        }

        function f1_11_4() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_5() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_6() {
          return Math.random();
        }

        function f1_11_7() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_8() {
          return Math.random();
        }

        function f1_11_9() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_10() {
          return encodeURIComponent(',45098#"¤#"&¤/%"Q"');
        }

        function f1_11_11() {
          return Math.random();
        }

        function f1_11() {
          f1_11_0();
          f1_11_1();
          f1_11_2();
          f1_11_3();
          f1_11_4();
          f1_11_5();
          f1_11_6();
          f1_11_7();
          f1_11_8();
          f1_11_9();
          f1_11_10();
          f1_11_11();
        }

        function f2() {
          f2_0();
          f2_1();
          f2_2();
          f2_3();
          f2_4();
          f2_5();
          f2_6();
          f2_7();
          f2_8();
          f2_9();
          f2_10();
          f2_11();
        }

        function f3() {
          return isNaN(undefined);
        }

        function f4() {
          return Math.max(Math.random(), Math.random());
        }

        function f5() {
          return Math.max(Math.random(), Math.random());
        }

        function f6() {
          return Math.max(Math.random(), Math.random());
        }

        function f7() {
          return isNaN(undefined);
        }

        function f8() {
          return Math.max(Math.random(), Math.random());
        }

        function f9() {
          return isNaN(undefined);
        }

        function f10() {
          return isNaN(undefined);
        }

        function f11() {
          return isNaN(undefined);
        }

        function stepInTest() {
          f0();
          f1();
          f2();
          f3();
          f4();
          f5();
          f6();
          f7();
          f8();
          f9();
          f10();
          f11();
          console.log("Done!");
        }

        function debugStatement() {
          debugger;
          f0();
          f1();
          f2();
          f3();
          f4();
          f5();
          f6();
          f7();
          f8();
          f9();
          f10();
          f11();
          console.log("Done!");
        }

        /***/
      },

    /***/ "./src/step-out-test.js":
      /*!******************************!*\
  !*** ./src/step-out-test.js ***!
  \******************************/
      /*! exports provided: default */
      /*! exports used: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function f0() {
          f1();
          return Math.random();
        }

        function f1() {
          f2();
          return Math.random();
        }

        function f2() {
          f3();
          return Math.random();
        }

        function f3() {
          f4();
          return Math.random();
        }

        function f4() {
          f5();
          return Math.random();
        }

        function f5() {
          f6();
          return Math.random();
        }

        function f6() {
          f7();
          return Math.random();
        }

        function f7() {
          f8();
          return Math.random();
        }

        function f8() {
          f9();
          return Math.random();
        }

        function f9() {
          f10();
          return Math.random();
        }

        function f10() {
          f11();
          return Math.random();
        }

        function f11() {
          f12();
          return Math.random();
        }

        function f12() {
          f13();
          return Math.random();
        }

        function f13() {
          f14();
          return Math.random();
        }

        function f14() {
          f15();
          return Math.random();
        }

        function f15() {
          f16();
          return Math.random();
        }

        function f16() {
          f17();
          return Math.random();
        }

        function f17() {
          f18();
          return Math.random();
        }

        function f18() {
          f19();
          return Math.random();
        }

        function f19() {
          f20();
          return Math.random();
        }

        function f20() {
          f21();
          return Math.random();
        }

        function f21() {
          f22();
          return Math.random();
        }

        function f22() {
          f23();
          return Math.random();
        }

        function f23() {
          f24();
          return Math.random();
        }

        function f24() {
          f25();
          return Math.random();
        }

        function f25() {
          f26();
          return Math.random();
        }

        function f26() {
          f27();
          return Math.random();
        }

        function f27() {
          f28();
          return Math.random();
        }

        function f28() {
          f29();
          return Math.random();
        }

        function f29() {
          f30();
          return Math.random();
        }

        function f30() {
          f31();
          return Math.random();
        }

        function f31() {
          f32();
          return Math.random();
        }

        function f32() {
          f33();
          return Math.random();
        }

        function f33() {
          f34();
          return Math.random();
        }

        function f34() {
          f35();
          return Math.random();
        }

        function f35() {
          f36();
          return Math.random();
        }

        function f36() {
          f37();
          return Math.random();
        }

        function f37() {
          f38();
          return Math.random();
        }

        function f38() {
          f39();
          return Math.random();
        }

        function f39() {
          f40();
          return Math.random();
        }

        function f40() {
          f41();
          return Math.random();
        }

        function f41() {
          f42();
          return Math.random();
        }

        function f42() {
          f43();
          return Math.random();
        }

        function f43() {
          f44();
          return Math.random();
        }

        function f44() {
          f45();
          return Math.random();
        }

        function f45() {
          f46();
          return Math.random();
        }

        function f46() {
          f47();
          return Math.random();
        }

        function f47() {
          f48();
          return Math.random();
        }

        function f48() {
          f49();
          return Math.random();
        }

        function f49() {
          f50();
          return Math.random();
        }

        function f50() {
          f51();
          return Math.random();
        }

        function f51() {
          f52();
          return Math.random();
        }

        function f52() {
          f53();
          return Math.random();
        }

        function f53() {
          f54();
          return Math.random();
        }

        function f54() {
          f55();
          return Math.random();
        }

        function f55() {
          f56();
          return Math.random();
        }

        function f56() {
          f57();
          return Math.random();
        }

        function f57() {
          f58();
          return Math.random();
        }

        function f58() {
          f59();
          return Math.random();
        }

        function f59() {
          f60();
          return Math.random();
        }

        function f60() {
          f61();
          return Math.random();
        }

        function f61() {
          f62();
          return Math.random();
        }

        function f62() {
          f63();
          return Math.random();
        }

        function f63() {
          f64();
          return Math.random();
        }

        function f64() {
          f65();
          return Math.random();
        }

        function f65() {
          f66();
          return Math.random();
        }

        function f66() {
          f67();
          return Math.random();
        }

        function f67() {
          f68();
          return Math.random();
        }

        function f68() {
          f69();
          return Math.random();
        }

        function f69() {
          f70();
          return Math.random();
        }

        function f70() {
          f71();
          return Math.random();
        }

        function f71() {
          f72();
          return Math.random();
        }

        function f72() {
          f73();
          return Math.random();
        }

        function f73() {
          f74();
          return Math.random();
        }

        function f74() {
          f75();
          return Math.random();
        }

        function f75() {
          f76();
          return Math.random();
        }

        function f76() {
          f77();
          return Math.random();
        }

        function f77() {
          f78();
          return Math.random();
        }

        function f78() {
          f79();
          return Math.random();
        }

        function f79() {
          f80();
          return Math.random();
        }

        function f80() {
          f81();
          return Math.random();
        }

        function f81() {
          f82();
          return Math.random();
        }

        function f82() {
          f83();
          return Math.random();
        }

        function f83() {
          f84();
          return Math.random();
        }

        function f84() {
          f85();
          return Math.random();
        }

        function f85() {
          f86();
          return Math.random();
        }

        function f86() {
          f87();
          return Math.random();
        }

        function f87() {
          f88();
          return Math.random();
        }

        function f88() {
          f89();
          return Math.random();
        }

        function f89() {
          f90();
          return Math.random();
        }

        function f90() {
          f91();
          return Math.random();
        }

        function f91() {
          f92();
          return Math.random();
        }

        function f92() {
          f93();
          return Math.random();
        }

        function f93() {
          f94();
          return Math.random();
        }

        function f94() {
          f95();
          return Math.random();
        }

        function f95() {
          f96();
          return Math.random();
        }

        function f96() {
          f97();
          return Math.random();
        }

        function f97() {
          f98();
          return Math.random();
        }

        function f98() {
          f99();
          return Math.random();
        }

        function f99() {
          f100();
          return Math.random();
        }

        function f100() {
          f101();
          return Math.random();
        }

        function f101() {
          f102();
          return Math.random();
        }

        function f102() {
          f103();
          return Math.random();
        }

        function f103() {
          f104();
          return Math.random();
        }

        function f104() {
          f105();
          return Math.random();
        }

        function f105() {
          f106();
          return Math.random();
        }

        function f106() {
          f107();
          return Math.random();
        }

        function f107() {
          f108();
          return Math.random();
        }

        function f108() {
          f109();
          return Math.random();
        }

        function f109() {
          f110();
          return Math.random();
        }

        function f110() {
          f111();
          return Math.random();
        }

        function f111() {
          f112();
          return Math.random();
        }

        function f112() {
          f113();
          return Math.random();
        }

        function f113() {
          f114();
          return Math.random();
        }

        function f114() {
          f115();
          return Math.random();
        }

        function f115() {
          f116();
          return Math.random();
        }

        function f116() {
          f117();
          return Math.random();
        }

        function f117() {
          f118();
          return Math.random();
        }

        function f118() {
          f119();
          return Math.random();
        }

        function f119() {
          f120();
          return Math.random();
        }

        function f120() {
          f121();
          return Math.random();
        }

        function f121() {
          f122();
          return Math.random();
        }

        function f122() {
          f123();
          return Math.random();
        }

        function f123() {
          f124();
          return Math.random();
        }

        function f124() {
          f125();
          return Math.random();
        }

        function f125() {
          f126();
          return Math.random();
        }

        function f126() {
          f127();
          return Math.random();
        }

        function f127() {
          f128();
          return Math.random();
        }

        function f128() {
          f129();
          return Math.random();
        }

        function f129() {
          f130();
          return Math.random();
        }

        function f130() {
          f131();
          return Math.random();
        }

        function f131() {
          f132();
          return Math.random();
        }

        function f132() {
          f133();
          return Math.random();
        }

        function f133() {
          f134();
          return Math.random();
        }

        function f134() {
          f135();
          return Math.random();
        }

        function f135() {
          f136();
          return Math.random();
        }

        function f136() {
          f137();
          return Math.random();
        }

        function f137() {
          f138();
          return Math.random();
        }

        function f138() {
          f139();
          return Math.random();
        }

        function f139() {
          f140();
          return Math.random();
        }

        function f140() {
          f141();
          return Math.random();
        }

        function f141() {
          f142();
          return Math.random();
        }

        function f142() {
          f143();
          return Math.random();
        }

        function f143() {
          f144();
          return Math.random();
        }

        function f144() {
          f145();
          return Math.random();
        }

        function f145() {
          f146();
          return Math.random();
        }

        function f146() {
          f147();
          return Math.random();
        }

        function f147() {
          f148();
          return Math.random();
        }

        function f148() {
          f149();
          return Math.random();
        }

        function f149() {
          f150();
          return Math.random();
        }

        function f150() {
          f151();
          return Math.random();
        }

        function f151() {
          f152();
          return Math.random();
        }

        function f152() {
          f153();
          return Math.random();
        }

        function f153() {
          f154();
          return Math.random();
        }

        function f154() {
          f155();
          return Math.random();
        }

        function f155() {
          f156();
          return Math.random();
        }

        function f156() {
          f157();
          return Math.random();
        }

        function f157() {
          f158();
          return Math.random();
        }

        function f158() {
          f159();
          return Math.random();
        }

        function f159() {
          f160();
          return Math.random();
        }

        function f160() {
          f161();
          return Math.random();
        }

        function f161() {
          f162();
          return Math.random();
        }

        function f162() {
          f163();
          return Math.random();
        }

        function f163() {
          f164();
          return Math.random();
        }

        function f164() {
          f165();
          return Math.random();
        }

        function f165() {
          f166();
          return Math.random();
        }

        function f166() {
          f167();
          return Math.random();
        }

        function f167() {
          f168();
          return Math.random();
        }

        function f168() {
          f169();
          return Math.random();
        }

        function f169() {
          f170();
          return Math.random();
        }

        function f170() {
          f171();
          return Math.random();
        }

        function f171() {
          f172();
          return Math.random();
        }

        function f172() {
          f173();
          return Math.random();
        }

        function f173() {
          f174();
          return Math.random();
        }

        function f174() {
          f175();
          return Math.random();
        }

        function f175() {
          f176();
          return Math.random();
        }

        function f176() {
          f177();
          return Math.random();
        }

        function f177() {
          f178();
          return Math.random();
        }

        function f178() {
          f179();
          return Math.random();
        }

        function f179() {
          f180();
          return Math.random();
        }

        function f180() {
          f181();
          return Math.random();
        }

        function f181() {
          f182();
          return Math.random();
        }

        function f182() {
          f183();
          return Math.random();
        }

        function f183() {
          f184();
          return Math.random();
        }

        function f184() {
          f185();
          return Math.random();
        }

        function f185() {
          f186();
          return Math.random();
        }

        function f186() {
          f187();
          return Math.random();
        }

        function f187() {
          f188();
          return Math.random();
        }

        function f188() {
          f189();
          return Math.random();
        }

        function f189() {
          f190();
          return Math.random();
        }

        function f190() {
          f191();
          return Math.random();
        }

        function f191() {
          f192();
          return Math.random();
        }

        function f192() {
          f193();
          return Math.random();
        }

        function f193() {
          f194();
          return Math.random();
        }

        function f194() {
          f195();
          return Math.random();
        }

        function f195() {
          f196();
          return Math.random();
        }

        function f196() {
          f197();
          return Math.random();
        }

        function f197() {
          f198();
          return Math.random();
        }

        function f198() {
          f199();
          return Math.random();
        }

        function f199() {
          return Math.random();
        }

        /* harmony default export */ __webpack_exports__["a"] = f0;

        /***/
      },

    /***/ "./src/step-over-test.js":
      /*!*******************************!*\
  !*** ./src/step-over-test.js ***!
  \*******************************/
      /*! exports provided: default */
      /*! exports used: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function squareAndOne(arg) {
          return arg * arg + 1;
        }
        function squareUntil(arg, limit) {
          if (arg * arg >= limit) {
            return arg * arg;
          } else {
            return squareUntil(arg * arg, limit);
          }
        }

        function addUntil(arg1, arg2, limit) {
          if (arg1 + arg2 > limit) {
            return arg1 + arg2;
          } else {
            return addUntil(arg1 + arg2, arg2, limit);
          }
        }

        function testStart(aArg) {
          var r = 10;
          var a = squareAndOne(r);
          var b = squareUntil(r, 99999999999); //recurses 3 times, returns on 4th call
          var c = addUntil(r, 5, 1050); // recurses 208 times and returns on the 209th call
          return a + b + c;
        }

        /* harmony default export */ __webpack_exports__["a"] = testStart;

        /***/
      },

    /***/ 0:
      /*!***********************************************************************************************************************************!*\
  !*** multi ./node_modules/react-scripts/config/polyfills.js ./node_modules/react-dev-utils/webpackHotDevClient.js ./src/index.js ***!
  \***********************************************************************************************************************************/
      /*! dynamic exports provided */
      /*! all exports used */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! /Users/Ystartsev/Work/debugger-sourcemaps/node_modules/react-scripts/config/polyfills.js */ "./node_modules/react-scripts/config/polyfills.js"
        );
        __webpack_require__(
          /*! /Users/Ystartsev/Work/debugger-sourcemaps/node_modules/react-dev-utils/webpackHotDevClient.js */ "./node_modules/react-dev-utils/webpackHotDevClient.js"
        );
        module.exports = __webpack_require__(
          /*! /Users/Ystartsev/Work/debugger-sourcemaps/src/index.js */ "./src/index.js"
        );

        /***/
      }

    /******/
  }
);
//# sourceMappingURL=bundle.js.map
