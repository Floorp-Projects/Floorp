{"version":3,"sources":["parcel://./babel-bindings-with-flow/src/mod.js","parcel://./babel-bindings-with-flow/input.js"],"names":["aNamed","root","value","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,0BAAS,SAAf;;;;;;;kBCKiBC;;AAFxB;;AAEe,SAASA,IAAT,GAAgB;AAC7B,MAAIC,QAASF,WAAb;;AAEAG,UAAQC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B,EAAgCC,KAAhC;AACD,EATD;AACA;AACA","file":"babel-bindings-with-flow.map","sourcesContent":["export const aNamed = \"a-named\";\n","// Webpack doesn't map import declarations well, so doing this forces binding\n// processing to only process the binding being cast when searching for\n// matches. That way we can properly test if the flow cast causes problems.\nimport { aNamed } from \"./src/mod\";\n\nexport default function root() {\n  var value = (aNamed: Array<string>);\n\n  console.log(\"pause here\", root, value);\n}\n"]}