{"version":3,"sources":["parcel://./step-over-for-of-closure/input.js"],"names":["root","vals","console","log","val"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAIwBA;AAJxB;AACA;AACA,MAAMC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAb;;AAEe,SAASD,IAAT,GAAgB;AAC7BE,UAAQC,GAAR,CAAY,YAAZ;;AAEA,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBC,YAAQC,GAAR,CAAY,aAAZ,EAA2B,CAAC,MAAMC,GAAP,GAA3B;AACD;;AAEDF,UAAQC,GAAR,CAAY,MAAZ;AACD","file":"step-over-for-of-closure.map","sourcesContent":["// Babel will convert the loop body to a function to handle the 'val' lexical\n// enclosure behavior.\nconst vals = [1, 2];\n\nexport default function root() {\n  console.log(\"pause here\");\n\n  for (const val of vals) {\n    console.log(\"pause again\", (() => val)());\n  }\n\n  console.log(\"done\");\n}\n"]}