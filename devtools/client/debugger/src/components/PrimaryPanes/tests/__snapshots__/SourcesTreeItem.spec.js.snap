// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SourceTreeItem renderItem should not show domain item when the projectRoot exists 1`] = `
Object {
  "component": <div
    className="node"
    key="mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      one.js
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        },
        "name": "one.js",
        "path": "mdn.com/one.js",
      },
      "projectRoot": "root/",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              },
              "name": "one.js",
              "path": "mdn.com/one.js",
            }
          }
          projectRoot="root/"
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            one.js
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "name": "one.js",
      "path": "mdn.com/one.js",
    },
    "projectRoot": "root/",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show (mapped) for duplicate source items 1`] = `
Object {
  "component": <div
    className="node"
    key="http://mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="url"
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      one.js
      <span
        className="suffix"
      >
        (mapped)
      </span>
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "hasMatchingGeneratedSource": true,
      "item": Object {
        "contents": Object {
          "displayURL": "url",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "url",
          "url": "url",
        },
        "name": "one.js",
        "path": "http://mdn.com/one.js",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          hasMatchingGeneratedSource={true}
          item={
            Object {
              "contents": Object {
                "displayURL": "url",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "url",
                "url": "url",
              },
              "name": "one.js",
              "path": "http://mdn.com/one.js",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="url"
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            one.js
            <span
              className="suffix"
            >
              (mapped)
            </span>
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "hasMatchingGeneratedSource": true,
    "item": Object {
      "contents": Object {
        "displayURL": "url",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "url",
        "url": "url",
      },
      "name": "one.js",
      "path": "http://mdn.com/one.js",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show domain item 1`] = `
Object {
  "component": <div
    className="node"
    key="root"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="url"
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      root
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 0,
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "url",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "url",
          "url": "url",
        },
        "name": "root",
        "path": "root",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={0}
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "url",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "url",
                "url": "url",
              },
              "name": "root",
              "path": "root",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="url"
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            root
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 0,
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "url",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "url",
        "url": "url",
      },
      "name": "root",
      "path": "root",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show domain item as debuggee 1`] = `
Object {
  "component": <div
    className="node"
    key="root"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="folder"
    />
    <span
      className="label"
    >
      http://mdn.com
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 0,
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "http://mdn.com",
        "path": "root",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={0}
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "http://mdn.com",
              "path": "root",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="folder"
          />
          <span
            className="label"
          >
            http://mdn.com
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 0,
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "http://mdn.com",
      "path": "root",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show domain item as debuggee with focus and arrow 1`] = `
Object {
  "component": <div
    className="node focused"
    key="root"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="folder"
    />
    <span
      className="label"
    >
      http://mdn.com
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 0,
      "expanded": false,
      "focusItem": [MockFunction],
      "focused": true,
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "http://mdn.com",
        "path": "root",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={0}
          expanded={false}
          focusItem={[MockFunction]}
          focused={true}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "http://mdn.com",
              "path": "root",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node focused"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="folder"
          />
          <span
            className="label"
          >
            http://mdn.com
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 0,
    "expanded": false,
    "focusItem": [MockFunction],
    "focused": true,
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "http://mdn.com",
      "path": "root",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show focused item for folder with expanded arrow 1`] = `
Object {
  "component": <div
    className="node focused"
    key="domain/subfolder"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow expanded"
    />
    <AccessibleImage
      className="globe-small"
    />
    <span
      className="label"
    >
      folder
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 1,
      "expanded": true,
      "focusItem": [MockFunction],
      "focused": true,
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "folder",
        "path": "domain/subfolder",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": null,
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={1}
          expanded={true}
          focusItem={[MockFunction]}
          focused={true}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "folder",
              "path": "domain/subfolder",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={null}
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node focused"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow expanded"
          />
          <AccessibleImage
            className="globe-small"
          />
          <span
            className="label"
          >
            folder
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 1,
    "expanded": true,
    "focusItem": [MockFunction],
    "focused": true,
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "folder",
      "path": "domain/subfolder",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": null,
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for angular item 1`] = `
Object {
  "component": <div
    className="node"
    key="ng://"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="angular"
    />
    <span
      className="label"
    >
      Angular
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "ng://",
        "path": "ng://",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "ng://",
              "path": "ng://",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="angular"
          />
          <span
            className="label"
          >
            Angular
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "ng://",
      "path": "ng://",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for domain item when a thread is set to root 1`] = `
Object {
  "component": <div
    className="node"
    key="domain/subfolder"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="globe-small"
    />
    <span
      className="label"
    >
      folder
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 0,
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "folder",
        "path": "domain/subfolder",
        "type": "directory",
      },
      "projectRoot": "server1.conn13.child1/thread19",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "actor": "server1.conn13.child1/thread19",
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={0}
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "folder",
              "path": "domain/subfolder",
              "type": "directory",
            }
          }
          projectRoot="server1.conn13.child1/thread19"
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "actor": "server1.conn13.child1/thread19",
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="globe-small"
          />
          <span
            className="label"
          >
            folder
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 0,
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "folder",
      "path": "domain/subfolder",
      "type": "directory",
    },
    "projectRoot": "server1.conn13.child1/thread19",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "actor": "server1.conn13.child1/thread19",
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for folder with arrow 1`] = `
Object {
  "component": <div
    className="node"
    key="domain/subfolder"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="folder"
    />
    <span
      className="label"
    >
      folder
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "folder",
        "path": "domain/subfolder",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": null,
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "folder",
              "path": "domain/subfolder",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={null}
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="folder"
          />
          <span
            className="label"
          >
            folder
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "folder",
      "path": "domain/subfolder",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": null,
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for folder with expanded arrow 1`] = `
Object {
  "component": <div
    className="node"
    key="domain/subfolder"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow expanded"
    />
    <AccessibleImage
      className="globe-small"
    />
    <span
      className="label"
    >
      folder
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 1,
      "expanded": true,
      "focusItem": [MockFunction],
      "focused": false,
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "folder",
        "path": "domain/subfolder",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": null,
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={1}
          expanded={true}
          focusItem={[MockFunction]}
          focused={false}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "folder",
              "path": "domain/subfolder",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={null}
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow expanded"
          />
          <AccessibleImage
            className="globe-small"
          />
          <span
            className="label"
          >
            folder
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 1,
    "expanded": true,
    "focusItem": [MockFunction],
    "focused": false,
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "folder",
      "path": "domain/subfolder",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": null,
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for moz-extension item 1`] = `
Object {
  "component": <div
    className="node"
    key="moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="extension"
    />
    <span
      className="label"
    >
      moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 1,
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
        "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={1}
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
              "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="extension"
          />
          <span
            className="label"
          >
            moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 1,
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
      "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for moz-extension item when a thread is set to root 1`] = `
Object {
  "component": <div
    className="node"
    key="moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="extension"
    />
    <span
      className="label"
    >
      moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 0,
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
        "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
        "type": "directory",
      },
      "projectRoot": "server1.conn13.child1/thread19",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "actor": "server1.conn13.child1/thread19",
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={0}
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
              "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
              "type": "directory",
            }
          }
          projectRoot="server1.conn13.child1/thread19"
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "actor": "server1.conn13.child1/thread19",
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="extension"
          />
          <span
            className="label"
          >
            moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 0,
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
      "path": "moz-extension://e37c3c08-beac-a04b-8032-c4f699a1a856",
      "type": "directory",
    },
    "projectRoot": "server1.conn13.child1/thread19",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "actor": "server1.conn13.child1/thread19",
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show icon for webpack item 1`] = `
Object {
  "component": <div
    className="node"
    key="webpack://"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <AccessibleImage
      className="arrow"
    />
    <AccessibleImage
      className="webpack"
    />
    <span
      className="label"
    >
      Webpack
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Array [],
        "name": "webpack://",
        "path": "webpack://",
        "type": "directory",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Array [],
              "name": "webpack://",
              "path": "webpack://",
              "type": "directory",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <AccessibleImage
            className="arrow"
          />
          <AccessibleImage
            className="webpack"
          />
          <span
            className="label"
          >
            Webpack
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Array [],
      "name": "webpack://",
      "path": "webpack://",
      "type": "directory",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show source item with ignore icon 1`] = `
Object {
  "component": <div
    className="node"
    key="http://mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="http://mdn.com/one.js"
  >
    <span
      className="img no-arrow"
    />
    <AccessibleImage
      className="blackBox"
    />
    <span
      className="label"
    >
      one.js
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": true,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        },
        "name": "one.js",
        "path": "http://mdn.com/one.js",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": true,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": true,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              },
              "name": "one.js",
              "path": "http://mdn.com/one.js",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": true,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="http://mdn.com/one.js"
        >
          <span
            className="img no-arrow"
          />
          <AccessibleImage
            className="blackBox"
          />
          <span
            className="label"
          >
            one.js
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": true,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "name": "one.js",
      "path": "http://mdn.com/one.js",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": true,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show source item with prettyPrint icon 1`] = `
Object {
  "component": <div
    className="node"
    key="http://mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="url"
  >
    <span
      className="img no-arrow"
    />
    <AccessibleImage
      className="prettyPrint"
    />
    <span
      className="label"
    >
      one.js
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "hasPrettyTab": true,
      "item": Object {
        "contents": Object {
          "displayURL": "url",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "url",
          "url": "url",
        },
        "name": "one.js",
        "path": "http://mdn.com/one.js",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          hasPrettyTab={true}
          item={
            Object {
              "contents": Object {
                "displayURL": "url",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "url",
                "url": "url",
              },
              "name": "one.js",
              "path": "http://mdn.com/one.js",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="url"
        >
          <span
            className="img no-arrow"
          />
          <AccessibleImage
            className="prettyPrint"
          />
          <span
            className="label"
          >
            one.js
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "hasPrettyTab": true,
    "item": Object {
      "contents": Object {
        "displayURL": "url",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "url",
        "url": "url",
      },
      "name": "one.js",
      "path": "http://mdn.com/one.js",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show source item with source icon 1`] = `
Object {
  "component": <div
    className="node"
    key="http://mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="url"
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      one.js
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "url",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "url",
          "url": "url",
        },
        "name": "one.js",
        "path": "http://mdn.com/one.js",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "url",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "url",
                "url": "url",
              },
              "name": "one.js",
              "path": "http://mdn.com/one.js",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="url"
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            one.js
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "url",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "url",
        "url": "url",
      },
      "name": "one.js",
      "path": "http://mdn.com/one.js",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should show source item with source icon with focus 1`] = `
Object {
  "component": <div
    className="node focused"
    key="mdn.com/one.js"
    onClick={[Function]}
    onContextMenu={[Function]}
    title=""
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      one.js
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "depth": 1,
      "expanded": false,
      "focusItem": [MockFunction],
      "focused": true,
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        },
        "name": "one.js",
        "path": "mdn.com/one.js",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          depth={1}
          expanded={false}
          focusItem={[MockFunction]}
          focused={true}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              },
              "name": "one.js",
              "path": "mdn.com/one.js",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node focused"
          onClick={[Function]}
          onContextMenu={[Function]}
          title=""
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            one.js
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "depth": 1,
    "expanded": false,
    "focusItem": [MockFunction],
    "focused": true,
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "name": "one.js",
      "path": "mdn.com/one.js",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;

exports[`SourceTreeItem renderItem should unescape escaped source URLs 1`] = `
Object {
  "component": <div
    className="node"
    key="mdn.com/external%20file"
    onClick={[Function]}
    onContextMenu={[Function]}
    title="url"
  >
    <span
      className="img no-arrow"
    />
    <Connect(SourceIcon)
      modifier={[Function]}
      source={
        Object {
          "displayURL": "http://mdn.com/one.js",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "http://mdn.com/one.js",
          "url": "http://mdn.com/one.js",
        }
      }
    />
    <span
      className="label"
    >
      external file
    </span>
  </div>,
  "defaultState": null,
  "instance": SourceTreeItem {
    "addBlackboxAllOption": [Function],
    "addCollapseExpandAllOptions": [Function],
    "context": Object {},
    "handleDownloadFile": [Function],
    "onClick": [Function],
    "onContextMenu": [Function],
    "props": Object {
      "blackBoxSources": [MockFunction],
      "clearProjectDirectoryRoot": [MockFunction],
      "debuggeeUrl": "http://mdn.com",
      "expanded": false,
      "focusItem": [MockFunction],
      "getSourcesGroups": [Function],
      "item": Object {
        "contents": Object {
          "displayURL": "url",
          "extensionName": null,
          "id": "server1.conn13.child1/39",
          "isBlackBoxed": false,
          "isExtension": false,
          "isOriginal": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "relativeUrl": "url",
          "url": "url",
        },
        "name": "external%20file",
        "path": "mdn.com/external%20file",
        "type": "source",
      },
      "projectRoot": "",
      "selectItem": [MockFunction],
      "setExpanded": [MockFunction],
      "setProjectDirectoryRoot": [MockFunction],
      "source": Object {
        "displayURL": "http://mdn.com/one.js",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "http://mdn.com/one.js",
        "url": "http://mdn.com/one.js",
      },
      "threads": Array [
        Object {
          "name": "Main Thread",
        },
      ],
      "toggleBlackBox": [MockFunction],
    },
    "refs": Object {},
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_didScheduleRenderPhaseUpdate": false,
        "_dispatcher": Object {
          "readContext": [Function],
          "useCallback": [Function],
          "useContext": [Function],
          "useDebugValue": [Function],
          "useDeferredValue": [Function],
          "useEffect": [Function],
          "useImperativeHandle": [Function],
          "useLayoutEffect": [Function],
          "useMemo": [Function],
          "useReducer": [Function],
          "useRef": [Function],
          "useResponder": [Function],
          "useState": [Function],
          "useTransition": [Function],
        },
        "_element": <SourceTreeItem
          blackBoxSources={[MockFunction]}
          clearProjectDirectoryRoot={[MockFunction]}
          debuggeeUrl="http://mdn.com"
          expanded={false}
          focusItem={[MockFunction]}
          getSourcesGroups={[Function]}
          item={
            Object {
              "contents": Object {
                "displayURL": "url",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "url",
                "url": "url",
              },
              "name": "external%20file",
              "path": "mdn.com/external%20file",
              "type": "source",
            }
          }
          projectRoot=""
          selectItem={[MockFunction]}
          setExpanded={[MockFunction]}
          setProjectDirectoryRoot={[MockFunction]}
          source={
            Object {
              "displayURL": "http://mdn.com/one.js",
              "extensionName": null,
              "id": "server1.conn13.child1/39",
              "isBlackBoxed": false,
              "isExtension": false,
              "isOriginal": false,
              "isPrettyPrinted": false,
              "isWasm": false,
              "relativeUrl": "http://mdn.com/one.js",
              "url": "http://mdn.com/one.js",
            }
          }
          threads={
            Array [
              Object {
                "name": "Main Thread",
              },
            ]
          }
          toggleBlackBox={[MockFunction]}
        />,
        "_firstWorkInProgressHook": null,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_isReRender": false,
        "_newState": null,
        "_numberOfReRenders": 0,
        "_renderPhaseUpdates": null,
        "_rendered": <div
          className="node"
          onClick={[Function]}
          onContextMenu={[Function]}
          title="url"
        >
          <span
            className="img no-arrow"
          />
          <Connect(SourceIcon)
            modifier={[Function]}
            source={
              Object {
                "displayURL": "http://mdn.com/one.js",
                "extensionName": null,
                "id": "server1.conn13.child1/39",
                "isBlackBoxed": false,
                "isExtension": false,
                "isOriginal": false,
                "isPrettyPrinted": false,
                "isWasm": false,
                "relativeUrl": "http://mdn.com/one.js",
                "url": "http://mdn.com/one.js",
              }
            }
          />
          <span
            className="label"
          >
            external file
          </span>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
        "_workInProgressHook": null,
      },
    },
  },
  "props": Object {
    "blackBoxSources": [MockFunction],
    "clearProjectDirectoryRoot": [MockFunction],
    "debuggeeUrl": "http://mdn.com",
    "expanded": false,
    "focusItem": [MockFunction],
    "getSourcesGroups": [Function],
    "item": Object {
      "contents": Object {
        "displayURL": "url",
        "extensionName": null,
        "id": "server1.conn13.child1/39",
        "isBlackBoxed": false,
        "isExtension": false,
        "isOriginal": false,
        "isPrettyPrinted": false,
        "isWasm": false,
        "relativeUrl": "url",
        "url": "url",
      },
      "name": "external%20file",
      "path": "mdn.com/external%20file",
      "type": "source",
    },
    "projectRoot": "",
    "selectItem": [MockFunction],
    "setExpanded": [MockFunction],
    "setProjectDirectoryRoot": [MockFunction],
    "source": Object {
      "displayURL": "http://mdn.com/one.js",
      "extensionName": null,
      "id": "server1.conn13.child1/39",
      "isBlackBoxed": false,
      "isExtension": false,
      "isOriginal": false,
      "isPrettyPrinted": false,
      "isWasm": false,
      "relativeUrl": "http://mdn.com/one.js",
      "url": "http://mdn.com/one.js",
    },
    "threads": Array [
      Object {
        "name": "Main Thread",
      },
    ],
    "toggleBlackBox": [MockFunction],
  },
}
`;
