# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
    Program(CONFIG["MOZ_CHILD_PROCESS_NAME"])
    SOURCES += [
        "MozillaRuntimeMainAndroid.cpp",
    ]
else:
    GeckoProgram(CONFIG["MOZ_CHILD_PROCESS_NAME"], linkage="dependent")

    SOURCES += [
        "MozillaRuntimeMain.cpp",
    ]

include("/ipc/chromium/chromium-config.mozbuild")

LOCAL_INCLUDES += [
    "/toolkit/xre",
    "/xpcom/base",
]

# DELAYLOAD_DLLS in this block ensures that the DLL blocklist is functional
if CONFIG["OS_ARCH"] == "WINNT":
    DELAYLOAD_DLLS += [
        "nss3.dll",
    ]

    if CONFIG["MOZ_SANDBOX"]:
        # For sandbox includes and the include dependencies those have
        LOCAL_INCLUDES += [
            "/security/sandbox/chromium",
            "/security/sandbox/chromium-shim",
        ]

        OS_LIBS += [
            "version",
        ]

        USE_LIBS += [
            "sandbox_s",
        ]

        DELAYLOAD_DLLS += [
            "winmm.dll",
            "user32.dll",
        ]

    OS_LIBS += [
        "ntdll",
    ]

    DELAYLOAD_DLLS += [
        "xul.dll",
    ]

    # Don't build plugin-container.exe with CETCOMPAT for the moment, so that
    # we can enable it using a pref during testing.
    LINK_FLAGS["CETCOMPAT"] = []

if CONFIG["MOZ_SANDBOX"] and CONFIG["OS_TARGET"] == "Darwin":
    # For sandbox includes and the include dependencies those have
    LOCAL_INCLUDES += [
        "/security/sandbox/chromium",
        "/security/sandbox/chromium-shim",
    ]
    USE_LIBS += [
        "mozsandbox",
    ]

if CONFIG["CC_TYPE"] == "clang-cl":
    # Always enter a Windows program through wmain, whether or not we're
    # a console application.
    WIN32_EXE_LDFLAGS += ["-ENTRY:wmainCRTStartup"]

# Control the default heap size.
# This is the heap returned by GetProcessHeap().
# As we use the CRT heap, the default size is too large and wastes VM.
#
# The default heap size is 1MB on Win32.
# The heap will grow if need be.
#
# Set it to 256k.  See bug 127069.
if CONFIG["OS_ARCH"] == "WINNT" and CONFIG["CC_TYPE"] not in ("clang", "gcc"):
    LDFLAGS += ["/HEAP:0x40000"]

if CONFIG["CC_TYPE"] in ("clang", "gcc"):
    CXXFLAGS += ["-Wshadow"]

with Files("**"):
    BUG_COMPONENT = ("Core", "DOM: Content Processes")
