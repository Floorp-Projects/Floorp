diff --git a/browser/chrome/browser/content/browser/tabbrowser/tabbrowser.js b/browser/chrome/browser/content/browser/tabbrowser/tabbrowser.js
index ce68c33..47ccc30 100644
--- ./browser/chrome/browser/content/browser/tabbrowser/tabbrowser.js
+++ ./browser/chrome/browser/content/browser/tabbrowser/tabbrowser.js
@@ -3377,6 +3377,35 @@
         let tab;
         let tabWasReused = false;
 
+        /**
+         * * NORANEKO PATCH - 0.1.19
+         * * [WORKSPACES]
+         * * START
+         */
+        if (tabData.floorpDisableHistory) {
+          continue;
+        }
+
+        let floorpWorkspaceId,
+          floorpLastShowWorkspaceId,
+          floorpSSB;
+
+        floorpWorkspaceId = tabData.floorpWorkspaceId
+          ? tabData.floorpWorkspaceId
+          : JSON.parse(Services.prefs.getStringPref("floorp.workspaces.v4.store"))
+              .defaultID;
+        floorpLastShowWorkspaceId = tabData.floorpLastShowWorkspaceId;
+        floorpSSB = tabData.floorpSSB;
+
+        if (floorpSSB) {
+          window.close();
+        }
+        /**
+         * * NORANEKO PATCH - 0.1.19
+         * * [WORKSPACES]
+         * * END
+         */
+
         // Re-use existing selected tab if possible to avoid the overhead of
         // selecting a new tab. For now, we only do this for horizontal tabs;
         // we'll let tabs.js handle pinning for vertical tabs until we unify
@@ -3389,6 +3418,30 @@
         ) {
           tabWasReused = true;
           tab = this.selectedTab;
+          /**
+           * * NORANEKO PATCH - 0.1.19
+           * * [WORKSPACES]
+           * * START
+           */
+          if (floorpWorkspaceId) {
+            tab.setAttribute("floorpWorkspaceId", floorpWorkspaceId);
+          }
+
+          if (floorpLastShowWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceLastShowId",
+              floorpLastShowWorkspaceId
+            );
+          }
+
+          if (floorpSSB) {
+            tab.setAttribute("floorpSSB", floorpSSB);
+          }
+          /**
+           * * NORANEKO PATCH - 0.1.19
+           * * [WORKSPACES]
+           * * END
+           */
           if (!tabData.pinned) {
             this.unpinTab(tab);
           } else {
@@ -3438,6 +3491,31 @@
             preferredRemoteType,
           });
 
+          /**
+           * * NORANEKO PATCH - 0.1.19
+           * * [WORKSPACES]
+           * * START
+           */
+          if (floorpWorkspaceId) {
+            tab.setAttribute("floorpWorkspaceId", floorpWorkspaceId);
+          }
+
+          if (floorpLastShowWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceLastShowId",
+              floorpLastShowWorkspaceId
+            );
+          }
+
+          if (floorpSSB) {
+            tab.setAttribute("floorpSSB", floorpSSB);
+          }
+          /**
+           * * NORANEKO PATCH - 0.1.19
+           * * [WORKSPACES]
+           * * END
+           */
+
           if (select) {
             tabToSelect = tab;
           }
