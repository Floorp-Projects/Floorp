error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:31:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
31 |     is_unpin::<Foo<(), ()>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<(), ()>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:32:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
32 |     is_unpin::<Foo<PhantomPinned, ()>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, ()>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:33:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
33 |     is_unpin::<Foo<(), PhantomPinned>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<(), PhantomPinned>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:34:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
34 |     is_unpin::<Foo<PhantomPinned, PhantomPinned>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, PhantomPinned>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:36:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
36 |     is_unpin::<TrivialBounds>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `TrivialBounds`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:38:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
38 |     is_unpin::<Bar<'_, (), ()>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Bar<'_, (), ()>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/assert-not-unpin.rs:39:5
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
39 |     is_unpin::<Bar<'_, PhantomPinned, PhantomPinned>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `Wrapper<'_, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Wrapper<'_, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Bar<'_, PhantomPinned, PhantomPinned>`
