error[E0277]: `PhantomPinned` cannot be unpinned
  --> tests/ui/pin_project/proper_unpin.rs:31:5
   |
31 |     is_unpin::<Foo<PhantomPinned, ()>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `__Foo<'_, PhantomPinned, ()>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: consider using `Box::pin`
note: required because it appears within the type `Inner<PhantomPinned>`
  --> tests/ui/pin_project/proper_unpin.rs:4:8
   |
4  | struct Inner<T> {
   |        ^^^^^
note: required because it appears within the type `__Foo<'_, PhantomPinned, ()>`
  --> tests/ui/pin_project/proper_unpin.rs:9:8
   |
9  | struct Foo<T, U> {
   |        ^^^
note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, ()>`
  --> tests/ui/pin_project/proper_unpin.rs:8:1
   |
8  | #[pin_project]
   | ^^^^^^^^^^^^^^
9  | struct Foo<T, U> {
   |        ^^^^^^^^^
note: required by a bound in `is_unpin`
  --> tests/ui/pin_project/proper_unpin.rs:28:16
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ^^^^^ required by this bound in `is_unpin`
   = note: this error originates in the derive macro `::pin_project::__private::__PinProjectInternalDerive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `PhantomPinned` cannot be unpinned
  --> tests/ui/pin_project/proper_unpin.rs:33:5
   |
33 |     is_unpin::<Foo<PhantomPinned, PhantomPinned>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `__Foo<'_, PhantomPinned, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: consider using `Box::pin`
note: required because it appears within the type `Inner<PhantomPinned>`
  --> tests/ui/pin_project/proper_unpin.rs:4:8
   |
4  | struct Inner<T> {
   |        ^^^^^
note: required because it appears within the type `__Foo<'_, PhantomPinned, PhantomPinned>`
  --> tests/ui/pin_project/proper_unpin.rs:9:8
   |
9  | struct Foo<T, U> {
   |        ^^^
note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, PhantomPinned>`
  --> tests/ui/pin_project/proper_unpin.rs:8:1
   |
8  | #[pin_project]
   | ^^^^^^^^^^^^^^
9  | struct Foo<T, U> {
   |        ^^^^^^^^^
note: required by a bound in `is_unpin`
  --> tests/ui/pin_project/proper_unpin.rs:28:16
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ^^^^^ required by this bound in `is_unpin`
   = note: this error originates in the derive macro `::pin_project::__private::__PinProjectInternalDerive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `PhantomPinned` cannot be unpinned
  --> tests/ui/pin_project/proper_unpin.rs:35:5
   |
35 |     is_unpin::<TrivialBounds>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ within `__TrivialBounds<'_>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: consider using `Box::pin`
note: required because it appears within the type `__TrivialBounds<'_>`
  --> tests/ui/pin_project/proper_unpin.rs:16:8
   |
16 | struct TrivialBounds {
   |        ^^^^^^^^^^^^^
note: required because of the requirements on the impl of `Unpin` for `TrivialBounds`
  --> tests/ui/pin_project/proper_unpin.rs:15:1
   |
15 | #[pin_project]
   | ^^^^^^^^^^^^^^
16 | struct TrivialBounds {
   |        ^^^^^^^^^^^^^
note: required by a bound in `is_unpin`
  --> tests/ui/pin_project/proper_unpin.rs:28:16
   |
28 | fn is_unpin<T: Unpin>() {}
   |                ^^^^^ required by this bound in `is_unpin`
   = note: this error originates in the derive macro `::pin_project::__private::__PinProjectInternalDerive` (in Nightly builds, run with -Z macro-backtrace for more info)
