name: CI

on:
  push:
    branches-ignore: [staging.tmp]
  pull_request:
    branches-ignore: [staging.tmp]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [pinned, stable, beta, nightly, macos, windows]
        include:
        - build: pinned
          os: ubuntu-18.04
          rust: 1.49.0
          sdl: true
        - build: stable
          os: ubuntu-18.04
          rust: stable
          sdl: true
        - build: beta
          os: ubuntu-18.04
          rust: beta
          sdl: true
        - build: nightly
          os: ubuntu-18.04
          rust: nightly
          sdl: true
        - build: macos
          os: macos-10.15
          rust: stable
          sdl: false
        - build: windows
          os: windows-2019
          rust: stable
          sdl: false
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install toolchain 
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        profile: minimal
        target: wasm32-unknown-unknown
    - run: cargo build --verbose
    - run: cargo build --verbose --target wasm32-unknown-unknown
    - run: cargo test --verbose
    - run: (cd examples/hello && cargo build --features glutin)
    - run: (cd examples/hello && cargo build --target wasm32-unknown-unknown)
    - name: sdl
      if: ${{ matrix.sdl == true }}
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install libsdl2-dev
        cargo build --verbose
        (cd examples/hello && cargo build --features sdl2)
    - name: android
      if: matrix.build == 'stable'
      run: |
        rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android
        cargo build --verbose --target aarch64-linux-android
        cargo build --verbose --target armv7-linux-androideabi
        cargo build --verbose --target x86_64-linux-android
