<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="Hit testing for XUL menus">

  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />

  <script type="application/javascript"
          src="../common.js" />
  <script type="application/javascript"
          src="../role.js" />
  <script type="application/javascript"
          src="../states.js" />
  <script type="application/javascript"
          src="../layout.js" />
  <script type="application/javascript"
          src="../events.js" />

  <script type="application/javascript">
  <![CDATA[
    function openMenu(aMenuID, aMenuPopupID, aMenuItemID)
    {
      this.menuNode = getNode(aMenuID);

      this.eventSeq = [
        new invokerChecker(EVENT_FOCUS, this.menuNode)
      ];

      this.invoke = function openMenu_invoke()
      {
        this.menuNode.open = true;
      }

      this.finalCheck = function openMenu_finalCheck()
      {
        hitTest(aMenuPopupID, aMenuItemID, aMenuItemID);
      }

      this.getID = function openMenu_invoke()
      {
        return "open menu '" + aMenuID + "' and do hit testing";
      }
    }

    function closeMenu(aID, aSubID, aSub2ID)
    {
      this.menuNode = getNode(aID);

      this.eventSeq = [
        new invokerChecker(EVENT_FOCUS, document)
      ];

      this.invoke = function openMenu_invoke()
      {
        this.menuNode.open = false;
      }

      this.finalCheck = function openMenu_finalCheck()
      {
        testStates(aID, 0, 0, STATE_INVISIBLE | STATE_OFFSCREEN);
        testStates(aSubID, STATE_INVISIBLE, 0, STATE_OFFSCREEN);
        testStates(aSub2ID, STATE_INVISIBLE, 0, STATE_OFFSCREEN);
      }

      this.getID = function openMenu_invoke()
      {
        return "open menu and test states";
      }
    }

    var gQueue = null;
    function doTest()
    {
      if (LINUX) {
        ok(true, "No tests is running on Linux");
        SimpleTest.finish();
        return;
      }

      getNode("mi_file1").scrollIntoView(true);

      gQueue = new eventQueue();
      gQueue.push(new openMenu("mi_file1", "mp_file1", "mi_file1.1"));
      gQueue.push(new openMenu("mi_file1.2", "mp_file1.2", "mi_file1.2.1"));
      gQueue.push(new closeMenu("mi_file1", "mi_file1.1", "mi_file1.2.1"));
      gQueue.invoke(); // Will call SimpleTest.finish();
    }

    SimpleTest.waitForExplicitFinish();
    addA11yLoadEvent(doTest);
  ]]>
  </script>

  <hbox flex="1" style="overflow: auto;">
    <body xmlns="http://www.w3.org/1999/xhtml">
     <a target="_blank"
         href="https://bugzilla.mozilla.org/show_bug.cgi?id=670087"
         title="AccessibleObjectFromPoint returns incorrect accessible for popup menus">
        Bug 670087
     </a>

      <p id="display"></p>
      <div id="content" style="display: none">
      </div>
      <pre id="test">
      </pre>
    </body>

    <vbox flex="1">

      <menubar>
        <menu label="File" id="mi_file1">
          <menupopup id="mp_file1">
            <menuitem label="SubFile" id="mi_file1.1"/>
            <menu label="SubFile2" id="mi_file1.2">
              <menupopup style="max-height: 5em;" id="mp_file1.2">
                <menuitem label="SubSubFile" id="mi_file1.2.1"/>
                <menuitem label="SubSubFile2" id="mi_file1.2.2"/>
                <menuitem label="SubSubFile3" id="mi_file1.2.3"/>
                <menuitem label="SubSubFile4" id="mi_file1.2.4"/>
              </menupopup>
            </menu>
          </menupopup>
        </menu>
      </menubar>
    </vbox>
  </hbox>

</window>

