[backpressure.any.worker.html]
  [backpressure allows no transforms with a default identity transform and no reader]
    expected: FAIL

  [backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader]
    expected: FAIL

  [transform() should keep being called as long as there is no backpressure]
    expected: FAIL

  [writes should resolve as soon as transform completes]
    expected: FAIL

  [calling pull() before the first write() with backpressure should work]
    expected: FAIL

  [transform() should be able to read the chunk it just enqueued]
    expected: FAIL

  [blocking transform() should cause backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled during start]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with no backpressure]
    expected: FAIL

  [cancelling the readable should cause a pending write to resolve]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe after startup]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort a full pipe]
    expected: FAIL


[backpressure.any.sharedworker.html]
  [backpressure allows no transforms with a default identity transform and no reader]
    expected: FAIL

  [backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader]
    expected: FAIL

  [transform() should keep being called as long as there is no backpressure]
    expected: FAIL

  [writes should resolve as soon as transform completes]
    expected: FAIL

  [calling pull() before the first write() with backpressure should work]
    expected: FAIL

  [transform() should be able to read the chunk it just enqueued]
    expected: FAIL

  [blocking transform() should cause backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled during start]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with no backpressure]
    expected: FAIL

  [cancelling the readable should cause a pending write to resolve]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe after startup]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort a full pipe]
    expected: FAIL


[backpressure.any.serviceworker.html]
  [backpressure allows no transforms with a default identity transform and no reader]
    expected: FAIL

  [backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader]
    expected: FAIL

  [transform() should keep being called as long as there is no backpressure]
    expected: FAIL

  [writes should resolve as soon as transform completes]
    expected: FAIL

  [calling pull() before the first write() with backpressure should work]
    expected: FAIL

  [transform() should be able to read the chunk it just enqueued]
    expected: FAIL

  [blocking transform() should cause backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled during start]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with no backpressure]
    expected: FAIL

  [cancelling the readable should cause a pending write to resolve]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe after startup]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort a full pipe]
    expected: FAIL


[backpressure.any.html]
  [backpressure allows no transforms with a default identity transform and no reader]
    expected: FAIL

  [backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader]
    expected: FAIL

  [transform() should keep being called as long as there is no backpressure]
    expected: FAIL

  [writes should resolve as soon as transform completes]
    expected: FAIL

  [calling pull() before the first write() with backpressure should work]
    expected: FAIL

  [transform() should be able to read the chunk it just enqueued]
    expected: FAIL

  [blocking transform() should cause backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled during start]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with backpressure]
    expected: FAIL

  [writer.closed should resolve after readable is canceled with no backpressure]
    expected: FAIL

  [cancelling the readable should cause a pending write to resolve]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort an empty pipe after startup]
    expected: FAIL

  [cancelling the readable side of a TransformStream should abort a full pipe]
    expected: FAIL
