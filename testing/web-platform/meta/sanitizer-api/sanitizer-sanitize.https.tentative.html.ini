[sanitizer-sanitize.https.tentative.html]
  max-asserts: 81
  [SanitizerAPI with config: plaintext, sanitize from document function for plaintext]
    expected: FAIL

  [SanitizerAPI with config: test html without close tag with dropElements list ['div'\], sanitize from document function for test html without close tag with dropElements list ['div'\]]
    expected: FAIL

  [SanitizerAPI with config: default behavior for custom elements, sanitize from document function for default behavior for custom elements]
    expected: FAIL

  [SanitizerAPI with config: disallow custom elements, sanitize from document function for disallow custom elements]
    expected: FAIL

  [SanitizerAPI with config: allow custom elements with drop list contains ["custom-element"\], sanitize from document function for allow custom elements with drop list contains ["custom-element"\]]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["test-element", "i"\]}, sanitize from document function for dropElements list ["test-element", "i"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["I", "DL"\]}, sanitize from document function for dropElements list ["I", "DL"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["dl", "p"\]}, sanitize from document function for dropElements list ["dl", "p"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list with invalid values, sanitize from document function for dropElements list with invalid values]
    expected: FAIL

  [SanitizerAPI with config: blockElements list with invalid values, sanitize from document function for blockElements list with invalid values]
    expected: FAIL

  [SanitizerAPI with config: allowElements list has no influence to dropElements, sanitize from document function for allowElements list has no influence to dropElements]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"style": ["p"\]} with style attribute, sanitize from document function for dropAttributes list {"style": ["p"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"*": ["a"\]} with style attribute, sanitize from document function for dropAttributes list {"*": ["a"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"data-attribute-with-dashes": ["*"\]} with dom dataset js access, sanitize from document function for dropAttributes list {"data-attribute-with-dashes": ["*"\]} with dom dataset js access]
    expected: FAIL

  [SanitizerAPI with config: allowAttributes list {"*": ["a"\]} with style attribute, sanitize from document function for allowAttributes list {"*": ["a"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: plaintext, sanitize from document fragment function for plaintext]
    expected: FAIL

  [SanitizerAPI with config: test html without close tag with dropElements list ['div'\], sanitize from document fragment function for test html without close tag with dropElements list ['div'\]]
    expected: FAIL

  [SanitizerAPI with config: default behavior for custom elements, sanitize from document fragment function for default behavior for custom elements]
    expected: FAIL

  [SanitizerAPI with config: disallow custom elements, sanitize from document fragment function for disallow custom elements]
    expected: FAIL

  [SanitizerAPI with config: allow custom elements with drop list contains ["custom-element"\], sanitize from document fragment function for allow custom elements with drop list contains ["custom-element"\]]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["test-element", "i"\]}, sanitize from document fragment function for dropElements list ["test-element", "i"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["I", "DL"\]}, sanitize from document fragment function for dropElements list ["I", "DL"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list ["dl", "p"\]}, sanitize from document fragment function for dropElements list ["dl", "p"\]}]
    expected: FAIL

  [SanitizerAPI with config: dropElements list with invalid values, sanitize from document fragment function for dropElements list with invalid values]
    expected: FAIL

  [SanitizerAPI with config: blockElements list with invalid values, sanitize from document fragment function for blockElements list with invalid values]
    expected: FAIL

  [SanitizerAPI with config: allowElements list has no influence to dropElements, sanitize from document fragment function for allowElements list has no influence to dropElements]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"style": ["p"\]} with style attribute, sanitize from document fragment function for dropAttributes list {"style": ["p"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"*": ["a"\]} with style attribute, sanitize from document fragment function for dropAttributes list {"*": ["a"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: dropAttributes list {"data-attribute-with-dashes": ["*"\]} with dom dataset js access, sanitize from document fragment function for dropAttributes list {"data-attribute-with-dashes": ["*"\]} with dom dataset js access]
    expected: FAIL

  [SanitizerAPI with config: allowAttributes list {"*": ["a"\]} with style attribute, sanitize from document fragment function for allowAttributes list {"*": ["a"\]} with style attribute]
    expected: FAIL

  [SanitizerAPI with config: empty dropAttributes list with id attribute, sanitize from document function for empty dropAttributes list with id attribute]
    expected: FAIL

  [SanitizerAPI with config: empty dropAttributes list with id attribute, sanitize from document fragment function for empty dropAttributes list with id attribute]
    expected: FAIL

  [SanitizerAPI with config: HTMLInputElement, sanitize from document function for HTMLInputElement]
    expected: FAIL

  [SanitizerAPI with config: HTMLButtonElement, sanitize from document function for HTMLButtonElement]
    expected: FAIL

  [SanitizerAPI with config: HTMLInputElement, sanitize from document fragment function for HTMLInputElement]
    expected: FAIL

  [SanitizerAPI with config: HTMLButtonElement, sanitize from document fragment function for HTMLButtonElement]
    expected: FAIL

  [SanitizerAPI with config: malformed HTML, sanitize from document fragment function for malformed HTML]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments; comments not allowed, sanitize from document fragment function for HTML with comments; comments not allowed]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments; !allowComments, sanitize from document function for HTML with comments; !allowComments]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [Sanitizer.sanitize(null).]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments deeper in the tree, !allowComments, sanitize from document function for HTML with comments deeper in the tree, !allowComments]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments deeper in the tree, sanitize from document fragment function for HTML with comments deeper in the tree]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments deeper in the tree, !allowComments, sanitize from document fragment function for HTML with comments deeper in the tree, !allowComments]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: malformed HTML, sanitize from document function for malformed HTML]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments; !allowComments, sanitize from document fragment function for HTML with comments; !allowComments]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments deeper in the tree, sanitize from document function for HTML with comments deeper in the tree]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]

  [SanitizerAPI with config: HTML with comments; comments not allowed, sanitize from document function for HTML with comments; comments not allowed]
    expected:
      if (os == "mac") and not debug: [PASS, FAIL]
