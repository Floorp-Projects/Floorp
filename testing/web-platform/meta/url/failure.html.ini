[failure.html]
  disabled:
    if (os == "linux") and asan: https://bugzilla.mozilla.org/show_bug.cgi?id=1723277
  max-asserts: 3
  expected:
    if os == "win": OK
    CRASH
  [URL's href: file://example:1/ should throw]
    expected: FAIL

  [XHR: file://example:1/ should throw]
    expected: FAIL

  [URL's href: file://example:test/ should throw]
    expected: FAIL

  [XHR: file://example:test/ should throw]
    expected: FAIL

  [URL's href: file://example%/ should throw]
    expected: FAIL

  [XHR: file://example%/ should throw]
    expected: FAIL

  [URL's href: file://[example\]/ should throw]
    expected: FAIL

  [XHR: file://[example\]/ should throw]
    expected: FAIL

  [Location's href: http://user:pass@/ should throw]
    expected: FAIL

  [Location's href: http://foo:-80/ should throw]
    expected: FAIL

  [Location's href: http://user@/www.example.com should throw]
    expected: FAIL

  [Location's href: http://@/www.example.com should throw]
    expected: FAIL

  [Location's href: http://a:b@/www.example.com should throw]
    expected: FAIL

  [Location's href: http://@:www.example.com should throw]
    expected: FAIL

  [Location's href: https://� should throw]
    expected: FAIL

  [Location's href: https://%EF%BF%BD should throw]
    expected: FAIL

  [Location's href: https://x x:12 should throw]
    expected: FAIL

  [Location's href: http://[www.google.com\]/ should throw]
    expected: FAIL

  [URL's href: sc://@/ should throw]
    expected: FAIL

  [XHR: sc://@/ should throw]
    expected: FAIL

  [Location's href: sc://@/ should throw]
    expected: FAIL

  [URL's href: sc://te@s:t@/ should throw]
    expected: FAIL

  [XHR: sc://te@s:t@/ should throw]
    expected: FAIL

  [Location's href: sc://te@s:t@/ should throw]
    expected: FAIL

  [URL's href: sc://:/ should throw]
    expected: FAIL

  [XHR: sc://:/ should throw]
    expected: FAIL

  [Location's href: sc://:/ should throw]
    expected: FAIL

  [URL's href: sc://:12/ should throw]
    expected: FAIL

  [XHR: sc://:12/ should throw]
    expected: FAIL

  [Location's href: sc://:12/ should throw]
    expected: FAIL

  [Location's href: ftp://example.com%80/ should throw]
    expected: FAIL

  [Location's href: ftp://example.com%A0/ should throw]
    expected: FAIL

  [Location's href: https://example.com%80/ should throw]
    expected: FAIL

  [Location's href: https://example.com%A0/ should throw]
    expected: FAIL

  [Location's href: https://[0::0::0\] should throw]
    expected: FAIL

  [Location's href: https://[0:.0\] should throw]
    expected: FAIL

  [Location's href: https://[0:0:\] should throw]
    expected: FAIL

  [Location's href: https://[0:1:2:3:4:5:6:7.0.0.0.1\] should throw]
    expected: FAIL

  [Location's href: https://[0:1.00.0.0.0\] should throw]
    expected: FAIL

  [Location's href: https://[0:1.290.0.0.0\] should throw]
    expected: FAIL

  [Location's href: https://[0:1.23.23\] should throw]
    expected: FAIL

  [Location's href: http://? should throw]
    expected: FAIL

  [Location's href: http://# should throw]
    expected: FAIL

  [URL's href: non-special://[:80/ should throw]
    expected: FAIL

  [XHR: non-special://[:80/ should throw]
    expected: FAIL

  [Location's href: non-special://[:80/ should throw]
    expected: FAIL

  [window.open(): file://example:1/ should throw]
    expected: FAIL

  [window.open(): file://example:test/ should throw]
    expected: FAIL

  [window.open(): file://example%/ should throw]
    expected: FAIL

  [window.open(): file://[example\]/ should throw]
    expected: FAIL

  [window.open(): sc://@/ should throw]
    expected: FAIL

  [window.open(): sc://te@s:t@/ should throw]
    expected: FAIL

  [window.open(): sc://:/ should throw]
    expected: FAIL

  [window.open(): sc://:12/ should throw]
    expected: FAIL

  [window.open(): non-special://[:80/ should throw]
    expected: FAIL

  [URL's href: https://0x100000000/test should throw]
    expected: FAIL

  [XHR: https://0x100000000/test should throw]
    expected: FAIL

  [sendBeacon(): https://0x100000000/test should throw]
    expected: FAIL

  [Location's href: https://0x100000000/test should throw]
    expected: FAIL

  [window.open(): https://0x100000000/test should throw]
    expected: FAIL

  [URL's href: https://256.0.0.1/test should throw]
    expected: FAIL

  [XHR: https://256.0.0.1/test should throw]
    expected: FAIL

  [sendBeacon(): https://256.0.0.1/test should throw]
    expected: FAIL

  [Location's href: https://256.0.0.1/test should throw]
    expected: FAIL

  [window.open(): https://256.0.0.1/test should throw]
    expected: FAIL

  [Location's href: http://[::127.0.0.0.1\] should throw]
    expected: FAIL

  [URL's constructor's base argument: file://example:1/ should throw]
    expected: FAIL

  [URL's constructor's base argument: file://example:test/ should throw]
    expected: FAIL

  [URL's constructor's base argument: file://example%/ should throw]
    expected: FAIL

  [URL's constructor's base argument: file://[example\]/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://@/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://te@s:t@/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://:/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://:12/ should throw]
    expected: FAIL

  [URL's constructor's base argument: https://0x100000000/test should throw]
    expected: FAIL

  [URL's constructor's base argument: https://256.0.0.1/test should throw]
    expected: FAIL

  [URL's constructor's base argument: non-special://[:80/ should throw]
    expected: FAIL

  [Location's href: https://� should throw]
    expected: FAIL

  [Location's href: https://� should throw]
    expected: FAIL

  [URL's constructor's base argument: file://xn--/p should throw]
    expected: FAIL

  [window.open(): file://xn--/p should throw]
    expected: FAIL

  [URL's href: file://%C2%AD/p should throw]
    expected: FAIL

  [Location's href: file://­/p should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://%C2%AD/p should throw]
    expected: FAIL

  [XHR: file://xn--/p should throw]
    expected: FAIL

  [URL's constructor's base argument: file://%C2%AD/p should throw]
    expected: FAIL

  [window.open(): file://­/p should throw]
    expected: FAIL

  [XHR: file://%C2%AD/p should throw]
    expected: FAIL

  [Location's href: file://xn--/p should throw]
    bug:
      if os == "android": https://bugzilla.mozilla.org/show_bug.cgi?id=1695101
      if fission: https://bugzilla.mozilla.org/show_bug.cgi?id=1695101
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [URL's href: file://xn--/p should throw]
    expected: FAIL

  [URL's constructor's base argument: file://­/p should throw]
    expected: FAIL

  [URL's href: file://­/p should throw]
    expected: FAIL

  [XHR: file://­/p should throw]
    expected: FAIL

  [Location's href: file://%C2%AD/p should throw]
    bug:
      if os == "android": https://bugzilla.mozilla.org/show_bug.cgi?id=1695101
      if fission: https://bugzilla.mozilla.org/show_bug.cgi?id=1695101
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [Location's href: http://a<b should throw]
    expected: FAIL

  [Location's href: http://a>b should throw]
    expected: FAIL

  [Location's href: http://a^b should throw]
    expected: FAIL

  [URL's constructor's base argument: file://%43%3A should throw]
    expected: FAIL

  [URL's href: file://%43%3A should throw]
    expected: FAIL

  [XHR: file://%43%3A should throw]
    expected: FAIL

  [Location's href: file://%43%3A should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://%43%3A should throw]
    expected: FAIL

  [URL's constructor's base argument: file://%43%7C should throw]
    expected: FAIL

  [URL's href: file://%43%7C should throw]
    expected: FAIL

  [XHR: file://%43%7C should throw]
    expected: FAIL

  [Location's href: file://%43%7C should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://%43%7C should throw]
    expected: FAIL

  [URL's constructor's base argument: file://%43| should throw]
    expected: FAIL

  [URL's href: file://%43| should throw]
    expected: FAIL

  [XHR: file://%43| should throw]
    expected: FAIL

  [Location's href: file://%43| should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://%43| should throw]
    expected: FAIL

  [URL's constructor's base argument: file://C%7C should throw]
    expected: FAIL

  [URL's href: file://C%7C should throw]
    expected: FAIL

  [XHR: file://C%7C should throw]
    expected: FAIL

  [Location's href: file://C%7C should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://C%7C should throw]
    expected: FAIL

  [URL's constructor's base argument: file://%43%7C/ should throw]
    expected: FAIL

  [URL's href: file://%43%7C/ should throw]
    expected: FAIL

  [XHR: file://%43%7C/ should throw]
    expected: FAIL

  [Location's href: file://%43%7C/ should throw]
    expected:
      if not fission: PASS
      [FAIL, PASS]

  [window.open(): file://%43%7C/ should throw]
    expected: FAIL

  [Location's href: https://%43%7C/ should throw]
    expected: FAIL

  [URL's constructor's base argument: asdf://%43|/ should throw]
    expected: FAIL

  [URL's href: asdf://%43|/ should throw]
    expected: FAIL

  [XHR: asdf://%43|/ should throw]
    expected: FAIL

  [Location's href: asdf://%43|/ should throw]
    expected: FAIL

  [window.open(): asdf://%43|/ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [XHR: http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://a.b.c.xn--pokxncvks should throw]
    expected: FAIL

  [URL's constructor's base argument: http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [XHR: http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://10.0.0.xn--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://ho%00st/ should throw]
    expected: FAIL

  [Location's href: http://ho%09st/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Ast/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Dst/ should throw]
    expected: FAIL

  [Location's href: http://ho%20st/ should throw]
    expected: FAIL

  [Location's href: http://ho%23st/ should throw]
    expected: FAIL

  [Location's href: http://ho%2Fst/ should throw]
    expected: FAIL

  [Location's href: http://ho%3Ast/ should throw]
    expected: FAIL

  [Location's href: http://ho%3Cst/ should throw]
    expected: FAIL

  [Location's href: http://ho%3Est/ should throw]
    expected: FAIL

  [Location's href: http://ho%3Fst/ should throw]
    expected: FAIL

  [Location's href: http://ho%40st/ should throw]
    expected: FAIL

  [Location's href: http://ho%5Bst/ should throw]
    expected: FAIL

  [Location's href: http://ho%5Cst/ should throw]
    expected: FAIL

  [Location's href: http://ho%5Dst/ should throw]
    expected: FAIL

  [Location's href: http://ho%7Cst/ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0..0x300/ should throw]
    expected: FAIL

  [URL's href: http://0..0x300/ should throw]
    expected: FAIL

  [XHR: http://0..0x300/ should throw]
    expected: FAIL

  [sendBeacon(): http://0..0x300/ should throw]
    expected: FAIL

  [Location's href: http://0..0x300/ should throw]
    expected: FAIL

  [window.open(): http://0..0x300/ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0..0x300./ should throw]
    expected: FAIL

  [URL's href: http://0..0x300./ should throw]
    expected: FAIL

  [XHR: http://0..0x300./ should throw]
    expected: FAIL

  [sendBeacon(): http://0..0x300./ should throw]
    expected: FAIL

  [Location's href: http://0..0x300./ should throw]
    expected: FAIL

  [window.open(): http://0..0x300./ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://1.2.3.08 should throw]
    expected: FAIL

  [URL's href: http://1.2.3.08 should throw]
    expected: FAIL

  [XHR: http://1.2.3.08 should throw]
    expected: FAIL

  [sendBeacon(): http://1.2.3.08 should throw]
    expected: FAIL

  [Location's href: http://1.2.3.08 should throw]
    expected: FAIL

  [window.open(): http://1.2.3.08 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://1.2.3.08. should throw]
    expected: FAIL

  [URL's href: http://1.2.3.08. should throw]
    expected: FAIL

  [XHR: http://1.2.3.08. should throw]
    expected: FAIL

  [sendBeacon(): http://1.2.3.08. should throw]
    expected: FAIL

  [Location's href: http://1.2.3.08. should throw]
    expected: FAIL

  [window.open(): http://1.2.3.08. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://1.2.3.09 should throw]
    expected: FAIL

  [URL's href: http://1.2.3.09 should throw]
    expected: FAIL

  [XHR: http://1.2.3.09 should throw]
    expected: FAIL

  [sendBeacon(): http://1.2.3.09 should throw]
    expected: FAIL

  [Location's href: http://1.2.3.09 should throw]
    expected: FAIL

  [window.open(): http://1.2.3.09 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://09.2.3.4 should throw]
    expected: FAIL

  [URL's href: http://09.2.3.4 should throw]
    expected: FAIL

  [XHR: http://09.2.3.4 should throw]
    expected: FAIL

  [sendBeacon(): http://09.2.3.4 should throw]
    expected: FAIL

  [Location's href: http://09.2.3.4 should throw]
    expected: FAIL

  [window.open(): http://09.2.3.4 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://09.2.3.4. should throw]
    expected: FAIL

  [URL's href: http://09.2.3.4. should throw]
    expected: FAIL

  [XHR: http://09.2.3.4. should throw]
    expected: FAIL

  [sendBeacon(): http://09.2.3.4. should throw]
    expected: FAIL

  [Location's href: http://09.2.3.4. should throw]
    expected: FAIL

  [window.open(): http://09.2.3.4. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://01.2.3.4.5 should throw]
    expected: FAIL

  [URL's href: http://01.2.3.4.5 should throw]
    expected: FAIL

  [XHR: http://01.2.3.4.5 should throw]
    expected: FAIL

  [sendBeacon(): http://01.2.3.4.5 should throw]
    expected: FAIL

  [Location's href: http://01.2.3.4.5 should throw]
    expected: FAIL

  [window.open(): http://01.2.3.4.5 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://01.2.3.4.5. should throw]
    expected: FAIL

  [URL's href: http://01.2.3.4.5. should throw]
    expected: FAIL

  [XHR: http://01.2.3.4.5. should throw]
    expected: FAIL

  [sendBeacon(): http://01.2.3.4.5. should throw]
    expected: FAIL

  [Location's href: http://01.2.3.4.5. should throw]
    expected: FAIL

  [window.open(): http://01.2.3.4.5. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0x100.2.3.4 should throw]
    expected: FAIL

  [URL's href: http://0x100.2.3.4 should throw]
    expected: FAIL

  [XHR: http://0x100.2.3.4 should throw]
    expected: FAIL

  [sendBeacon(): http://0x100.2.3.4 should throw]
    expected: FAIL

  [Location's href: http://0x100.2.3.4 should throw]
    expected: FAIL

  [window.open(): http://0x100.2.3.4 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0x100.2.3.4. should throw]
    expected: FAIL

  [URL's href: http://0x100.2.3.4. should throw]
    expected: FAIL

  [XHR: http://0x100.2.3.4. should throw]
    expected: FAIL

  [sendBeacon(): http://0x100.2.3.4. should throw]
    expected: FAIL

  [Location's href: http://0x100.2.3.4. should throw]
    expected: FAIL

  [window.open(): http://0x100.2.3.4. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [URL's href: http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [XHR: http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [sendBeacon(): http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [Location's href: http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [window.open(): http://0x1.2.3.4.5 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [URL's href: http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [XHR: http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [sendBeacon(): http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [Location's href: http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [window.open(): http://0x1.2.3.4.5. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.1.2.3.4 should throw]
    expected: FAIL

  [URL's href: http://foo.1.2.3.4 should throw]
    expected: FAIL

  [XHR: http://foo.1.2.3.4 should throw]
    expected: FAIL

  [sendBeacon(): http://foo.1.2.3.4 should throw]
    expected: FAIL

  [Location's href: http://foo.1.2.3.4 should throw]
    expected: FAIL

  [window.open(): http://foo.1.2.3.4 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.1.2.3.4. should throw]
    expected: FAIL

  [URL's href: http://foo.1.2.3.4. should throw]
    expected: FAIL

  [XHR: http://foo.1.2.3.4. should throw]
    expected: FAIL

  [sendBeacon(): http://foo.1.2.3.4. should throw]
    expected: FAIL

  [Location's href: http://foo.1.2.3.4. should throw]
    expected: FAIL

  [window.open(): http://foo.1.2.3.4. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.2.3.4 should throw]
    expected: FAIL

  [URL's href: http://foo.2.3.4 should throw]
    expected: FAIL

  [XHR: http://foo.2.3.4 should throw]
    expected: FAIL

  [sendBeacon(): http://foo.2.3.4 should throw]
    expected: FAIL

  [Location's href: http://foo.2.3.4 should throw]
    expected: FAIL

  [window.open(): http://foo.2.3.4 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.2.3.4. should throw]
    expected: FAIL

  [URL's href: http://foo.2.3.4. should throw]
    expected: FAIL

  [XHR: http://foo.2.3.4. should throw]
    expected: FAIL

  [sendBeacon(): http://foo.2.3.4. should throw]
    expected: FAIL

  [Location's href: http://foo.2.3.4. should throw]
    expected: FAIL

  [window.open(): http://foo.2.3.4. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.09 should throw]
    expected: FAIL

  [URL's href: http://foo.09 should throw]
    expected: FAIL

  [XHR: http://foo.09 should throw]
    expected: FAIL

  [sendBeacon(): http://foo.09 should throw]
    expected: FAIL

  [Location's href: http://foo.09 should throw]
    expected: FAIL

  [window.open(): http://foo.09 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.09. should throw]
    expected: FAIL

  [URL's href: http://foo.09. should throw]
    expected: FAIL

  [XHR: http://foo.09. should throw]
    expected: FAIL

  [sendBeacon(): http://foo.09. should throw]
    expected: FAIL

  [Location's href: http://foo.09. should throw]
    expected: FAIL

  [window.open(): http://foo.09. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.0x4 should throw]
    expected: FAIL

  [URL's href: http://foo.0x4 should throw]
    expected: FAIL

  [XHR: http://foo.0x4 should throw]
    expected: FAIL

  [sendBeacon(): http://foo.0x4 should throw]
    expected: FAIL

  [Location's href: http://foo.0x4 should throw]
    expected: FAIL

  [window.open(): http://foo.0x4 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.0x4. should throw]
    expected: FAIL

  [URL's href: http://foo.0x4. should throw]
    expected: FAIL

  [XHR: http://foo.0x4. should throw]
    expected: FAIL

  [sendBeacon(): http://foo.0x4. should throw]
    expected: FAIL

  [Location's href: http://foo.0x4. should throw]
    expected: FAIL

  [window.open(): http://foo.0x4. should throw]
    expected: FAIL

  [URL's constructor's base argument: http://0999999999999999999/ should throw]
    expected: FAIL

  [URL's href: http://0999999999999999999/ should throw]
    expected: FAIL

  [XHR: http://0999999999999999999/ should throw]
    expected: FAIL

  [sendBeacon(): http://0999999999999999999/ should throw]
    expected: FAIL

  [Location's href: http://0999999999999999999/ should throw]
    expected: FAIL

  [window.open(): http://0999999999999999999/ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.0x should throw]
    expected: FAIL

  [URL's href: http://foo.0x should throw]
    expected: FAIL

  [XHR: http://foo.0x should throw]
    expected: FAIL

  [sendBeacon(): http://foo.0x should throw]
    expected: FAIL

  [Location's href: http://foo.0x should throw]
    expected: FAIL

  [window.open(): http://foo.0x should throw]
    expected: FAIL

  [URL's constructor's base argument: http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [URL's href: http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [XHR: http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [sendBeacon(): http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [Location's href: http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [window.open(): http://foo.0XFfFfFfFfFfFfFfFfFfAcE123 should throw]
    expected: FAIL

  [URL's constructor's base argument: http://💩.123/ should throw]
    expected: FAIL

  [URL's href: http://💩.123/ should throw]
    expected: FAIL

  [XHR: http://💩.123/ should throw]
    expected: FAIL

  [sendBeacon(): http://💩.123/ should throw]
    expected: FAIL

  [Location's href: http://💩.123/ should throw]
    expected: FAIL

  [window.open(): http://💩.123/ should throw]
    expected: FAIL

  [URL's constructor's base argument: http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [XHR: http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://a.b.c.XN--pokxncvks should throw]
    expected: FAIL

  [URL's constructor's base argument: http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [XHR: http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://a.b.c.Xn--pokxncvks should throw]
    expected: FAIL

  [URL's constructor's base argument: http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [XHR: http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://10.0.0.XN--pokxncvks should throw]
    expected: FAIL

  [URL's constructor's base argument: http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [URL's href: http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [XHR: http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [sendBeacon(): http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [Location's href: http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [window.open(): http://10.0.0.xN--pokxncvks should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a\x00b/ should throw]
    expected: FAIL

  [URL's href: sc://a\x00b/ should throw]
    expected: FAIL

  [XHR: sc://a\x00b/ should throw]
    expected: FAIL

  [Location's href: sc://a\x00b/ should throw]
    expected: FAIL

  [window.open(): sc://a\x00b/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a b/ should throw]
    expected: FAIL

  [URL's href: sc://a b/ should throw]
    expected: FAIL

  [XHR: sc://a b/ should throw]
    expected: FAIL

  [Location's href: sc://a b/ should throw]
    expected: FAIL

  [window.open(): sc://a b/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a<b should throw]
    expected: FAIL

  [URL's href: sc://a<b should throw]
    expected: FAIL

  [XHR: sc://a<b should throw]
    expected: FAIL

  [Location's href: sc://a<b should throw]
    expected: FAIL

  [window.open(): sc://a<b should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a>b should throw]
    expected: FAIL

  [URL's href: sc://a>b should throw]
    expected: FAIL

  [XHR: sc://a>b should throw]
    expected: FAIL

  [Location's href: sc://a>b should throw]
    expected: FAIL

  [window.open(): sc://a>b should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a[b/ should throw]
    expected: FAIL

  [URL's href: sc://a[b/ should throw]
    expected: FAIL

  [XHR: sc://a[b/ should throw]
    expected: FAIL

  [Location's href: sc://a[b/ should throw]
    expected: FAIL

  [window.open(): sc://a[b/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a\\b/ should throw]
    expected: FAIL

  [URL's href: sc://a\\b/ should throw]
    expected: FAIL

  [XHR: sc://a\\b/ should throw]
    expected: FAIL

  [Location's href: sc://a\\b/ should throw]
    expected: FAIL

  [window.open(): sc://a\\b/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a\]b/ should throw]
    expected: FAIL

  [URL's href: sc://a\]b/ should throw]
    expected: FAIL

  [XHR: sc://a\]b/ should throw]
    expected: FAIL

  [Location's href: sc://a\]b/ should throw]
    expected: FAIL

  [window.open(): sc://a\]b/ should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a^b should throw]
    expected: FAIL

  [URL's href: sc://a^b should throw]
    expected: FAIL

  [XHR: sc://a^b should throw]
    expected: FAIL

  [Location's href: sc://a^b should throw]
    expected: FAIL

  [window.open(): sc://a^b should throw]
    expected: FAIL

  [URL's constructor's base argument: sc://a|b/ should throw]
    expected: FAIL

  [URL's href: sc://a|b/ should throw]
    expected: FAIL

  [XHR: sc://a|b/ should throw]
    expected: FAIL

  [Location's href: sc://a|b/ should throw]
    expected: FAIL

  [window.open(): sc://a|b/ should throw]
    expected: FAIL

  [Location's href: http://a\x00b/ should throw]
    expected: FAIL

  [Location's href: http://a\x01b/ should throw]
    expected: FAIL

  [Location's href: http://a\x02b/ should throw]
    expected: FAIL

  [Location's href: http://a\x03b/ should throw]
    expected: FAIL

  [Location's href: http://a\x04b/ should throw]
    expected: FAIL

  [Location's href: http://a\x05b/ should throw]
    expected: FAIL

  [Location's href: http://a\x06b/ should throw]
    expected: FAIL

  [Location's href: http://a\x07b/ should throw]
    expected: FAIL

  [Location's href: http://a\x08b/ should throw]
    expected: FAIL

  [Location's href: http://a\x0bb/ should throw]
    expected: FAIL

  [Location's href: http://a\x0cb/ should throw]
    expected: FAIL

  [Location's href: http://a\x0eb/ should throw]
    expected: FAIL

  [Location's href: http://a\x0fb/ should throw]
    expected: FAIL

  [Location's href: http://a\x10b/ should throw]
    expected: FAIL

  [Location's href: http://a\x11b/ should throw]
    expected: FAIL

  [Location's href: http://a\x12b/ should throw]
    expected: FAIL

  [Location's href: http://a\x13b/ should throw]
    expected: FAIL

  [Location's href: http://a\x14b/ should throw]
    expected: FAIL

  [Location's href: http://a\x15b/ should throw]
    expected: FAIL

  [Location's href: http://a\x16b/ should throw]
    expected: FAIL

  [Location's href: http://a\x17b/ should throw]
    expected: FAIL

  [Location's href: http://a\x18b/ should throw]
    expected: FAIL

  [Location's href: http://a\x19b/ should throw]
    expected: FAIL

  [Location's href: http://a\x1ab/ should throw]
    expected: FAIL

  [Location's href: http://a\x1bb/ should throw]
    expected: FAIL

  [Location's href: http://a\x1cb/ should throw]
    expected: FAIL

  [Location's href: http://a\x1db/ should throw]
    expected: FAIL

  [Location's href: http://a\x1eb/ should throw]
    expected: FAIL

  [Location's href: http://a\x1fb/ should throw]
    expected: FAIL

  [Location's href: http://a b/ should throw]
    expected: FAIL

  [Location's href: http://a%b/ should throw]
    expected: FAIL

  [Location's href: http://a[b/ should throw]
    expected: FAIL

  [Location's href: http://a\]b/ should throw]
    expected: FAIL

  [Location's href: http://a|b/ should throw]
    expected: FAIL

  [Location's href: http://ab/ should throw]
    expected: FAIL

  [Location's href: http://ho%01st/ should throw]
    expected: FAIL

  [Location's href: http://ho%02st/ should throw]
    expected: FAIL

  [Location's href: http://ho%03st/ should throw]
    expected: FAIL

  [Location's href: http://ho%04st/ should throw]
    expected: FAIL

  [Location's href: http://ho%05st/ should throw]
    expected: FAIL

  [Location's href: http://ho%06st/ should throw]
    expected: FAIL

  [Location's href: http://ho%07st/ should throw]
    expected: FAIL

  [Location's href: http://ho%08st/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Bst/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Cst/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Est/ should throw]
    expected: FAIL

  [Location's href: http://ho%0Fst/ should throw]
    expected: FAIL

  [Location's href: http://ho%10st/ should throw]
    expected: FAIL

  [Location's href: http://ho%11st/ should throw]
    expected: FAIL

  [Location's href: http://ho%12st/ should throw]
    expected: FAIL

  [Location's href: http://ho%13st/ should throw]
    expected: FAIL

  [Location's href: http://ho%14st/ should throw]
    expected: FAIL

  [Location's href: http://ho%15st/ should throw]
    expected: FAIL

  [Location's href: http://ho%16st/ should throw]
    expected: FAIL

  [Location's href: http://ho%17st/ should throw]
    expected: FAIL

  [Location's href: http://ho%18st/ should throw]
    expected: FAIL

  [Location's href: http://ho%19st/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Ast/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Bst/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Cst/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Dst/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Est/ should throw]
    expected: FAIL

  [Location's href: http://ho%1Fst/ should throw]
    expected: FAIL

  [Location's href: http://ho%25st/ should throw]
    expected: FAIL

  [Location's href: http://ho%7Fst/ should throw]
    expected: FAIL
