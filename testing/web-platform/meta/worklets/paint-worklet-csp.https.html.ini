[paint-worklet-csp.https.html]
  expected:
    if (os == "linux") and not debug and webrender and not fission: ["OK", "TIMEOUT"]
    if (os == "mac") and not debug: ["OK", "TIMEOUT"]
  [A same-origin worklet importing a remote-origin-redirected script should not be blocked by the worker-src directive because worklets obey the script-src directive.]
    expected: FAIL

  [A remote-origin worklet should not be blocked by the worker-src directive because worklets obey the script-src directive.]
    expected: FAIL

  [A remote-origin worklet importing a remote-origin script should be blocked by the script-src 'self' directive.]
    expected: FAIL

  [A remote-origin-redirected worklet should not be blocked because the script-src * directive allows it.]
    expected: FAIL

  [A same-origin worklet importing an insecure-origin-redirected script should be blocked because of mixed contents.]
    expected:
      if (os == "linux") and not debug and webrender and not fission: ["FAIL", "TIMEOUT"]
      FAIL

  [An insecure-origin-redirected worklet should be blocked because of mixed contents.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin script should be blocked by the script-src 'self' directive.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin script should not be blocked by the worker-src directive because worklets obey the script-src directive.]
    expected: FAIL

  [A remote-origin worklet importing a remote-origin script should not be blocked because the script-src * directive allows it.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin-redirected script should be blocked by the script-src 'self' directive.]
    expected: FAIL

  [A remote-origin-redirected worklet should be blocked by the script-src 'self' directive.]
    expected: FAIL

  [A remote-origin worklet importing a remote-origin script should not be blocked by the worker-src directive because worklets obey the script-src directive.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin script should not be blocked because the script-src * directive allows it.]
    expected: FAIL

  [A same-origin worklet importing an insecure-origin script should be blocked because of mixed contents.]
    expected: FAIL

  [An insecure-origin worklet should be blocked because of mixed contents.]
    expected: FAIL

  [A remote-origin worklet should be blocked by the script-src 'self' directive.]
    expected: FAIL

  [A remote-origin worklet should not be blocked because the script-src * directive allows it.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin-redirected script should not be blocked because the script-src * directive allows it.]
    expected: FAIL

  [A remote-origin-redirected worklet should not be blocked by the worker-src directive because worklets obey the script-src directive.]
    expected: FAIL

  [A remote-origin worklet should not be blocked because the script-src directive specifying the origin allows it.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin script should not be blocked because the script-src directive specifying the origin allows it.]
    expected: FAIL

  [A remote-origin-redirected worklet should not be blocked because the script-src directive specifying the origin allows it.]
    expected: FAIL

  [A same-origin worklet importing a remote-origin-redirected script should not be blocked because the script-src directive specifying the origin allows it.]
    expected: FAIL

  [A remote-origin worklet importing a remote-origin script should not be blocked because the script-src directive specifying the origin allows it.]
    expected: FAIL

