/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIChannel;
interface nsIPrincipal;
interface nsIURI;

[scriptable, uuid(a5e61a3c-51bd-45be-ac0c-e87b71860656)]
interface nsIRefreshURI : nsISupports {
    /**
      * Load a uri after waiting for aMillis milliseconds (as a result of a
      * meta refresh). If the docshell is busy loading a page currently, the
      * refresh request will be queued and executed when the current load
      * finishes.
      *
      * @param aUri The uri to refresh.
      * @param aPrincipal The triggeringPrincipal for the refresh load
      *   May be null, in which case the principal of current document will be
      *   applied.
      * @param aMillis The number of milliseconds to wait.
      */
    void refreshURI(in nsIURI aURI, in nsIPrincipal aPrincipal,
                    in unsigned long aMillis);

    /**
      * Loads a URI immediately as if it were a meta refresh.
      *
      * @param aURI The URI to refresh.
      * @param aPrincipal The triggeringPrincipal for the refresh load
      *   May be null, in which case the principal of current document will be
      *   applied.
      * @param aMillis The number of milliseconds by which this refresh would
      *                be delayed if it were not being forced.
      */
    void forceRefreshURI(in nsIURI aURI, in nsIPrincipal aPrincipal,
                         in unsigned long aMillis);

    /**
      * Cancels all timer loads.
      */
    void cancelRefreshURITimers();

   /**
     * True when there are pending refreshes, false otherwise.
     */
   readonly attribute boolean refreshPending;
};
