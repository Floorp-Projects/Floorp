name: Daily Build

on:
  workflow_dispatch:

jobs:
  windows-x86-64:
    name: Windows x86_64
    runs-on: ubuntu-22.04
    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Clone l10n-central 🧬
      run: |
        git clone --depth 1 https://github.com/Floorp-Projects/l10n-central.git $RUNNER_USERDIR/l10n-central

    - name: Setup 🪛
      run: |
        mozconfig_file=(
        'ac_add_options --with-app-name=floorp'
        'ac_add_options --with-app-basename=Floorp'
        'ac_add_options --with-branding=browser/branding/official'
        'ac_add_options --disable-crashreporter'
        'ac_add_options --disable-maintenance-service'
        'ac_add_options --enable-proxy-bypass-protection'
        'ac_add_options --disable-verify-mar'
        'ac_add_options --enable-optimize="-O2"'
        'ac_add_options --disable-tests'
        'ac_add_options --enable-rust-simd'
        'ac_add_options --enable-release'
        'ac_add_options RUSTC_OPT_LEVEL=3'
        'MOZ_REQUIRE_SIGNING='
        'MOZ_DATA_REPORTING='
        'MOZ_TELEMETRY_REPORTING='
        'ac_add_options --enable-bootstrap'
        'export WINDOWSSDKDIR="$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10"'
        'export WIN32_REDIST_DIR="$RUNNER_USERDIR/win-crosstool/vs2017/vc/redist/msvc/${WIN32_REDIST_VERSION}/x64/microsoft.vc141.crt/"'
        'export WIN_UCRT_REDIST_DIR="${WINDOWSSDKDIR}/redist/ucrt/dlls/x64"'
        'export DIA_SDK_PATH="$RUNNER_USERDIR/win-crosstool/vs2017/dia sdk"'
        'export MIDL="$RUNNER_USERDIR/win-crosstool/wine/bin/widl"'
        'export WINE="$RUNNER_USERDIR/win-crosstool/wine/bin/wine64"'
        'export WINEDEBUG=-all'
        'export RUSTC="$RUNNER_USERDIR/win-crosstool/rustc/bin/rustc"'
        'mk_add_options "export LD_PRELOAD=$RUNNER_USERDIR/win-crosstool/liblowercase/liblowercase.so"'
        'mk_add_options "export LOWERCASE_DIRS=$RUNNER_USERDIR/win-crosstool"'
        'ac_add_options --target=x86_64-pc-mingw32'
        'ac_add_options --with-l10n-base=$RUNNER_USERDIR/l10n-central/l10n-central'
        )
        for line in "${mozconfig_file[@]}" ; do echo $line >> mozconfig ; done

        sudo apt update
        sudo apt install zstd p7zip-full
        python3 ./.github/setup-buildtool-windows-pgo.py
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/dia sdk"
        chmod -R +x $RUNNER_USERDIR/win-crosstool/vs2017/vc
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10"
        export VCTOOL_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc | grep "^[0-9\.]*$")
        echo "VCTOOL_VERSION=$VCTOOL_VERSION" >> $GITHUB_ENV
        export WIN32_REDIST_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/redist/msvc | grep "^[0-9\.]*$")
        echo "WIN32_REDIST_VERSION=$WIN32_REDIST_VERSION" >> $GITHUB_ENV
        export WIN_UCRT_REDIST_VERSION=$(ls "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10/redist" | grep "^[0-9\.]*$")
        echo "WIN_UCRT_REDIST_VERSION=$WIN_UCRT_REDIST_VERSION" >> $GITHUB_ENV
        
        echo "$RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc/${VCTOOL_VERSION}/bin/hostx64/x64" >> $GITHUB_PATH
        ./mach --no-interactive bootstrap --application-choice browser
        $RUNNER_USERDIR/.cargo/bin/rustup target add x86_64-pc-windows-msvc
        
        echo `cat browser/config/version_display.txt`-`date +"%Y%m%d%I%M%S"` > browser/config/version_display.txt
        export DISPLAY_VERSION=`cat browser/config/version_display.txt`

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package
        ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        #cp obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer-stub.exe $RUNNER_USERDIR/output/
        cp obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer.exe $RUNNER_USERDIR/output/
        cp obj-x86_64-pc-mingw32/dist/floorp-*.en-US.win64.zip $RUNNER_USERDIR/output/

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: windows-x86_64-devel
        path: ${{ env.RUNNER_USERDIR }}/output

  linux-x86-64:
    name: Linux x86_64
    runs-on: ubuntu-22.04
    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Clone l10n-central 🧬
      run: |
        git clone --depth 1 https://github.com/Floorp-Projects/l10n-central.git $RUNNER_USERDIR/l10n-central

    - name: Setup 🪛
      run: |
        mozconfig_file=(
        'ac_add_options --with-app-name=floorp'
        'ac_add_options --with-app-basename=Floorp'
        'ac_add_options --with-branding=browser/branding/official'
        'ac_add_options --disable-crashreporter'
        'ac_add_options --enable-proxy-bypass-protection'
        'ac_add_options --disable-verify-mar'
        'ac_add_options --enable-optimize="-O2"'
        'ac_add_options --disable-tests'
        'ac_add_options --enable-rust-simd'
        'ac_add_options --enable-release'
        'ac_add_options RUSTC_OPT_LEVEL=3'
        'MOZ_REQUIRE_SIGNING='
        'MOZ_DATA_REPORTING='
        'MOZ_TELEMETRY_REPORTING='
        'ac_add_options --enable-bootstrap'
        'ac_add_options --with-l10n-base=$RUNNER_USERDIR/l10n-central/l10n-central'
        )
        for line in "${mozconfig_file[@]}" ; do echo $line >> mozconfig ; done

        ./mach --no-interactive bootstrap --application-choice browser

        echo `cat browser/config/version_display.txt`-`date +"%Y%m%d%I%M%S"` > browser/config/version_display.txt
        export DISPLAY_VERSION=`cat browser/config/version_display.txt`

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package
        ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        cp obj-x86_64-pc-linux-gnu/dist/*.tar.bz2 $RUNNER_USERDIR/output/

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: linux-x86_64-devel
        path: ${{ env.RUNNER_USERDIR }}/output
