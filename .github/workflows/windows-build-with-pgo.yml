name: Windows x86_64 Build with PGO

on: workflow_dispatch

jobs:
  build-with-enable-profile-generate:
    name: Build with --enable-profile-generate

    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: ['ubuntu-22.04']

    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Setup 🪛
      run: |
        cp ./.github/mozconfig_win_pgo_base mozconfig
        echo 'ac_add_options --with-branding=browser/branding/official' >> mozconfig
        echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        echo 'ac_add_options --with-mozilla-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-mozilla-key' >> mozconfig
        echo 'ac_add_options --with-google-location-service-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-location-service-key' >> mozconfig
        echo 'ac_add_options --with-google-safebrowsing-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-safe-browsing-key' >> mozconfig
        sudo apt update
        sudo apt install zstd p7zip-full
        python3 ./.github/setup-buildtool-windows-pgo.py
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/dia sdk"
        chmod -R +x $RUNNER_USERDIR/win-crosstool/vs2017/vc
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10"
        export VCTOOL_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc | grep "^[0-9\.]*$")
        echo "VCTOOL_VERSION=$VCTOOL_VERSION" >> $GITHUB_ENV
        export WIN32_REDIST_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/redist/msvc | grep "^[0-9\.]*$")
        echo "WIN32_REDIST_VERSION=$WIN32_REDIST_VERSION" >> $GITHUB_ENV
        export WIN_UCRT_REDIST_VERSION=$(ls "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10/redist" | grep "^[0-9\.]*$")
        echo "WIN_UCRT_REDIST_VERSION=$WIN_UCRT_REDIST_VERSION" >> $GITHUB_ENV
        
        echo "$RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc/${VCTOOL_VERSION}/bin/hostx64/x64" >> $GITHUB_PATH

        ./mach --no-interactive bootstrap --application-choice browser
        $RUNNER_USERDIR/.cargo/bin/rustup target add x86_64-pc-windows-msvc

        export DISPLAY_VERSION=`cat browser/config/version_display.txt`
        export UPDATE_CHANNEL="release"
        echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=$UPDATE_CHANNEL" >> $GITHUB_ENV
        
        cp $RUNNER_USERDIR/win-crosstool/clang/lib/clang/14.0.4/lib/windows/clang_rt.profile-x86_64.lib $RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc/${VCTOOL_VERSION}/lib/x64/clang_rt.profile-x86_64.lib

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        cp -r obj-x86_64-pc-mingw32/dist/floorp $RUNNER_USERDIR/output/

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x86_64-build-with-enable-profile-generate
        path: ${{ env.RUNNER_USERDIR }}/output

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

  generate-profdata-and-jarlog:
    name: Generate profdata and jarlog

    needs: build-with-enable-profile-generate
    runs-on: windows-2022
    
    steps:
    - uses: actions/download-artifact@v3
      name: Download artifact 📥
      with:
        name: floorp-windows-x86_64-build-with-enable-profile-generate
        path: C:\artifact
    
    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Setup 🪛
      run: |
        (New-Object System.Net.WebClient).DownloadFile("https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe","C:\MozillaBuildSetup-Latest.exe")
        C:\MozillaBuildSetup-Latest.exe /S | out-null
    
    - name: Generate 🔄
      run: |
        $workspace_dir = [regex]::replace($env:GITHUB_WORKSPACE, "^([A-Z]):", { "/" + $args.value.Substring(0, 1).toLower() }) -replace "\\","/"

        echo "cd $workspace_dir" '' >> mozilla-build-run.sh
        echo 'export PATH=/c/mozilla-build/msys2/usr/bin:$PATH' '' >> mozilla-build-run.sh
        echo './mach --no-interactive bootstrap --application-choice browser' '' >> mozilla-build-run.sh
        echo 'LLVM_PROFDATA=/c/Users/runneradmin/.mozbuild/clang/bin/llvm-profdata.exe JARLOG_FILE=en-US.log ./mach python build/pgo/profileserver.py --binary /c/artifact/floorp/floorp.exe' '' >> mozilla-build-run.sh
        C:\mozilla-build\start-shell.bat $workspace_dir\mozilla-build-run.sh
        
    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x86_64-profdata-and-jarlog
        path: |
          merged.profdata
          en-US.log

  build-with-profdata-and-jarlog:
    name: Build with profdata and jarlog

    needs: generate-profdata-and-jarlog
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: ['ubuntu-22.04']

    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/download-artifact@v3
      name: Download artifact 📥
      with:
        name: floorp-windows-x86_64-profdata-and-jarlog
        path: ${{ env.RUNNER_USERDIR }}/artifact

    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Clone l10n-central 🧬
      run: |
        git clone --depth 1 https://github.com/Floorp-Projects/l10n-central.git $RUNNER_USERDIR/l10n-central

    - name: Setup 🪛
      run: |
        cp ./.github/mozconfig_win_pgo_base mozconfig
        echo 'ac_add_options --with-branding=browser/branding/official' >> mozconfig
        echo 'ac_add_options --with-l10n-base=$RUNNER_USERDIR/l10n-central/l10n-central' >> mozconfig
        echo 'ac_add_options --enable-profile-use=cross' >> mozconfig
        echo 'ac_add_options --with-pgo-profile-path=$RUNNER_USERDIR/artifact/merged.profdata' >> mozconfig
        echo 'ac_add_options --with-pgo-jarlog=$RUNNER_USERDIR/artifact/en-US.log' >> mozconfig
        echo 'ac_add_options --with-mozilla-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-mozilla-key' >> mozconfig
        echo 'ac_add_options --with-google-location-service-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-location-service-key' >> mozconfig
        echo 'ac_add_options --with-google-safebrowsing-api-keyfile=$RUNNER_USERDIR/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-safe-browsing-key' >> mozconfig
        sudo apt update
        sudo apt install zstd p7zip-full
        python3 ./.github/setup-buildtool-windows-pgo.py
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/dia sdk"
        chmod -R +x $RUNNER_USERDIR/win-crosstool/vs2017/vc
        chmod -R +x "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10"
        export VCTOOL_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc | grep "^[0-9\.]*$")
        echo "VCTOOL_VERSION=$VCTOOL_VERSION" >> $GITHUB_ENV
        export WIN32_REDIST_VERSION=$(ls $RUNNER_USERDIR/win-crosstool/vs2017/vc/redist/msvc | grep "^[0-9\.]*$")
        echo "WIN32_REDIST_VERSION=$WIN32_REDIST_VERSION" >> $GITHUB_ENV
        export WIN_UCRT_REDIST_VERSION=$(ls "$RUNNER_USERDIR/win-crosstool/vs2017/windows kits/10/redist" | grep "^[0-9\.]*$")
        echo "WIN_UCRT_REDIST_VERSION=$WIN_UCRT_REDIST_VERSION" >> $GITHUB_ENV
        
        echo "$RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc/${VCTOOL_VERSION}/bin/hostx64/x64" >> $GITHUB_PATH

        ./mach --no-interactive bootstrap --application-choice browser
        $RUNNER_USERDIR/.cargo/bin/rustup target add x86_64-pc-windows-msvc

        export DISPLAY_VERSION=`cat browser/config/version_display.txt`
        export UPDATE_CHANNEL="release"
        echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=$UPDATE_CHANNEL" >> $GITHUB_ENV
        
        cp $RUNNER_USERDIR/win-crosstool/clang/lib/clang/14.0.4/lib/windows/clang_rt.profile-x86_64.lib $RUNNER_USERDIR/win-crosstool/vs2017/vc/tools/msvc/${VCTOOL_VERSION}/lib/x64/clang_rt.profile-x86_64.lib

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package
        ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        cp obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer-stub.exe $RUNNER_USERDIR/output/
        cp obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer.exe $RUNNER_USERDIR/output/
        cp obj-x86_64-pc-mingw32/dist/floorp-*.en-US.win64.zip $RUNNER_USERDIR/output/

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: please-use-this-floorp-windows-x86_64-package-build-with-profdata-and-jarlog
        path: ${{ env.RUNNER_USERDIR }}/output

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE
