name: Windows x64 Only installer Build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Disk & Swap Space 💿
      run: |
        echo Before:
        free -h
        df -h
        echo
        echo
        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile
        sudo apt remove -y '^dotnet-.*' '^llvm-.*' '^php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri
        sudo apt autoremove -y
        sudo apt clean
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo fallocate -l 20G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2
        echo
        echo
        echo After:
        free -h
        df -h
    - name: init 🤖
      run: |
        sudo sed -i.bak -r 's!(deb|deb-src) \S+!\1 mirror+http://mirrors.ubuntu.com/mirrors.txt!' /etc/apt/sources.list
        sudo apt update
    - uses: tecoli-com/actions-use-apt-tools@v0
      with:
        tools: aria2 ca-certificates git python3 python3-dev zstd rename autoconf autoconf2.13 automake bison build-essential curl cmake flex gawk gcc-multilib gnupg jq libbz2-dev libcurl4-openssl-dev libssl-dev libxml2-dev libtool libucl-dev ninja-build nsis p7zip-full procps python3-pip python-setuptools python3-virtualenv python3-distutils-extra python3-requests python3-pytoml subversion tar upx unzip uuid uuid-dev wget wine zip zlib1g-dev gir1.2-atk-1.0 gir1.2-atspi-2.0 gir1.2-gtk-3.0 gir1.2-harfbuzz-0.0 gir1.2-pango-1.0 libasound2-dev libatk-bridge2.0-dev libatk1.0-dev libatspi2.0-dev libdatrie-dev libdbus-1-dev libdbus-glib-1-dev libdbus-glib-1-dev-bin libdrm-dev libegl-dev libegl-mesa0 libegl1 libegl1-mesa-dev libepoxy-dev libfribidi-dev libgl-dev libgl1-mesa-dev libgles-dev libgles1 libgles2 libglvnd-dev libglx-dev libgraphite2-dev libgtk-3-dev libharfbuzz-dev libharfbuzz-gobject0 libharfbuzz-icu0 libopengl-dev libopengl0 libpango1.0-dev libpangoxft-1.0-0 libpciaccess-dev libpulse-dev libpulse-mainloop-glib0 libthai-dev libwayland-bin libwayland-dev libx11-xcb-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxkbcommon-dev libxrandr-dev libxtst-dev pango1.0-tools wayland-protocols x11proto-input-dev x11proto-randr-dev x11proto-record-dev x11proto-xinerama-dev
        method: timestamp
    - uses: actions/cache@v3
      with:
        path: |
          /home/runner/work/win-cross
          /home/runner/work/wasi-sysroot
          /home/runner/work/wasi-sysroot-15.0.tar.gz
          /home/runner/work/liblowercase.tar.xz
          /home/runner/work/wine.tar.zst
          /home/runner/work/clang.tar.zst
          /home/runner/work/vsdownload.py
        key: ${{ runner.os }}
    - name: Create environment 🌲
      run: |
        mkdir -p /home/runner/work/win-cross
        git clone --depth 1 https://github.com/Floorp-Projects/l10n-central.git
        if [ ! -f /home/runner/work/wasi-sysroot-15.0.tar.gz ]; then
            aria2c  -x5 -d /home/runner/work https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-15/wasi-sysroot-15.0.tar.gz
            if [ ! -d /home/runner/work/wasi-sysroot ]; then
               tar xzf /home/runner/work/wasi-sysroot-15.0.tar.gz -C /home/runner/work
            fi
        fi
        if [ ! -f /home/runner/work/liblowercase.tar.xz ]; then
            aria2c  -x5 -d /home/runner/work https://firefoxci.taskcluster-artifacts.net/drVtpuFHRiWIOId3mkNy1Q/0/public/build/liblowercase.tar.xz
            if [ ! -d /home/runner/work/win-cross/liblowercase ]; then
                tar xJf /home/runner/work/liblowercase.tar.xz -C /home/runner/work/win-cross
            fi
        fi
        if [ ! -f /home/runner/work/wine.tar.zst ]; then
            aria2c  -x5 -d /home/runner/work https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-1.toolchains.v3.linux64-wine.latest/artifacts/public%2Fbuild%2Fwine.tar.zst
            if [ ! -d /home/runner/work/win-cross/wine ]; then
                zstd -dc /home/runner/work/wine.tar.zst | tar -xf - -C /home/runner/work/win-cross
            fi
        fi
        if [ ! -f /home/runner/work/clang.tar.zst ]; then
            aria2c  -x5 -d /home/runner/work https://firefoxci.taskcluster-artifacts.net/Eej8-tTDT0WSwK-h15yyEQ/0/public/build/clang.tar.zst
            if [ ! -d /home/runner/work/win-cross/clang ]; then
                zstd -dc /home/runner/work/clang.tar.zst | tar -xf - -C /home/runner/work/win-cross
                sed -i '16c #if !__STDC_HOSTED__ && __has_include_next(<stdatomic.h>)' /home/runner/work/win-cross/clang/lib/clang/13.0.1/include/stdatomic.h
            fi
        fi
        if [ ! -d "/home/runner/work/win-cross/dia sdk" ]; then
            rm -f vsdownload.py
            aria2c  -x5 -d /home/runner/work https://raw.githubusercontent.com/Ablaze-MIRAI/vsdownload/main/vsdownload.py
            sudo apt-get -y update && sudo apt-get install -y wine64-development python python3 msitools python-simplejson python3-six python-six ca-certificates winbind
            echo yes | python3 /home/runner/work/vsdownload.py --dest /home/runner/work/win-cross/
            find "/home/runner/work/win-cross/DIA SDK" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/kits" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/VC" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
        fi
        if [ ! -d "/home/runner/work/win-cross/kits" ]; then
            rm -f vsdownload.py
            aria2c  -x5 -d /home/runner/work https://raw.githubusercontent.com/Ablaze-MIRAI/vsdownload/main/vsdownload.py
            sudo apt-get -y update && sudo apt-get install -y wine64-development python python3 msitools python-simplejson python3-six python-six ca-certificates winbind
            echo yes | python3 /home/runner/work/vsdownload.py --dest /home/runner/work/win-cross/
            find "/home/runner/work/win-cross/DIA SDK" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/kits" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/VC" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
        fi
        if [ ! -d "/home/runner/work/win-cross/vc" ]; then
            rm -f vsdownload.py
            aria2c  -x5 -d /home/runner/work https://raw.githubusercontent.com/Ablaze-MIRAI/vsdownload/main/vsdownload.py
            sudo apt-get -y update && sudo apt-get install -y wine64-development python python3 msitools python-simplejson python3-six python-six ca-certificates winbind
            echo yes | python3 /home/runner/work/vsdownload.py --dest /home/runner/work/win-cross/
            find "/home/runner/work/win-cross/DIA SDK" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/kits" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
            find "/home/runner/work/win-cross/VC" -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
        fi
        chmod -R 777 /home/runner/work/win-cross
        sed -i '76c //const uint64_t ROOT_CLIP_CHAIN = ~0;' /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/gfx/webrender_bindings/webrender_ffi.h
        tool_msvc_v=$(ls /home/runner/work/win-cross/vc/tools/msvc | grep "14\..*")
        echo ${tool_msvc_v}
        red_msvc_v=$(ls /home/runner/work/win-cross/vc/redist/msvc | grep "14\..*")
        echo ${red_msvc_v}
        red_msvc_crt_v=$(ls /home/runner/work/win-cross/vc/redist/msvc/${red_msvc_v}/x64/ | grep "microsoft.*.crt")
        echo ${tool_msvc_crt_v}
        red_kit_v=$(ls /home/runner/work/win-cross/kits/10/redist/ | grep "10\..*")
        echo ${red_kit_v}
        echo 'CROSS_BUILD=1' > mozconfig
        echo 'TOOLS=/home/runner/work/win-cross' >> mozconfig
        echo 'export WINDOWSSDKDIR="${TOOLS}/kits/10"' >> mozconfig
        echo "EXTRA_PATH=\"\${TOOLS}/clang/bin:\${TOOLS}/vc/tools/msvc/${tool_msvc_v}/bin/hostx64/x64:\"" >> mozconfig
        echo 'X=$(($(getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN)))' >> mozconfig
        echo 'export CC="${TOOLS}/clang/bin/clang-cl"' >> mozconfig
        echo 'export CXX="${TOOLS}/clang/bin/clang-cl"' >> mozconfig
        echo 'export DIA_SDK_PATH="${TOOLS}/dia sdk"' >> mozconfig
        echo 'export HOST_CC="${TOOLS}/clang/bin/clang"' >> mozconfig
        echo 'export HOST_CXX="${TOOLS}/clang/bin/clang++"' >> mozconfig
        echo 'export MIDL="${TOOLS}/wine/bin/widl"' >> mozconfig
        echo 'export MOZ_INCLUDE_SOURCE_INFO=1' >> mozconfig
        echo 'export MOZ_STUB_INSTALLER=1' >> mozconfig
        echo 'export RUSTC_OPT_LEVEL=2' >> mozconfig
        echo "export WIN32_REDIST_DIR="\${TOOLS}/vc/redist/msvc/${red_msvc_v}/x64/${red_msvc_crt_v}/"" >> mozconfig
        echo "export WIN_UCRT_REDIST_DIR="\${WINDOWSSDKDIR}/redist/${red_kit_v}/ucrt/dlls/x64"" >> mozconfig
        echo 'export WINE="${TOOLS}/wine/bin/wine64"' >> mozconfig
        echo 'export WINEDEBUG=-all' >> mozconfig
        echo 'mk_add_options "export LD_PRELOAD=${TOOLS}/liblowercase/liblowercase.so"' >> mozconfig
        echo 'mk_add_options "export LOWERCASE_DIRS=${TOOLS}"' >> mozconfig
        echo 'mk_add_options "export PATH=$EXTRA_PATH$PATH"' >> mozconfig
        echo 'mk_add_options MOZ_MAKE_FLAGS=-j${X%.*}' >> mozconfig
        echo 'ac_add_options --with-app-name=floorp' >> mozconfig
        echo 'ac_add_options --with-app-basename=Floorp' >> mozconfig
        echo 'ac_add_options --with-branding=browser/branding/official' >> mozconfig
        echo 'ac_add_options --with-l10n-base=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/l10n-central/l10n-central' >> mozconfig
        echo 'ac_add_options --with-wasi-sysroot=/home/runner/work/wasi-sysroot/' >> mozconfig
        echo 'ac_add_options --disable-bits-download' >> mozconfig
        echo 'ac_add_options --disable-crashreporter' >> mozconfig
        echo 'ac_add_options --disable-debug' >> mozconfig
        echo 'ac_add_options --disable-dmd' >> mozconfig
        echo 'ac_add_options --disable-geckodriver' >> mozconfig
        echo 'ac_add_options --disable-maintenance-service' >> mozconfig
        echo 'ac_add_options --disable-parental-controls' >> mozconfig
        echo 'ac_add_options --disable-profiling' >> mozconfig
        echo 'ac_add_options --disable-tests' >> mozconfig
        echo 'ac_add_options --disable-verify-mar' >> mozconfig
        echo ' if [ -x "$(command -v sccache)" ]; then' >> mozconfig
        echo '    ac_add_options --with-ccache=sccache' >> mozconfig
        echo 'elif [ -f "/home/runner/work/.mozbuild/sccache/sccache" ]; then' >> mozconfig
        echo '    ac_add_options --with-ccache=/home/runner/work/.mozbuild/sccache/sccache' >> mozconfig
        echo ' fi' >> mozconfig
        echo 'ac_add_options --enable-install-strip' >> mozconfig
        echo 'export RUSTC_OPT_LEVEL=2 '>> mozconfig
        echo 'export MOZ_INCLUDE_SOURCE_INFO=1' >> mozconfig
        echo 'ac_add_options --enable-optimize="-O2 -Qvec -w -clang:-ftree-vectorize -clang:-msse3 -clang:-mssse3 -clang:-msse4.1 -clang:-mtune=haswell"' >> mozconfig
        echo 'ac_add_options --enable-proxy-bypass-protection' >> mozconfig
        echo 'ac_add_options --enable-rust-simd' >> mozconfig
        echo 'ac_add_options --enable-strip' >> mozconfig
        echo 'ac_add_options --enable-updater' >> mozconfig
        echo 'ac_add_options --enable-update-agent' >> mozconfig
        echo 'ac_add_options --enable-bootstrap' >> mozconfig
        
        echo 'ac_add_options --with-mozilla-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-mozilla-key' >> mozconfig
        echo 'ac_add_options --with-google-safebrowsing-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-safe-browsing-key' >> mozconfig
        echo 'ac_add_options --with-google-location-service-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-location-service-key' >> mozconfig
        echo 'ac_add_options --target=x86_64-pc-mingw32' >> mozconfig
        echo 'MOZ_REQUIRE_SIGNING=' >> mozconfig
        echo 'MOZ_TELEMETRY_REPORTING=' >> mozconfig
        ./mach bootstrap
        source $HOME/.cargo/env
        cargo install sccache
        rustup target add x86_64-pc-windows-msvc
        sccache -z
        sccache --stop-server
        sccache --start-server
         ./mach configure
    - name: Build 🔨
      run: |
          ./mach build

    - name: Package 📦
      run: |
        export MOZ_CHROME_MULTILOCALE="ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW"
        for AB_CD in $MOZ_CHROME_MULTILOCALE; do     ./mach build chrome-$AB_CD; done
        ./mach build
        for AB_CD in $MOZ_CHROME_MULTILOCALE; do     ./mach build chrome-$AB_CD; done
        AB_CD=multi   ./mach package
        mv ./obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer.exe ./obj-x86_64-pc-mingw32/dist/install/sea/floorp-win64.installer.exe
        rm ./obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer-stub.exe

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x64
        path: |
          /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/obj-x86_64-pc-mingw32/dist/install/sea/*.exe
