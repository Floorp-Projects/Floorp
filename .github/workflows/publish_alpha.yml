# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

name: "(A) |Œ±| Publish Alpha"

on:
  workflow_call:
    inputs:
      win_runtime_artifact_workflow_call:
        type: string
        required: false
        default: ""
      linux_runtime_artifact_workflow_call:
        type: string
        required: false
        default: ""
      mac_runtime_artifact_workflow_call:
        type: string
        required: false
        default: ""
      linux_aarch64_runtime_artifact_workflow_call:
        type: string
        required: false
        default: ""

permissions:
  contents: write

run-name: "|Œ±| Publish Alpha"
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: init zx
        run: |
          deno install -g -A npm:zx

      - uses: actions/checkout@v4

      - name: Retrieve run IDs
        run: |
          if [ -z "${{ inputs.win_runtime_artifact_workflow_call }}" ]; then
            WINDOWS_ID=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/Floorp-Projects/Floorp/actions/workflows/package.yml/runs?branch=main&status=success" \
            | jq -r '[.workflow_runs[] | select(.display_title | endswith("Windows-x64"))][0].id')
            echo "WINDOWS_RUN_ID=$WINDOWS_ID" >> $GITHUB_ENV
          else
            echo "WINDOWS_RUN_ID=${{ inputs.win_runtime_artifact_workflow_call }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.linux_runtime_artifact_workflow_call }}" ]; then
            LINUX_ID=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/Floorp-Projects/Floorp/actions/workflows/package.yml/runs?branch=main&status=success" \
            | jq -r '[.workflow_runs[] | select(.display_title | endswith("Linux-x64"))][0].id')
            echo "LINUX_RUN_ID=$LINUX_ID" >> $GITHUB_ENV
          else
            echo "LINUX_RUN_ID=${{ inputs.linux_runtime_artifact_workflow_call }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.mac_runtime_artifact_workflow_call }}" ]; then
            MAC_ID=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/Floorp-Projects/Floorp/actions/workflows/package.yml/runs?branch=main&status=success" \
            | jq -r '[.workflow_runs[] | select(.display_title | endswith("macOS-x64"))][0].id')
            echo "MAC_RUN_ID=$MAC_ID" >> $GITHUB_ENV
          else
            echo "MAC_RUN_ID=${{ inputs.mac_runtime_artifact_workflow_call }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.linux_aarch64_runtime_artifact_workflow_call }}" ]; then
            LINUX_AARCH64_ID=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/Floorp-Projects/Floorp/actions/workflows/package.yml/runs?branch=main&status=success" \
            | jq -r '[.workflow_runs[] | select(.display_title | endswith("Linux-aarch64"))][0].id')
            echo "LINUX_AARCH64_RUN_ID=$LINUX_AARCH64_ID" >> $GITHUB_ENV
          else
            echo "LINUX_AARCH64_RUN_ID=${{ inputs.linux_aarch64_runtime_artifact_workflow_call }}" >> $GITHUB_ENV
          fi

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: noraneko-win-amd64-mar-full
          run-id: ${{ env.WINDOWS_RUN_ID }}
          path: ~/noraneko-publish/win
          github-token: ${{ github.token }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: noraneko-linux-amd64-mar-full
          run-id: ${{ env.LINUX_RUN_ID }}
          path: ~/noraneko-publish/linux
          github-token: ${{ github.token }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: noraneko-mac-universal-mar-full
          run-id: ${{ env.MAC_RUN_ID }}
          path: ~/noraneko-publish/mac
          github-token: ${{ github.token }}

      - name: Download Windows installer
        uses: actions/download-artifact@v4
        with:
          name: noraneko-win-amd64-installer
          run-id: ${{ env.WINDOWS_RUN_ID }}
          path: ~/noraneko-publish/win-dist
          github-token: ${{ github.token }}

      - name: Download Linux installer
        uses: actions/download-artifact@v4
        with:
          name: noraneko-linux-amd64-installer
          run-id: ${{ env.LINUX_RUN_ID }}
          path: ~/noraneko-publish/linux-dist
          github-token: ${{ github.token }}

      - name: Download macOS installer
        uses: actions/download-artifact@v4
        with:
          name: noraneko-mac-universal-installer
          run-id: ${{ env.MAC_RUN_ID }}
          path: ~/noraneko-publish/mac-dist
          github-token: ${{ github.token }}

      - name: Download Linux aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: noraneko-linux-aarch64-mar-full
          run-id: ${{ env.LINUX_AARCH64_RUN_ID }}
          path: ~/noraneko-publish/linux-aarch64
          github-token: ${{ github.token }}

      - name: Download Linux aarch64 installer
        uses: actions/download-artifact@v4
        with:
          name: noraneko-linux-aarch64-installer
          run-id: ${{ env.LINUX_AARCH64_RUN_ID }}
          path: ~/noraneko-publish/linux-aarch64-dist
          github-token: ${{ github.token }}

      - name: Setup
        run: |
          deno install --allow-scripts
          sudo apt install jq
          deno run -A ./scripts/update/xml.ts ~/noraneko-publish/win/meta.json ~/noraneko-publish/win/WINNT_x86_64-msvc-x64.update.xml
          deno run -A ./scripts/update/xml.ts ~/noraneko-publish/linux/meta.json ~/noraneko-publish/linux/Linux_x86_64.update.xml
          deno run -A ./scripts/update/xml.ts ~/noraneko-publish/mac/meta.json ~/noraneko-publish/mac/Darwin_Universal.update.xml
          deno run -A ./scripts/update/xml.ts ~/noraneko-publish/linux-aarch64/meta.json ~/noraneko-publish/linux-aarch64/Linux_aarch64.update.xml

          echo "VERSION=$(cat ~/noraneko-publish/win/meta.json | jq '.version' | sed 's/\"//g')" >> "$GITHUB_ENV"
          echo "NR_VERSION=$(cat ~/noraneko-publish/win/meta.json | jq '.noraneko_version' | sed 's/\"//g')" >> "$GITHUB_ENV"
          echo "ROOT_DIR=$(echo ~)" >> "$GITHUB_ENV"

      - name: Deploy to GitHub Releases üöÄ
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ROOT_DIR }}/noraneko-publish/win/*.mar
            ${{ env.ROOT_DIR }}/noraneko-publish/win/*.xml
            ${{ env.ROOT_DIR }}/noraneko-publish/win-dist/*.exe
            ${{ env.ROOT_DIR }}/noraneko-publish/linux/*.mar
            ${{ env.ROOT_DIR }}/noraneko-publish/linux/*.xml
            ${{ env.ROOT_DIR }}/noraneko-publish/linux-dist/**
            ${{ env.ROOT_DIR }}/noraneko-publish/linux-aarch64/*.mar
            ${{ env.ROOT_DIR }}/noraneko-publish/linux-aarch64/*.xml
            ${{ env.ROOT_DIR }}/noraneko-publish/linux-aarch64-dist/**
            ${{ env.ROOT_DIR }}/noraneko-publish/mac/*.mar
            ${{ env.ROOT_DIR }}/noraneko-publish/mac/*.xml
            ${{ env.ROOT_DIR }}/noraneko-publish/mac-dist/*.dmg
          tag_name: "beta" # Keeping the tag name as beta for the release
          name: "Floorp 12 beta build"
          body: "Floorp Daylight: Based on Firefox Stable Channel \n\n **This is NOT the release (stable) channel version of Floorp. This is a beta build of Floorp. It is intended for testing purposes only. It is not recommended that you use this version of Floorp for daily browsing. If you would like to download the release version of Floorp, please visit [floorp.app](https://floorp.app).**"
          draft: false
          prerelease: true
          token: ${{ github.token }}

      - name: Publish Package üéÅ
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-publish
          path: ~/noraneko-publish/*
