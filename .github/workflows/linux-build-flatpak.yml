name: Flatpak Build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Setup Disk & Swap Space ðŸ’¿
      run: |
        echo Before:
        free -h
        df -h
        echo
        echo
        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile
        sudo apt remove -y '^dotnet-.*' '^llvm-.*' '^php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri
        sudo apt autoremove -y
        sudo apt clean
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo fallocate -l 20G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2
        echo
        echo
        echo After:
        free -h
        df -h
  
    - name: Create environment ðŸŒ²
      run: |
        sudo apt update
        sudo apt install gzip gpg dpkg-dev
        export WORKDIR=`pwd`
        echo "Current Workdir: $WORKDIR"
        git clone https://github.com/floorp-projects/l10n-central.git
        ./mach bootstrap
        echo 'ac_add_options --with-app-name=floorp' >> mozconfig
        echo 'ac_add_options --with-app-basename=Floorp' >> mozconfig
        echo 'ac_add_options --with-branding=browser/branding/official' >> mozconfig
        echo 'ac_add_options --disable-crashreporter' >> mozconfig
        echo 'ac_add_options --enable-proxy-bypass-protection' >> mozconfig
        echo 'ac_add_options --disable-verify-mar' >> mozconfig
        echo 'ac_add_options --enable-update-channel=release' >> mozconfig
        echo 'ac_add_options --with-mozilla-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-mozilla-key' >> mozconfig
        echo 'ac_add_options --with-google-location-service-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-location-service-key' >> mozconfig
        echo 'ac_add_options --with-google-safebrowsing-api-keyfile=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/floorp/apis/api-google-safe-browsing-key' >> mozconfig
        echo 'ac_add_options --enable-bootstrap' >> mozconfig
        echo 'ac_add_options --with-l10n-base=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/l10n-central/l10n-central' >> mozconfig
        echo 'ac_add_options --enable-optimize="-O3"' >> mozconfig
        echo 'ac_add_options --enable-lto' >> mozconfig
        echo 'ac_add_options MOZ_PGO=1' >> mozconfig
        echo 'export RUSTC_OPT_LEVEL=2 '>> mozconfig
        echo 'export MOZ_INCLUDE_SOURCE_INFO=1' >> mozconfig
        echo 'MOZ_REQUIRE_SIGNING=' >> mozconfig
        echo 'MOZ_DATA_REPORTING=' >> mozconfig
        echo 'MOZ_TELEMETRY_REPORTING=' >> mozconfig
        ./mach configure

    - name: Build ðŸ”¨
      run: |
        rm -rf /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/l10n-central/.git
        Xvfb :2 -screen 0 1024x768x24 &
        export DISPLAY=:2
        export WORKDIR=`pwd`
        echo "Current Workdir: $WORKDIR"
        ./mach build

    - name: Package ðŸ“¦
      run: |
        export MOZ_CHROME_MULTILOCALE="ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW"
        for AB_CD in $MOZ_CHROME_MULTILOCALE; do    ./mach build chrome-$AB_CD; done
        AB_CD=multi ./mach package
        export WORKDIR=`pwd`
        export DISPVER=`cat browser/config/version_display.txt`
        mkdir flatpak_build && cd flatpak_build
        mkdir tmp public && cd tmp
        wget https://sda1.net/storage/floorp/basefiles.tar.xz && tar -xf basefiles.tar.xz && rm basefiles.tar.xz
        tar -xjvf $WORKDIR/obj-x86_64-pc-linux-gnu/dist/floorp-$DISPVER.en-US.linux-x86_64.tar.bz2
        ls
        tar -Jcf flatpak-$DISPVER.tar.xz * && mv flatpak-$DISPVER.tar.xz ../public && cd ..
        ls
    
    - name: FTP-Deploy-Action
      uses: SamKirkland/FTP-Deploy-Action@2.0.0    
      env:                                        
        FTP_SERVER: ${{ secrets.FTP_SERVER }}     
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }} 
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }} 
        LOCAL_DIR: flatpak_build/public
        REMOTE_DIR: "/data/floorp-linux/flathub-builds"


