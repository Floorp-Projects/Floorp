# bmpsuite "questionable" tests

# See ../README.mozilla for details.

# BMP: bihsize=40, 127 x 64, bpp=1, compression=0, colors=1
# "1 bit/pixel paletted image, with only one color in the palette. The
# documentation says that 1-bpp images have a palette size of 2 (not 'up to
# 2'), but it would be silly for a viewer not to support a size of 1."
# [We accept it. So does Chromium.]
fuzzy(0-1,0-926) == pal1p1.bmp pal1p1.png

# BMP: bihsize=64, 127 x 64, bpp=1, compression=3, colors=2
# "My attempt to make a BMP file with Huffman 1D compression. It is quite
# possibly incorrect. Even if everything else about it is correct, I have no
# way to know whether it is black/white reversed."
# [We reject it. So does Chromium.]
== wrapper.html?pal1huff.bmp about:blank

# BMP: bihsize=40, 127 x 64, bpp=2, compression=0, colors=4
# "A paletted image with 2 bits/pixel. Usually only 1, 4, and 8 are allowed,
# but 2 is legal on Windows CE."
# [We reject it. Chromium accepts it.]
== wrapper.html?pal2.bmp about:blank

# BMP: bihsize=40, 127 x 64, bpp=2, compression=0, colors=4
# "Same as pal2.bmp, but with a color palette instead of grayscale palette."
# [We reject it. Chromium accepts it.]
== wrapper.html?pal2color.bmp about:blank

# BMP: bihsize=40, 127 x 64, bpp=4, compression=2, colors=13
# "An RLE-compressed image that used 'delta' codes to skip over some pixels,
# leaving them undefined. Some viewers make undefined pixels transparent,
# others make them black, and others assign them palette color 0 (purple, in
# this case)."
# [We make the undefined pixels transparent. So does Chromium.]
== pal4rletrns.bmp pal4rletrns.png

# BMP: bihsize=40, 127 x 64, bpp=4, compression=2, colors=13
# "An RLE-compressed image that uses “delta” codes, and early EOL & EOBMP
# markers, to skip over some pixels."
== pal4rlecut.bmp pal4rlecut.png

# BMP: bihsize=40, 127 x 64, bpp=8, compression=1, colors=253
# "8-bit version of q/pal4rletrns.bmp."
# [Ditto.]
== pal8rletrns.bmp pal8rletrns.png

# BMP: bihsize=40, 127 x 64, bpp=8, compression=1, colors=253
# "8-bit version of q/pal4rlecut.bmp."
== pal8rlecut.bmp pal8rlecut.png

# BMP: bihsize=40, 127 x 64, bpp=8, compression=0, colors=252
# "A file with some unused bytes between the palette and the image. This is
# probably valid, but I’m not 100% sure."
# [We accept it. So does Chromium.]
fuzzy(0-1,0-996) == pal8offs.bmp pal8.png

# BMP: bihsize=40, 127 x 64, bpp=8, compression=0, colors=300
# "An 8-bit image with 300 palette colors. This may be invalid, because the
# documentation could be interpreted to imply that 8-bit images aren’t allowed
# to have more than 256 colors."
# [We accept it. So does Chromium.]
fuzzy(0-1,0-996) == pal8oversizepal.bmp pal8.png

# BMP: bihsize=12, 127 x 64, bpp=8, compression=0, colors=0
# # "Some OS/2 BMP specifications say that the size field in the file header
# should be set to the aggregate size of the file header and infoheader,
# instead of the total file size. For OS/2v1, that means it will always be 26.
# BMP decoders usually ignore this field, so it shouldn’t cause a problem."
fuzzy(0-1,0-996) == pal8os2-sz.bmp pal8.png

# BMP: bihsize=12, 127 x 64, bpp=8, compression=0, colors=0
# "Some OS/2 BMP specifications define the fields at offsets 6 and 8 to be a
# “hotspot” (for cursor graphics). Though the fields are not used in BMP files,
# they are sometimes, as in this file, set to nonzero values. This should cause
# no problems, except that it could prevent some programs from detecting this
# file as a BMP file."
fuzzy(0-1,0-996) == pal8os2-hs.bmp pal8.png

# BMP: bihsize=12, 127 x 64, bpp=8, compression=0, colors=0
# "An OS/2v1 with a less-than-full-sized palette. Probably not valid, but such
# files have been seen in the wild."
# [We reject it. Chromium accepts it.]
fuzzy(0-245,0-8128) == wrapper.html?pal8os2sp.bmp about:blank

# BMP: bihsize=64, 127 x 64, bpp=8, compression=0, colors=252
# "My attempt to make an OS/2v2 bitmap."
# [We accept it. So does Chromium.]
fuzzy(0-1,0-996) == pal8os2v2.bmp pal8.png

# BMP: bihsize=16, 127 x 64, bpp=8, compression=0, colors=0
# "An OS/2v2 bitmap whose header has only 16 bytes, instead of the full 64."
# [We accept it. So does Chromium.]
fuzzy(0-1,0-996) == pal8os2v2-16.bmp pal8.png

# BMP: bihsize=64, 127 x 64, bpp=8, compression=0, colors=252
# "An OS/2v2 bitmap. Like q/pal8os2-sz.bmp, the size field is set to the size
# of the headers (78), instead of the size of the file."
fuzzy(0-1,0-996) == pal8os2v2-sz.bmp pal8.png

# BMP: bihsize=40, 127 x 64, bpp=8, compression=0, colors=252
# "An OS/2v2 bitmap, with a 40-byte header. Like q/pal8os2-sz.bmp, the size
# field is set to the size of the headers (54), instead of the size of the
# file. Except for that, this file cannot be distinguished from a Windows
# BMPv3 file."
fuzzy(0-1,0-996) == pal8os2v2-40sz.bmp pal8.png

# BMP: bihsize=40, 127 x 64, bpp=16, compression=0, colors=0
# "Same idea as q/rgb32fakealpha.bmp. The default 16-bit color format has one
# unused bit per pixel, and in this image some of the unused bits are set to 1.
# It’s possible that some viewers will interpret this image as having
# transparency."
fuzzy(0-1,0-1296) == rgb16faketrns.bmp rgb16.png

# BMP: bihsize=40, 127 x 64, bpp=16, compression=3, colors=0
# "An unusual and silly 16-bit image, with 2 red bits, 3 green bits, and 1 blue
# bit. Most viewers do support this image, but the colors may be darkened with
# a yellow-green shadow. That’s because they’re doing simple bit-shifting
# (possibly including one round of bit replication), instead of proper
# scaling."
== rgb16-231.bmp rgb16-231.png

# BMP: bihsize=40, 127 x 64, bpp=16, compression=3, colors=0
# "Similar to q/rgb16-231.bmp, with 3 red bits, 10 green bits, and 3 blue
# bits."
fuzzy(0-1,0-689) == rgb16-3103.bmp rgb16-3103.png

# BMP: bihsize=124, 127 x 64, bpp=16, compression=3, colors=0
# "A 16-bit image with an alpha channel. There are 4 bits for each color
# channel, and 4 bits for the alpha channel. It’s not clear if this is valid,
# but I can’t find anything that suggests it isn’t."
== rgba16-4444.bmp rgba16-4444.png

# BMP: bihsize=124, 127 x 64, bpp=16, compression=3, colors=0
# "Similar to q/rgba16-4444.bmp, with 5 red bits, 5 green bits, 5 blue bits,
# and a 1-bit alpha channel."
fuzzy(0-1,0-2203) == rgba16-5551.bmp rgba16-5551.png

# BMP: bihsize=124, 127 x 64, bpp=16, compression=3, colors=0
# "Similar to q/rgba16-4444.bmp, with 1 red bit, 9 green bits, 2 blue bits,
# and 4 bits for the alpha channel."
== rgba16-1924.bmp rgba16-1924.png

# BMP: bihsize=40, 127 x 64, bpp=24, compression=0, colors=300
# "A 24-bit image, with a palette containing 300 colors. The fact that the
# palette has more than 256 colors may cause some viewers to complain, but the
# documentation does not mention a size limit."
# [We accept it. So does Chromium.]
== rgb24largepal.bmp rgb24.png

# BMP: bihsize=124, 127 x 64, bpp=24, compression=0, colors=0
# "My attempt to make a BMP file with an embedded color profile."
fuzzy(1-1,28-73) == rgb24prof.bmp rgb24.png

# BMP: bihsize=124, 127 x 64, bpp=24, compression=0, colors=0
# "This image tries to test whether color profiles are fully supported. It has
# the red and green channels swapped, and an embedded color profile that tries
# to swap them back. Support for this is uncommon."
# [The image is significantly closer to the desired output than without color
# management, but we seem to handle the profile wrong in QCMS. See bug 1619332.]
fuzzy(10-10,6590-6597) == rgb24prof2.bmp rgb24.png

# BMP: bihsize=124, 127 x 64, bpp=24, compression=0, colors=0
# "My attempt to make a BMP file with a linked color profile."
# [We accept it, though we don't do anything with the color profile. Chromium
# also handles it.]
== rgb24lprof.bmp rgb24.png

# BMP: bihsize=124, 127 x 64, bpp=0, compression=4, colors=0
# BMP: bihsize=124, 127 x 64, bpp=0, compression=5, colors=0
# "My attempt to make BMP files with embedded JPEG and PNG images. These are
# not likely to be supported by much of anything (they’re intended for 
# printers)."
# [We reject them. Chromium accepts them.]
== wrapper.html?rgb24jpeg.bmp about:blank
== wrapper.html?rgb24png.bmp about:blank

# BMP: bihsize=64, 127 x 64, bpp=24, compression=4, colors=0
# "An OS/2v2 bitmap with RLE24 compression. This image uses a limited number
# of colors, just to make it more compressible."
# [We reject it. Chromium accepts it.]
== wrapper.html?rgb24rle24.bmp about:blank

# BMP: bihsize=52, 127 x 64, bpp=32, compression=3, colors=0
# "Similar to g/rgb32bf.bmp, but with a 52-byte “BITMAPV2INFOHEADER”. This is
# an uncommon version of BMP, and I can’t confirm that this file is correct."
# [We reject it. Chromium accepts it.]
== wrapper.html?rgb32h52.bmp about:blank

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "Color channels are the same size and order as rgb32bfdef.bmp, but they use
# the highest available bits, instead of the lowest (or vice versa, depending
# on your byte-order perspective)."
== rgb32-xbgr.bmp rgb24.png

# BMP: bihsize=40, 127 x 64, bpp=32, compression=0, colors=0
# "Same as g/rgb32.bmp, except that the unused bits are set to something other
# than 0. If the image becomes transparent toward the bottom, it probably means
# the viewer uses heuristics to guess whether the undefined data represents
# transparency."
# [We don't apply transparency here. Chromium does the same.]
== rgb32fakealpha.bmp rgb24.png

# BMP: bihsize=40, 127 x 64, bpp=32, compression=3, colors=0
# "A 32 bits/pixel image, with all 32 bits used: 11 each for red and green, and
# 10 for blue. As far as I know, this is perfectly valid, but it is unusual."
fuzzy(0-1,0-1408) == rgb32-111110.bmp rgb24.png

# BMP: bihsize=40, 127 x 64, bpp=32, compression=3, colors=0
# "A 32 bits/pixel image, with 7 bits for red, 18 for green, and 7 for blue."
fuzzy(0-1,0-753) == rgb32-7187.bmp rgb32-7187.png

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "A BMP with an alpha channel. Transparency is barely documented, so it’s
# possible that this file is not correctly formed. The color channels are in an
# unusual order, to prevent viewers from passing this test by making a lucky
# guess."
== rgba32-1.bmp rgba32.png

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "Same as rgba32-1.bmp, but with the color channels in an unusual order, to
# prevent viewers from passing this test by making a lucky guess."
== rgba32-2.bmp rgba32.png

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "A 32 bits/pixel image, with 10 bits for red, 10 for green, 10 for blue, and
# 2 for alpha."
fuzzy(0-1,0-1296) == rgba32-1010102.bmp rgba32-1010102.png

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "A 32 bits/pixel image, with 8 bits for red, 12 for green, 8 for blue, and 4
# for alpha."
fuzzy(0-1,0-753) == rgba32-81284.bmp rgba32-81284.png

# BMP: bihsize=124, 127 x 64, bpp=32, compression=3, colors=0
# "A 32 bits/pixel image, with 6 bits for red, 17 for green, 5 for blue, and 4
# for alpha."
fuzzy(0-1,0-1554) == rgba32-61754.bmp rgba32-61754.png

# BMP: bihsize=40, 127 x 64, bpp=32, compression=6, colors=0
# "An image of type BI_ALPHABITFIELDS. Supposedly, this was used on Windows CE.
# I don’t know whether it is constructed correctly."
# [We reject it. Chromium accepts it.]
== wrapper.html?rgba32abf.bmp about:blank

# BMP: bihsize=56, 127 x 64, bpp=32, compression=3, colors=0
# "Similar to q/rgba32.bmp, but with a 56-byte “BITMAPV3INFOHEADER”. This is an
# uncommon version of BMP, and I can’t confirm that this file is correct."
# [We reject it. Chromium accepts it.]
== wrapper.html?rgba32h56.bmp about:blank

