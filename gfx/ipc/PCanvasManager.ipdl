/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: sw=2 ts=8 et :
 */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PWebGL;
include protocol PWebGPU;

using mozilla::webgl::FrontBufferSnapshotIpc from "mozilla/dom/WebGLIpdl.h";

namespace mozilla {
namespace gfx {

/**
 * The PCanvasManager protocol is the top-level protocol between the main and
 * worker threads in the content process, and the renderer thread in the
 * compositor process. This protocol should be used to create accelerated
 * canvas instances.
 */
[NeedsOtherPid]
sync protocol PCanvasManager
{
  manages PWebGL;
  manages PWebGPU;

parent:
  // Actor that represents one WebGL context.
  async PWebGL();

  // Actor that represents one WebGPU context.
  async PWebGPU();

  // Set the local manager ID for the canvas manager.
  async Initialize(uint32_t aManagerId);

  // Get the front buffer pixels for the given manager/protocol. This is
  // intended to be used by the main thread in the content process to block
  // reading without having to block on the worker thread that owns the context
  // instance.
  sync GetSnapshot(uint32_t aManagerId, int32_t aProtocolId) returns (FrontBufferSnapshotIpc ret);
};

} // gfx
} // mozilla
